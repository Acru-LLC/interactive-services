{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\chat\\chats.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\chat\\chats.vue","mtime":1667352074414},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgbWVzc2VuZ2VyU2VydmljZSBmcm9tICJAL3NoYXJlZC9zZXJ2aWNlcy9tZXNzZW5nZXJTZXJ2aWNlIjsNCmltcG9ydCBzaW1wbGViYXIgZnJvbSAic2ltcGxlYmFyLXZ1ZSI7DQppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gInZ1ZXgiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIHdhdGNoOiB7DQogICAgdW5yZWFkRGF0YTogew0KICAgICAgaGFuZGxlcih2KSB7DQogICAgICAgIGxldCBpbmRleCA9IHRoaXMuY2hhdHMuZmluZEluZGV4KChlKSA9PiBlLmlkID09IHYuY2hhdElkKTsNCiAgICAgICAgaWYgKGluZGV4ID4gLTEpIHsNCiAgICAgICAgICB0aGlzLiRzZXQodGhpcy5jaGF0c1tpbmRleF0sICJjb3VudCIsIHYuY291bnQpOw0KICAgICAgICAgIHRoaXMuJHNldCh0aGlzLmNoYXRzW2luZGV4XSwgInRpdGxlIiwgdi50aXRsZSk7DQogICAgICAgIH0NCiAgICAgIH0sDQogICAgfSwNCiAgfSwNCiAgcHJvcHM6IHsNCiAgICBjaDogew0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgZGVmYXVsdDogKCkgPT4ge30sDQogICAgfSwNCiAgICB1c2VybmFtZTogew0KICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgZGVmYXVsdDogIiIsDQogICAgfSwNCiAgfSwNCiAgY29tcG9uZW50czogew0KICAgIHNpbXBsZWJhciwNCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgcHVibGljUGF0aDogcHJvY2Vzcy5lbnYuQkFTRV9VUkwsDQogICAgICBjaGF0czogW10sDQogICAgICBjaGF0UGFnZTogMCwNCiAgICB9Ow0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKCJtZXNzZW5nZXIiLCBbInVucmVhZERhdGEiXSksDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBnZXRDbGlja1RhYih2KSB7DQogICAgICB0aGlzLmNoYXRQYWdlID0gMDsNCiAgICAgIHRoaXMuZ2V0Q2hhdExpc3Qodik7DQogICAgfSwNCiAgICBsb2FkTW9yZUNoYXQoKSB7DQogICAgICBtZXNzZW5nZXJTZXJ2aWNlDQogICAgICAgIC5nZXRDaGF0TGlzdCh7IHBhZ2U6ICh0aGlzLmNoYXRQYWdlICs9IDEpLCBpdGVtc1BlclBhZ2U6IDIwIH0pDQogICAgICAgIC50aGVuKGFzeW5jICh7IGRhdGEgfSkgPT4gew0KICAgICAgICAgIGlmIChkYXRhLmxpc3QubGVuZ3RoID4gMCkgew0KICAgICAgICAgICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gew0KICAgICAgICAgICAgICB0aGlzLmNoYXRzID0gdGhpcy5jaGF0cy5jb25jYXQoZGF0YS5saXN0KTsNCiAgICAgICAgICAgIH0pOw0KICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICB0aGlzLmNoYXRQYWdlICsgLTE7DQogICAgICAgICAgfQ0KICAgICAgICB9KTsNCiAgICB9LA0KICAgIGdldENoYXRMaXN0KHYpIHsNCiAgICAgIG1lc3NlbmdlclNlcnZpY2UuZ2V0Q2hhdExpc3QodikudGhlbigocmVzKSA9PiB7DQogICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsNCiAgICAgICAgICB0aGlzLmNoYXRzID0gcmVzLmRhdGEubGlzdDsNCiAgICAgICAgfSk7DQogICAgICB9KTsNCiAgICB9LA0KICB9LA0KICBhc3luYyBjcmVhdGVkKCkgew0KICAgIGF3YWl0IHRoaXMuZ2V0Q2hhdExpc3QoeyBwYWdlOiAwLCBpdGVtc1BlclBhZ2U6IDIwLCBzZWFyY2g6ICIiIH0pOw0KICB9LA0KICBtb3VudGVkKCkgew0KICAgIHZhciBjb250YWluZXIxID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigNCiAgICAgICIjY2hhdC1saXN0IC5zaW1wbGViYXItY29udGVudC13cmFwcGVyIg0KICAgICk7DQogICAgaWYgKGNvbnRhaW5lcjEpIHsNCiAgICAgIGNvbnRhaW5lcjEuc2Nyb2xsVG8oeyB0b3A6IDUwMCwgYmVoYXZpb3I6ICJzbW9vdGgiIH0pOw0KICAgIH0NCg0KICAgIC8vQ2hhdCBsaXN0IGFjdGlvbnMNCiAgICB0aGlzLiRyZWZzLmNoYXRSZWYuU2ltcGxlQmFyLmdldFNjcm9sbEVsZW1lbnQoKS5hZGRFdmVudExpc3RlbmVyKA0KICAgICAgInNjcm9sbCIsDQogICAgICAoZSkgPT4gew0KICAgICAgICBsZXQgeyBzY3JvbGxUb3AsIHNjcm9sbEhlaWdodCwgY2xpZW50SGVpZ2h0IH0gPSBldmVudC50YXJnZXQ7DQogICAgICAgIGNvbnN0IG9mZnNldEZvclRyaWdnZXIgPSAxOw0KICAgICAgICBpZiAoc2Nyb2xsSGVpZ2h0IC0gY2xpZW50SGVpZ2h0IC0gb2Zmc2V0Rm9yVHJpZ2dlciA8IHNjcm9sbFRvcCkgew0KICAgICAgICAgIHRoaXMubG9hZE1vcmVDaGF0KCk7DQogICAgICAgIH0NCiAgICAgIH0NCiAgICApOw0KICB9LA0KfTsNCg=="},{"version":3,"sources":["chats.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"chats.vue","sourceRoot":"src/modules/chat","sourcesContent":["<template>\r\n  <b-card-text>\r\n    <div>\r\n      <!-- <h5 class=\"font-size-14 mb-3\">{{$t('ch.chat')}}</h5> -->\r\n\r\n      <simplebar style=\"max-height: 410px\" id=\"chat-list\" ref=\"chatRef\">\r\n        <ul class=\"list-unstyled chat-list\">\r\n          <li\r\n            v-for=\"data in chats\"\r\n            :key=\"data.id\"\r\n            :class=\"{ active: ch && ch.id == data.id }\"\r\n            @click=\"$emit('chatClick', data)\"\r\n          >\r\n            <a href=\"javascript: void(0);\">\r\n              <div class=\"media\">\r\n                <div class=\"align-self-center mr-3\"></div>\r\n                <div class=\"align-self-center mr-3\" v-if=\"data.uploadPath\">\r\n                  <img\r\n                    :src=\"`${publicPath}${data.uploadPath}`\"\r\n                    class=\"rounded-circle avatar-sm\"\r\n                    alt\r\n                  />\r\n                </div>\r\n                <div\r\n                  class=\"avatar-md align-self-center mr-3\"\r\n                  v-if=\"!data.uploadPath\"\r\n                >\r\n                  <span\r\n                    class=\"\r\n                      avatar-title\r\n                      rounded-circle\r\n                      bg-soft-primary\r\n                      text-primary\r\n                    \"\r\n                    >{{ data.myName.charAt(0) }}</span\r\n                  >\r\n                </div>\r\n                <div class=\"media-body overflow-hidden\">\r\n                  <h5 class=\"text-truncate font-size-14 mb-1\">\r\n                    {{ data.myName }}\r\n                  </h5>\r\n                  <p class=\"text-truncate mb-0\">{{ data.title }}</p>\r\n                </div>\r\n                <div class=\"font-size-11\">{{ data.dateHour }}</div>\r\n                <br />\r\n                <b-badge\r\n                  v-if=\"data.count > 0\"\r\n                  class=\"float-right mt-3\"\r\n                  variant=\"info\"\r\n                  >+{{ data.count }}</b-badge\r\n                >\r\n              </div>\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </simplebar>\r\n    </div>\r\n  </b-card-text>\r\n</template>\r\n\r\n<script>\r\nimport messengerService from \"@/shared/services/messengerService\";\r\nimport simplebar from \"simplebar-vue\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  watch: {\r\n    unreadData: {\r\n      handler(v) {\r\n        let index = this.chats.findIndex((e) => e.id == v.chatId);\r\n        if (index > -1) {\r\n          this.$set(this.chats[index], \"count\", v.count);\r\n          this.$set(this.chats[index], \"title\", v.title);\r\n        }\r\n      },\r\n    },\r\n  },\r\n  props: {\r\n    ch: {\r\n      type: Object,\r\n      default: () => {},\r\n    },\r\n    username: {\r\n      type: String,\r\n      default: \"\",\r\n    },\r\n  },\r\n  components: {\r\n    simplebar,\r\n  },\r\n  data() {\r\n    return {\r\n      publicPath: process.env.BASE_URL,\r\n      chats: [],\r\n      chatPage: 0,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(\"messenger\", [\"unreadData\"]),\r\n  },\r\n  methods: {\r\n    getClickTab(v) {\r\n      this.chatPage = 0;\r\n      this.getChatList(v);\r\n    },\r\n    loadMoreChat() {\r\n      messengerService\r\n        .getChatList({ page: (this.chatPage += 1), itemsPerPage: 20 })\r\n        .then(async ({ data }) => {\r\n          if (data.list.length > 0) {\r\n            this.$nextTick(() => {\r\n              this.chats = this.chats.concat(data.list);\r\n            });\r\n          } else {\r\n            this.chatPage + -1;\r\n          }\r\n        });\r\n    },\r\n    getChatList(v) {\r\n      messengerService.getChatList(v).then((res) => {\r\n        this.$nextTick(() => {\r\n          this.chats = res.data.list;\r\n        });\r\n      });\r\n    },\r\n  },\r\n  async created() {\r\n    await this.getChatList({ page: 0, itemsPerPage: 20, search: \"\" });\r\n  },\r\n  mounted() {\r\n    var container1 = document.querySelector(\r\n      \"#chat-list .simplebar-content-wrapper\"\r\n    );\r\n    if (container1) {\r\n      container1.scrollTo({ top: 500, behavior: \"smooth\" });\r\n    }\r\n\r\n    //Chat list actions\r\n    this.$refs.chatRef.SimpleBar.getScrollElement().addEventListener(\r\n      \"scroll\",\r\n      (e) => {\r\n        let { scrollTop, scrollHeight, clientHeight } = event.target;\r\n        const offsetForTrigger = 1;\r\n        if (scrollHeight - clientHeight - offsetForTrigger < scrollTop) {\r\n          this.loadMoreChat();\r\n        }\r\n      }\r\n    );\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}