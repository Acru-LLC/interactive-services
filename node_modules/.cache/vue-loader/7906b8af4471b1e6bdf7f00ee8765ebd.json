{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\integration\\modules\\open-data\\modules\\public-procurement-information\\View.vue?vue&type=style&index=0&id=51e4c96a&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\integration\\modules\\open-data\\modules\\public-procurement-information\\View.vue","mtime":1674799496919},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY2FyZC1oZWFkZXIgew0KICBiYWNrZ3JvdW5kOiB3aGl0ZTsNCn0NCg=="},{"version":3,"sources":["View.vue"],"names":[],"mappings":";AAiHA;AACA;AACA","file":"View.vue","sourceRoot":"src/modules/integration/modules/open-data/modules/public-procurement-information","sourcesContent":["<template>\r\n  <b-row>\r\n    <b-col sm=\"12\" class=\"text-center\">\r\n      <div class=\"h4 mb-4 d-inline-block\">{{ title }}</div>\r\n      <b-btn variant=\"warning\" class=\"float-right\" @click=\"goBack\">{{ $t('actions.back') }}</b-btn>\r\n    </b-col>\r\n    <b-col sm=\"12\">\r\n      <b-card>\r\n        <b-card-header>\r\n        </b-card-header>\r\n        <b-card-body>\r\n          <b-table :items=\"items\" hover striped thead-class=\"d-none\" bordered small/>\r\n        </b-card-body>\r\n      </b-card>\r\n    </b-col>\r\n  </b-row>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'open-data/public-procurement-information';\r\nimport {bus} from \"@/main\";\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\n\r\nexport default {\r\n  name: \"View\",\r\n  data() {\r\n    return {\r\n      title: this.$t('open_data.public_procurement_information.title'),\r\n      editingItem: {},\r\n      statuses: []\r\n    }\r\n  },\r\n  computed: {\r\n    items() {\r\n      let result = [];\r\n      for (const index in this.editingItem) {\r\n        if (this.labels[index]) {\r\n          result.push({\r\n            label: this.labels[index],\r\n            value: this.editingItem[index],\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n    labels() {\r\n      return {\r\n        economicClassification: this.$t('open_data.public_procurement_information.economicClassification'),\r\n        purchaseTypeLt: this.$t('open_data.public_procurement_information.purchaseType', 'uz') + ' (o\\'z)',\r\n        purchaseTypeUz: this.$t('open_data.public_procurement_information.purchaseType', 'uzCyrillic') + ' (ўз)',\r\n        purchaseTypeRu: this.$t('open_data.public_procurement_information.purchaseType', 'ru') + ' (ру)',\r\n        purchaseTypeEn: this.$t('open_data.public_procurement_information.purchaseType', 'en') + ' (en)',\r\n        goodServiceNameLt: this.$t('open_data.public_procurement_information.goodServiceName', 'uz') + ' (o\\'z)',\r\n        goodServiceNameUz: this.$t('open_data.public_procurement_information.goodServiceName', 'uzCyrillic') + ' (ўз)',\r\n        goodServiceNameRu: this.$t('open_data.public_procurement_information.goodServiceName', 'ru') + ' (ру)',\r\n        goodServiceNameEn: this.$t('open_data.public_procurement_information.goodServiceName', 'en') + ' (en)',\r\n        fundingSourceLt: this.$t('open_data.public_procurement_information.fundingSource', 'uz') + ' (o\\'z)',\r\n        fundingSourceUz: this.$t('open_data.public_procurement_information.fundingSource', 'uzCyrillic') + ' (ўз)',\r\n        fundingSourceRu: this.$t('open_data.public_procurement_information.fundingSource', 'ru') + ' (ру)',\r\n        fundingSourceEn: this.$t('open_data.public_procurement_information.fundingSource', 'en') + ' (en)',\r\n        purchaseProcessTypeLt: this.$t('open_data.public_procurement_information.purchaseProcessType', 'uz') + ' (o\\'z)',\r\n        purchaseProcessTypeUz: this.$t('open_data.public_procurement_information.purchaseProcessType', 'uzCyrillic') + ' (ўз)',\r\n        purchaseProcessTypeRu: this.$t('open_data.public_procurement_information.purchaseProcessType', 'ru') + ' (ру)',\r\n        purchaseProcessTypeEn: this.$t('open_data.public_procurement_information.purchaseProcessType', 'en') + ' (en)',\r\n        lot: this.$t('open_data.public_procurement_information.lot'),\r\n        purchasePurposeLt: this.$t('open_data.public_procurement_information.purchasePurpose', 'uz') + ' (o\\'z)',\r\n        purchasePurposeUz: this.$t('open_data.public_procurement_information.purchasePurpose', 'uzCyrillic') + ' (ўз)',\r\n        purchasePurposeRu: this.$t('open_data.public_procurement_information.purchasePurpose', 'ru') + ' (ру)',\r\n        purchasePurposeEn: this.$t('open_data.public_procurement_information.purchasePurpose', 'en') + ' (en)',\r\n        goodUnitLt: this.$t('open_data.public_procurement_information.goodUnit', 'uz') + ' (o\\'z)',\r\n        goodUnitUz: this.$t('open_data.public_procurement_information.goodUnit', 'uzCyrillic') + ' (ўз)',\r\n        goodUnitRu: this.$t('open_data.public_procurement_information.goodUnit', 'ru') + ' (ру)',\r\n        goodUnitEn: this.$t('open_data.public_procurement_information.goodUnit', 'en') + ' (en)',\r\n        amount: this.$t('open_data.public_procurement_information.amount'),\r\n        price: this.$t('open_data.public_procurement_information.price'),\r\n        totalAmount: this.$t('open_data.public_procurement_information.totalAmount'),\r\n        purchasedGoodLt: this.$t('open_data.public_procurement_information.purchasedGood', 'uz') + ' (o\\'z)',\r\n        purchasedGoodUz: this.$t('open_data.public_procurement_information.purchasedGood', 'uzCyrillic') + ' (ўз)',\r\n        purchasedGoodRu: this.$t('open_data.public_procurement_information.purchasedGood', 'ru') + ' (ру)',\r\n        purchasedGoodEn: this.$t('open_data.public_procurement_information.purchasedGood', 'en') + ' (en)',\r\n        supplierLt: this.$t('open_data.public_procurement_information.supplier', 'uz') + ' (o\\'z)',\r\n        supplierUz: this.$t('open_data.public_procurement_information.supplier', 'uzCyrillic') + ' (ўз)',\r\n        supplierRu: this.$t('open_data.public_procurement_information.supplier', 'ru') + ' (ру)',\r\n        supplierEn: this.$t('open_data.public_procurement_information.supplier', 'en') + ' (en)',\r\n        plannedFunding: this.$t('open_data.public_procurement_information.plannedFunding'),\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    goBack() {\r\n      bus.leaveWithConfirm = true\r\n      if (this.goBackRoute && this.goBackRoute.name) {\r\n        this.$router.push(this.goBackRoute)\r\n      } else {\r\n        this.$router.go(-1)\r\n      }\r\n    },\r\n    async handleCreated() {\r\n      this.var_default_search_payload.itemsPerPage = 500\r\n      await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, true)\r\n          .then(res => {\r\n            this.editingItem = res.data\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    }\r\n  },\r\n  async created() {\r\n    await this.handleCreated();\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.card-header {\r\n  background: white;\r\n}\r\n</style>"]}]}