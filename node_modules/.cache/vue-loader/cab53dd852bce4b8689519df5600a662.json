{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\references\\modules\\contractors\\CreateOrUpdate.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\references\\modules\\contractors\\CreateOrUpdate.vue","mtime":1674799497415},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CreateOrUpdate.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateOrUpdate.vue","sourceRoot":"src/modules/references/modules/contractors","sourcesContent":["<template>\r\n    <base-create-or-update-wrapper\r\n        @save=\"save\"\r\n        has-save-suspend\r\n        :custom-title=\"isModeCreate ? $t('actions.create') : $t('actions.update')\"\r\n    >\r\n        <CreateFormContractor ref=\"formContractor\" @saved=\"$router.go(-1)\"></CreateFormContractor>\r\n    </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nimport CreateFormContractor from \"@/shared/views/components/CreateFormContractor\";\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\n// import crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\n// import helperService from \"@/shared/services/helper.service\"\r\nconst MAIN_API_URL = 'contractor'\r\nexport default {\r\n    name: \"CreateOrUpdate\",\r\n    /*\r\n    * PROPS */\r\n    props: {\r\n        /* customIsModeCreate: {\r\n            type: Boolean,\r\n            default: false\r\n        } */\r\n    },\r\n    /*\r\n    * COMPONENTS */\r\n    components: {\r\n        CreateFormContractor\r\n    },\r\n    /*\r\n    * DATA */\r\n    data () {\r\n        return {\r\n            /* formOfOwnerships: [],\r\n            regions: [],\r\n            districts: [],\r\n            statuses: [],\r\n            editingItem: {\r\n                addressDto: {}\r\n            } */\r\n        }\r\n    },\r\n    /*\r\n    * COMPUTED */\r\n    computed: {\r\n        isModeCreate () {\r\n            return this.$route.name === 'CreateContractor'\r\n        },\r\n        /* computedObserver () {\r\n            return this.$refs.observer\r\n        } */\r\n    },\r\n    /*\r\n    * METHODS */\r\n    methods: {\r\n        /* setDefaultActiveStatus () {\r\n            let activeStatus = this.statuses.find(el => el.code == 'ACTIVE')\r\n            if (activeStatus) {\r\n                this.editingItem.statusId = activeStatus.id\r\n            }\r\n        },\r\n        async regionSelected ($event, dontResetDistrict = false) {\r\n            if (!dontResetDistrict) {\r\n                this.editingItem.addressDto.districtId = null\r\n            }\r\n            // GET DISTRICTS\r\n            if ($event)\r\n                await helperService.getGeoLocationsByParentId($event)\r\n                    .then(res => {\r\n                        this.districts = res.data\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n        },\r\n        findContractorByInn (fromBlur = false) {\r\n            if (this.computedObserver.fields.INN.valid || fromBlur)\r\n                helperService.validateInnFromApi(this.editingItem.inn)\r\n                    .then(res => {\r\n                        if (res.data) {\r\n                            helperService.getContractorInfoByInn(this.editingItem.inn)\r\n                                .then(res => {\r\n                                    this.editingItem = Object.assign({}, res.data)\r\n                                    this.setDefaultActiveStatus()\r\n                                    // FETCH DISTRICTS\r\n                                    this.regionSelected(this.editingItem.addressDto.regionId, true)\r\n                                })\r\n                                .catch(e => {\r\n                                    // this.computedObserver.setErrors({ INN: [this.$t('validator.inn_exist')] });\r\n                                })\r\n                        } else {\r\n                            this.computedObserver.setErrors({ INN: [this.$t('validator.inn')] });\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n\r\n                    })\r\n        },\r\n        customLabelDistrict (opt) {\r\n            let selectedDistrict = this.districts.find(e => e.id == opt);\r\n            if (selectedDistrict) {\r\n                return `${this.getName({\r\n                    nameRu: selectedDistrict.nameRu,\r\n                    nameLt: selectedDistrict.nameLt,\r\n                    nameUz: selectedDistrict.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelRegion (opt) {\r\n            let selectedRegion = this.regions.find(e => e.id == opt);\r\n            if (selectedRegion) {\r\n                return `${this.getName({\r\n                    nameRu: selectedRegion.nameRu,\r\n                    nameLt: selectedRegion.nameLt,\r\n                    nameUz: selectedRegion.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelFormOfOwnership (opt) {\r\n            let selected = this.formOfOwnerships.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        }, */\r\n        save () {\r\n            this.$refs.formContractor.save()\r\n            /* this.computedObserver.validate().then(valid => {\r\n                if (valid) {\r\n                    if (this.$refs.formContractor.editingItem.id) {\r\n                        crudAndListsService.update(MAIN_API_URL, this.$refs.formContractor.editingItem).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.$refs.formContractor.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    } else {\r\n                        crudAndListsService.create(MAIN_API_URL, this.$refs.formContractor.editingItem).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.$refs.formContractor.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            }); */\r\n        }\r\n    },\r\n    /*\r\n    * CREATED */\r\n    async created () {\r\n        /* this.var_default_search_payload.itemsPerPage = 500\r\n        if (this.isModeCreate) {\r\n            await crudAndListsService.getEmpty(MAIN_API_URL)\r\n                .then(res => {\r\n                    this.editingItem = Object.assign({}, res.data)\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        } else {\r\n            await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n\r\n        // GET STATUSES\r\n        await helperService.getRefByCode('status')\r\n            .then(res => {\r\n                this.statuses = res.data.children\r\n                if (this.isModeCreate) {\r\n                    this.setDefaultActiveStatus()\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET REGIONS\r\n        await helperService.fetchRegions()\r\n            .then(res => {\r\n                this.regions = res.data\r\n                this.regionSelected(this.editingItem.addressDto.regionId, true)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET FORM_OF_OWNERSHIP\r\n        crudAndListsService\r\n            .searchList('directory/form-of-ownerships', this.var_default_search_payload)\r\n            .then((res) => {\r\n                this.formOfOwnerships = res.data.list;\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            }) */\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n    padding-top: 0;\r\n}\r\nul {\r\n    list-style-type: none;\r\n}\r\n</style>"]}]}