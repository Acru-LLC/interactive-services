{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\advertisement\\modules\\ad_passport_info\\CreateOrUpdate.vue?vue&type=style&index=0&id=02ae6715&scoped=true&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\advertisement\\modules\\ad_passport_info\\CreateOrUpdate.vue","mtime":1674799496623},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY29sLWZvcm0tbGFiZWwgew0KICAgIHBhZGRpbmctdG9wOiAwOw0KfQ0KDQp1bCB7DQogICAgbGlzdC1zdHlsZS10eXBlOiBub25lOw0KfQ0KDQouZHotcmVtb3ZlIHsNCiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2sgIWltcG9ydGFudDsNCiAgICB3aWR0aDogMS4yZW07DQogICAgaGVpZ2h0OiAxLjJlbTsNCg0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICB0b3A6IDVweDsNCiAgICByaWdodDogNXB4Ow0KICAgIHotaW5kZXg6IDEwMDA7DQoNCiAgICBmb250LXNpemU6IDEuMmVtICFpbXBvcnRhbnQ7DQogICAgbGluZS1oZWlnaHQ6IDFlbTsNCg0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICBmb250LXdlaWdodDogYm9sZDsNCiAgICBib3JkZXI6IDFweCBzb2xpZCBncmF5ICFpbXBvcnRhbnQ7DQogICAgYm9yZGVyLXJhZGl1czogMS4yZW07DQogICAgY29sb3I6IGdyYXk7DQogICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7DQogICAgb3BhY2l0eTogMC41Ow0KfQ0KDQouZHotcmVtb3ZlOmhvdmVyIHsNCiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmUgIWltcG9ydGFudDsNCiAgICBvcGFjaXR5OiAxOw0KfQ0K"},{"version":3,"sources":["CreateOrUpdate.vue"],"names":[],"mappings":";AAwoDA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"CreateOrUpdate.vue","sourceRoot":"src/modules/advertisement/modules/ad_passport_info","sourcesContent":["<template>\r\n    <base-create-or-update-wrapper\r\n        @save=\"save\"\r\n        has-save-suspend\r\n        :custom-title=\"$t('submodules.ad_passport_info.title') + ' - ' + isModeCreate ? $t('actions.create') : $t('actions.update')\"\r\n    >\r\n        <ValidationObserver\r\n            ref=\"observer\"\r\n            v-slot=\"{}\"\r\n        >\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        :rules=\"{required: true, regex: /\\b\\d{9}\\b/}\"\r\n                        class=\"required\"\r\n                        name=\"INN\"\r\n                        v-model=\"editingItem.inn\"\r\n                        @blur=\"validateInn\"\r\n                        @keyup.enter=\"getSingleContractorByInn\"\r\n                        mask=\"#########\"\r\n                        :label=\"$t('column.ad_construction_owner_inn')\"\r\n                        with-input-append\r\n                    >\r\n                        <template v-slot:append-slot>\r\n                            <!-- CONTRACTOR SEARCH BUTTON -->\r\n                            <b-button\r\n                                v-if=\"!contractorNotFound\"\r\n                                @click=\"getSingleContractorByInn\"\r\n                                variant=\"outline-primary\"\r\n                                id=\"contractorSearchButton\"\r\n                                style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n                            >\r\n                                <i class=\"mdi mdi-account-search\"></i>\r\n                            </b-button>\r\n                            <!-- CONTRACTOR ADD BUTTON -->\r\n                            <b-button\r\n                                v-else\r\n                                @click=\"contractorCreateModal = true\"\r\n                                variant=\"outline-info\"\r\n                                id=\"contractorSearchButton\"\r\n                                style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n                            >\r\n                                <i class=\"mdi mdi-plus-circle\"></i>\r\n                            </b-button>\r\n                        </template>\r\n                    </BaseInputWithValidation>\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.contractorId\"\r\n                        :has-next-page=\"hasNextPageContractors\"\r\n                        @select=\"contractorSelected\"\r\n                        @reachedEndOfList=\"contractorReachedEndOfList\"\r\n                        @search-change=\"debounceSearchContractors\"\r\n                        :searchable=\"true\"\r\n                        :allow-empty=\"false\"\r\n                        preserve-search\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingContractors\"\r\n                        :internal-search=\"false\"\r\n                        :options=\"contractors.map(e => e.id)\"\r\n                        :label=\"$t('column.ad_construction_owner')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelContractor\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        disabled\r\n                        v-model=\"editingItem.contractorPhoneNumber\"\r\n                        :label=\"$t('column.ad_construction_owner_phone_number')\"\r\n                        mask=\"+998#########\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseTextareaWithValidation\r\n                        not-required\r\n                        disabled\r\n                        v-model=\"editingItem.contractorAddress\"\r\n                        max-rows=\"2\"\r\n                        :label=\"$t('column.ad_construction_owner_address')\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                    class=\"text-right\"\r\n                >\r\n                    <b-form-checkbox\r\n                        id=\"uzavtoyol\"\r\n                        v-model=\"editingItem.isUzAvtoYul\"\r\n                        name=\"uzavtoyol-checkbox\"\r\n                        style=\"font-size: medium;\"\r\n                    >\r\n                        <strong>{{ $t('column.uzavtoyul') }}</strong>\r\n                    </b-form-checkbox>\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col cols=\"12\">\r\n                    <h5 class=\"m-0 text-center\">\r\n                        {{ $t('column.ad_construction_exact_address') }}\r\n                    </h5>\r\n                    <hr>\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.addressDto.regionId\"\r\n                        @select=\"regionSelected\"\r\n                        :options=\"regions.map(e => e.regionId)\"\r\n                        :label=\"$t('column.region')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelRegion\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.addressDto.districtId\"\r\n                        @select=\"districtSelected\"\r\n                        :options=\"districts.map(e => e.id)\"\r\n                        :label=\"$t('column.district')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelDistrict\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.addressDto.quarterId\"\r\n                        @select=\"quarterSelected\"\r\n                        :options=\"quarters.map(e => e.id)\"\r\n                        :label=\"$t('column.quarter')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelQuarter\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                        withCreateAddition\r\n                    >\r\n                        <template v-slot:append-slot>\r\n                            <b-button\r\n                                @click=\"quartersModal = true\"\r\n                                variant=\"outline-primary\"\r\n                                style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n                            >\r\n                                <i class=\"mdi mdi-plus-circle\"></i>\r\n                            </b-button>\r\n                        </template>\r\n                    </BaseMultiselectWithValidation>\r\n                    <BaseModalForCreate\r\n                        v-model=\"quartersModal\"\r\n                        mainApiUrl=\"directory/quarter-names\"\r\n                        :additional-params=\"{regionId: editingItem.addressDto.regionId,\r\n              districtId: editingItem.addressDto.districtId}\"\r\n                        createFormName=\"CreateFormGeoRegionQuarters\"\r\n                        @new-ref-created=\"newRefCreated\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        not-required\r\n                        v-model=\"editingItem.addressDto.streetId\"\r\n                        :options=\"streets.map(e => e.id)\"\r\n                        :label=\"$t('column.street')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelStreet\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                        withCreateAddition\r\n                    >\r\n                        <template v-slot:append-slot>\r\n                            <b-button\r\n                                @click=\"streetsModal = true\"\r\n                                variant=\"outline-primary\"\r\n                                style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n                            >\r\n                                <i class=\"mdi mdi-plus-circle\"></i>\r\n                            </b-button>\r\n                        </template>\r\n                    </BaseMultiselectWithValidation>\r\n                    <BaseModalForCreate\r\n                        v-model=\"streetsModal\"\r\n                        mainApiUrl=\"directory/street-names\"\r\n                        :additional-params=\"{regionId: editingItem.addressDto.regionId,\r\n              districtId: editingItem.addressDto.districtId,\r\n              quarterId: editingItem.addressDto.quarterId}\"\r\n                        createFormName=\"CreateFormGeoRegionStreets\"\r\n                        @new-ref-created=\"newRefCreated\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.addressDto.additional\"\r\n                        name=\"additionalAddress\"\r\n                        :label=\"$t('column.orienter')\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <b-row>\r\n                        <b-col cols=\"6\">\r\n                            <BaseInputWithValidation\r\n                                rules=\"required|positiveNotZero\"\r\n                                class=\"required\"\r\n                                :disabled=\"true\"\r\n                                v-model=\"editingItem.latNumber\"\r\n                                custom-styles=\"grid-template-columns: 51% 43%;\"\r\n                                name=\"addressLocation\"\r\n                                :label=\"$t('column.location_address')\"\r\n                                :placeholder=\"$t('column.latitude')\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col cols=\"3\">\r\n                            <BaseInputWithValidation\r\n                                rules=\"required|positiveNotZero\"\r\n                                only-form-element\r\n                                v-model=\"editingItem.lngNumber\"\r\n                                :disabled=\"true\"\r\n                                custom-styles=\"grid-template-columns: unset;\"\r\n                                :placeholder=\"$t('column.longitude')\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col cols=\"3\">\r\n                            <b-button\r\n                                @click=\"openMapModal\"\r\n                                variant=\"primary\"\r\n                                size=\"sm\"\r\n                                pill\r\n                            >\r\n                                <i class=\"mdi mdi-map-marker font-size-16 align-middle\"></i>\r\n                                {{ $t('column.map') }}\r\n                            </b-button>\r\n                        </b-col>\r\n                    </b-row>\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        v-if=\"!editingItem.isUzAvtoYul\"\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryAdvertisementZoneId\"\r\n                        @select=\"adZoneSelected\"\r\n                        :options=\"adZones.map(el => el.id)\"\r\n                        :label=\"$t('column.ad_construction_zone')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelAdZone\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        v-if=\"!editingItem.isUzAvtoYul\"\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryAdvertisementGroupId\"\r\n                        disabled\r\n                        :options=\"adGroups.map(el => el.id)\"\r\n                        :label=\"$t('column.ad_construction_region_group')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelAdRegionGroup\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        v-if=\"!editingItem.isUzAvtoYul\"\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        disabled\r\n                        v-model=\"coefficientValue\"\r\n                        :label=\"$t('column.coefficient')\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        v-model=\"editingItem.passportCode\"\r\n                        :label=\"$t('column.code')\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col cols=\"12\">\r\n                    <hr>\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.passportNumber\"\r\n                        @input=\"debounceCheckPassportNumber\"\r\n                        @blur=\"\r\n                            onBlurPassportNumberInput(\r\n                                $event.target.value\r\n                            )\r\n                        \"\r\n                        name=\"PassportNumber\"\r\n                        ref=\"passportNumber\"\r\n                        :label=\"$t('column.ad_construction_passport_number')\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <b-row>\r\n                        <b-col cols=\"8\">\r\n                            <BaseDatePickerWithValidation\r\n                                not-required\r\n                                type=\"month\"\r\n                                format=\"MM-YYYY\"\r\n                                custom-styles=\"grid-template-columns: 50% 50%\"\r\n                                v-model=\"editingItem.passportGivenDate\"\r\n                                :label=\"$t('column.ad_construction_passport_expire_date')\"\r\n                                :placeholder=\"$t('column.from')\"\r\n                                :minValue=\"inputMinValue\"\r\n                                lang=\"ru\"\r\n                            ></BaseDatePickerWithValidation>\r\n                        </b-col>\r\n                        <b-col cols=\"4\">\r\n                            <BaseDatePickerWithValidation\r\n                                not-required\r\n                                type=\"month\"\r\n                                format=\"MM-YYYY\"\r\n                                custom-styles=\"grid-template-columns: 99% 1%\"\r\n                                only-form-element\r\n                                v-model=\"editingItem.passportExpireDate\"\r\n                                :placeholder=\"$t('column.to')\"\r\n                                :maxValue=\"inputMaxValue\"\r\n                                lang=\"ru\"\r\n                            ></BaseDatePickerWithValidation>\r\n                        </b-col>\r\n                    </b-row>\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryAdvertisementLocationTypeId\"\r\n                        @select=\"adLocationTypeSelected\"\r\n                        :options=\"adLocationTypes.map(el => el.id)\"\r\n                        :label=\"$t('column.ad_location_type')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelAdLocationType\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryAdvertisementDesignTypeId\"\r\n                        @select=\"adDesignTypeSelected\"\r\n                        :options=\"adDesignTypes.map(el => el.id)\"\r\n                        :label=\"$t('column.ad_design_type')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelAdDesignType\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryTypeOfOutdoorAdvertisingToolId\"\r\n                        @input=\"adSideSelected\"\r\n                        :options=\"adSides.map(el => el.id)\"\r\n                        :label=\"$t('column.ad_construction_side')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelAdSide\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        v-if=\"editingItem.designTypePrivilegeCoefficient == 1 && !editingItem.isUzAvtoYul\"\r\n                        not-required\r\n                        disabled\r\n                        :label=\"$t('column.coefficient_by_collection_amount')\"\r\n                    />\r\n                    <BaseInputWithValidation\r\n                        v-else-if=\"!editingItem.isUzAvtoYul\"\r\n                        not-required\r\n                        disabled\r\n                        v-model=\"editingItem.designTypePrivilegeCoefficient\"\r\n                        :label=\"$t('column.coefficient_by_collection_amount')\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <!-- <b-row class=\"mb-3\">\r\n          <b-col\r\n              sm=\"12\"\r\n              md=\"6\"\r\n          >\r\n              <BaseInputWithValidation\r\n                  rules=\"required|positiveNotZero\"\r\n                  class=\"required\"\r\n                  v-model=\"editingItem.length\"\r\n                  @input=\"handleWidthLengthInput\"\r\n                  :label=\"$t('column.ad_construction_length')\"\r\n              />\r\n          </b-col>\r\n\r\n          <b-col\r\n              sm=\"12\"\r\n              md=\"6\"\r\n          >\r\n              <BaseInputWithValidation\r\n                  rules=\"required|positiveNotZero\"\r\n                  class=\"required\"\r\n                  v-model=\"editingItem.volume\"\r\n                  disabled\r\n                  :label=\"$t('column.ad_construction_volume')\"\r\n              />\r\n          </b-col>\r\n      </b-row> -->\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryAdvertisementTypeId\"\r\n                        :options=\"adTypes.map(el => el.id)\"\r\n                        :label=\"$t('column.ad_construction_type')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelAdType\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <b-row>\r\n                        <b-col cols=\"6\">\r\n                            <BaseInputWithValidation\r\n                                rules=\"required|positiveNotZero\"\r\n                                class=\"required\"\r\n                                v-model=\"editingItem.width\"\r\n                                @input=\"handleWidthLengthInput\"\r\n                                custom-styles=\"grid-template-columns: 51% 43%;\"\r\n                                :label=\"$t('column.ad_construction_volume')\"\r\n                                :placeholder=\"$t('column.width')\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col cols=\"3\">\r\n                            <BaseInputWithValidation\r\n                                rules=\"required|positiveNotZero\"\r\n                                only-form-element\r\n                                v-model=\"editingItem.length\"\r\n                                @input=\"handleWidthLengthInput\"\r\n                                custom-styles=\"grid-template-columns: unset;\"\r\n                                :placeholder=\"$t('column.length')\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col cols=\"3\">\r\n                            <BaseInputWithValidation\r\n                                rules=\"required|positiveNotZero\"\r\n                                ref=\"adVolume\"\r\n                                only-form-element\r\n                                v-model=\"editingItem.volume\"\r\n                                custom-styles=\"grid-template-columns: unset;\"\r\n                                disabled\r\n                                :placeholder=\"$t('column.volume')\"\r\n                            />\r\n                        </b-col>\r\n                    </b-row>\r\n\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <b-row>\r\n                        <b-col cols=\"7\">\r\n                            <BaseMultiselectWithValidation\r\n                                v-if=\"isByAgency\"\r\n                                rules=\"required\"\r\n                                class=\"required\"\r\n                                v-model=\"editingItem.directoryAdvertisementObjectStateId\"\r\n                                :options=\"adObjectStates.map(el => el.id)\"\r\n                                :label=\"$t('column.status')\"\r\n                                placeholder=\"\"\r\n                                custom-styles=\"grid-template-columns: 44% 56%;\"\r\n                                :custom-label=\"customObjectState\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col cols=\"5\">\r\n                            <BaseDatePickerWithValidation\r\n                                v-if=\"isByAgency\"\r\n                                not-required\r\n                                disableAfter\r\n                                custom-styles=\"grid-template-columns: 40% 60%;\"\r\n                                v-model=\"editingItem.constructDate\"\r\n                                :label=\"$t('column.created_date')\"\r\n                                lang=\"ru\"\r\n                            ></BaseDatePickerWithValidation>\r\n                        </b-col>\r\n                    </b-row>\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        not-required\r\n                        disabled\r\n                        v-model=\"editingItem.directoryAdvertisementVolumeTypeId\"\r\n                        @input=\"adVolumeTypeSelected\"\r\n                        :options=\"adVolumeTypes.map(el => el.id)\"\r\n                        :label=\"$t('submodules.ad_volume_types.title')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelAdVolumeType\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        v-if=\"isByAgency && !editingItem.isUzAvtoYul\"\r\n                        not-required\r\n                        disabled\r\n                        v-model=\"editingItem.monthlyPayment\"\r\n                        :label=\"$t('column.monthly_income')\"\r\n                    ></BaseInputWithValidation>\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseTextareaWithValidation\r\n                        v-if=\"isByAgency\"\r\n                        not-required\r\n                        v-model=\"editingItem.description\"\r\n                        max-rows=\"8\"\r\n                        :label=\"$t('column.comment')\"\r\n                        :placeholder=\"$t('column.comment')\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col cols=\"12\">\r\n                    <h5 class=\"m-0 text-center\">\r\n                        {{ $t('column.ad_construction_organisations_list') }}\r\n                    </h5>\r\n                    <hr>\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        :name=\"`${$t('column.ad_construction_organisation')}-1`\"\r\n                        v-model=\"editingItem.organizationNameOne\"\r\n                        :label=\"$t('column.ad_construction_organisation')\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        :name=\"`${$t('column.ad_construction_organisation')}-2`\"\r\n                        v-model=\"editingItem.organizationNameTwo\"\r\n                        :label=\"$t('column.ad_construction_organisation')\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        :name=\"`${$t('column.ad_construction_organisation')}-3`\"\r\n                        v-model=\"editingItem.organizationNameThree\"\r\n                        :label=\"$t('column.ad_construction_organisation')\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        :name=\"`${$t('column.ad_construction_organisation')}-4`\"\r\n                        v-model=\"editingItem.organizationNameFour\"\r\n                        :label=\"$t('column.ad_construction_organisation')\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <br />\r\n\r\n            <b-row\r\n                class=\"mb-3\"\r\n                v-if=\"!isModeCreate\"\r\n            >\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"3\"\r\n                >\r\n\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        disabled\r\n                        :label=\"$t('column.created_by')\"\r\n                        v-model=\"editingItem.createdByEmployeeFullName\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n        </ValidationObserver>\r\n\r\n        <!-- CONTRACTOR CREATE MODAL -->\r\n        <b-modal\r\n            v-model=\"contractorCreateModal\"\r\n            id=\"create-multiple-min-collections-modal-id\"\r\n            size=\"xl\"\r\n            :title=\"$t('column.contractor')\"\r\n            title-class=\"font-18\"\r\n            :ok-title=\"$t('actions.save')\"\r\n            @ok=\"createContractor\"\r\n            @cancel=\"fetchContractorsWithKeyword('', false, true)\"\r\n            ok-variant=\"success\"\r\n            :cancel-title=\"$t('actions.cancel')\"\r\n            cancel-variant=\"danger\"\r\n            no-close-on-backdrop\r\n            no-close-on-esc\r\n        >\r\n            <CreateFormContractor\r\n                @saved=\"contractorSaved\"\r\n                :custom-is-mode-create=\"true\"\r\n                ref=\"createFormContractor\"\r\n            ></CreateFormContractor>\r\n        </b-modal>\r\n\r\n        <!-- MAP TO CHOOSE LOCATION OF AD_CONSTRUCTION -->\r\n        <MapInModal\r\n            :visible=\"mapModal\"\r\n            :event=\"{lat: editingItem.latNumber, lng: editingItem.lngNumber}\"\r\n            @saveLocation=\"saveLocation\"\r\n            @close=\"mapModal = false\"\r\n        ></MapInModal>\r\n    </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'contractor-advertising-construction'\r\nconst APPEND_API_URL_FOR_GOVERNMENT = 'by-first-agent'\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport helperService from \"@/shared/services/helper.service\"\r\n\r\nimport MapInModal from './components/MapInModal'\r\nimport CreateFormContractor from '@/shared/views/components/CreateFormContractor'\r\n\r\nexport default {\r\n    name: \"CreateOrUpdateByGovernment\",\r\n    /*\r\n    * COMPONENTS */\r\n    components: {\r\n        MapInModal,\r\n        CreateFormContractor\r\n\r\n    },\r\n    /*\r\n    * DATA */\r\n    data () {\r\n        return {\r\n            notFormattedMonthlyPayment: null,\r\n            adSideValue: null,\r\n            districtModal: false,\r\n            quartersModal: false,\r\n            streetsModal: false,\r\n            mapModal: false,\r\n\r\n            editingItem: {\r\n                addressDto: {}\r\n            },\r\n            editingItem1: {\r\n                addressDto: {}\r\n            },\r\n            hasNextPageContractors: false,\r\n            contractors: [],\r\n            debounce: null,\r\n            isLoadingContractors: false,\r\n            districts: [],\r\n            quarters: [],\r\n            streets: [],\r\n            adTypes: [],\r\n            adGroups: [],\r\n            adZones: [],\r\n            adSides: [],\r\n            adVolumeTypes: [],\r\n            localPassportExpireDate: [],\r\n            contractorCreateModal: false,\r\n            minCollectionValue: null,\r\n            coefficientValue: null,\r\n            contractorNotFound: false,\r\n            contractorSearchPayload: {},\r\n            checkPassportNumberLoading: false,\r\n            dbPassportNumber: '',\r\n            isPassportNumberInvalid: false,\r\n\r\n            minimumCollections: [],\r\n            createMultipleMinimumCollectionsModal: false,\r\n            singleMinimumCollectionUpdateModal: false,\r\n            statuses: [],\r\n            regions: [],\r\n            units: [],\r\n            adLocationTypes: [],\r\n            adDesignTypes: [],\r\n            adObjectStates: [],\r\n            dropzoneOptions: {\r\n                url: \"https://httpbin.org/post\",\r\n                dictDefaultMessage: 'ファイルをドロップしてください.',\r\n                thumbnailWidth: 150,\r\n                maxFilesize: 1.0,\r\n                addRemoveLinks: true,\r\n                dictRemoveFile: 'x',\r\n                maxFiles: 3,\r\n            },\r\n            architectDocFile: {},\r\n            photo: {},\r\n            passportDocFile: {},\r\n            passportPhoto: {},\r\n            paymentDocFile: {},\r\n        }\r\n    },\r\n    /*\r\n    * COMPUTED */\r\n    computed: {\r\n        inputMinValue (value) {\r\n            return value.editingItem.passportGivenDate\r\n        },\r\n        inputMaxValue (value) {\r\n            return value.editingItem.passportExpireDate\r\n        },\r\n        isModeCreate () {\r\n            return this.$route.name == 'CreateAdPassportInfoByAgency' || this.$route.name == 'CreateAdPassportInfoByGovernment'\r\n        },\r\n        isByAgency () {\r\n            return this.$route.name == 'CreateAdPassportInfoByAgency' || this.$route.name == 'UpdateAdPassportInfoByAgency'\r\n        },\r\n        isByGovernment () {\r\n            return this.$route.name == 'CreateAdPassportInfoByGovernment' || this.$route.name == 'UpdateAdPassportInfoByGovernment'\r\n        },\r\n        computedObserver () {\r\n            return this.$refs.observer\r\n        },\r\n        multipleMinimumCollectionsComputedObserver () {\r\n            return this.$refs['multiple-minimum-collections-observer']\r\n        },\r\n        singleMinimumCollectionUpdateComputedObserver () {\r\n            return this.$refs['single-minimum-collection-update-observer']\r\n        }\r\n    },\r\n    /*\r\n    * METHODS */\r\n    methods: {\r\n        findAndSetAdVolumeType () {\r\n            this.editingItem.directoryAdvertisementVolumeTypeId = null\r\n\r\n            if (this.editingItem.volume) {\r\n                this.adVolumeTypes.forEach(vType => {\r\n                    if (parseFloat(this.editingItem.volume) >= vType.minBorder && parseFloat(this.editingItem.volume) <= vType.maxBorder) {\r\n                        this.editingItem.directoryAdvertisementVolumeTypeId = vType.id\r\n                    }\r\n                })\r\n            }\r\n            this.adVolumeTypeSelected(this.editingItem.directoryAdvertisementVolumeTypeId)\r\n        },\r\n        adSideSelected ($event) {\r\n            let foundAdSide = this.adSides.find(el => el.id == $event)\r\n            this.adSideValue = foundAdSide ? foundAdSide.code : null\r\n            this.calculateAndSetMonthlyPayment()\r\n        },\r\n        adVolumeTypeSelected ($event) {\r\n            this.getMinCollectionValue(this.editingItem.addressDto.regionId, this.editingItem.addressDto.districtId, this.editingItem.directoryAdvertisementLocationTypeId, this.editingItem.directoryAdvertisementDesignTypeId, $event)\r\n        },\r\n        calculateAndSetMonthlyPayment () {\r\n            this.$set(this.editingItem, 'monthlyPayment', null)\r\n            this.notFormattedMonthlyPayment = null\r\n            if (this.minCollectionValue && this.coefficientValue && this.editingItem.designTypePrivilegeCoefficient && this.editingItem.volume && this.adSideValue) {\r\n                let num = (parseFloat(this.minCollectionValue) * parseFloat(this.coefficientValue) * parseFloat(this.editingItem.designTypePrivilegeCoefficient) * parseFloat(this.editingItem.volume) * parseFloat(this.adSideValue)).toFixed(2)\r\n                this.notFormattedMonthlyPayment = num\r\n                let formattedPaymentValue = this.getNumberFormat(num)\r\n                this.$set(this.editingItem, 'monthlyPayment', formattedPaymentValue)\r\n            } else {\r\n                this.$set(this.editingItem, 'monthlyPayment', null)\r\n                this.notFormattedMonthlyPayment = null\r\n            }\r\n        },\r\n        getPrivilegeCoefficientValueByAdDesignTypeId (adDesignTypeId) {\r\n            if (adDesignTypeId) {\r\n                helperService.getPrivilegeCoefficientValueByAdDesignTypeId(adDesignTypeId)\r\n                    .then(res => {\r\n                        this.editingItem.designTypePrivilegeCoefficient = res.data\r\n                        this.calculateAndSetMonthlyPayment()\r\n                    })\r\n                    .catch(e => console.log(e))\r\n            }\r\n        },\r\n        newRefCreated (newOptions, newId, formName) {\r\n            if (formName == 'CreateFormGeoRegionQuarters') {\r\n                this.quarters = newOptions\r\n                this.editingItem.addressDto.quarterId = newId\r\n            } else if (formName == 'CreateFormGeoRegionStreets') {\r\n                this.streets = newOptions\r\n                this.editingItem.addressDto.streetId = newId\r\n            }\r\n        },\r\n        async onBlurPassportNumberInput (value) {\r\n            if (this.isPassportNumberInvalid) {\r\n                await this.checkAdPassportNumber(value, true);\r\n            }\r\n        },\r\n        async debounceCheckPassportNumber (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.checkAdPassportNumber(searchText);\r\n            }, 1000);\r\n        },\r\n        checkAdPassportNumber (searchQuery = \"\", fromOnBlur = false) {\r\n            /*\r\n             * AVOID MULTIPLE REQUESTS AT ONCE */\r\n            if (!this.editingItem.addressDto.regionId || !searchQuery || this.checkPassportNumberLoading || (!this.isModeCreate && this.editingItem.passportNumber == this.dbPassportNumber)) return;\r\n            this.checkPassportNumberLoading = true;\r\n            helperService.checkAdPassportNumberByRegion(searchQuery, this.editingItem.addressDto.regionId)\r\n                .then(res => {\r\n                    this.isPassportNumberInvalid = res.data;\r\n                    if (this.isPassportNumberInvalid) {\r\n                        this.computedObserver.setErrors({ PassportNumber: [this.$t('validator.ad_passport_number_already_in_use')] });\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n                .finally(() => {\r\n                    this.checkPassportNumberLoading = false;\r\n                    /*\r\n                       * FOYDALANUVCHI YOZAYOTGAN BO'LSA INPUTNI QAYTA FOCUS QIL (ON_BLUR EVENTDAN BO'LSA FOCUS QILMA) */\r\n                    if (!fromOnBlur) {\r\n                        let passportNumberInput = this.$refs.passportNumber.$el.querySelector(\r\n                            \"input\"\r\n                        );\r\n                        setTimeout(() => {\r\n                            passportNumberInput.focus();\r\n                        }, 50);\r\n                    }\r\n                });\r\n        },\r\n        saveLocation (e) {\r\n            this.$set(this.editingItem, 'latNumber', e.lat)\r\n            this.$set(this.editingItem, 'lngNumber', e.lng)\r\n            this.mapModal = false\r\n        },\r\n        drawCreated (e) {\r\n            var type = e.layerType,\r\n                layer = e.layer;\r\n\r\n            if (type === 'marker') {\r\n                layer.bindPopup('A popup!');\r\n            }\r\n\r\n            this.featureGroup.addLayer(layer);\r\n        },\r\n        openMapModal () {\r\n            this.mapModal = true\r\n        },\r\n        async contractorSaved (res) {\r\n            this.contractorCreateModal = false\r\n            this.contractorNotFound = false\r\n            await this.fetchContractorsWithKeyword('', true)\r\n        },\r\n        createContractor (e) {\r\n            e.preventDefault()\r\n\r\n            this.$refs.createFormContractor.save()\r\n        },\r\n        validateInn () {\r\n            helperService.validateInnFromApi(this.editingItem.inn)\r\n                .then(res => {\r\n                    if (!res.data) {\r\n                        this.computedObserver.setErrors({ INN: [this.$t('validator.inn')] });\r\n                        this.contractorSelected(null, true)\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        },\r\n        getSingleContractorByInn () {\r\n            if (this.computedObserver.fields.INN.valid) {\r\n                helperService.validateInnFromApi(this.editingItem.inn)\r\n                    .then(res => {\r\n                        if (res.data) {\r\n                            helperService.getSingleContractorByInn(this.editingItem.inn)\r\n                                .then(res => {\r\n                                    this.contractorNotFound = false\r\n                                    this.contractorSelected(res.data, false, true)\r\n                                })\r\n                                .catch(e => {\r\n                                    this.contractorNotFound = true\r\n                                })\r\n                        } else {\r\n                            this.computedObserver.setErrors({ INN: [this.$t('validator.inn')] });\r\n                            this.contractorSelected(null, true)\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n            }\r\n        },\r\n        handleWidthLengthInput (widthOrLength) {\r\n            if (this.editingItem.width && this.editingItem.length) {\r\n                try {\r\n                    this.editingItem.volume = parseFloat(this.editingItem.width) * parseFloat(this.editingItem.length)\r\n                    this.findAndSetAdVolumeType()\r\n                    this.calculateAndSetMonthlyPayment()\r\n                } catch (error) {\r\n                    this.editingItem.volume = null\r\n                    this.calculateAndSetMonthlyPayment()\r\n                    this.findAndSetAdVolumeType()\r\n                }\r\n            } else {\r\n                this.editingItem.volume = null\r\n                this.calculateAndSetMonthlyPayment()\r\n                this.findAndSetAdVolumeType()\r\n            }\r\n        },\r\n        addPassportDateChanged (e) {\r\n            if (e[0]) {\r\n                this.editingItem.passportGivenDate = e[0]\r\n                this.editingItem.passportExpireDate = e[1]\r\n            } else {\r\n                this.editingItem.passportGivenDate = null\r\n                this.editingItem.passportExpireDate = null\r\n            }\r\n        },\r\n        customLabelAdSide (opt) {\r\n            let selected = this.adSides.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdVolumeType (opt) {\r\n            let selected = this.adVolumeTypes.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdZone (opt) {\r\n            let selected = this.adZones.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdRegionGroup (opt) {\r\n            let selected = this.adGroups.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdType (opt) {\r\n            let selected = this.adTypes.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelStreet (opt) {\r\n            let selected = this.streets.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelQuarter (opt) {\r\n            let selected = this.quarters.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelDistrict (opt) {\r\n            let selected = this.districts.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        async regionSelected ($event, dontResetDistrict = false) {\r\n            if (!dontResetDistrict) {\r\n                this.editingItem.addressDto.districtId = null\r\n                this.editingItem.directoryAdvertisementGroupId = null\r\n            }\r\n            if ($event) {\r\n                // GET DISTRICTS\r\n                await helperService.getGeoLocationsByParentId($event)\r\n                    .then(res => {\r\n                        this.districts = res.data\r\n                        if (dontResetDistrict)\r\n                            this.districtSelected(this.editingItem.addressDto.districtId, true)\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n\r\n                if (!this.editingItem.isUzAvtoYul) {\r\n                    // GET GROUP OF REGION\r\n                    await helperService.getGroupOfRegion($event)\r\n                        .then(res => {\r\n                            this.$set(this.editingItem, 'directoryAdvertisementGroupId', res.data.id)\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                        })\r\n                }\r\n\r\n                if (this.editingItem.directoryAdvertisementLocationTypeId) {\r\n                    // GET AD_DESIGN_TYPES\r\n                    helperService\r\n                        .getAdDesignTypesByAdLocationTypeId(this.editingItem.directoryAdvertisementLocationTypeId, $event)\r\n                        .then((res) => {\r\n                            this.adDesignTypes = res.data\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                            this.adDesignTypes = []\r\n                        })\r\n                } else {\r\n                    this.adDesignTypes = []\r\n                }\r\n            }\r\n            this.checkAdPassportNumber(this.editingItem.passportNumber)\r\n        },\r\n        getCoefficientValue (districtId, adZoneId) {\r\n            if (districtId && adZoneId && this.isByAgency) {\r\n                helperService.getCoefficientValueByZoneAndDistrictIds(districtId, adZoneId)\r\n                    .then(res => {\r\n                        this.coefficientValue = res.data ? res.data.coefficient : null\r\n                        if (this.minCollectionValue) {\r\n                            this.calculateAndSetMonthlyPayment()\r\n                            // this.$set(this.editingItem, 'monthlyPayment', parseFloat(this.minCollectionValue) * parseFloat(this.coefficientValue))\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                        this.coefficientValue = null\r\n                        // this.$set(this.editingItem, 'monthlyPayment', null)\r\n                        this.calculateAndSetMonthlyPayment()\r\n                    })\r\n            }\r\n        },\r\n        getMinCollectionValue (regionId, districtId, adLocationTypeId, adDesignTypeId, adVolumeTypeId) {\r\n            // GET MINIMUM_COLLECTION (M) BY REGION, DISTRICT AND AD_DESIGN_TYPE IDS\r\n            if (regionId && districtId && adLocationTypeId && adDesignTypeId && this.isByAgency && !this.editingItem.isUzAvtoYul) {\r\n                helperService.getMinCollectionValueByRegionAndDistrictIds(regionId, districtId, adLocationTypeId, adDesignTypeId, adVolumeTypeId)\r\n                    .then(res => {\r\n                        this.minCollectionValue = res.data ? res.data.cost : null\r\n                        if (this.coefficientValue) {\r\n                            this.calculateAndSetMonthlyPayment()\r\n                            // this.$set(this.editingItem, 'monthlyPayment', parseFloat(this.minCollectionValue) * parseFloat(this.coefficientValue))\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                        this.minCollectionValue = null\r\n                        this.calculateAndSetMonthlyPayment()\r\n                        // this.$set(this.editingItem, 'monthlyPayment', null)\r\n                    })\r\n            } else {\r\n                this.minCollectionValue = null\r\n            }\r\n        },\r\n        async districtSelected ($event, dontResetQuarter = false) {\r\n            if (!dontResetQuarter) {\r\n                this.editingItem.addressDto.quarterId = null\r\n                this.editingItem.directoryAdvertisementZoneId = null\r\n            }\r\n            this.getMinCollectionValue(this.editingItem.addressDto.regionId, $event, this.editingItem.directoryAdvertisementLocationTypeId, this.editingItem.directoryAdvertisementDesignTypeId, this.editingItem.directoryAdvertisementVolumeTypeId)\r\n            this.getCoefficientValue($event, this.editingItem.directoryAdvertisementZoneId)\r\n            if ($event) {\r\n                // GET QUARTERS\r\n                await crudAndListsService.searchListWithKeyword('directory/quarter-names', this.var_default_search_payload, `get-by-districtId/${$event}`)\r\n                    .then(res => {\r\n                        this.quarters = res.data.list\r\n                        if (dontResetQuarter)\r\n                            this.quarterSelected(this.editingItem.addressDto.quarterId, true)\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                        this.quarters = []\r\n                    })\r\n\r\n\r\n                if (!this.editingItem.isUzAvtoYul) {\r\n                    // GET AD_ZONES BY DISTRICT_ID\r\n                    await helperService.getAdZonesByDistrictId($event)\r\n                        .then(res => {\r\n                            this.adZones = res.data\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                            this.adZones = []\r\n                        })\r\n                }\r\n            } else {\r\n                this.quarters = []\r\n                this.adZones = []\r\n                this.minCollectionValue = null\r\n                this.coefficientValue = null\r\n            }\r\n        },\r\n        async adDesignTypeSelected ($event) {\r\n            this.getMinCollectionValue(this.editingItem.addressDto.regionId, this.editingItem.addressDto.districtId, this.editingItem.directoryAdvertisementLocationTypeId, $event, this.editingItem.directoryAdvertisementVolumeTypeId)\r\n            this.getPrivilegeCoefficientValueByAdDesignTypeId($event)\r\n        },\r\n        async adZoneSelected ($event) {\r\n            this.getCoefficientValue(this.editingItem.addressDto.districtId, $event)\r\n        },\r\n        async quarterSelected ($event, dontResetStreet = false) {\r\n            if (!dontResetStreet) {\r\n                this.editingItem.addressDto.streetId = null\r\n            }\r\n            // GET STREETS\r\n            if ($event) {\r\n                await crudAndListsService.searchListWithKeyword('directory/street-names', this.var_default_search_payload, `get-by-quarterId/${$event}`)\r\n                    .then(res => {\r\n                        this.streets = res.data.list\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                        this.streets = []\r\n                    })\r\n            } else {\r\n                this.streets = []\r\n            }\r\n        },\r\n        customObjectState (opt) {\r\n            let selected = this.adObjectStates.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelContractor (opt) {\r\n            let selected = this.contractors.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${selected.fullName}`\r\n            }\r\n            return ``;\r\n        },\r\n        contractorReachedEndOfList (e) {\r\n            if (e) {\r\n                this.fetchContractors()\r\n            }\r\n        },\r\n        contractorSelected (contractorDtoOrId, dontResetInn = false, fromInnSearch = false) {\r\n            let foundContractor = fromInnSearch ? this.contractors.find(c => c.id == contractorDtoOrId.id) : this.contractors.find(c => c.id == contractorDtoOrId)\r\n            if (fromInnSearch && contractorDtoOrId && !foundContractor) {\r\n                this.contractors.push(contractorDtoOrId)\r\n                foundContractor = contractorDtoOrId\r\n            }\r\n            if (foundContractor) {\r\n                this.editingItem.contractorId = fromInnSearch ? contractorDtoOrId.id : contractorDtoOrId\r\n                this.editingItem.inn = foundContractor.inn\r\n                this.editingItem.contractorPhoneNumber = null\r\n                this.editingItem.contractorPhoneNumber = foundContractor.mobileNumber\r\n                this.editingItem.contractorAddress = `${foundContractor.addressDto.regionNameUz}, ${foundContractor.addressDto.districtNameUz} ${foundContractor.addressDto.additional ? ',' + foundContractor.addressDto.additional : ''}`\r\n                this.contractorNotFound = false\r\n            } else {\r\n                if (!dontResetInn) {\r\n                    this.editingItem.inn = null\r\n                }\r\n                this.editingItem.contractorId = null\r\n                this.editingItem.contractorPhoneNumber = null\r\n                this.editingItem.contractorAddress = null\r\n            }\r\n        },\r\n        async debounceSearchContractors (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchContractorsWithKeyword(searchText);\r\n            }, 1000);\r\n        },\r\n        /* async debounceSearchContractorsByInn (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.getSingleContractorByInn();\r\n            }, 1000);\r\n        }, */\r\n        fetchContractorsWithKeyword (keyword, makeSelectedByInn = false, fromContractorModalCancel = false) {\r\n            this.contractors = []\r\n            this.contractorSearchPayload.page = 1\r\n            this.contractorSearchPayload.keyword = keyword ? keyword : ''\r\n            this.fetchContractors(makeSelectedByInn, fromContractorModalCancel)\r\n        },\r\n        async fetchContractors (makeSelectedByInn, fromContractorModalCancel) {\r\n            this.isLoadingContractors = true\r\n            await crudAndListsService.searchListWithKeyword('contractor', this.contractorSearchPayload, 'by-contractor')\r\n                .then(res => {\r\n                    this.contractors.push(...res.data.list)\r\n                    if (makeSelectedByInn || fromContractorModalCancel) {\r\n                        let foundContractor = this.contractors.find(el => el.inn == this.editingItem.inn)\r\n                        if (foundContractor) {\r\n                            this.contractorSelected(foundContractor.id)\r\n                        }\r\n                    }\r\n                    this.hasNextPageContractors = res.data.total / this.contractorSearchPayload.itemsPerPage > this.contractorSearchPayload.page\r\n                    this.contractorSearchPayload.page += 1\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    this.contractors = []\r\n                })\r\n                .finally(() => {\r\n                    this.isLoadingContractors = false\r\n                })\r\n        },\r\n        async adLocationTypeSelected (adLocationTypeObjectOrId, dontResetAdDesignType = false) {\r\n            if (!dontResetAdDesignType) {\r\n                this.editingItem.directoryAdvertisementDesignTypeId = null\r\n                this.editingItem.directoryAdvertisementVolumeTypeId = null\r\n            }\r\n            if (adLocationTypeObjectOrId) {\r\n                this.getMinCollectionValue(this.editingItem.addressDto.regionId, this.editingItem.addressDto.districtId, adLocationTypeObjectOrId.id ? adLocationTypeObjectOrId.id : adLocationTypeObjectOrId, this.editingItem.directoryAdvertisementDesignTypeId, this.editingItem.directoryAdvertisementVolumeTypeId)\r\n                // GET AD_VOLUME_TYPES\r\n                helperService\r\n                    .getAdVolumeTypesByAdLocationTypeId(adLocationTypeObjectOrId.id ? adLocationTypeObjectOrId.id : adLocationTypeObjectOrId)\r\n                    .then((res) => {\r\n                        this.adVolumeTypes = res.data\r\n                        this.findAndSetAdVolumeType()\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n                if (this.editingItem.addressDto.regionId) {\r\n                    // GET AD_DESIGN_TYPES\r\n                    helperService\r\n                        .getAdDesignTypesByAdLocationTypeId(adLocationTypeObjectOrId.id ? adLocationTypeObjectOrId.id : adLocationTypeObjectOrId, this.editingItem.addressDto.regionId)\r\n                        .then((res) => {\r\n                            this.adDesignTypes = res.data\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                            this.adDesignTypes = []\r\n                        })\r\n                } else {\r\n                    this.adDesignTypes = []\r\n                }\r\n            } else {\r\n                this.adDesignTypes = []\r\n                this.adVolumeTypes = []\r\n            }\r\n        },\r\n        customLabelAdLocationType (opt) {\r\n            let selected = this.adLocationTypes.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdDesignType (opt) {\r\n            let selected = this.adDesignTypes.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelRegion (opt) {\r\n            let selected = this.regions.find(e => e.regionId == (opt.regionId ? opt.regionId : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.regionNameRu,\r\n                    nameLt: selected.regionNameLt,\r\n                    nameUz: selected.regionNameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelUnit (opt) {\r\n            let selected = this.units.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        treeClosed (veeName) {\r\n            this.computedObserver.refs[veeName].validate();\r\n        },\r\n        normalizer (node) {\r\n            if (!node.children || node.children.length === 0) {\r\n                delete node.children\r\n                return {\r\n                    id: node.id,\r\n                    label: this.getName({\r\n                        nameRu: node.nameRu,\r\n                        nameLt: node.nameLt,\r\n                        nameUz: node.nameUz,\r\n                    }),\r\n                }\r\n            }\r\n            return {\r\n                id: node.id,\r\n                label: this.getName({\r\n                    nameRu: node.nameRu,\r\n                    nameLt: node.nameLt,\r\n                    nameUz: node.nameUz,\r\n                }),\r\n                children: node.children && node.children.length > 0 ? node.children : [],\r\n            }\r\n        },\r\n        save () {\r\n            this.computedObserver.validate().then(valid => {\r\n                if (valid) {\r\n                    this.$set(this.editingItem, 'monthlyPayment', this.notFormattedMonthlyPayment)\r\n                    if (this.editingItem.id || this.$route.params.id) {\r\n                        crudAndListsService.update(MAIN_API_URL, this.isByGovernment ? this.editingItem : {\r\n                            contractorAdvertisingConstructionForSecondAgentDto: this.editingItem,\r\n                            id: this.editingItem.id\r\n                        }, this.isByGovernment ? APPEND_API_URL_FOR_GOVERNMENT : false, true).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, { addressDto: {} });\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    } else {\r\n                        crudAndListsService.create(MAIN_API_URL, this.isByGovernment ? this.editingItem : { contractorAdvertisingConstructionForSecondAgentDto: this.editingItem }, this.isByGovernment ? APPEND_API_URL_FOR_GOVERNMENT : false, true).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, { addressDto: {} });\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        }\r\n    },\r\n    /*\r\n    * CREATED */\r\n    async created () {\r\n        this.var_default_search_payload.itemsPerPage = 500;\r\n        this.contractorSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        if (this.isModeCreate) {\r\n            await crudAndListsService.getEmpty(MAIN_API_URL, this.isByGovernment ? APPEND_API_URL_FOR_GOVERNMENT : false)\r\n                .then(res => {\r\n                    this.editingItem = this.isByGovernment ? res.data : res.data.contractorAdvertisingConstructionForFirstAgentDto\r\n                    this.editingItem1 = this.isByGovernment ? { addressDto: {} } : res.data.contractorAdvertisingConstructionForSecondAgentDto\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        } else {\r\n            await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, true, null, this.isByGovernment ? APPEND_API_URL_FOR_GOVERNMENT : false)\r\n                .then(res => {\r\n                    this.editingItem = this.isByGovernment ? res.data : res.data.contractorAdvertisingConstructionForSecondAgentDto\r\n                    // ASSIGN OLD_SAVED_PASSPORT_NUMBER ON DATABASE TO LOCAL VARIABLE\r\n                    this.dbPassportNumber = this.editingItem.passportNumber\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n\r\n        // GET REGIONS\r\n        await helperService.fetchRegionsForAdvertisementByCurrentUserId()\r\n            .then(res => {\r\n                this.regions = res.data\r\n                this.regionSelected(this.editingItem.addressDto ? this.editingItem.addressDto.regionId : null, true)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET AD_SIDES\r\n        crudAndListsService\r\n            .searchList('directory/type-of-outdoor-advertising-tools', this.var_default_search_payload)\r\n            .then((res) => {\r\n                this.adSides = res.data.list;\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        if (!this.editingItem.isUzAvtoYul) {\r\n            // GET AD_GROUPS\r\n            crudAndListsService\r\n                .searchList('directory/advertisement-group', this.var_default_search_payload)\r\n                .then((res) => {\r\n                    this.adGroups = res.data.list;\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n\r\n        // GET AD_LOCATION_TYPES\r\n        crudAndListsService\r\n            .searchList('directory/advertisement-location-types', this.var_default_search_payload)\r\n            .then((res) => {\r\n                this.adLocationTypes = res.data.list;\r\n                this.adLocationTypeSelected(this.editingItem.directoryAdvertisementLocationTypeId, true)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET AD_TYPES\r\n        crudAndListsService\r\n            .searchList('directory/advertisement-type', this.var_default_search_payload)\r\n            .then((res) => {\r\n                this.adTypes = res.data.list;\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET CONTRACTORS\r\n        await this.fetchContractors()\r\n\r\n        if (this.isByAgency) {\r\n            // GET AD_OBJECT_STATES\r\n            crudAndListsService\r\n                .searchListWithKeyword('directory/advertisement-object-state', this.var_default_search_payload)\r\n                .then((res) => {\r\n                    this.adObjectStates = res.data.list;\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n\r\n        if (!this.isModeCreate) {\r\n            this.contractorSelected(this.editingItem.contractorId)\r\n            this.findAndSetAdVolumeType()\r\n            this.getCoefficientValue(this.editingItem.addressDto.districtId, this.editingItem.directoryAdvertisementZoneId)\r\n            this.adSideSelected(this.editingItem.directoryTypeOfOutdoorAdvertisingToolId)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.col-form-label {\r\n    padding-top: 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n}\r\n\r\n.dz-remove {\r\n    display: inline-block !important;\r\n    width: 1.2em;\r\n    height: 1.2em;\r\n\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 5px;\r\n    z-index: 1000;\r\n\r\n    font-size: 1.2em !important;\r\n    line-height: 1em;\r\n\r\n    text-align: center;\r\n    font-weight: bold;\r\n    border: 1px solid gray !important;\r\n    border-radius: 1.2em;\r\n    color: gray;\r\n    background-color: white;\r\n    opacity: 0.5;\r\n}\r\n\r\n.dz-remove:hover {\r\n    text-decoration: none !important;\r\n    opacity: 1;\r\n}\r\n</style>"]}]}