{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\shared\\views\\components\\CreateFormDesignTypesByRegion.vue?vue&type=template&id=5164a6af&scoped=true&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\shared\\views\\components\\CreateFormDesignTypesByRegion.vue","mtime":1674799498062},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1667355356566},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}