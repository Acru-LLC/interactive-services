{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\views\\auth\\components\\ESigns.vue?vue&type=style&index=0&id=06e55c65&lang=scss&scoped=true&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\views\\auth\\components\\ESigns.vue","mtime":1675054786293},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1675061971809},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY2FyZCB7DQogIC13ZWJraXQtYm94LXNoYWRvdzogbm9uZTsNCiAgYm94LXNoYWRvdzogbm9uZTsNCn0NCg0KLmUtc2lnbnMtd3JhcHBlci1jYXJkIHsNCiAgLmNhcmQtdGl0bGUsDQogIGZvb3RlciB7DQogICAgcGFkZGluZzogMS4yNXJlbTsNCiAgfQ0KfQ0KDQouZS1zaWduLWNhcmQgew0KICAtd2Via2l0LWJveC1zaGFkb3c6IDByZW0gMC43NXJlbSAzcmVtIHJnYigxOCAzOCA2MyAvIDE1JSk7DQogIGJveC1zaGFkb3c6IDByZW0gMC43NXJlbSAzcmVtIHJnYigxOCAzOCA2MyAvIDE1JSk7DQp9DQo="},{"version":3,"sources":["ESigns.vue"],"names":[],"mappings":";AA0aA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ESigns.vue","sourceRoot":"src/shared/views/auth/components","sourcesContent":["<template>\r\n  <div>\r\n    <b-card class=\"e-signs-wrapper-card\">\r\n      <b-card-title>\r\n        <b-row>\r\n          <b-col md=\"4\" sm=\"12\">\r\n            <h4>{{ $t('auth.e_signatures') }}</h4>\r\n          </b-col>\r\n          <b-col md=\"5\" sm=\"12\">\r\n            <b-form-input v-model=\"SearchText\"\r\n                          size=\"sm\"\r\n                          :placeholder=\"$t('auth.e_sign_search')\"\r\n                          @input=\"debounceSearch\">\r\n              <template #append-content>\r\n                <i class=\"mdi mdi-search\"></i>\r\n              </template>\r\n            </b-form-input>\r\n          </b-col>\r\n          <b-col v-if=\"forLogin\" class=\"text-sm-end\" sm=\"3\">\r\n            <b-button class=\"btn btn-warning\" size=\"sm\" @click=\"$router.push({name: 'Login'})\">\r\n              {{ $t(\"actions.back\") }}\r\n            </b-button>\r\n          </b-col>\r\n        </b-row>\r\n      </b-card-title>\r\n      <b-card-body :style=\"forLogin ? {'max-height': '60vh', 'overflow': 'auto'} : ''\">\r\n        <div v-if=\"loading\">\r\n          <div style=\"position:absolute;left:0;top:0;bottom:0;right:0;background-color:rgb(255, 255, 255, 0.4);\">\r\n            <div style=\"position:absolute;bottom:50%;left:50%;transform:translateX(-50%);\">\r\n              <b-spinner color=\"success\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div v-else>\r\n          <div v-if=\"keysList.length === 0\">\r\n            <b-card md=\"12\" sm=\"12\">\r\n              <b-card-body>\r\n                <h1 class=\"text-center text-danger\">\r\n                  {{ $t('auth.no_e_signatures_found') }}\r\n                </h1>\r\n              </b-card-body>\r\n            </b-card>\r\n          </div>\r\n          <b-row v-else>\r\n            <b-col v-for=\"(item, index) in keysList\" :key=\"`signkey-${index}`\" :md=\"forLogin ? 6 : 4\" :sm=\"6\"\r\n                   :xl=\"forLogin ? 6 : 3\">\r\n              <b-card accent-color=\"primary\" body-class=\"p-0\" class=\"mr-3 mb-3 e-sign-card p-0\">\r\n                <b-card-title>{{ item.serialNumber }} - {{ item.CN }}</b-card-title>\r\n                <b-card-body>\r\n                  <b-row>\r\n                    <p class=\"ml-2\">\r\n                      <i class=\"mdi mdi-file-key-outline\" style=\"color: #556ee6; font-size: 2.5rem;\"/>\r\n                      <b>{{ $t('auth.certificate_number') }}</b>: {{ item.serialNumber }}\r\n                    </p>\r\n                  </b-row>\r\n                  <b-row>\r\n                    <p class=\"ml-2 mt-2\"><b>{{ $t('column.inn') }}</b>: {{ item.TIN }}</p>\r\n                  </b-row>\r\n                  <b-row>\r\n                    <p class=\"ml-2\"><b>{{ $t('column.fio') }}</b>: {{ item.CN }}</p>\r\n                  </b-row>\r\n                  <b-row>\r\n                    <p class=\"ml-2\"><b>{{ $t('auth.organisation') }}</b>: {{ item.O }}</p>\r\n                  </b-row>\r\n                  <b-row>\r\n                    <p class=\"ml-2\">\r\n                      <b class=\"small\">{{ $t('auth.certificate_validity_period') }}</b>:\r\n                      {{ getDateFormat(item.validFrom) }} - {{ getDateFormat(item.validTo) }}\r\n                    </p>\r\n                    <p></p>\r\n                  </b-row>\r\n                </b-card-body>\r\n                <footer class=\"d-flex justify-content-end\">\r\n                  <b v-if=\"item.expired\" class=\"text-danger\">\r\n                    {{ $t('auth.certificate_expired') }}\r\n                  </b>\r\n                  <button v-else-if=\"signSelectBtnDisabled\" class=\"btn btn-primary btn-sm\" disabled>\r\n                    {{ $t('auth.continue_with_this_signature') }}\r\n                  </button>\r\n                  <button v-else class=\"btn btn-primary btn-sm\" @click=\"openSignModal(item)\">\r\n                    {{ $t('auth.continue_with_this_signature') }}\r\n                  </button>\r\n                </footer>\r\n              </b-card>\r\n            </b-col>\r\n          </b-row>\r\n        </div>\r\n      </b-card-body>\r\n      <footer v-if=\"!forLogin\" class=\"d-flex justify-content-end\">\r\n        <button class=\"btn btn-warning\" @click=\"$router.push({name: 'Login'})\">\r\n          {{ $t(\"actions.back\") }}\r\n        </button>\r\n      </footer>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HelperService from \"@/shared/services/auth.service\";\r\nimport AuthService from \"@/shared/services/auth.service\";\r\nimport AppSettings from \"@/settings\";\r\n\r\nvar EIMZO_MAJOR = 3;\r\nvar EIMZO_MINOR = 37;\r\nconst errorCAPIWS = 'Ошибка соединения с E-IMZO. Возможно у вас не установлен модуль E-IMZO или Браузер E-IMZO.';\r\nconst errorBrowserWS = 'Браузер не поддерживает технологию WebSocket. Установите последнюю версию браузера.';\r\nconst errorUpdateApp = 'ВНИМАНИЕ !!! Установите новую версию приложения E-IMZO или Браузера E-IMZO.<br /><a href=\"https://e-imzo.uz/main/downloads/\" role=\"button\">Скачать ПО E-IMZO</a>';\r\nconst errorWrongPassword = 'Пароль неверный.';\r\nexport default {\r\n  props: {\r\n    forLogin: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dataToSign: {\r\n      default: () => {\r\n      }\r\n    }\r\n  },\r\n  name: \"ESigns\",\r\n  data() {\r\n    return {\r\n      signSelectBtnDisabled: false,\r\n      openConfirmModal: false,\r\n      signModal: false,\r\n      SearchText: '',\r\n      alertShow: false,\r\n      alertMsg: '',\r\n      alertType: '',\r\n      dataToSignIfNot: {},\r\n      publicPath: process.env.BASE_URL,\r\n      Invoice: {},\r\n      pkcs7: null,\r\n      signByImzoText: null,\r\n      vo: null,\r\n      keysList: [],\r\n      fullKeyList: [],\r\n      alertMessage: null,\r\n      showMessage: false,\r\n      currentAlertCounter: 5,\r\n      loading: false,\r\n      confirmDialog: false,\r\n      isYur: null,\r\n      currentItem: null,\r\n      modalTitle: null,\r\n      loadingButton: false,\r\n      AppSettings: AppSettings\r\n    }\r\n  },\r\n  methods: {\r\n    debounceSearch(event) {\r\n      let vm = this;\r\n\r\n      clearTimeout(vm.debounce);\r\n      vm.debounce = setTimeout(() => {\r\n        vm.keyFilter(event);\r\n      }, 500);\r\n    },\r\n    keyFilter(text) {\r\n      let value = text.toUpperCase();\r\n      if (value) {\r\n        this.keysList = this.fullKeyList.filter((el) => {\r\n          if (\r\n              el.CN.includes(value) ||\r\n              el.O.includes(value) ||\r\n              el.T.includes(value) ||\r\n              el.TIN.includes(value) ||\r\n              el.UID.includes(value) ||\r\n              el.name.includes(value) ||\r\n              el.serialNumber.includes(value)\r\n          ) {\r\n            return el;\r\n          }\r\n        });\r\n      } else {\r\n        this.keysList = this.fullKeyList;\r\n      }\r\n    },\r\n    async signByEimzo() {\r\n      this.loadingButton = true;\r\n      let vm = this;\r\n      let data = null\r\n      if (this.dataToSign && this.dataToSign.key) {\r\n        data = JSON.stringify({ key: this.dataToSign.key, inn: this.dataToSign.inn })\r\n        // data = JSON.stringify(this.dataToSign)\r\n      } else if (this.dataToSignIfNot && this.dataToSignIfNot.key) {\r\n        data = JSON.stringify({\r\n          key: this.dataToSignIfNot.key,\r\n          PNFL: this.dataToSignIfNot.PNFL,\r\n          TIN: this.dataToSignIfNot.TIN,\r\n          INN: this.dataToSignIfNot.INN,\r\n        })\r\n        // data = JSON.stringify(this.dataToSignIfNot)\r\n      }\r\n      // var data = JSON.stringify((this.dataToSign && this.dataToSign.key) ? { key: this.dataToSign.key, inn: this.dataToSign.inn } : (this.dataToSignIfNot && this.dataToSignIfNot.key) ? { key: this.dataToSignIfNot.key, inn: this.dataToSignIfNot.inn } : { key: null, inn: null });\r\n      const promise = new Promise((resolve, reject) => {\r\n        EIMZOClient.loadKey(vm.currentItem, function (id) {\r\n          EIMZOClient.createPkcs7(id, data, null, function (pkcs7) {\r\n            resolve(pkcs7);\r\n          }, function (e, r) {\r\n            reject('error');\r\n            vm.loadingButton = false;\r\n            if (r) {\r\n              if (r.indexOf(\"BadPaddingException\") !== -1) {\r\n                vm.$toast(errorWrongPassword, { type: 'error' });\r\n              }\r\n            } else {\r\n              document.getElementById('keyId').innerHTML = '';\r\n              vm.$toast(errorBrowserWS, { type: 'error' });\r\n            }\r\n            if (e) vm.wsError(e);\r\n          });\r\n        }, function (e, r) {\r\n          reject('error');\r\n          vm.loadingButton = false;\r\n          if (r) {\r\n            if (r.indexOf(\"BadPaddingException\") !== -1) {\r\n              vm.$toast(errorWrongPassword, { type: 'error' });\r\n            } else {\r\n              vm.$toast(r, { type: 'error' });\r\n            }\r\n          } else {\r\n            vm.$toast(errorBrowserWS, { type: 'error' });\r\n          }\r\n          if (e) vm.wsError(e);\r\n        });\r\n      });\r\n      promise.then(\r\n          success => {\r\n            vm.$emit('sign', success, vm.dataToSignIfNot.TIN, vm.dataToSignIfNot.PNFL, vm.dataToSignIfNot.INN);\r\n          },\r\n          error => {\r\n            console.log(error)\r\n          },\r\n      ).finally(() => {\r\n        vm.confirmDialog = false;\r\n        vm.loadingButton = false;\r\n      })\r\n    },\r\n    async continueRegistration(isConfirmed) {\r\n      if (isConfirmed) {\r\n        if (this.forLogin) {\r\n          await this.signByEimzo()\r\n        } else {\r\n          this.signSelectBtnDisabled = true\r\n          const isYur = !!this.currentItem.T && this.currentItem.TIN !== this.currentItem.UID;\r\n          AuthService.isOrgRegistered(this.currentItem.TIN, this.currentItem.PINFL,this.currentItem.UID, isYur, this.currentItem.T)\r\n            .then((response) => {\r\n              let payload = {\r\n                responseData: response.data,\r\n                currentItem: this.currentItem\r\n              }\r\n              this.$emit(\"keySelected\", payload);\r\n            })\r\n            .catch((e) => {\r\n              console.log(e)\r\n            })\r\n            .finally((e) => {\r\n              this.signSelectBtnDisabled = false\r\n              // this.hideModal(\"openConfirmModal\");\r\n            });\r\n      }\r\n      }\r\n    },\r\n    async appLoad() {\r\n      let vm = this;\r\n      EIMZOClient.API_KEYS = AppSettings.api_keys;\r\n      await EIMZOClient.checkVersion(async function (major, minor) {\r\n        var newVersion = EIMZO_MAJOR * 100 + EIMZO_MINOR;\r\n        var installedVersion = parseInt(major) * 100 + parseInt(minor);\r\n        if (installedVersion < newVersion) {\r\n          // vm.loading = false;\r\n          vm.$toast(errorUpdateApp, { type: 'error' });\r\n        } else {\r\n          await EIMZOClient.installApiKeys(async function () {\r\n            await vm.uiLoadKeys()\r\n            // vm.loading = false\r\n          }, function (e, r) {\r\n            vm.loading = false;\r\n            if (r) {\r\n              vm.$toast(r, { type: 'error' });\r\n            } else {\r\n              vm.wsError(e, vm.$t('actions.error'), 'error');\r\n            }\r\n          });\r\n        }\r\n      }, function (e, r) {\r\n        vm.loading = false;\r\n        if (r) {\r\n          vm.$toast(r, { type: 'error' });\r\n        } else {\r\n          vm.$toast(vm.$t('auth.is_e_signature_installed'), { type: 'error' });\r\n        }\r\n      });\r\n      return 1;\r\n    },\r\n    async openSignModal(item, isYur) {\r\n      this.currentItem = item;\r\n      this.isYur = isYur;\r\n      this.modalTitle = item.serialNumber + \" - \" + item.CN;\r\n      if (!this.dataToSign || !this.dataToSign.key) {\r\n        await AuthService.getKeyForLoginSign(item.TIN, item.UID, item.PINFL).then(response => {\r\n          this.dataToSignIfNot = response.data;\r\n        })\r\n      }\r\n      this.$bvModal.msgBoxConfirm(this.forLogin ? <h5 class=\"mb-0\">{this.$t('auth.continue_login_with_this_signature')}</h5> : <h5 class=\"mb-0\">{this.$t('auth.continue_reg_with_this_signature')}</h5>, {\r\n        okTitle: this.$t('actions.confirm'),\r\n        cancelTitle: this.$t('actions.cancel')\r\n      })\r\n          .then(async value => {\r\n            if (value) {\r\n              await this.continueRegistration(value)\r\n            }\r\n          })\r\n          .catch(err => {\r\n          })\r\n    },\r\n    hideModal(modal) {\r\n      this.$data[modal] = false;\r\n    },\r\n    async timestamper(signature_hex, callback, fail) {\r\n\r\n      try {\r\n        await HelperService.getTimestamper(signature_hex).then(response => {\r\n          callback(response.data.data)\r\n        });\r\n      } catch (e) {\r\n        if (e.request) {\r\n          fail(e.request.response);\r\n        }\r\n      }\r\n\r\n    },\r\n    getDateFormat(date) {\r\n      let data = new Date(date);\r\n      let month = data.getMonth() + 1\r\n      return data.getDate().toString() + \".\" + (month <= 9 ? \"0\" + month : month).toString() + \".\" + data.getFullYear().toString();\r\n    },\r\n    async getImzo() {\r\n      let vm = this;\r\n      EIMZOClient.installApiKeys(function () {\r\n        vm.uiLoadKeys();\r\n      }, function (e, r) {\r\n        if (r) {\r\n          vm.$toast(r, { type: 'error' });\r\n        } else {\r\n          vm.wsError(e);\r\n        }\r\n      });\r\n    },\r\n    async uiCreateItem(itmkey, vo) {\r\n      let vm = this;\r\n      var now = new Date();\r\n      vo.expired = dates.compare(now, vo.validTo) > 0;\r\n      var itm = document.createElement(\"option\");\r\n      itm.value = itmkey;\r\n      itm.text = vo.CN;\r\n      if (!vo.expired) {\r\n\r\n      } else {\r\n        itm.style.color = 'gray';\r\n        itm.text = itm.text + ' (срок истек)';\r\n      }\r\n      vm.keysList.push(vo);\r\n      vm.fullKeyList.push(vo);\r\n      itm.setAttribute('vo', JSON.stringify(vo));\r\n      itm.setAttribute('id', itmkey);\r\n      return itm;\r\n    },\r\n    async uiLoadKeys() {\r\n      let vm = this;\r\n      await EIMZOClient.listAllUserKeys(async function (o, i) {\r\n        return \"itm-\" + o.serialNumber + \"-\" + i;\r\n      }, async function (itemId, v) {\r\n        return await vm.uiCreateItem(itemId, v)\r\n      }, function (items, firstId) {\r\n        vm.keysList = vm.fullKeyList;\r\n        //vm.uiFillCombo(items);\r\n        //vm.uiComboSelect(firstId);\r\n      }, function (e, r) {\r\n        vm.$toast(errorCAPIWS + \" : \" + e, { type: 'error' });\r\n      });\r\n      return 1\r\n    },\r\n    async wsError() {\r\n      if (e) {\r\n        this.$toast(errorCAPIWS + \" : \" + e, { type: 'error' });\r\n      } else {\r\n        this.$toast(errorBrowserWS, { type: 'error' });\r\n      }\r\n    },\r\n    uiComboSelect(itm) {\r\n      if (itm) {\r\n        var id = document.getElementById(itm);\r\n        id.setAttribute('selected', 'true');\r\n      }\r\n    },\r\n    cbChanged(c) {\r\n      document.getElementById('keyId').innerHTML = '';\r\n    },\r\n    uiClearCombo() {\r\n      var combo = document.getElementById('user_eimzo_keys');\r\n      combo.length = 0;\r\n    },\r\n    uiFillCombo(items) {\r\n      var combo = document.getElementById('user_eimzo_keys');\r\n      this.itemList = items;\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    ImgUser: () => require(\"@/assets/images/users/user.png\"),\r\n    ImgCompany: () => require(\"@/assets/images/users/company.png\"),\r\n  },\r\n  created() {\r\n    this.loading = true;\r\n    this.appLoad()\r\n        .catch(e => {\r\n          this.loading = false\r\n        })\r\n    this.loading = false;\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.card {\r\n  -webkit-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n\r\n.e-signs-wrapper-card {\r\n  .card-title,\r\n  footer {\r\n    padding: 1.25rem;\r\n  }\r\n}\r\n\r\n.e-sign-card {\r\n  -webkit-box-shadow: 0rem 0.75rem 3rem rgb(18 38 63 / 15%);\r\n  box-shadow: 0rem 0.75rem 3rem rgb(18 38 63 / 15%);\r\n}\r\n</style>"]}]}