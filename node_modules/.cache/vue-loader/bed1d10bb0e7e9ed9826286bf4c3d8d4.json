{"remainingRequest":"D:\\ACRU\\my-fairtech\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ACRU\\my-fairtech\\src\\modules\\policy\\Index.vue?vue&type=template&id=27b7bbf6&scoped=true","dependencies":[{"path":"D:\\ACRU\\my-fairtech\\src\\modules\\policy\\Index.vue","mtime":1720792918278},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719222280288},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719222280288},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\babel-loader\\lib\\index.js","mtime":1719222279696},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1719222284894},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719222280288},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\vue-loader\\lib\\index.js","mtime":1719222284893}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}