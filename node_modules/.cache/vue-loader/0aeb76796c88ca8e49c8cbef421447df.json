{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\management\\modules\\roles\\UpdateRolePermissions.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\management\\modules\\roles\\UpdateRolePermissions.vue","mtime":1674799497592},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpjb25zdCBNQUlOX0FQSV9VUkwgPSAncm9sZScNCi8qDQoqIFlPVSBNVVNUIFNFTkQge3sgTUFJTl9BUElfVVJMIH19IFRPIENSVURfU0VSVklDRSAqLw0KaW1wb3J0IGNydWRBbmRMaXN0c1NlcnZpY2UgZnJvbSAiQC9zaGFyZWQvc2VydmljZXMvY3J1ZF9hbmRfbGlzdC5zZXJ2aWNlIg0KaW1wb3J0IGhlbHBlclNlcnZpY2UgZnJvbSAiQC9zaGFyZWQvc2VydmljZXMvaGVscGVyLnNlcnZpY2UiDQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogIlVwZGF0ZVJvbGVQZXJtaXNzaW9ucyIsDQogIC8qDQogICogQ09NUE9ORU5UUyAqLw0KICBjb21wb25lbnRzOiB7fSwNCiAgLyoNCiAgKiBEQVRBICovDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGVkaXRpbmdJdGVtOiB7fSwNCiAgICAgIHBlcm1zTGlzdEJ5Um9sZUlkOiB7fQ0KICAgIH0NCiAgfSwNCiAgLyoNCiAgKiBDT01QVVRFRCAqLw0KICBjb21wdXRlZDogew0KICAgIGlzTW9kZUNyZWF0ZSgpIHsNCiAgICAgIHJldHVybiB0aGlzLiRyb3V0ZS5uYW1lID09PSAnQ3JlYXRlUm9sZScNCiAgICB9LA0KICAgIGNvbXB1dGVkT2JzZXJ2ZXIoKSB7DQogICAgICByZXR1cm4gdGhpcy4kcmVmcy5vYnNlcnZlcg0KICAgIH0NCiAgfSwNCiAgLyoNCiAgKiBNRVRIT0RTICovDQogIG1ldGhvZHM6IHsNCiAgICBhZGRPclJlbW92ZUFsbChwZXJtVHlwZSkgew0KICAgICAgbGV0IGZvdW5kUGVybU9iamVjdCA9IHRoaXMucGVybXNMaXN0QnlSb2xlSWQuZmluZChwZXJtID0+IHBlcm1UeXBlID09IHBlcm0uZm9yVHlwZS50eXBlKQ0KICAgICAgbGV0IHBlcm1JZHNPZlBlcm1UeXBlID0gW10NCiAgICAgIGlmIChmb3VuZFBlcm1PYmplY3QpIHsNCiAgICAgICAgcGVybUlkc09mUGVybVR5cGUgPSBmb3VuZFBlcm1PYmplY3QubGlzdC5tYXAoZWwgPT4gew0KICAgICAgICAgIHJldHVybiBlbC5pZA0KICAgICAgICB9KQ0KICAgICAgfQ0KICAgICAgbGV0IGFsbEZvdW5kZWQgPSBwZXJtSWRzT2ZQZXJtVHlwZS5ldmVyeShhaSA9PiB0aGlzLmVkaXRpbmdJdGVtLnBlcm1pc3Npb25JZHMuaW5jbHVkZXMoYWkpKTsNCiAgICAgIGlmIChhbGxGb3VuZGVkKSB7DQogICAgICAgIHRoaXMuZWRpdGluZ0l0ZW0ucGVybWlzc2lvbklkcyA9IHRoaXMuZWRpdGluZ0l0ZW0ucGVybWlzc2lvbklkcy5maWx0ZXIoZnVuY3Rpb24gKGVsKSB7DQogICAgICAgICAgcmV0dXJuICFwZXJtSWRzT2ZQZXJtVHlwZS5pbmNsdWRlcyhlbCk7DQogICAgICAgIH0pOw0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgcGVybUlkc09mUGVybVR5cGUuZm9yRWFjaChpZFRvQWRkID0+IHsNCiAgICAgICAgICBsZXQgaW5kZXggPSB0aGlzLmVkaXRpbmdJdGVtLnBlcm1pc3Npb25JZHMuZmluZEluZGV4KHggPT4geCA9PT0gaWRUb0FkZCk7DQogICAgICAgICAgaWYgKGluZGV4ID09PSAtMSkgew0KICAgICAgICAgICAgdGhpcy5lZGl0aW5nSXRlbS5wZXJtaXNzaW9uSWRzLnB1c2goaWRUb0FkZCkNCiAgICAgICAgICB9DQogICAgICAgIH0pDQogICAgICB9DQogICAgfSwNCiAgICBhc3luYyBnaXZlUGVybWlzc2lvbnNUb1JvbGUoKSB7DQogICAgICBhd2FpdCBoZWxwZXJTZXJ2aWNlLnVwZGF0ZVJvbGVQZXJtaXNzaW9uc0J5SWQodGhpcy5lZGl0aW5nSXRlbSwgdHJ1ZSkNCiAgICAgICAgICAudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgdGhpcy4kcm91dGVyLmdvKC0xKQ0KICAgICAgICAgICAgdGhpcy4kdG9hc3QodGhpcy4kdCgnbWVzc2FnZXMuc2F2ZWRfc3VjY2Vzc2Z1bGx5JyksIHt0eXBlOiAnc3VjY2Vzcyd9KTsNCiAgICAgICAgICB9KQ0KICAgICAgICAgIC5jYXRjaChlID0+IHsNCiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpDQogICAgICAgICAgfSkNCiAgICB9LA0KICAgIGFzeW5jIGNoYW5nZVBlcm1zT2ZSb2xlKGl0ZW0pIHsNCiAgICAgIHRoaXMubG9hZGluZyA9IHRydWU7DQogICAgICB0aGlzLmRpYWxvZ0ZvclBlcm1zID0gdHJ1ZTsNCiAgICAgIHRoaXMuZWRpdGluZ0luZGV4ID0gdGhpcy5yb2xlc0xpc3QuaW5kZXhPZihpdGVtKTsNCiAgICAgIHRoaXMuZWRpdGluZ0l0ZW0gPSBPYmplY3QuYXNzaWduKHt9LCBpdGVtKTsNCiAgICAgIHRoaXMuY3VycmVudFJvbGVQZXJtSWRzID0gWy4uLml0ZW0ucGVybWlzc2lvbklkc107DQogICAgICBhd2FpdCB0aGlzLmdldFBlcm1pc3Npb25zTGlzdEJ5Um9sZUlkKGl0ZW0uaWQpOw0KICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UNCiAgICB9LA0KICB9LA0KICAvKg0KICAqIENSRUFURUQgKi8NCiAgYXN5bmMgY3JlYXRlZCgpIHsNCiAgICAvLyBHRVQgQ1VSUkVOVCBST0xFDQogICAgYXdhaXQgY3J1ZEFuZExpc3RzU2VydmljZS5nZXRCeUlkKE1BSU5fQVBJX1VSTCwgdGhpcy4kcm91dGUucGFyYW1zLmlkLCB0cnVlKQ0KICAgICAgICAudGhlbihyZXMgPT4gew0KICAgICAgICAgIHRoaXMuZWRpdGluZ0l0ZW0gPSByZXMuZGF0YQ0KICAgICAgICB9KQ0KICAgICAgICAuY2F0Y2goZSA9PiB7DQogICAgICAgICAgY29uc29sZS5sb2coZSkNCiAgICAgICAgfSkNCg0KICAgIC8vIEdFVCBQRVJNSVNTSU9OU19MSVNUIEJZIFJPTEUgSUQNCiAgICBhd2FpdCBoZWxwZXJTZXJ2aWNlLnBlcm1pc3Npb25zTGlzdEJ5Um9sZUlkKHRoaXMuJHJvdXRlLnBhcmFtcy5pZCwgdHJ1ZSkNCiAgICAgICAgLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICB0aGlzLnBlcm1zTGlzdEJ5Um9sZUlkID0gcmVzLmRhdGENCiAgICAgICAgfSkNCiAgICAgICAgLmNhdGNoKGUgPT4gew0KICAgICAgICAgIGNvbnNvbGUubG9nKGUpDQogICAgICAgIH0pDQogIH0NCn0NCg=="},{"version":3,"sources":["UpdateRolePermissions.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpdateRolePermissions.vue","sourceRoot":"src/modules/management/modules/roles","sourcesContent":["<template>\r\n  <base-create-or-update-wrapper\r\n      @save=\"givePermissionsToRole\"\r\n      has-save-suspend\r\n      :custom-title=\"`${editingItem.name ? editingItem.name : ''} (${$t('submodules.roles.permissions')})`\"\r\n  >\r\n    <b-container\r\n        fluid\r\n        class=\"perm-group-wrapper\"\r\n        v-for=\"(permType, index) in permsListByRoleId\"\r\n        :key=\"`permCardForRole ${permType}-${index}`\"\r\n    >\r\n      <b-row>\r\n        <b-col\r\n            cols=\"12\"\r\n            class=\"form-check perm-group-title\"\r\n        >\r\n          <mark class=\"perm-group-title-icon\"><i class=\"fa fa-check \"></i></mark>\r\n\r\n          <span\r\n              @click=\"addOrRemoveAll(permType.forType.type)\"\r\n              class=\"form-check-label perm-group-title-label\"\r\n          >\r\n                        <mark>{{\r\n                            getName({\r\n                              nameRu: permType.forType.typeNameRu,\r\n                              nameLt: permType.forType.typeNameLt,\r\n                              nameUz: permType.forType.typeNameUz,\r\n                            }) ? getName({\r\n                              nameRu: permType.forType.typeNameRu,\r\n                              nameLt: permType.forType.typeNameLt,\r\n                              nameUz: permType.forType.typeNameUz,\r\n                            }) : permType.forType.type\r\n                          }}</mark>\r\n                    </span>\r\n        </b-col>\r\n\r\n        <b-col\r\n            cols=\"12\"\r\n            class=\"perm-group-single-perm mt-3\"\r\n        >\r\n          <b-row>\r\n            <b-col\r\n                class=\"py-2\"\r\n                cols=\"3\"\r\n                v-for=\"(list, i) in permType.list\"\r\n                :key=\"`perm-checkbox-${i}`\"\r\n            >\r\n              <div class=\"form-check\">\r\n                <input\r\n                    v-model=\"editingItem.permissionIds\"\r\n                    class=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    :id=\"'permId' + list.id\"\r\n                    :value=\"list.id\"\r\n                />\r\n                <label\r\n                    class=\"form-check-label font-weight-normal\"\r\n                    :for=\"'permId' + list.id\"\r\n                >\r\n                  {{\r\n                    getName({\r\n                      nameRu: list.name_ru,\r\n                      nameLt: list.name_lt,\r\n                      nameUz: list.name_uz,\r\n                    })\r\n                  }}\r\n                </label>\r\n              </div>\r\n            </b-col>\r\n          </b-row>\r\n          <!-- <div class=\"form-check\">\r\n          </div> -->\r\n        </b-col>\r\n      </b-row>\r\n    </b-container>\r\n  </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'role'\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport helperService from \"@/shared/services/helper.service\"\r\n\r\nexport default {\r\n  name: \"UpdateRolePermissions\",\r\n  /*\r\n  * COMPONENTS */\r\n  components: {},\r\n  /*\r\n  * DATA */\r\n  data() {\r\n    return {\r\n      editingItem: {},\r\n      permsListByRoleId: {}\r\n    }\r\n  },\r\n  /*\r\n  * COMPUTED */\r\n  computed: {\r\n    isModeCreate() {\r\n      return this.$route.name === 'CreateRole'\r\n    },\r\n    computedObserver() {\r\n      return this.$refs.observer\r\n    }\r\n  },\r\n  /*\r\n  * METHODS */\r\n  methods: {\r\n    addOrRemoveAll(permType) {\r\n      let foundPermObject = this.permsListByRoleId.find(perm => permType == perm.forType.type)\r\n      let permIdsOfPermType = []\r\n      if (foundPermObject) {\r\n        permIdsOfPermType = foundPermObject.list.map(el => {\r\n          return el.id\r\n        })\r\n      }\r\n      let allFounded = permIdsOfPermType.every(ai => this.editingItem.permissionIds.includes(ai));\r\n      if (allFounded) {\r\n        this.editingItem.permissionIds = this.editingItem.permissionIds.filter(function (el) {\r\n          return !permIdsOfPermType.includes(el);\r\n        });\r\n      } else {\r\n        permIdsOfPermType.forEach(idToAdd => {\r\n          let index = this.editingItem.permissionIds.findIndex(x => x === idToAdd);\r\n          if (index === -1) {\r\n            this.editingItem.permissionIds.push(idToAdd)\r\n          }\r\n        })\r\n      }\r\n    },\r\n    async givePermissionsToRole() {\r\n      await helperService.updateRolePermissionsById(this.editingItem, true)\r\n          .then(res => {\r\n            this.$router.go(-1)\r\n            this.$toast(this.$t('messages.saved_successfully'), {type: 'success'});\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    async changePermsOfRole(item) {\r\n      this.loading = true;\r\n      this.dialogForPerms = true;\r\n      this.editingIndex = this.rolesList.indexOf(item);\r\n      this.editingItem = Object.assign({}, item);\r\n      this.currentRolePermIds = [...item.permissionIds];\r\n      await this.getPermissionsListByRoleId(item.id);\r\n      this.loading = false\r\n    },\r\n  },\r\n  /*\r\n  * CREATED */\r\n  async created() {\r\n    // GET CURRENT ROLE\r\n    await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, true)\r\n        .then(res => {\r\n          this.editingItem = res.data\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n\r\n    // GET PERMISSIONS_LIST BY ROLE ID\r\n    await helperService.permissionsListByRoleId(this.$route.params.id, true)\r\n        .then(res => {\r\n          this.permsListByRoleId = res.data\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n::v-deep.perm-group-wrapper {\r\n  padding: 1rem;\r\n  border: solid 1px #cccccc;\r\n  border-radius: 1rem;\r\n  margin-top: 3rem;\r\n\r\n  .perm-group-title {\r\n    padding: 0.5rem;\r\n    margin-top: -2.5rem;\r\n    width: 30%;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    font-size: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #f5f5f5;\r\n    justify-content: center;\r\n    border-radius: 1rem;\r\n\r\n    .perm-group-title-icon {\r\n      background-color: #f5f5f5;\r\n\r\n      i {\r\n        color: green;\r\n      }\r\n    }\r\n\r\n    .perm-group-title-label {\r\n      color: green;\r\n\r\n      mark {\r\n        background-color: #f5f5f5;\r\n      }\r\n    }\r\n  }\r\n\r\n  .perm-group-single-perm {\r\n    font-size: 0.9rem;\r\n  }\r\n}\r\n</style>"]}]}