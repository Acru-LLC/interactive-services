{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\reestr-contractors\\modules\\natural\\Index.vue?vue&type=style&index=0&id=65183906&scoped=true&lang=scss&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\reestr-contractors\\modules\\natural\\Index.vue","mtime":1674799496522},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1667355361315},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQo6OnYtZGVlcCAuY3Vyc29yUG9pbnRlciB7DQogICAgY3Vyc29yOiBwb2ludGVyOw0KICAgICY6aG92ZXIgew0KICAgICAgICBzdHJvbmcgew0KICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7DQogICAgICAgIH0NCiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7DQogICAgfQ0KfQ0KLmEtdGFnLXVuZGVybGluZS1ob3ZlciB7DQogICAgJjpob3ZlciB7DQogICAgICAgICogew0KICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgIWltcG9ydGFudDsNCiAgICAgICAgfQ0KICAgIH0NCn0NCg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappingskjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/modules/reestr-contractors/modules/natural","sourcesContent":["<template>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"col-md-12 text-center\">\r\n            <div v-if=\"isNatural\" class=\"h4 mb-4 d-inline-block\">{{ $t('submodules.reestr_contractors.natural_reestr_title') }}</div>\r\n            <div v-else class=\"h4 mb-4 d-inline-block\">{{ $t('submodules.reestr_contractors.dominant_reestr_title') }}</div>\r\n          </div>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"row mb-2 align-items-center\">\r\n                        <div class=\"col-sm-4\">\r\n                            <!-- REGIONS -->\r\n                            <!-- DISABLED STATE -->\r\n                            <BaseMultiselectWithValidation\r\n                                v-if=\"localMainPageStoredData.isRepublic && $can('republic', 'for reestr')\"\r\n                                not-required\r\n                                disabled\r\n                                :value=\"null\"\r\n                                :options=\"regions.map(e => e.regionId)\"\r\n                                only-form-element\r\n                                :custom-label=\"customLabelRegion\"\r\n                                :placeholder=\"$t('column.region')\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                            <BaseMultiselectWithValidation\r\n                                v-else\r\n                                class=\"required\"\r\n                                rules=\"required\"\r\n                                v-model=\"localMainPageStoredData.regionId\"\r\n                                :options=\"regions.map(e => e.regionId)\"\r\n                                @input=\"regionSelected\"\r\n                                only-form-element\r\n                                :allow-empty=\"false\"\r\n                                :custom-label=\"customLabelRegion\"\r\n                                :placeholder=\"$t('column.region')\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                        </div>\r\n                        <!-- IS_REPUBLIC CHECKBOX -->\r\n                        <div\r\n                            v-if=\"$can('republic', 'for reestr')\"\r\n                            class=\"col-sm-2\"\r\n                        >\r\n                            <div class=\"form-check form-check-right\">\r\n                                <input\r\n                                    v-model=\"localMainPageStoredData.isRepublic\"\r\n                                    class=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    id=\"formCheckIsLegal\"\r\n                                />\r\n                                <label\r\n                                    class=\"form-check-label font-weight-normal\"\r\n                                    for=\"formCheckIsLegal\"\r\n                                >\r\n                                    {{ $t('column.is_republic') }}\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div :class=\"$can('republic', 'for reestr') ? 'col-sm-6' : 'col-sm-8'\">\r\n                            <div class=\"text-sm-end\">\r\n                                <b-btn\r\n                                    v-if=\"canAddToReestr\"\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-success btn-rounded mb-2 me-2\"\r\n                                    :to=\"isNatural ? {name: 'CreateNaturalContractorReestr'} : isDominant ? {name: 'CreateDominantContractorReestr'} : '#'\"\r\n                                >\r\n                                    <i class=\"mdi mdi-plus me-1\"></i> {{ $t('actions.add_to_reestr') }}\r\n                                </b-btn>\r\n\r\n                                <b-btn\r\n                                    v-if=\"canRemoveFromReestr\"\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-danger btn-rounded mb-2 me-2\"\r\n                                    :to=\"isNatural ? {name: 'CreateRemoveDocNaturalContractorReestr'} : isDominant ? {name: 'CreateRemoveDocDominantContractorReestr'} : '#'\"\r\n                                >\r\n                                    <i class=\"mdi mdi-delete me-1\"></i> {{ $t('actions.remove_from_reestr') }}\r\n                                </b-btn>\r\n                            </div>\r\n                        </div>\r\n                        <!-- end col-->\r\n                    </div>\r\n                    <!-- Table data -->\r\n                    <b-table\r\n                        :items=\"tableItems\"\r\n                        :fields=\"tableFields\"\r\n                        @row-clicked=\"rowClicked\"\r\n                        :busy=\"loadingTableItems\"\r\n                        id=\"my-table\"\r\n                        class=\"custom-b-table\"\r\n                        responsive\r\n                        striped\r\n                        bordered\r\n                        small\r\n                        hover\r\n                        show-empty\r\n                    >\r\n                        <!-- NUMBER OF ITEM -->\r\n                        <template #cell(index)=\"data\">\r\n                            <strong>{{ data.index + 1 }}</strong>\r\n                        </template>\r\n\r\n                        <!-- STATUS -->\r\n                        <template #cell(product_or_service_type)=\"data\">\r\n                            <strong>{{\r\n                                getName({\r\n                                    nameRu: data.item.typeNameRu,\r\n                                    nameLt: data.item.typeNameLt,\r\n                                    nameUz: data.item.typeNameUz,\r\n                                })\r\n                            }}</strong>\r\n                        </template>\r\n\r\n                        <!-- INNER TABLE FOR REESTR -->\r\n                        <template #row-details=\"row\">\r\n                            <b-table\r\n                                :items=\"row.item.reestr ? row.item.reestr : []\"\r\n                                :fields=\"reestrTableFields\"\r\n                                :busy=\"row.item.loadingInnerData\"\r\n                                bordered\r\n                                small\r\n                                hover\r\n                                show-empty\r\n                                striped\r\n                            >\r\n\r\n                                <!-- NUMBER OF ITEM -->\r\n                                <template #cell(index)=\"innerData\">\r\n                                    {{\r\n                                        innerData.index + 1\r\n                                    }}\r\n                                </template>\r\n\r\n                                <template #cell(contractorFullName)=\"innerData\">\r\n                                    <div class=\"d-flex align-items-center flex-wrap\">\r\n                                        <ul style=\"width: 100%;\">\r\n                                            <li\r\n                                                v-for=\"(el, index) in innerData.item.contractorsByDistrict\"\r\n                                                :key=\"`product-or-service-${index}`\"\r\n                                            >\r\n                                                <router-link\r\n                                                    v-if=\"!el.childCount\"\r\n                                                    :to=\"{name: (isNatural && localMainPageStoredData.isRepublic) ? 'ReestrHistoryForRepublicContractorNatural' : isNatural ? 'ReestrHistoryForContractorNatural' : (isDominant && localMainPageStoredData.isRepublic) ? 'ReestrHistoryForRepublicContractorDominant' : isDominant ? 'ReestrHistoryForContractorDominant' : '#', params: {id: el.contractorId}}\"\r\n                                                    class=\"a-tag-underline-hover\"\r\n                                                >\r\n                                                    <b-row class=\"my-1\">\r\n                                                        <b-col cols=\"8\">\r\n                                                            <strong>{{\r\n                                                                el.contractorFullName\r\n                                                            }} - <i>{{ el.contractorInn }}</i></strong>\r\n                                                        </b-col>\r\n                                                        <b-col\r\n                                                            cols=\"4\"\r\n                                                            v-if=\"el.docStatusCode == 'PENDING'\"\r\n                                                        >\r\n                                                            <b-badge\r\n                                                                style=\"font-size: .7rem\"\r\n                                                                class=\"ml-5 a-tag-underline-hover\"\r\n                                                                :variant=\"el.docStatusCode == 'PENDING' ? 'warning' : el.docStatusCode == 'READY' ? 'success' : ''\"\r\n                                                            >\r\n                                                                {{ \r\n                                                                    getName({\r\n                                                                        nameRu: el.docStatusNameRu,\r\n                                                                        nameLt: el.docStatusNameLt,\r\n                                                                        nameUz: el.docStatusNameUz,\r\n                                                                    })\r\n                                                                }}\r\n                                                            </b-badge>\r\n                                                        </b-col>\r\n                                                    </b-row>\r\n                                                </router-link>\r\n                                                <span\r\n                                                    v-else\r\n                                                    @click=\"parentContractorClicked(el, el.contractorInn, row, innerData.item)\"\r\n                                                    class=\"cursorPointer\"\r\n                                                >\r\n                                                    <strong v-if=\"isDominant\">\r\n                                                        {{ $t('column.group_of_individuals') }}:\r\n                                                    </strong>\r\n                                                    {{\r\n                                                    el.contractorFullName\r\n                                                }} - <i>{{ el.contractorInn }}</i>\r\n                                                    <strong>({{el.childCount}})</strong>\r\n                                                </span>\r\n                                                <div\r\n                                                    v-if=\"el.showChildren\"\r\n                                                    class=\"d-flex align-items-center flex-wrap\"\r\n                                                >\r\n                                                    <ul style=\"width: 100%;\">\r\n                                                        <li\r\n                                                            v-for=\"(el2, index2) in el.children\"\r\n                                                            :key=\"`contractor-children-${index2}`\"\r\n                                                        >\r\n                                                            <router-link\r\n                                                                :to=\"{name: (isNatural && localMainPageStoredData.isRepublic) ? 'ReestrHistoryForRepublicContractorNatural' : isNatural ? 'ReestrHistoryForContractorNatural' : (isDominant && localMainPageStoredData.isRepublic) ? 'ReestrHistoryForRepublicContractorDominant' : isDominant ? 'ReestrHistoryForContractorDominant' : '#', params: {id: el2.id}}\"\r\n                                                                class=\"a-tag-underline-hover\"\r\n                                                            >\r\n                                                                <b-row class=\"my-1\">\r\n                                                                    <b-col cols=\"8\">\r\n                                                                        <strong>{{\r\n                                                                    el2.name\r\n                                                                }} - <i>{{ el2.inn }}</i></strong>\r\n                                                                    </b-col>\r\n                                                                    <b-col\r\n                                                                        cols=\"4\"\r\n                                                                        v-if=\"el2.docStatusCode == 'PENDING'\"\r\n                                                                    >\r\n                                                                        <b-badge\r\n                                                                            class=\"ml-5 a-tag-underline-hover\"\r\n                                                                            style=\"font-size: .7rem\"\r\n                                                                            :variant=\"el2.docStatusCode == 'PENDING' ? 'warning' : el2.docStatusCode == 'READY' ? 'success' : ''\"\r\n                                                                        >\r\n                                                                            {{ \r\n                                                                                getName({\r\n                                                                                    nameRu: el2.docStatusNameRu,\r\n                                                                                    nameLt: el2.docStatusNameLt,\r\n                                                                                    nameUz: el2.docStatusNameUz,\r\n                                                                                })\r\n                                                                            }}\r\n                                                                        </b-badge>\r\n                                                                    </b-col>\r\n                                                                </b-row>\r\n                                                            </router-link>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                                <div\r\n                                                    v-if=\"!localMainPageStoredData.isRepublic\"\r\n                                                    class=\"d-flex align-items-center flex-wrap\"\r\n                                                >\r\n                                                    <ul>\r\n                                                        <li\r\n                                                            v-for=\"(el2, index2) in el.districts\"\r\n                                                            :key=\"`product-or-service-district-${index2}`\"\r\n                                                        >{{\r\n                                                            getName({\r\n                                                            nameRu: el2.districtNameRu,\r\n                                                            nameLt: el2.districtNameLt,\r\n                                                            nameUz: el2.districtNameUz,\r\n                                                            })\r\n                                                        }}</li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </template>\r\n\r\n                                <template #cell(productOrServices)=\"innerData\">\r\n                                    <strong>{{\r\n                                            getName({\r\n                                                nameRu: innerData.item.productOrServiceNameRu,\r\n                                                nameLt: innerData.item.productOrServiceNameLt,\r\n                                                nameUz: innerData.item.productOrServiceNameUz,\r\n                                                })\r\n                                        }}</strong>\r\n                                </template>\r\n\r\n                                <!-- EMPTY SLOT -->\r\n                                <template #empty=\"\">\r\n                                    <h4 class=\"text-center\">{{ $t('messages.data_not_found') }}</h4>\r\n                                </template>\r\n\r\n                                <!-- TABLE_BUSY SLOT -->\r\n                                <template #table-busy>\r\n                                    <div class=\"text-center my-2\">\r\n                                        <b-spinner\r\n                                            variant=\"primary\"\r\n                                            class=\"align-middle\"\r\n                                        ></b-spinner>\r\n                                    </div>\r\n                                </template>\r\n                            </b-table>\r\n                        </template>\r\n\r\n                        <!-- EMPTY SLOT -->\r\n                        <template #empty=\"\">\r\n                            <h4 class=\"text-center\">{{ ((localMainPageStoredData.regionId && !localMainPageStoredData.isRepublic) || localMainPageStoredData.isRepublic) ? $t('messages.data_not_found') : $t('messages.please_select_region') }}</h4>\r\n                        </template>\r\n\r\n                        <!-- TABLE_BUSY SLOT -->\r\n                        <template #table-busy>\r\n                            <div class=\"text-center my-2\">\r\n                                <b-spinner\r\n                                    variant=\"primary\"\r\n                                    class=\"align-middle\"\r\n                                ></b-spinner>\r\n                            </div>\r\n                        </template>\r\n                    </b-table>\r\n                    <!-- end table -->\r\n                </div>\r\n                <!-- end card-body -->\r\n            </div>\r\n            <!-- end card -->\r\n        </div>\r\n        <!-- end col -->\r\n    </div>\r\n    <!-- end row -->\r\n</template>\r\n\r\n<script>\r\nconst MAIN_API_URL = 'reestr/contractor-reestr-documents'\r\nconst APPEND_API_URL_DOMINANT = 'daminiriushiy'\r\nconst APPEND_API_URL_NATURAL = 'estestveniy'\r\nimport crudAndListsService from '@/shared/services/crud_and_list.service'\r\nimport helperService from '@/shared/services/helper.service'\r\nimport { mapMutations, mapState } from 'vuex'\r\n\r\nexport default {\r\n    components: {},\r\n    data () {\r\n        return {\r\n            loadingTableItems: false,\r\n            regions: [],\r\n            tableItems: [],\r\n            tableFields: [\r\n                {\r\n                    label: \"#\",\r\n                    thClass: \"text-center\",\r\n                    tdClass: \"text-center\",\r\n                    sortable: false,\r\n                    key: \"index\",\r\n                },\r\n                { label: this.$t('column.product_or_service_type'), tdClass: \"cursorPointer\", key: \"product_or_service_type\" },\r\n                { label: this.$t('column.product_or_services_count'), key: \"productOrServiceCount\" },\r\n                { label: this.$t('column.contractors_count'), key: \"contractorCount\" },\r\n            ],\r\n            reestrTableFields: [\r\n                {\r\n                    label: \"#\",\r\n                    thClass: \"text-center\",\r\n                    tdClass: \"text-center\",\r\n                    sortable: false,\r\n                    key: \"index\",\r\n                },\r\n                { label: this.$t('submodules.product_or_services.title'), key: \"productOrServices\" },\r\n                { label: this.$t('column.business_entity'), key: \"contractorFullName\" },\r\n            ],\r\n            localMainPageStoredData: {\r\n                regionId: null,\r\n                isRepublic: false,\r\n                openedTypeIds: []\r\n            }\r\n        };\r\n    },\r\n    /*\r\n    COMPUTED */\r\n    computed: {\r\n        ...mapState('reestrContractors', ['mainPageStoredDataForDominant', 'mainPageStoredDataForNatural']),\r\n        computedLocalMainPageStoredData () {\r\n            return JSON.stringify(this.localMainPageStoredData)\r\n        },\r\n        isDominant () {\r\n            return this.$route.name === 'DominantReestrContractors' || this.$route.name === 'DominantReestrContractorsMain'\r\n        },\r\n        isNatural () {\r\n            return this.$route.name === 'NaturalReestrContractors' || this.$route.name === 'NaturalReestrContractorsMain'\r\n        },\r\n        canAddToReestr () {\r\n            if (this.isDominant) {\r\n                return this.$can('create', 'contractor reestr document for acceptance daminiriushiy')\r\n            } else if (this.isNatural) {\r\n                return this.$can('create', 'contractor reestr document for acceptance estestveniy')\r\n            }\r\n            return false\r\n        },\r\n        canRemoveFromReestr () {\r\n            if (this.isDominant) {\r\n                return this.$can('create', 'contractor reestr document for close daminiriushiy')\r\n            } else if (this.isNatural) {\r\n                return this.$can('create', 'contractor reestr document for close estestveniy')\r\n            }\r\n            return false\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapMutations('reestrContractors', ['setMainPageStoredData']),\r\n\r\n        parentContractorClicked (contractor, inn, typeRow, productOrService) {\r\n            this.$set(contractor, 'showChildren', !contractor.showChildren)\r\n            if (contractor.showChildren && (!contractor.children || !(contractor.children ? contractor.children.length : contractor.children))) {\r\n                this.$set(typeRow.item, 'loadingInnerData', true)\r\n                if (inn) {\r\n                    helperService\r\n                        .searchReestrContractorListByParentId(`${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?typeId=${typeRow.item.typeId}&parentContractorId=${contractor.contractorId}&productOrServiceId=${productOrService.productOrServiceId}`)\r\n                        .then((res) => {\r\n                            this.$set(contractor, 'children', res.data)\r\n                        })\r\n                        .catch(e => {\r\n                            this.$set(contractor, 'children', [])\r\n                        })\r\n                        .finally(() => {\r\n                            this.$set(typeRow.item, 'loadingInnerData', false)\r\n                        })\r\n                } else {\r\n                    helperService\r\n                        .searchReestrContractorListByIndividualsGroupId(`${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?typeId=${typeRow.item.typeId}&groupOfIndividualsId=${contractor.contractorId}&productOrServiceId=${productOrService.productOrServiceId}`)\r\n                        .then((res) => {\r\n                            this.$set(contractor, 'children', res.data)\r\n                        })\r\n                        .catch(e => {\r\n                            this.$set(contractor, 'children', [])\r\n                        })\r\n                        .finally(() => {\r\n                            this.$set(typeRow.item, 'loadingInnerData', false)\r\n                        })\r\n                }\r\n            }\r\n        },\r\n        typeOpenCloseHandler (typeId, forClose) {\r\n            let foundIndex = this.localMainPageStoredData.openedTypeIds.findIndex(el => el == typeId)\r\n            if (forClose && foundIndex > -1) {\r\n                this.localMainPageStoredData.openedTypeIds.splice(foundIndex, 1)\r\n            } else if (!forClose && foundIndex < 0) {\r\n                this.localMainPageStoredData.openedTypeIds.push(typeId)\r\n            }\r\n            let savedOpenedTypeIds = JSON.parse(JSON.stringify(this.localMainPageStoredData.openedTypeIds))\r\n            this.localMainPageStoredData.openedTypeIds = []\r\n            this.$set(this.localMainPageStoredData, 'openedTypeIds', savedOpenedTypeIds)\r\n        },\r\n        rowClicked (item, index, e, fromCreated = false) {\r\n            if (!fromCreated) {\r\n                this.typeOpenCloseHandler(item.typeId, item._showDetails)\r\n            }\r\n            this.$set(item, '_showDetails', !item._showDetails)\r\n            this.fetchReestrDocsByTypeId(item.typeId, index)\r\n        },\r\n        fetchReestrDocsByTypeId (typeId, index) {\r\n            this.$set(this.tableItems[index], 'loadingInnerData', true)\r\n            if (this.localMainPageStoredData.isRepublic) {\r\n                helperService\r\n                    .searchReestrListByRepublic(`${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?&typeId=${typeId}`)\r\n                    .then((res) => {\r\n                        this.$set(this.tableItems[index], 'reestr', res.data)\r\n                    })\r\n                    .catch(e => {\r\n                        this.$set(this.tableItems[index], 'reestr', [])\r\n                    })\r\n                    .finally(() => {\r\n                        this.$set(this.tableItems[index], 'loadingInnerData', false)\r\n                    })\r\n            } else {\r\n                crudAndListsService\r\n                    .searchList(MAIN_API_URL, null, `${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?regionId=${this.localMainPageStoredData.regionId}&typeId=${typeId}`)\r\n                    .then((res) => {\r\n                        this.$set(this.tableItems[index], 'reestr', res.data)\r\n                    })\r\n                    .catch(e => {\r\n                        this.$set(this.tableItems[index], 'reestr', [])\r\n                    })\r\n                    .finally(() => {\r\n                        this.$set(this.tableItems[index], 'loadingInnerData', false)\r\n                    })\r\n            }\r\n        },\r\n        customLabelRegion (opt) {\r\n            let selected = this.regions.find(e => e.regionId == (opt.regionId ? opt.regionId : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.regionNameRu,\r\n                    nameLt: selected.regionNameLt,\r\n                    nameUz: selected.regionNameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        async regionSelected ($event) {\r\n            if ($event) {\r\n                this.fetchTableItems()\r\n            }\r\n        },\r\n        openStoredTypes () {\r\n            this.localMainPageStoredData.openedTypeIds.forEach(typeId => {\r\n                let foundIndex = this.tableItems.findIndex(el => el.typeId == typeId)\r\n                if (foundIndex > -1) {\r\n                    this.rowClicked(this.tableItems[foundIndex], foundIndex, null, true)\r\n                }\r\n            })\r\n        },\r\n        async fetchTableItems () {\r\n            this.loadingTableItems = true\r\n            if (this.localMainPageStoredData.isRepublic) {\r\n                helperService\r\n                    .getReestrByRepublic(this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : '')\r\n                    .then((res) => {\r\n                        this.tableItems = res.data;\r\n                        this.openStoredTypes()\r\n                    })\r\n                    .catch(e => {\r\n                        this.tableItems = [];\r\n                    })\r\n                    .finally(() => {\r\n                        this.loadingTableItems = false\r\n                    })\r\n            } else if (this.localMainPageStoredData.regionId) {\r\n                helperService\r\n                    .getReestrByRegionId(this.localMainPageStoredData.regionId, this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : '')\r\n                    .then((res) => {\r\n                        this.tableItems = res.data;\r\n                        this.openStoredTypes()\r\n                    })\r\n                    .catch(e => {\r\n                        this.tableItems = [];\r\n                    })\r\n                    .finally(() => {\r\n                        this.loadingTableItems = false\r\n                    })\r\n            } else {\r\n                this.tableItems = [];\r\n                this.loadingTableItems = false\r\n            }\r\n        },\r\n    },\r\n    /* CREATED */\r\n    created () {\r\n        if (this.isDominant) {\r\n            this.localMainPageStoredData = Object.assign({}, this.mainPageStoredDataForDominant)\r\n        } else if (this.isNatural) {\r\n            this.localMainPageStoredData = Object.assign({}, this.mainPageStoredDataForNatural)\r\n        }\r\n        // MAKE IS_REPUBLIC CHECKED\r\n        if (!this.localMainPageStoredData.regionId && this.$can('republic', 'for reestr')) {\r\n            this.localMainPageStoredData.isRepublic = true\r\n        }\r\n\r\n        // GET REGIONS\r\n        helperService.fetchRegionsForContractorReestrByCurrentUserId()\r\n            .then(res => {\r\n                this.regions = res.data\r\n                if (this.localMainPageStoredData.regionId && !this.localMainPageStoredData.isRepublic) {\r\n                    this.fetchTableItems()\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    },\r\n    /*\r\n    WATCH */\r\n    watch: {\r\n        computedLocalMainPageStoredData: {\r\n            deep: true,\r\n            handler (n, o) {\r\n                let newVal = JSON.parse(n)\r\n                let oldVal = JSON.parse(o)\r\n                this.setMainPageStoredData({ data: newVal, reestrType: this.isDominant ? 'dominant' : this.isNatural ? 'natural' : '' })\r\n                if (newVal.isRepublic != oldVal.isRepublic) {\r\n                    this.fetchTableItems()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped lang='scss'>\r\n::v-deep .cursorPointer {\r\n    cursor: pointer;\r\n    &:hover {\r\n        strong {\r\n            text-decoration: underline;\r\n        }\r\n        text-decoration: underline;\r\n    }\r\n}\r\n.a-tag-underline-hover {\r\n    &:hover {\r\n        * {\r\n            text-decoration: underline !important;\r\n        }\r\n    }\r\n}\r\n</style>"]}]}