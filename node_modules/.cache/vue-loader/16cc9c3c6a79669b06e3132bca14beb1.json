{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\letter\\income\\income.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\letter\\income\\income.vue","mtime":1667352074484},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouYmctY2xhc3Mgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmJmYmZiICFpbXBvcnRhbnQ7DQp9DQo="},{"version":3,"sources":["income.vue"],"names":[],"mappingskgEA;AACA;AACA","file":"income.vue","sourceRoot":"src/modules/letter/income","sourcesContent":["<script>\r\n// import Layout from \"@/router/layouts/main\";\r\n// import PageHeader from \"@/components/page-header\";\r\nimport Service from \"../letterService\";\r\n// import crudAndListsService from '@/shared/services/crud_and_list.service'\r\n/**\r\n * Products-order component\r\n */\r\nimport {cnfDoc, showMsgSuccess} from \"@/helper\";\r\nimport SignKeys from \"../SignKeys.vue\";\r\nimport Receivers from \"./receivers.vue\";\r\n\r\nimport Editor from \"../create/froal.editor.vue\";\r\nimport Modal from \"../create/modal.vue\";\r\nimport helperService from '@/shared/services/helper.service'\r\n\r\nexport default {\r\n  components: {SignKeys, Receivers, Editor, Modal},\r\n  watch: {\r\n    page() {\r\n      this.getList();\r\n    },\r\n    searchValue(v) {\r\n      this.getList();\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      rejectedSeeLoader: false,\r\n      rejectedLetter: null,\r\n      viewFileModal: false,\r\n      fileUploadPath: null,\r\n      isRejectedSeeModal: false,\r\n      signatureSeeModal: false,\r\n      reasonRejectedSee: \"\",\r\n      commissionTypeId: null,\r\n      commissionComment: '',\r\n      commissionCompletionDate: null,\r\n      commissionModalLoader: false,\r\n      commissionTypes: [],\r\n      commissionsModal: false,\r\n      currentPage: 1,\r\n      src: null,\r\n      numPages: undefined,\r\n      reasonRejected: \"\",\r\n      selectedTrItem: {},\r\n      active: \"\",\r\n      sendTypeList: [\r\n        {\r\n          label: this.$t(\"forSignature\"),\r\n          value: \"SIGNATURE\",\r\n        },\r\n        {\r\n          label: this.$t(\"forAgreement\"),\r\n          value: \"AGREEMENT\",\r\n        },\r\n        {\r\n          label: this.$t(\"forReview\"),\r\n          value: \"REVIEW\",\r\n        },\r\n      ],\r\n      title: this.$t(\"received\"),\r\n      items: [\r\n        {\r\n          text: this.$t(\"menu\"),\r\n          href: \"/\",\r\n        },\r\n        {\r\n          text: this.$t(\"received\"),\r\n          active: true,\r\n        },\r\n      ],\r\n      list: [],\r\n      searchValue: \"\",\r\n      page: 1,\r\n      limit: 20,\r\n      loading: false,\r\n      total: 1,\r\n      isModal: false,\r\n      currentItem: {},\r\n      signatureModal: false,\r\n      loaderButton: false,\r\n      isModalKeys: false,\r\n      agreementCount: 0,\r\n      signatureCount: 0,\r\n      reviewCount: 0,\r\n      loaderReceiver: false,\r\n      infoData: {},\r\n      visaInfoById: {},\r\n      rejectedLoader: false,\r\n      isRejectedModal: false,\r\n      viewModal: false,\r\n      filesList: [],\r\n      projectFilesList: [],\r\n      viewModalBeforeSigned: false,\r\n      loaderPdf: false,\r\n      ilovaUploadPath: null,\r\n      viewIlovaModal: false,\r\n      base64: null,\r\n      editModal: false,\r\n      loader: false,\r\n      contextText: \"\",\r\n      icon: {\r\n        pdf: require('@/assets/pdf.png'),\r\n      },\r\n      sendLetterToChairman: {\r\n        modal: false,\r\n        comment: \"\",\r\n        loader: false,\r\n      }\r\n    };\r\n  },\r\n  async created() {\r\n    await this.getList();\r\n    await this.getIncomeTotalCount();\r\n  },\r\n  computed: {\r\n    params() {\r\n      return {\r\n        params: {\r\n          itemsPerPage: this.limit,\r\n          page: this.page - 1,\r\n        },\r\n        search: this.searchValue,\r\n      };\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    showRejectedByRaisModal(item) {\r\n      this.currentItem = item;\r\n      this.isRejectedSeeModal = true;\r\n    },\r\n    rejectSeeConfirm() {\r\n      cnfDoc(this.$t(\"messages.reject_title\")).then((rs) => {\r\n        if (rs.value) {\r\n          this.signatureSeeModal = true;\r\n        }\r\n      });\r\n    },\r\n    async signSuccessSee(data) {\r\n      let payload = {\r\n        signedContent: data.content,\r\n        inn: data.inn,\r\n        pnfl: data.pnfl\r\n      }\r\n      switch (this.selectedTrItem.action) {\r\n        case 'REVIEW':\r\n          switch (this.selectedTrItem.status) {\r\n            case 'SEND_SEEN_CLOSED':\r\n              await Service.letterCancelled(payload, this.selectedTrItem.letterId, this.selectedTrItem.id, this.reasonRejectedSee)\r\n                  .then(async () => {\r\n                    this.isRejectedSeeModal = false;\r\n                    this.signatureSeeModal = false;\r\n                    this.getProjects();\r\n                    this.getTotalCount();\r\n                  })\r\n                  .catch((err) => {\r\n                    // this.catchErr(err);\r\n                  });\r\n              break;\r\n          }\r\n          break;\r\n        default:\r\n          await Service.onlyDocSignForRRejectedByRais(payload, this.selectedTrItem.letterId, this.selectedTrItem.id, this.reasonRejectedSee)\r\n              .then(async () => {\r\n                this.isRejectedSeeModal = false;\r\n                this.signatureSeeModal = false;\r\n                let tempData = Object.assign({}, this.selectedTrItem);\r\n                await showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                this.getList();\r\n                this.getTotalCount();\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              });\r\n          break;\r\n      }\r\n    },\r\n    openSignatureModalForCommission() {\r\n      if (this.commissionTypeId) {\r\n        if (this.selectedTrItem.action === 'REVIEW'\r\n            && this.selectedTrItem.applicationTypeInProject === 'INNER'\r\n            && (this.selectedTrItem.status === 'SENT_TO_MANAGEMENT')\r\n            && this.selectedTrItem.projectType === 'BEFORE_COMMISSION') {\r\n          if (!this.commissionCompletionDate) {\r\n            return this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n          }\r\n          Service.makeReviewForCommissionManagement(this.selectedTrItem.id, this.commissionTypeId, this.commissionComment, this.commissionCompletionDate)\r\n              .then(async () => {\r\n                await showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                this.getProjects();\r\n                this.getTotalCount();\r\n                this.signatureModal = false;\r\n                this.commissionsModal = false;\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              })\r\n              .finally(() => {\r\n                this.signatureModal = false;\r\n                this.commissionsModal = false;\r\n              });\r\n        } else {\r\n          this.signatureModal = true\r\n        }\r\n      } else {\r\n        this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n      }\r\n    },\r\n    customLabelCommissionTypes(opt) {\r\n      let selected = this.commissionTypes.find(e => e.id == opt);\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    changeText(text) {\r\n      this.contextText = text;\r\n    },\r\n    okModal() {\r\n      let text = this.$refs.editorRef.text;\r\n      this.$refs.editModalRef.loading(true);\r\n      Service.saveLetterBody(this.selectedTrItem.letterId, text)\r\n          .then(() => {\r\n            let tempData = Object.assign({}, this.selectedTrItem);\r\n            this.successEdited();\r\n            this.getList(true, tempData.id);\r\n            this.editModal = false;\r\n            /* setTimeout(() => {\r\n              let newdata = this.list.find((e) => e.id == tempData.id);\r\n              this.selectedTrItem = newdata;\r\n              this.$forceUpdate();\r\n              this.getReceivers(this.selectedTrItem);\r\n            }, 500); */\r\n          })\r\n          .catch((e) => {\r\n          })\r\n          .finally(() => {\r\n            this.$refs.editModalRef.loading(false);\r\n          });\r\n    },\r\n    viewModalClick() {\r\n      this.$refs.editModalRef.loadingPdf(true);\r\n      this.viewModalBeforeSigned = true;\r\n      this.loaderPdf = true;\r\n      this.base64 = null;\r\n\r\n      Service.convert(this.contextText)\r\n          .then((res) => {\r\n            setTimeout(() => {\r\n              this.base64 = res.data;\r\n            }, 400);\r\n          })\r\n          .finally(() => {\r\n            this.loaderPdf = false;\r\n            this.$refs.editModalRef.loadingPdf(false);\r\n          });\r\n    },\r\n    editLetter(item) {\r\n      /* this.editModal = true;\r\n      setTimeout(() => {\r\n        Service.getBody(item.letterId).then((res) => {\r\n          let editor = this.$refs.editorRef;\r\n          if (editor) {\r\n            if (!this._empty(res.data)) {\r\n              editor.setTextContent(res.data);\r\n            }\r\n          }\r\n        });\r\n      }, 400); */\r\n\r\n    },\r\n    viewProject(selectedLetter) {\r\n      /* this.$router.push({\r\n          name: selectedLetter.projectType == 'COMMISSION' ? 'CommissionProjects' : 'ProjectsMain',\r\n          query: { page: \"overview\", id: selectedLetter.projectId },\r\n      }); */\r\n      let routeData = this.$router.resolve({\r\n        name: selectedLetter.projectType === 'COMMISSION' ? 'CommissionProjects' : 'ProjectsMain',\r\n        query: {page: \"overview\", id: selectedLetter.projectId},\r\n      });\r\n      window.open(routeData.href, '_blank');\r\n    },\r\n    viewIlova(item) {\r\n      if (\r\n          this.getExt(item.uploadPath ? item.uploadPath : item.url) === \"pdf\"\r\n      ) {\r\n        this.ilovaUploadPath = item.uploadPath ? item.uploadPath : item.url;\r\n        this.viewIlovaModal = true;\r\n      } else {\r\n        this.convertToPdf(item).then((uploadPath) => {\r\n          if (uploadPath) {\r\n            this.ilovaUploadPath = uploadPath;\r\n            this.viewIlovaModal = true;\r\n          }\r\n        });\r\n      }\r\n    },\r\n    viewIlovaProject(uploadPath) {\r\n      if (\r\n          this.getExt(uploadPath) == \"PDF\" ||\r\n          this.getExt(uploadPath) == \"pdf\"\r\n      ) {\r\n        this.ilovaUploadPath = uploadPath;\r\n        this.viewIlovaModal = true;\r\n      }\r\n    },\r\n    convertToPdf(selectedItem, forSign = false) {\r\n      return new Promise((res, rej) => {\r\n        let config = {\r\n          url: `${selectedItem.url}`,\r\n          outputtype: \".pdf\",\r\n          forSign: forSign,\r\n          key: selectedItem.key,\r\n        };\r\n        Service.convertToPdfByApi(config)\r\n            .then((rs) => {\r\n              if (rs.data.uploadPath) {\r\n                this.$nextTick(() => {\r\n                  this.src = `${this.baseUrl}/${rs.data.uploadPath}`;\r\n                });\r\n                res(rs.data.uploadPath);\r\n              } else {\r\n                res(false);\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              // this.catchErr(e);\r\n              rej(e);\r\n            });\r\n      });\r\n    },\r\n    getByIdLetter() {\r\n      Service.getByIdLetter(this.selectedTrItem.letterId)\r\n          .then((rs) => {\r\n            this.currentDoc = rs.data;\r\n            this.loaderPdf = true;\r\n            this.convertToPdf(rs.data).then((uploadPath) => {\r\n              if (!uploadPath) {\r\n                setTimeout(() => {\r\n                  this.convertToPdf(rs.data)\r\n                      .then(() => {\r\n                        this.loaderPdf = false;\r\n                      })\r\n                      .catch((e) => {\r\n                        this.loaderPdf = false;\r\n                      });\r\n                }, 4000);\r\n              } else {\r\n                this.loaderPdf = false;\r\n              }\r\n            });\r\n          })\r\n          .catch((e) => {\r\n          });\r\n    },\r\n    viewLetter() {\r\n      this.viewModalBeforeSigned = true;\r\n      this.loaderPdf = true;\r\n      this.base64 = null;\r\n      Service.viewPdfByLetterId(this.selectedTrItem.letterId)\r\n          .then((res) => {\r\n            setTimeout(() => {\r\n              this.base64 = res.data;\r\n            }, 300);\r\n          })\r\n          .finally(() => {\r\n            this.loaderPdf = false;\r\n          });\r\n    },\r\n    viewDocBeforeSigned() {\r\n      // this.viewModalBeforeSigned = true;\r\n      // this.getByIdLetter();\r\n      this.viewLetter();\r\n    },\r\n    setCurrentPage(page) {\r\n      this.currentPage = page;\r\n    },\r\n    getAttachedFilesById(id) {\r\n      Service.getAttachedFilesById(id).then((res) => {\r\n        this.filesList = res.data;\r\n      });\r\n    },\r\n    getProjectLettersByLetterId(data) {\r\n      Service.projectLettersByLetterId(data.letterId).then((res) => {\r\n        this.projectFilesList = res.data;\r\n      });\r\n    },\r\n    saveRejected(payload) {\r\n      this.convertToPdf(this.selectedTrItem).then(r1 => {\r\n        this.rejectedLoader = true;\r\n        Service.saveRejected(\r\n            this.selectedTrItem.letterId,\r\n            this.selectedTrItem.id,\r\n            this.reasonRejected,\r\n            payload\r\n        )\r\n            .then(async () => {\r\n              this.isRejectedModal = false;\r\n              let tempData = Object.assign({}, this.selectedTrItem);\r\n              await this.successSaved();\r\n              await this.getList(true, tempData.id);\r\n              await this.getIncomeTotalCount();\r\n              /* setTimeout(() => {\r\n                let newdata = this.list.find((e) => e.id == tempData.id);\r\n                this.selectedTrItem = newdata;\r\n                this.$forceUpdate();\r\n                this.getReceivers(this.selectedTrItem);\r\n              }, 500); */\r\n            })\r\n            .finally(() => {\r\n              this.rejectedLoader = false;\r\n            });\r\n      })\r\n    },\r\n    handleToReject() {\r\n      this.cnf().then((rs) => {\r\n        if (rs.value) {\r\n          this.$router.push(`/letter/to-reject/${this.selectedTrItem.id}/${this.selectedTrItem.letterId}`);\r\n        }\r\n      });\r\n    },\r\n    showRejectedModal() {\r\n      switch (this.selectedTrItem.action) {\r\n        case 'SIGNATURE':\r\n          switch (this.selectedTrItem.status) {\r\n            case 'SEND_FOR_COMMISSION':\r\n              this.handleToReject();\r\n              break;\r\n            default:\r\n              this.isRejectedModal = true;\r\n              break;\r\n          }\r\n          break;\r\n        case 'REVIEW':\r\n          switch (this.selectedTrItem.status) {\r\n            case 'SEND_SEEN_CLOSED':\r\n              this.handleLetterCancelled(this.selectedTrItem);\r\n              break;\r\n            default:\r\n              this.isRejectedModal = true;\r\n              break;\r\n          }\r\n          break;\r\n        default:\r\n          this.isRejectedModal = true;\r\n          break;\r\n      }\r\n    },\r\n    viewDocSigned() {\r\n      this.viewModal = true;\r\n    },\r\n    getIncomeTotalCount() {\r\n      Service.getIncomeTotalCount().then((rs) => {\r\n        this.agreementCount = rs.data.agreement;\r\n        this.reviewCount = rs.data.review;\r\n        this.signatureCount = rs.data.signature;\r\n      });\r\n    },\r\n    async signSuccess(data) {\r\n      let payload = {\r\n        signedContent: data.content,\r\n        inn: data.inn,\r\n        pnfl: data.pnfl\r\n      };\r\n      if (this.isRejectedModal) {\r\n        this.isModalKeys = false;\r\n        this.signatureModal = false;\r\n        this.saveRejected(payload)\r\n      } else {\r\n        switch (this.selectedTrItem.status) {\r\n          case 'COMMISSION_SEND':\r\n            Service.onlyDocSign(payload, this.selectedTrItem.id)\r\n                .then(async () => {\r\n                  this.isModalKeys = false;\r\n                  this.signatureModal = false;\r\n                  let tempData = Object.assign({}, this.selectedTrItem);\r\n                  await showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                  await this.getList(true, tempData.id);\r\n                  await this.getIncomeTotalCount();\r\n                  // setTimeout(() => {\r\n                  //   let newdata = this.list.find((e) => e.id == tempData.id);\r\n                  //   this.selectedTrItem = Object.assign({}, newdata);\r\n                  //   this.$forceUpdate();\r\n                  //   this.getReceivers(this.selectedTrItem);\r\n                  // }, 1000);\r\n                })\r\n                .catch((err) => {\r\n                  // this.catchErr(err);\r\n                });\r\n            break;\r\n          case 'NOT_BELONG':\r\n            await Service.onlyDocSign(payload, this.selectedTrItem.id)\r\n                .then(async () => {\r\n                  await Service.onlyDocSignNotBelong(payload, this.selectedTrItem.id)\r\n                      .then(async () => {\r\n\r\n\r\n                      })\r\n                      .catch((err) => {\r\n                        this.catchErr(err);\r\n                      });\r\n\r\n                  this.isModalKeys = false;\r\n                  this.signatureModal = false;\r\n                  let tempData = Object.assign({}, this.selectedTrItem);\r\n                  await showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                  await this.getList(true, tempData.id);\r\n                  await this.getIncomeTotalCount();\r\n\r\n                  // setTimeout(() => {\r\n                  //   let newdata = this.list.find((e) => e.id == tempData.id);\r\n                  //   this.selectedTrItem = Object.assign({}, newdata);\r\n                  //   this.$forceUpdate();\r\n                  //   this.getReceivers(this.selectedTrItem);\r\n                  // }, 1000);\r\n                })\r\n                .catch((err) => {\r\n                  // this.catchErr(err);\r\n                });\r\n            break;\r\n          case 'SEND_SIGN_TO_RETURN':\r\n            Service.signDoc(payload, this.selectedTrItem.id, this.commissionTypeId, this.commissionComment)\r\n                .then(async () => {\r\n                  this.isModalKeys = false;\r\n                  this.signatureModal = false;\r\n                  this.commissionsModal = false;\r\n                  let tempData = Object.assign({}, this.selectedTrItem);\r\n                  await showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                  await this.getList(true, tempData.id);\r\n                  await this.getIncomeTotalCount();\r\n                  /* setTimeout(() => {\r\n                    let newdata = this.list.find((e) => e.id == tempData.id);\r\n                    this.selectedTrItem = Object.assign({}, newdata);\r\n                    this.$forceUpdate();\r\n                    this.getReceivers(this.selectedTrItem);\r\n                  }, 1000); */\r\n                })\r\n                .catch((err) => {\r\n                  // this.catchErr(err);\r\n                });\r\n            break;\r\n          default:\r\n            Service.signDoc(payload, this.selectedTrItem.id, this.commissionTypeId, this.commissionComment)\r\n                .then(async () => {\r\n                  this.isModalKeys = false;\r\n                  this.signatureModal = false;\r\n                  this.commissionsModal = false;\r\n                  let tempData = Object.assign({}, this.selectedTrItem);\r\n                  await showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                  await this.getList(true, tempData.id);\r\n                  await this.getIncomeTotalCount();\r\n                  /* setTimeout(() => {\r\n                    let newdata = this.list.find((e) => e.id == tempData.id);\r\n                    this.selectedTrItem = Object.assign({}, newdata);\r\n                    this.$forceUpdate();\r\n                    this.getReceivers(this.selectedTrItem);\r\n                  }, 1000); */\r\n                })\r\n                .catch((err) => {\r\n                  // this.catchErr(err);\r\n                });\r\n            break;\r\n        }\r\n      }\r\n    },\r\n    getReceivers(item) {\r\n      this.loaderReceiver = true;\r\n      Service.getReceivers(item.letterId)\r\n          .then((rs) => {\r\n            this.infoData = rs.data;\r\n          })\r\n          .finally(() => {\r\n            this.loaderReceiver = false;\r\n          });\r\n    },\r\n    async getVisaInfoById() {\r\n      await helperService.getVisaAllInfoById(this.selectedTrItem.applicationIdFromDXA, false)\r\n          .then(res => {\r\n            this.visaInfoById = res.data\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          }).finally(() => {\r\n          })\r\n    },\r\n    async clickTrItem(item) {\r\n      if (this.selectedTrItem.id === item.id) {\r\n        this.selectedTrItem = {};\r\n        this.infoData = {};\r\n      } else {\r\n        this.selectedTrItem = item;\r\n        await this.getAttachedFilesById(item.letterId);\r\n        await this.getReceivers(item);\r\n        if (item.applicationTypeInProject == 'FROM_DXA') {\r\n          await this.getVisaInfoById();\r\n          await this.getProjectLettersByLetterId(item);\r\n        }\r\n        switch (item.status) {\r\n          case 'REJECT_LETTER_CREATED':\r\n            Service.getRejectLetter(item.letterId).then(res => {\r\n              this.rejectedLetter = res.data;\r\n            }).catch(e => {\r\n              console.log(e)\r\n            }).finally(() => {\r\n            })\r\n            break;\r\n          default:\r\n            this.rejectedLetter = null;\r\n            this.fileUploadPath = null;\r\n            break;\r\n        }\r\n      }\r\n    },\r\n    signatureItem() {\r\n      this.isModalKeys = true;\r\n    },\r\n    selectSendType(v) {\r\n      this.selectedTrItem = {};\r\n      this.infoData = {};\r\n      if (this.active == v) {\r\n        this.active = \"\";\r\n      } else {\r\n        this.active = v;\r\n      }\r\n      this.getList();\r\n    },\r\n    makeAgree(item) {\r\n      this.cnf().then((rs) => {\r\n        if (rs.value) {\r\n          Service.makeAgree(item.letterId).then(async () => {\r\n            let tempData = Object.assign({}, this.selectedTrItem);\r\n            await this.successSaved();\r\n            await this.getList(true, tempData.id);\r\n            await this.getIncomeTotalCount();\r\n            // setTimeout(() => {\r\n            //   let newdata = this.list.find((e) => e.id == tempData.id);\r\n            //   this.selectedTrItem = Object.assign({}, newdata);\r\n            //   this.$forceUpdate();\r\n            //   this.getReceivers(this.selectedTrItem);\r\n            // }, 500);\r\n          });\r\n        }\r\n      });\r\n    },\r\n    fetchCommissionTypes(callback = () => ({})) {\r\n      Service.searchList('directory/commission/commission-type', this.var_default_search_payload, null, true)\r\n          .then(res => {\r\n            this.commissionTypes = res.data.list\r\n            callback();\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    makeReviewForCommission(item) {\r\n      this.cnf().then((rs) => {\r\n        if (rs.value) {\r\n          Service.makeReviewForCommission(item.id, item.comment).then(async () => {\r\n            await this.successSaved();\r\n            await this.$router.push(\"/projects/commission\");\r\n            // let tempData = Object.assign({}, this.selectedTrItem);\r\n            // await this.getList(true, tempData.id);\r\n            // await this.getIncomeTotalCount();\r\n            // setTimeout(() => {\r\n            //   let newdata = this.list.find((e) => e.id === tempData.id);\r\n            //   this.selectedTrItem = newdata;\r\n            //   this.$forceUpdate();\r\n            //   this.getReceivers(this.selectedTrItem);\r\n            // }, 500);\r\n          });\r\n        }\r\n      });\r\n    },\r\n    makeReviewForCommissionWithComment(item) {\r\n      if (this.commissionTypes.length === 0) {\r\n        return this.fetchCommissionTypes(() => {\r\n          this.commissionsModal = true;\r\n        });\r\n      }\r\n      this.commissionsModal = true;\r\n    },\r\n    makeReview(item) {\r\n      this.cnf().then((rs) => {\r\n        if (rs.value) {\r\n          Service.makeReview(item.letterId).then(async () => {\r\n            // let tempData = this.selectedTrItem;\r\n            let tempData = Object.assign({}, this.selectedTrItem);\r\n            await this.successSaved();\r\n            await this.getList(true, tempData.id);\r\n            await this.getIncomeTotalCount();\r\n            /* setTimeout(() => {\r\n              let newdata = this.list.find((e) => e.id == tempData.id);\r\n              this.selectedTrItem = newdata;\r\n              this.$forceUpdate();\r\n              this.getReceivers(this.selectedTrItem);\r\n            }, 500); */\r\n          });\r\n        }\r\n      });\r\n    },\r\n    makeReviewLetter(item) {\r\n      this.cnf().then((rs) => {\r\n        if (rs.value) {\r\n          Service.makeAgreedLetter(item.id).then(async () => {\r\n            let tempData = Object.assign({}, this.selectedTrItem);\r\n            await this.successSaved();\r\n            await this.getList(true, tempData.id);\r\n            await this.getIncomeTotalCount();\r\n          });\r\n        }\r\n      });\r\n    },\r\n    rejectConfirm() {\r\n      cnfDoc(this.$t(\"messages.reject_title\")).then((rs) => {\r\n        if (rs.value) {\r\n          this.signatureModal = true;\r\n        }\r\n      });\r\n    },\r\n    viewFile(uploadPath) {\r\n      if (this.getExt(uploadPath) === \"pdf\") {\r\n        this.fileUploadPath = uploadPath;\r\n        this.viewFileModal = true;\r\n      }\r\n    },\r\n    signItemToManagement(item) {\r\n      this.$router.push(\r\n          `/letter/income/to-management/${item.letterId}/${item.id}`\r\n      );\r\n    },\r\n    handleSendLetterToChairman() {\r\n      this.cnf().then(({value}) => {\r\n        if (value) {\r\n          this.sendLetterToChairman.loader = true\r\n          Service.handleSendLetterToChairman(this.rejectedLetter.id, this.sendLetterToChairman.comment).then(() => {\r\n            this.getList();\r\n            this.sendLetterToChairman.loader = false\r\n            this.sendLetterToChairman.modal = false\r\n          })\r\n              .finally(() => {\r\n                this.sendLetterToChairman.loader = false\r\n                this.sendLetterToChairman.modal = false\r\n              })\r\n        }\r\n      });\r\n    },\r\n    handleLetterCancelled(item) {\r\n      this.isRejectedSeeModal = true;\r\n    },\r\n\r\n    async signAcceptedItem(item) {\r\n      if (item.applicationTypeInProject === 'FROM_DXA' && item.status === 'SEND_SIGN'\r\n          && item.action === 'SIGNATURE') {\r\n        await Service.setLetterRejtOrAccept(item.letterId, false).then((rs) => {\r\n          this.$router.push(\r\n              `/letter/income/${item.letterId}/${item.id}`\r\n          );\r\n        });\r\n      }\r\n    },\r\n\r\n    async signRejectedItem(item) {\r\n      if (item.applicationTypeInProject === 'FROM_DXA' && item.status === 'SEND_SIGN'\r\n          && item.action === 'SIGNATURE') {\r\n        await Service.setLetterRejtOrAccept(item.letterId, true).then((rs) => {\r\n          this.$router.push(\r\n              `/letter/income/${item.letterId}/${item.id}`\r\n          );\r\n        });\r\n      }\r\n    },\r\n\r\n    async signItem(item) {\r\n      switch (item.action) {\r\n        case 'SIGNATURE':\r\n          this.currentItem = item;\r\n          if (item.applicationTypeInProject === 'FROM_DXA') {\r\n            switch (item.status) {\r\n              case 'SEND_SIGN':\r\n                await Service.setLetterRejtOrAccept(item.letterId, true).then((rs) => {\r\n                  this.$router.push(\r\n                      `/letter/income/${item.letterId}/${item.id}`\r\n                  );\r\n                });\r\n                break;\r\n              case 'COMMISSION_SEND':\r\n                await Service.setLetterRejtOrAccept(item.letterId, true).then((rs) => {\r\n                  this.$router.push(\r\n                      `/letter/income/${item.letterId}/${item.id}`\r\n                  );\r\n                });\r\n                break;\r\n              default:\r\n                cnfDoc(this.$t(\"docConfirm\")).then((rs) => {\r\n                  if (rs.value) {\r\n                    this.signatureModal = true;\r\n                  }\r\n                });\r\n                break;\r\n            }\r\n          } else if (item.applicationTypeInProject === 'NOT_BELONG') {\r\n            await Service.setLetterRejtOrAccept(item.letterId, true).then((rs) => {\r\n              this.$router.push(\r\n                  `/letter/income/${item.letterId}/${item.id}`\r\n              );\r\n            });\r\n          } else {\r\n            switch (item.status) {\r\n              case 'SEND_SIGN':\r\n                this.$router.push(`/letter/income/${item.letterId}/${item.id}`);\r\n                break;\r\n              case 'FOR_REGION':\r\n                await Service.setLetterRejtOrAccept(item.letterId, true).then((rs) => {\r\n                  this.$router.push(\r\n                      `/letter/income/${item.letterId}/${item.id}`\r\n                  );\r\n                });\r\n                break;\r\n              case 'FOR_NOT_BELONG':\r\n                await Service.setLetterRejtOrAccept(item.letterId, true).then((rs) => {\r\n                  this.$router.push(\r\n                      `/letter/income/${item.letterId}/${item.id}`\r\n                  );\r\n                });\r\n                break;\r\n              case 'COMMISSION_SEND':\r\n                this.$router.push(`/letter/income/${item.letterId}/${item.id}`);\r\n                break;\r\n              case 'SEND_SIGN_FINISH':\r\n                await this.$router.push(`/letter/make-signed-to-closed/${item.id}/${item.letterId}`);\r\n                break;\r\n              case 'FOR_NOT_COMPLETED':\r\n                await Service.setLetterRejtOrAccept(item.letterId, true).then((rs) => {\r\n                  this.$router.push(\r\n                      `/letter/income/${item.letterId}/${item.id}`\r\n                  );\r\n                });\r\n                break;\r\n              case 'SEND_FOR_COMMISSION':\r\n                await this.$router.push(`/letter/before-commission/${item.id}/${item.letterId}`);\r\n                break;\r\n              case 'SEND_SIGN_TO_RETURN':\r\n                await this.$router.push(`/letter/income/${item.letterId}/${item.id}`);\r\n                break;\r\n              case 'TO_SIGN_REJECT_LETTER':\r\n                await this.$router.push(`/letter/before-commission/${item.id}/${item.letterId}`);\r\n                break;\r\n              case 'TO_SIGN_FINISH_LETTER':\r\n                await this.$router.push(`/letter/before-commission/${item.id}/${item.letterId}`);\r\n                break;\r\n              default:\r\n                await cnfDoc(this.$t(\"docConfirm\")).then((rs) => {\r\n                  if (rs.value) {\r\n                    this.signatureModal = true;\r\n                  }\r\n                });\r\n                break;\r\n            }\r\n          }\r\n          break;\r\n        case 'AGREEMENT':\r\n          this.currentItem = item;\r\n          switch (item.status) {\r\n            default:\r\n              this.makeAgree(item);\r\n              break;\r\n          }\r\n          break;\r\n        case 'REVIEW':\r\n          this.currentItem = item;\r\n          switch (item.status) {\r\n            case 'SEND_FOR_COMMISSION':\r\n              this.makeReviewForCommission(item);\r\n              break;\r\n            case 'SENT_TO_MANAGEMENT':\r\n              this.makeReviewForCommissionWithComment(item);\r\n              break;\r\n            case 'SENT_FOR_REJECT':\r\n              this.uploadRejectLetter(item);\r\n              break;\r\n            case 'TO_INVOKE_SIGNED':\r\n              this.makeReviewLetter(item);\r\n              break;\r\n            case 'SEND_SEEN_CLOSED':\r\n              await this.cnf().then((rs) => {\r\n                if (rs.value) {\r\n                  Service.makeAgreedLetterToClosed(item.id).then(async () => {\r\n                    let tempData = Object.assign({}, this.selectedTrItem);\r\n                    await this.successSaved();\r\n                    await this.getList(true, tempData.id);\r\n                    await this.getIncomeTotalCount();\r\n                  });\r\n                }\r\n              });\r\n              break;\r\n            case 'FINISH_LETTER_SIGN_AND_SEND':\r\n              await this.cnf().then((rs) => {\r\n                if (rs.value) {\r\n                  Service.makeViewedLetterToFinish(item.id).then(async () => {\r\n                    let tempData = Object.assign({}, this.selectedTrItem);\r\n                    await this.successSaved();\r\n                    await this.getList(true, tempData.id);\r\n                    await this.getIncomeTotalCount();\r\n                  });\r\n                }\r\n              });\r\n              break;\r\n            default:\r\n              this.makeReview(item);\r\n              break;\r\n          }\r\n          break;\r\n      }\r\n    },\r\n    save() {\r\n      if (!this.$refs.addRef.checkValidity()) {\r\n        Service.upload(this.$refs.addRef.form).then((rs) => {\r\n          if (rs.data) {\r\n            this.getList();\r\n            let routeData = this.$router.resolve({\r\n              name: \"Office-DOCUMENT-commission\",\r\n              query: {page: \"GET\", id: rs.data.id},\r\n            });\r\n            window.open(routeData.href, \"_blank\");\r\n            this.isModal = false;\r\n          }\r\n        });\r\n      } else {\r\n        this.enterInfo();\r\n      }\r\n    },\r\n    add() {\r\n      this.isModal = true;\r\n    },\r\n    getList(reset = false, resetId) {\r\n      this.loading = true;\r\n      Service.getListLetterIncome(this.params, this.active)\r\n          .then(({data}) => {\r\n            this.list = data.list;\r\n            this.total = data.total;\r\n            if (reset) {\r\n              let newdata = this.list.find((e) => e.id === resetId);\r\n              this.selectedTrItem = Object.assign({}, newdata);\r\n              // this.$forceUpdate();\r\n              this.getReceivers(this.selectedTrItem);\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n    uploadRejectLetter(item) {\r\n      this.cnf().then(({value}) => {\r\n        if (value) {\r\n          Service.uploadRejectLetter(item.letterId, 'LETTER_REJECT', \"Rad etish xati\").then((rs) => {\r\n            let routeData = this.$router.resolve({\r\n              name: \"Office-DOCUMENT-commission\",\r\n              query: {id: rs.data.id, page: \"GET\"},\r\n            });\r\n            this.getList();\r\n            this.getIncomeTotalCount();\r\n            window.open(routeData.href, \"_blank\");\r\n          });\r\n        }\r\n      });\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <!-- <Layout> -->\r\n  <div>\r\n    <div class=\"col-md-12 text-center\">\r\n      <div class=\"h4 mb-4 d-inline-block\">{{ $t('submodules.reports.report_income') }}</div>\r\n    </div>\r\n\r\n    <b-modal\r\n        v-model=\"isRejectedSeeModal\"\r\n        :title=\"`${$t('submodules.reports.reasonRejected')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <b-form-textarea\r\n          v-model=\"reasonRejectedSee\"\r\n          rows=\"5\"\r\n      ></b-form-textarea>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"danger\"\r\n            @click=\"rejectSeeConfirm\"\r\n        >\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"rejectedSeeLoader\"\r\n              rounded=\"sm\"\r\n          >\r\n            {{ $t(\"submodules.reports.rejected\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <b-modal\r\n        v-model=\"signatureSeeModal\"\r\n        :title=\"`${$t('submodules.reports.make_sign')}`\"\r\n        hide-footer\r\n        scrollable\r\n        size=\"lg\"\r\n    >\r\n      <SignKeys\r\n          :dataToSign=\"selectedTrItem\"\r\n          @sign=\"signSuccessSee\"\r\n      />\r\n    </b-modal>\r\n\r\n    <Modal\r\n        ref=\"editModalRef\"\r\n        :cancelText=\"'actions.cancel'\"\r\n        :okText=\"'actions.save'\"\r\n        :scroll=\"true\"\r\n        :signerHide=\"false\"\r\n        :size=\"'xl'\"\r\n        :title=\"selectedTrItem.fileName\"\r\n        :value=\"editModal\"\r\n        :variantOk=\"'success'\"\r\n        @closeModal=\"editModal = false\"\r\n        @okModal=\"okModal\"\r\n        @viewModalClick=\"viewModalClick\"\r\n    >\r\n      <template v-slot:body>\r\n        <div>\r\n          <Editor\r\n              ref=\"editorRef\"\r\n              @changeText=\"changeText\"\r\n          />\r\n        </div>\r\n      </template>\r\n    </Modal>\r\n\r\n    <!-- <PageHeader :title=\"title\" :items=\"items\" /> -->\r\n    <!-- for view ilova -->\r\n    <b-modal\r\n        v-model=\"viewIlovaModal\"\r\n        :title=\"$t('actions.view')\"\r\n        scrollable\r\n        size=\"xl\"\r\n    >\r\n      <div\r\n          v-if=\"ilovaUploadPath\"\r\n          style=\"height: 700px\"\r\n      >\r\n        <embed\r\n            :src=\"`${baseUrl}/${ilovaUploadPath}`\"\r\n            height=\"800\"\r\n            type=\"application/pdf\"\r\n            width=\"100%\"\r\n        />\r\n      </div>\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"secondary\"\r\n            @click=\"viewIlovaModal = false\"\r\n        >{{\r\n            $t(\"actions.close\")\r\n          }}\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <!-- sign keys modal -->\r\n    <b-modal\r\n        v-model=\"signatureModal\"\r\n        :title=\"`${$t('submodules.reports.make_sign')}`\"\r\n        hide-footer\r\n        scrollable\r\n        size=\"lg\"\r\n    >\r\n      <SignKeys\r\n          :dataToSign=\"selectedTrItem\"\r\n          @sign=\"signSuccess\"\r\n      />\r\n    </b-modal>\r\n\r\n    <!-- for view document -->\r\n    <b-modal\r\n        v-model=\"viewModal\"\r\n        :title=\"selectedTrItem.id ? selectedTrItem.fileName : ''\"\r\n        scrollable\r\n        size=\"xl\"\r\n    >\r\n      <div\r\n          v-if=\"selectedTrItem.url\"\r\n          style=\"height: 700px\"\r\n      >\r\n        <embed\r\n            :src=\"`${baseUrl}/${selectedTrItem.url}`\"\r\n            height=\"800\"\r\n            type=\"application/pdf\"\r\n            width=\"100%\"\r\n        />\r\n      </div>\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"secondary\"\r\n            @click=\"viewModal = false\"\r\n        >{{\r\n            $t(\"actions.close\")\r\n          }}\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n\r\n    <!-- modal view before modal -->\r\n    <b-modal\r\n        v-model=\"viewModalBeforeSigned\"\r\n        :title=\"selectedTrItem.id ? selectedTrItem.fileName : ''\"\r\n        body-bg-variant=\"light\"\r\n        scrollable\r\n        size=\"xl\"\r\n    >\r\n      <b-overlay\r\n          :opacity=\"1\"\r\n          :show=\"loaderPdf\"\r\n          rounded=\"lg\"\r\n          variant=\"white\"\r\n      >\r\n        <div style=\"min-height: 700px\">\r\n          <embed\r\n              v-if=\"base64\"\r\n              :src=\"`data:application/pdf;base64, ${base64}`\"\r\n              :style=\"`min-height:${heightWindow-250}px`\"\r\n              style=\"width: 100%;\"\r\n          />\r\n        </div>\r\n      </b-overlay>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"secondary\"\r\n            @click=\"viewModalBeforeSigned = false\"\r\n        >{{ $t(\"actions.close\") }}\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n\r\n    <!-- COMMISSIONS MODAL -->\r\n    <b-modal\r\n        v-model=\"commissionsModal\"\r\n        :title=\"`${$t('submodules.commission.title')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <BaseMultiselectWithValidation\r\n          v-model=\"commissionTypeId\"\r\n          :custom-label=\"customLabelCommissionTypes\"\r\n          :label=\"$t('submodules.commission.special_commission_type.title')\"\r\n          :max-height=\"600\"\r\n          :options=\"commissionTypes.map(e => e.id)\"\r\n          :show-labels=\"false\"\r\n          class=\"required\"\r\n          label-on-top\r\n          open-direction=\"bottom\"\r\n          placeholder=\"\"\r\n          rules=\"required\"\r\n      ></BaseMultiselectWithValidation>\r\n\r\n      <BaseDatePickerWithValidation\r\n          v-model=\"commissionCompletionDate\"\r\n          :label=\"$t('date')\"\r\n          :placeholder=\"$t('date')\"\r\n          lang=\"ru\"\r\n          required\r\n      />\r\n      <b-form-textarea\r\n          v-model=\"commissionComment\"\r\n          :placeholder=\"$t('submodules.doc.summary')\"\r\n          class=\"mt-3\"\r\n          rows=\"5\"\r\n      ></b-form-textarea>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"success\"\r\n            @click=\"openSignatureModalForCommission\"\r\n        >\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"commissionModalLoader\"\r\n              rounded=\"sm\"\r\n          >\r\n            {{ $t(\"actions.continue\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <!-- rejected modal -->\r\n    <b-modal\r\n        v-model=\"isRejectedModal\"\r\n        :title=\"`${$t('submodules.reports.reasonRejected')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <b-form-textarea\r\n          v-model=\"reasonRejected\"\r\n          rows=\"5\"\r\n      ></b-form-textarea>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"danger\"\r\n            @click=\"rejectConfirm\"\r\n        >\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"rejectedLoader\"\r\n              rounded=\"sm\"\r\n          >\r\n            {{ $t(\"submodules.reports.rejected\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n\r\n    <b-modal\r\n        v-model=\"sendLetterToChairman.modal\"\r\n        :title=\"`${$t('submodules.commission.send_for_sign')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <b-form-textarea\r\n          v-model=\"sendLetterToChairman.comment\"\r\n          rows=\"5\"\r\n      ></b-form-textarea>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"success\"\r\n            @click=\"handleSendLetterToChairman\"\r\n        >\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"sendLetterToChairman.loader\"\r\n              rounded=\"sm\"\r\n          >\r\n            {{ $t(\"submodules.commission.send_for_sign\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-body p-2\">\r\n            <div class=\"row\">\r\n              <div class=\"col-sm-4\">\r\n                <div class=\"d-inline-block mt-1 ml-2\">\r\n                  <div class=\"search-box\">\r\n                    <div class=\"position-relative\">\r\n                      <input\r\n                          v-model=\"searchValue\"\r\n                          :placeholder=\"$t('actions.search')\"\r\n                          class=\"form-control rounded bg-light border-light\"\r\n                          style=\"width: 300px\"\r\n                          type=\"text\"\r\n                      />\r\n                      <i class=\"mdi mdi-magnify search-icon\"></i>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-8\">\r\n                <div class=\"text-sm-right\">\r\n                  <div class=\"mr-3 float-right\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <div\r\n                          v-for=\"(dc, index) in sendTypeList\"\r\n                          :key=\"index + 'doc'\"\r\n                          :class=\"dc.value === active ? 'my-card-active' : ''\"\r\n                          class=\"card m-0 my-card-hovered_2 mr-3\"\r\n                          @click.prevent=\"selectSendType(dc.value)\"\r\n                      >\r\n                        <div class=\"\r\n                              card-body\r\n                              p-0\r\n                              text-center\r\n                              d-flex\r\n                              align-items-center\r\n                              justify-content-center\r\n                            \">\r\n                          <div>\r\n                            <div class=\"d-flex align-items-center\">\r\n                              <img\r\n                                  :src=\"\r\n                                    dc.value == 'SIGNATURE'\r\n                                      ? require('@/assets/doc/2.png')\r\n                                      : dc.value == 'REVIEW'\r\n                                      ? require('@/assets/doc/3.png')\r\n                                      : require('@/assets/doc/4.png')\r\n                                  \"\r\n                                  alt=\"DOC\"\r\n                                  height=\"30\"\r\n                              />\r\n\r\n                              <div class=\"ml-2\">\r\n                                <p class=\"m-0\">\r\n                                  {{ dc.label }}\r\n                                </p>\r\n                              </div>\r\n                              <div class=\"ml-2\">\r\n                                <b-badge\r\n                                    v-if=\"\r\n                                      dc.value == 'AGREEMENT' &&\r\n                                      agreementCount > 0\r\n                                    \"\r\n                                    variant=\"success\"\r\n                                >\r\n                                  {{ agreementCount }}\r\n                                </b-badge>\r\n\r\n                                <b-badge\r\n                                    v-if=\"\r\n                                      dc.value == 'SIGNATURE' &&\r\n                                      signatureCount > 0\r\n                                    \"\r\n                                    variant=\"success\"\r\n                                >\r\n                                  {{ signatureCount }}\r\n                                </b-badge>\r\n\r\n                                <b-badge\r\n                                    v-if=\"\r\n                                      dc.value == 'REVIEW' && reviewCount > 0\r\n                                    \"\r\n                                    variant=\"success\"\r\n                                >\r\n                                  {{ reviewCount }}\r\n                                </b-badge>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <!-- <b-button\r\n    @click.prevent=\"add\"\r\n    type=\"button\"\r\n    variant=\"primary\"\r\n  >\r\n    <i class=\"mdi mdi-plus mr-1\"></i>\r\n    {{ $t(\"actions.createNewDoc\") }}\r\n  </b-button> -->\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"col-7\">\r\n            <div class=\"card card-body\">\r\n              <div class=\"table-responsive\">\r\n                <b-overlay :opacity=\"0.1\" :show=\"loading\" rounded=\"sm\">\r\n                  <table class=\"table table-centered table-striped table-nowrap table-hover\">\r\n                    <thead class=\"thead-light\">\r\n                    <tr>\r\n                      <th class=\"text-center\" scope=\"col\" style=\"width: 70px\">№</th>\r\n                      <!-- <th class=\"text-center\" scope=\"col\">\r\n                        {{ $t(\"docNumber\") }}\r\n                      </th> -->\r\n                      <th\r\n                          class=\"text-center\"\r\n                          scope=\"col\"\r\n                      >\r\n                        {{ $t(\"column.created_by\") }}\r\n                      </th>\r\n                      <th\r\n                          class=\"text-center\"\r\n                          scope=\"col\"\r\n                      >\r\n                        {{ $t(\"submodules.doc.founder\") }}\r\n                      </th>\r\n                      <th\r\n                          class=\"text-center\"\r\n                          scope=\"col\"\r\n                      >\r\n                        {{ $t(\"docDate\") }}\r\n                      </th>\r\n                      <th\r\n                          class=\"text-center\"\r\n                          scope=\"col\"\r\n                      >\r\n                        {{ $t(\"docName\") }}\r\n                      </th>\r\n\r\n                      <!-- <th class=\"text-center\" scope=\"col\">\r\n                        {{ $t(\"document.type\") }}\r\n                      </th> -->\r\n\r\n                      <th\r\n                          class=\"text-center\"\r\n                          scope=\"col\"\r\n                      >\r\n                        {{ $t(\"puropseOfSending\") }}\r\n                      </th>\r\n\r\n                      <!-- <th\r\n                        style=\"width: 10%\"\r\n                        scope=\"col\"\r\n                        class=\"text-center\"\r\n                      >\r\n                        {{ $t(\"actions.title\") }}\r\n                      </th> -->\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr\r\n                        v-if=\"list.length == 0\"\r\n                        class=\"text-center\"\r\n                    >\r\n                      <td\r\n                          :style=\"loading ? 'height:50px' : ''\"\r\n                          colspan=\"9\"\r\n                          style=\"vertical-align: middle\"\r\n                      >\r\n                        <h5>\r\n                          {{ $t(\"messages.data_not_found\") }}\r\n                        </h5>\r\n                      </td>\r\n                    </tr>\r\n                    <tr\r\n                        v-for=\"(item, index) in list\"\r\n                        :key=\"index + 'CREATE_DOC'\"\r\n                        :class=\"\r\n                            selectedTrItem.id == item.id\r\n                              ? 'bg-soft-primary text-primary'\r\n                              : item.status === 'CANCELED' || item.cancelled\r\n                              ? 'bg-soft-danger text-danger'\r\n                              : item.status === 'SIGNED'\r\n                              ? 'bg-soft-success text-dark'\r\n                              : 'bg-white text-dark font-weight-bold '\r\n                          \"\r\n                        class=\"p_cursor\"\r\n                        @click.prevent=\"clickTrItem(item)\"\r\n                    >\r\n                      <td class=\"text-center\">\r\n                        <strong>\r\n                          {{ paginate(index, limit, page - 1) }}</strong>\r\n                      </td>\r\n                      <!-- <td\r\n  class=\"text-center\"\r\n  :class=\"!item.isRead ? 'font-weight-bold' : ''\"\r\n>\r\n  {{ item.regNumber }}\r\n</td> -->\r\n                      <td class=\"text-left\">\r\n                        {{ item.ownerLastName ? item.ownerLastName : '' }}\r\n                        {{ item.ownerFirstName ? item.ownerFirstName : '' }}\r\n                        {{ item.ownerParentName ? item.ownerParentName : '' }}\r\n                      </td>\r\n\r\n                      <td class=\"text-left\">\r\n                        {{ item.senderLastName ? item.senderLastName : '' }}\r\n                        {{ item.senderFirstName ? item.senderFirstName : '' }}\r\n                        {{ item.senderParentName ? item.senderParentName : '' }}\r\n                      </td>\r\n\r\n                      <td\r\n                          :class=\"!item.isRead ? 'font-weight-bold' : ''\"\r\n                          class=\"text-center\"\r\n                      >\r\n                        {{ item.date }}\r\n                      </td>\r\n                      <td\r\n                          :class=\"!item.isRead ? 'font-weight-bold' : ''\"\r\n                          class=\"text-center\"\r\n                      >\r\n                        <p class=\"pre m-0\">{{ item.fileName }}</p>\r\n                      </td>\r\n\r\n                      <td\r\n                          :class=\"!item.isRead ? 'font-weight-bold' : ''\"\r\n                          class=\"text-center p-0\"\r\n                      >\r\n                        {{\r\n                          item.action == \"SIGNATURE\"\r\n                              ? $t(\"forSignature\")\r\n                              : item.action == \"AGREEMENT\"\r\n                                  ? $t(\"forAgreement\")\r\n                                  : item.action == \"REVIEW\"\r\n                                      ? $t(\"forReview\")\r\n                                      : \"\"\r\n                        }}\r\n                        <i\r\n                            v-if=\"item.action == 'SIGNATURE' && item.signed\"\r\n                            class=\"mdi mdi-check-all font-size-22 p-0 ml-2 text-success\"\r\n                        ></i>\r\n\r\n                        <i\r\n                            v-if=\"item.action == 'AGREEMENT' && item.isAgreed\"\r\n                            class=\"mdi mdi-handshake font-size-22 ml-2 text-success\"\r\n                        ></i>\r\n\r\n                        <i\r\n                            v-if=\"item.action === 'REVIEW' && item.isViewed\"\r\n                            class=\"mdi mdi-file-eye font-size-18 font-size-16 ml-2 text-success\"\r\n                        ></i>\r\n                      </td>\r\n                    </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </b-overlay>\r\n              </div>\r\n              <div\r\n                  v-if=\"total > 0\"\r\n                  class=\"row\"\r\n              >\r\n                <div class=\"col-lg-12\">\r\n                  <b-pagination\r\n                      v-model=\"page\"\r\n                      :per-page=\"limit\"\r\n                      :total-rows=\"total\"\r\n                      class=\"m-0\"\r\n                      size=\"sm\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-5\">\r\n            <div class=\"card card-body\">\r\n              <table class=\"table m-0\">\r\n                <tbody>\r\n                <tr v-if=\"selectedTrItem.id\">\r\n                  <td class=\"text-muted text-center p-0\" colspan=\"2\">\r\n                    <div class=\"p-4\">\r\n                      <div v-if=\"['SIGNED', 'CANCELED'].indexOf(selectedTrItem.status) === -1\">\r\n                        <b-button-group v-if=\"\r\n                                (selectedTrItem.action === 'SIGNATURE' &&\r\n                                  !selectedTrItem.signed) ||\r\n                                (selectedTrItem.action === 'AGREEMENT' &&\r\n                                  !selectedTrItem.isAgreed) ||\r\n                                (selectedTrItem.action === 'REVIEW' &&\r\n                                  !selectedTrItem.isViewed && !selectedTrItem.cancelled)\r\n                              \">\r\n                          <!-- DXA uchun project yaratish  -->\r\n                          <b-button\r\n                              v-if=\"selectedTrItem.applicationTypeInProject === 'FROM_DXA' && selectedTrItem.status === 'SEND_FOR_COMMISSION'\"\r\n                              variant=\"success\"\r\n                              @click=\"signItem(selectedTrItem)\"\r\n                          >\r\n                            <i class=\"fa fa-check\"></i><br>\r\n                            {{ $t('actions.for_start_commission') }}\r\n                          </b-button>\r\n                          <!-- Boshqalar uchun tasdiqlash, korish, imzolash  -->\r\n                          <b-button\r\n                              v-if=\"selectedTrItem.applicationTypeInProject !== 'FROM_DXA' && selectedTrItem.applicationTypeInProject !== 'NOT_BELONG' && ['REJECTED'].indexOf(selectedTrItem.status) === -1\"\r\n                              variant=\"success\"\r\n                              @click=\"signItem(selectedTrItem)\"\r\n                          >\r\n                            <i class=\"fa fa-check\"></i><br>\r\n                            {{\r\n                              selectedTrItem.action === \"SIGNATURE\"\r\n                                  ? (selectedTrItem.status === 'SEND_SIGN' ? $t(\"submodules.commission.doc_status.send_for_commission\") : $t(\"submodules.reports.make_sign\"))\r\n                                  : selectedTrItem.action === \"REVIEW\"\r\n                                      ? (selectedTrItem.status === 'SEND_FOR_COMMISSION' ? $t(\"submodules.commission.doc_status.send_for_commission\") : $t(\"confirm\"))\r\n                                      : selectedTrItem.action === \"AGREEMENT\"\r\n                                          ? $t(\"submodules.reports.make_agreement\")\r\n                                          : \"\"\r\n                            }}\r\n                          </b-button>\r\n                          <b-button\r\n                              v-if=\"selectedTrItem.applicationTypeInProject === 'NOT_BELONG'\"\r\n                              variant=\"success\"\r\n                              @click=\"signItem(selectedTrItem)\"\r\n                          >\r\n                            <i class=\"fa fa-check\"></i><br>\r\n                            {{ $t(\"submodules.reports.make_sign\") }}\r\n                          </b-button>\r\n\r\n                          <b-button\r\n                              v-if=\"selectedTrItem.applicationTypeInProject !== 'FROM_DXA'\r\n                                 && selectedTrItem.status ==='SEND_FOR_COMMISSION'\r\n                                 && selectedTrItem.action === 'SIGNATURE'\"\r\n                              variant=\"success\"\r\n                              @click=\"signItem(selectedTrItem)\"\r\n                          >\r\n                            <i class=\"fa fa-check\"></i><br>\r\n                            {{ $t(\"submodules.reports.make_sign\") }}\r\n                          </b-button>\r\n                          <b-button\r\n                              v-if=\"(selectedTrItem.applicationTypeInProject === 'FROM_DXA' && selectedTrItem.status !=='SEND_FOR_COMMISSION' && selectedTrItem.action !== 'SIGNATURE')\"\r\n                              variant=\"success\"\r\n                              @click=\"signItem(selectedTrItem)\"\r\n                          >\r\n                            <i class=\"fa fa-check\"></i><br>\r\n                            {{\r\n                              selectedTrItem.action === \"REVIEW\"\r\n                                  ? $t(\"confirm\")\r\n                                  : selectedTrItem.action === \"AGREEMENT\"\r\n                                      ? $t(\"submodules.reports.make_agreement\")\r\n                                      : \"\"\r\n                            }}\r\n                          </b-button>\r\n\r\n                          <b-button\r\n                              v-if=\"(selectedTrItem.applicationTypeInProject === 'FROM_DXA' && selectedTrItem.status ==='SEND_SIGN'\r\n                              && selectedTrItem.action ==='SIGNATURE')\"\r\n                              variant=\"success\"\r\n                              @click=\"signAcceptedItem(selectedTrItem)\"\r\n                          >\r\n                            <i class=\"fa fa-check\"></i><br>\r\n                            {{ $t(\"submodules.reports.doc_make_sign\") }}\r\n                          </b-button>\r\n\r\n                          <b-button\r\n                              v-if=\"(selectedTrItem.applicationTypeInProject === 'FROM_DXA' && selectedTrItem.status ==='SEND_SIGN'\r\n                              && selectedTrItem.action ==='SIGNATURE') \"\r\n                              variant=\"danger\"\r\n                              @click=\"signRejectedItem(selectedTrItem)\"\r\n                          >\r\n                            <i class=\"fa fa-times\"></i><br>\r\n                            {{ $t(\"submodules.reports.doc_reject_make_sign\") }}\r\n                          </b-button>\r\n\r\n                          <b-button\r\n                              v-if=\"selectedTrItem.applicationTypeInProject !== 'FROM_DXA'\r\n                                 && selectedTrItem.applicationTypeInProject !=='NOT_BELONG'\r\n                                 && ['SENT_FOR_REJECT', 'REJECTED', 'TO_INVOKE_SIGNED', 'TO_SIGN_FINISH_LETTER', 'FINISH_LETTER_SIGN_AND_SEND'].indexOf(selectedTrItem.status) === -1 && !selectedTrItem.isHeadOfDepartment\"\r\n                              variant=\"danger\"\r\n                              @click=\"showRejectedModal\"\r\n                          >\r\n                            <i class=\"fa fa-times\"></i><br>\r\n                            {{ $t(\"submodules.reports.rejected\") }}\r\n                          </b-button>\r\n                          <!--Rasmiylatirishda hato kamchiliklar tufayli qaytarildi-->\r\n                          <b-button\r\n                              v-if=\"(selectedTrItem.applicationTypeInProject === 'FROM_DXA' && selectedTrItem.status === 'SEND_SIGN')\"\r\n                              v-b-tooltip.hover.top\r\n                              :title=\"$t('submodules.commission.returnByRais')\"\r\n                              class=\"ml-1\"\r\n                              variant=\"warning\"\r\n                              @click=\"showRejectedByRaisModal(selectedTrItem)\"\r\n                          >\r\n                            <i class=\"fa fa-times\"></i><br>\r\n                            {{ $t(\"column.return\") }}\r\n                          </b-button>\r\n                          <b-button\r\n                              v-if=\"['TO_SIGN_REJECT_LETTER'].indexOf(selectedTrItem.status) === -1 && selectedTrItem.action === 'SIGNATURE' && selectedTrItem.fileType === 'docx'\"\r\n                              :to=\"{\r\n                                name: 'Office-DOCUMENT-commission',\r\n                                query: { id: selectedTrItem.letterId, page: 'GET' },\r\n                              }\"\r\n                              target=\"_blank\"\r\n                              variant=\"light\"\r\n                          >\r\n                            <i class=\"fa fa-pencil-alt\"></i><br>\r\n                            {{ $t(\"actions.edit\") }}\r\n                          </b-button>\r\n                        </b-button-group>\r\n                        <!-- Loyihani korish va attachmentni  korish -->\r\n                        <b-button-group>\r\n                          <!-- Ko'rish -->\r\n                          <b-button\r\n                              v-if=\"['SENT_FOR_REJECT', 'REJECT_LETTER_CREATED', 'TO_SIGN_REJECT_LETTER', 'REJECTED', 'TO_INVOKE_SIGNED', 'FINISH_LETTER_SIGN_AND_SEND'].indexOf(selectedTrItem.status) === -1\"\r\n                              variant=\"info\"\r\n                              @click=\"viewProject(selectedTrItem)\"\r\n                          >\r\n                            <i class=\"fa fa-eye\"></i><br>\r\n                            {{ $t(\"actions.view_project\") }}\r\n                          </b-button>\r\n                          <!-- loyihani korish-->\r\n                          <b-button\r\n                              variant=\"primary\"\r\n                              @click=\"viewIlova(selectedTrItem)\"\r\n                          >\r\n                            <i class=\"fa fa-eye\"></i><br>\r\n                            {{ $t(\"actions.view\") }}\r\n                          </b-button>\r\n                        </b-button-group>\r\n                      </div>\r\n                      <b-button-group v-else>\r\n                        <b-button\r\n                            variant=\"info\"\r\n                            @click=\"viewProject(selectedTrItem)\"\r\n                        >\r\n                          <i class=\"fa fa-eye\"></i><br>\r\n                          {{ $t(\"actions.view_project\") }}\r\n                        </b-button>\r\n                        <b-button\r\n                            variant=\"primary\"\r\n                            @click=\"viewIlova(selectedTrItem)\"\r\n                        >\r\n                          <i class=\"fa fa-eye\"></i><br>\r\n                          {{ $t(\"actions.view\") }}\r\n                        </b-button>\r\n                      </b-button-group>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n\r\n                <!-- <tr>\r\n                  <td class=\"text-muted\">\r\n                    <b>\r\n                      {{ $t(\"docNumber\") }}\r\n                    </b>\r\n                  </td>\r\n                  <td>\r\n                    {{\r\n                      selectedTrItem.id && selectedTrItem.regNumber\r\n                        ? selectedTrItem.regNumber\r\n                        : \"\"\r\n                    }}\r\n                  </td>\r\n                </tr> -->\r\n                <tr>\r\n                  <td class=\"text-muted\">\r\n                    <b>\r\n                      {{ $t(\"docName\") }}\r\n                    </b>\r\n                  </td>\r\n                  <td>\r\n                    {{\r\n                      selectedTrItem.id && selectedTrItem.fileName\r\n                          ? selectedTrItem.fileName\r\n                          : \"\"\r\n                    }}\r\n                  </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td class=\"text-muted\">\r\n                    <b>\r\n                      {{ $t(\"docCreatedDate\") }}\r\n                    </b>\r\n                  </td>\r\n                  <td>\r\n                    {{\r\n                      selectedTrItem.created\r\n                    }}\r\n                  </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td class=\"text-muted\">\r\n                    <b>\r\n                      {{ $t(\"submodules.dxa.dxa_application_number\") }}\r\n                    </b>\r\n                  </td>\r\n                  <td>\r\n                    {{\r\n                      visaInfoById.applicationRegNumber\r\n                    }}\r\n                  </td>\r\n                </tr>\r\n\r\n\r\n                <tr>\r\n                  <td class=\"text-muted\">\r\n                    <b>\r\n                      {{ $t(\"submodules.commission.income_date\") }}\r\n                    </b>\r\n                  </td>\r\n                  <td>\r\n                    {{\r\n                      visaInfoById.dateCameFromDxa\r\n                    }}\r\n                  </td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td class=\"text-muted\">\r\n                    <b> {{ $t(\"submodules.dxa.application_type\") }}</b> <br>\r\n                  </td>\r\n                  <td>\r\n                    <span\r\n                        v-if=\"visaInfoById.applicationType == 'FOR_SALE'\"\r\n                        class=\"text-left\"\r\n                        style=\"font-size: 12px\"\r\n                    >\r\n                      {{ $t(\"submodules.dxa.dxa_application_1\") }}\r\n                    </span>\r\n                    <span\r\n                        v-else-if=\"visaInfoById.applicationType == 'FOR_ADD'\"\r\n                        class=\"text-left\"\r\n                        style=\"font-size: 12px\"\r\n                    > {{ $t(\"submodules.dxa.dxa_application_2\") }}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"text-muted\">\r\n                    <b>{{ $t(\"whoSent\") }}</b>\r\n                  </td>\r\n                  <td class=\"pl-0\">\r\n                    <ul\r\n                        v-if=\"selectedTrItem.id\"\r\n                        id=\"il\"\r\n                        class=\"list-unstyled chat-list\"\r\n                    >\r\n                      <li>\r\n                        <div\r\n                            class=\"media d-flex\"\r\n                            style=\"align-items: center\"\r\n                        >\r\n                          <div class=\"align-self-center mr-3\"></div>\r\n                          <div\r\n                              v-if=\"selectedTrItem.ownerUploadPath\"\r\n                              class=\"align-self-center mr-3\"\r\n                          >\r\n                            <img\r\n                                :src=\"`${hrUrl}/${selectedTrItem.ownerUploadPath}`\"\r\n                                alt\r\n                                class=\"rounded-circle avatar-sm\"\r\n                                height=\"auto\"\r\n                            />\r\n                          </div>\r\n                          <div\r\n                              v-if=\"!selectedTrItem.ownerUploadPath\"\r\n                              class=\"avatar-sm align-self-center mr-3\"\r\n                          >\r\n                            <span\r\n                                class=\" avatar-title rounded-circle bg-soft-primary text-primary\">{{ selectedTrItem.ownerFirstName.charAt(0) }}</span>\r\n                          </div>\r\n                          <div class=\"media-body overflow-hidden\">\r\n                            <h5 class=\"font-size-14 mb-1\">\r\n                              {{\r\n                                `${selectedTrItem.ownerLastName} ${selectedTrItem.ownerFirstName} ${selectedTrItem.ownerParentName}`\r\n                              }}\r\n                            </h5>\r\n                            <p class=\"m-0\">\r\n                              {{\r\n                                getName({\r\n                                  nameLt: selectedTrItem.depNameLt,\r\n                                  nameRu: selectedTrItem.depNameRu,\r\n                                  nameUz: selectedTrItem.depNameUz,\r\n                                })\r\n                              }}\r\n                            </p>\r\n                            <p class=\"m-0\">\r\n                              {{\r\n                                getName({\r\n                                  nameLt: selectedTrItem.positionNameLt,\r\n                                  nameRu: selectedTrItem.positionNameRu,\r\n                                  nameUz: selectedTrItem.positionNameUz,\r\n                                })\r\n                              }}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"text-muted\">\r\n                    <b>{{ $t(\"puropseOfSending\") }}</b>\r\n                  </td>\r\n                  <td>\r\n                    {{\r\n                      selectedTrItem.id\r\n                          ? selectedTrItem.action == \"SIGNATURE\"\r\n                              ? $t(\"forSignature\")\r\n                              : selectedTrItem.action == \"AGREEMENT\"\r\n                                  ? $t(\"forAgreement\")\r\n                                  : selectedTrItem.action == \"REVIEW\"\r\n                                      ? $t(\"forReview\")\r\n                                      : \"\"\r\n                          : \"\"\r\n                    }}\r\n                  </td>\r\n                </tr>\r\n                <tr v-if=\"filesList.length > 0\">\r\n                  <td class=\"text-muted\">\r\n                    <b>{{ $t(\"letter_ilovalar\") }}</b>\r\n                  </td>\r\n                  <td></td>\r\n                </tr>\r\n                <tr\r\n                    v-for=\"(item, index) in filesList\"\r\n                    :key=\"index + 'FILE'\"\r\n                    class=\"mt-3\"\r\n                >\r\n                  <td\r\n                      class=\"p-2\"\r\n                      colspan=\"2\"\r\n                  >\r\n                    <div class=\"\r\n                            d-flex\r\n                            align-items-center\r\n                            bg-light\r\n                            p-2\r\n                            justify-content-between\r\n                          \">\r\n                      <div class=\"d-flex align-items-center\">\r\n                        <a\r\n                            :download=\"\r\n                                getExt(item.uploadPath) == 'PDF' ||\r\n                                getExt(item.uploadPath) == 'pdf'\r\n                                  ? false\r\n                                  : item.uploadPath\r\n                              \"\r\n                            :href=\"\r\n                                getExt(item.uploadPath) == 'PDF' ||\r\n                                getExt(item.uploadPath) == 'pdf'\r\n                                  ? `#`\r\n                                  : `${baseUrl}/${item.uploadPath}`\r\n                              \"\r\n                            @click=\"viewIlova(item)\"\r\n                        >\r\n                          <FileView\r\n                              :uploadPath=\"item.fileName\"\r\n                              class=\"my-card-hovered\"\r\n                          />\r\n                        </a>\r\n                        <span class=\"ml-2\">\r\n                                                        {{ item.fileName }}\r\n                                                    </span>\r\n                      </div>\r\n                      <a\r\n                          :href=\"`${baseUrl}/${item.uploadPath}`\"\r\n                          class=\"mr-3 p-1 btn btn-sm btn-light\"\r\n                          download\r\n                      >\r\n                        <i class=\"bx bx-download font-size-20\"></i>\r\n                      </a>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr v-if=\"selectedTrItem.status === 'REJECT_LETTER_CREATED' && rejectedLetter\">\r\n                  <td class=\"text-muted\">\r\n                    <a :download=\"getExt(rejectedLetter.url) === 'pdf' ? false : rejectedLetter.url\"\r\n                       :href=\"getExt(rejectedLetter.url) === 'pdf' ? `#` : `${baseUrl}/${rejectedLetter.url}`\"\r\n                       @click=\"viewFile(rejectedLetter.url)\"\r\n                    >\r\n                      <FileView :uploadPath=\"rejectedLetter.url\" class=\"d-inline-block my-card-hovered\"/>\r\n                      <b class=\"align-top d-inline-block p-2 py-3\">{{ rejectedLetter.fileName }}</b>\r\n                    </a>\r\n                  </td>\r\n                  <td>\r\n                    <b-btn variant=\"success m-2\" @click=\"sendLetterToChairman.modal = true\"\r\n                           v-if=\"rejectedLetter.status === 'CREATED'\">\r\n                      <i class=\"fa fa-file-signature\"></i>\r\n                      {{ $t('submodules.commission.send_for_sign') }}\r\n                    </b-btn>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td class=\"text-muted\">\r\n                    <b>{{ $t(\"qabulQiluvchilar\") }}</b>\r\n                  </td>\r\n                  <td></td>\r\n                </tr>\r\n                </tbody>\r\n\r\n              </table>\r\n              <b-overlay\r\n                  :opacity=\"0.1\"\r\n                  :show=\"loaderReceiver\"\r\n                  rounded=\"sm\"\r\n              >\r\n                <Receivers\r\n                    :selectedAgreement=\"infoData.agreement\"\r\n                    :selectedReview=\"infoData.review\"\r\n                    :selectedSignature=\"infoData.signature\"\r\n                />\r\n              </b-overlay>\r\n              <!-- COMMISSION FILES -->\r\n              <div\r\n                  class=\"wrapper\"\r\n              >\r\n                <span CLASS=\"fromcenter\">{{ $t('commission_attached_files') }}</span>\r\n              </div>\r\n              <div\r\n                  v-if=\"selectedTrItem && projectFilesList.length\"\r\n                  class=\"card card-body card-tabs mt-1\"\r\n                  style=\"min-height: 10em; width: 100%\"\r\n              >\r\n                <tr\r\n                    v-for=\"(item, index) in projectFilesList\"\r\n                    :key=\"index + 'FILE'\"\r\n                    class=\"mt-1\"\r\n                >\r\n                  <div class=\"d-flex align-items-center bg-light p-2 justify-content-between\">\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <a :download=\"getExt(item.url) === 'PDF' || getExt(item.url) === 'pdf' ? false : item.url\"\r\n                         :href=\"getExt(item.url) === 'PDF' || getExt(item.url) === 'pdf' ? `#` : `${baseUrl}/${item.url}`\"\r\n                         @click=\"viewIlovaProject(item.url)\"\r\n                      >\r\n                        <BaseFileViewer\r\n                            :uploadPath=\"item.url\"\r\n                            class=\"my-card-hovered\"\r\n                        />\r\n                      </a>\r\n                      <span class=\"ml-2\">\r\n                        {{ item.fileName }}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </tr>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <b-modal\r\n        v-model=\"viewFileModal\"\r\n        :title=\"$t('actions.view')\"\r\n        scrollable\r\n        size=\"xl\"\r\n    >\r\n      <div\r\n          v-if=\"fileUploadPath\"\r\n          style=\"height: 700px\"\r\n      >\r\n        <embed\r\n            :src=\"`${baseUrl}/${fileUploadPath}`\"\r\n            height=\"800\"\r\n            type=\"application/pdf\"\r\n            width=\"100%\"\r\n        />\r\n      </div>\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"secondary\"\r\n            @click=\"viewFileModal = false\"\r\n        >{{\r\n            $t(\"actions.close\")\r\n          }}\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n  </div>\r\n  <!-- </Layout> -->\r\n</template>\r\n\r\n<style>\r\n.bg-class {\r\n  background-color: #fbfbfb !important;\r\n}\r\n</style>"]}]}