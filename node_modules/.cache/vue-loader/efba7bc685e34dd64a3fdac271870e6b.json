{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\references\\modules\\product\\CreateOrUpdate.vue?vue&type=style&index=0&id=9eaf3f74&scoped=true&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\references\\modules\\product\\CreateOrUpdate.vue","mtime":1675054786283},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5jb2wtZm9ybS1sYWJlbCB7DQogIHBhZGRpbmctdG9wOiAwOw0KfQ0KDQp1bCB7DQogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsNCn0NCg=="},{"version":3,"sources":["CreateOrUpdate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;AACA;;AAEA;AACA;AACA","file":"CreateOrUpdate.vue","sourceRoot":"src/modules/references/modules/product","sourcesContent":["<template>\r\n  <base-create-or-update-wrapper\r\n      @save=\"save\"\r\n      has-save-suspend\r\n      :custom-title=\"$t('actions.update')\"\r\n  >\r\n    <ValidationObserver ref=\"observer\" v-slot=\"{}\">\r\n      <b-row class=\"mb-3\">\r\n        <b-col sm=\"4\">\r\n          <BaseInputWithValidation\r\n              rules=\"required\"\r\n              class=\"required\"\r\n              v-model=\"editingItem.nameUz\"\r\n              label-on-top\r\n              :label=\"$t('column.name_uz')\"\r\n              :placeholder=\"''\"\r\n          />\r\n        </b-col>\r\n        <b-col sm=\"4\">\r\n          <BaseInputWithValidation\r\n              not-required\r\n              v-model=\"editingItem.nameLt\"\r\n              label-on-top\r\n              :label=\"$t('column.name_lt')\"\r\n              :placeholder=\"''\"\r\n          />\r\n        </b-col>\r\n        <b-col sm=\"4\">\r\n          <BaseInputWithValidation\r\n              not-required\r\n              v-model=\"editingItem.nameRu\"\r\n              label-on-top\r\n              :label=\"$t('column.name_ru')\"\r\n              :placeholder=\"''\"\r\n          />\r\n        </b-col>\r\n      </b-row>\r\n      <b-row class=\"mb-3\">\r\n        <b-col sm=\"4\">\r\n          <BaseMultiselectWithValidation\r\n              not-required\r\n              v-model=\"editingItem.unitId\"\r\n              label-on-top\r\n              :options=\"units.map(el => el.id)\"\r\n              :label=\"$t('column.units')\"\r\n              :custom-label=\"customLabelUnit\"\r\n              :placeholder=\"''\"\r\n              open-direction=\"bottom\"\r\n              :max-height=\"600\"\r\n              :show-labels=\"false\"\r\n          />\r\n        </b-col>\r\n        <b-col sm=\"4\">\r\n          {{ $t('actions.export_import_type')}}\r\n          <b-form-select>\r\n            <b-form-select-option :value=\"key\" v-for=\"(value, key) in productType\" :key=\"key\">\r\n              {{ value }}\r\n            </b-form-select-option>\r\n          </b-form-select>\r\n        </b-col>\r\n        <b-col sm=\"4\">\r\n          {{ $t('actions.product_type')}}\r\n          <b-form-select>\r\n            <b-form-select-option :value=\"key\" v-for=\"(value, key) in productProductType\" :key=\"key\">\r\n              {{ value }}\r\n            </b-form-select-option>\r\n          </b-form-select>\r\n        </b-col>\r\n      </b-row>\r\n    </ValidationObserver>\r\n  </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'price/product'\r\n/** YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport {ProductType, ProductProductType} from '@/helpers/constants'\r\nexport default {\r\n  /** DATA */\r\n  data() {\r\n    return {\r\n      editingItem: {},\r\n      statuses: [],\r\n      units: [],\r\n    }\r\n  },\r\n  /** COMPUTED */\r\n  computed: {\r\n    isModeCreate() {\r\n      return this.$route.name === 'ReferencesProductCreate'\r\n    },\r\n    computedObserver() {\r\n      return this.$refs.observer\r\n    },\r\n    productType() {\r\n      return ProductType\r\n    },\r\n    productProductType() {\r\n      return ProductProductType\r\n    },\r\n  },\r\n  /** METHODS */\r\n  methods: {\r\n    treeClosed(veeName) {\r\n      this.computedObserver.refs[veeName].validate();\r\n    },\r\n    customLabelUnit (opt) {\r\n      let selected = this.units.find(e => e.id == (opt.id ? opt.id : opt));\r\n      if (selected) {\r\n        return this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n      }\r\n      return ``;\r\n    },\r\n    save() {\r\n      this.computedObserver.validate().then(valid => {\r\n        if (valid) {\r\n          if (this.editingItem.id) {\r\n            crudAndListsService.update(MAIN_API_URL, this.editingItem).then(res => {\r\n              this.computedObserver.reset()\r\n              this.editingItem = Object.assign({}, {});\r\n              this.$router.go(-1)\r\n              this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n            })\r\n          } else {\r\n            crudAndListsService.create(MAIN_API_URL, this.editingItem).then(res => {\r\n              this.computedObserver.reset()\r\n              this.editingItem = Object.assign({}, {});\r\n              this.$router.go(-1)\r\n              this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n            })\r\n          }\r\n        } else {\r\n          this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n        }\r\n      });\r\n    },\r\n  },\r\n  /** CREATED */\r\n  async created() {\r\n    if (this.isModeCreate) {\r\n      await crudAndListsService.getEmpty(MAIN_API_URL)\r\n          .then(res => {\r\n            this.editingItem = res.data\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    } else {\r\n      await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, false)\r\n          .then(res => {\r\n            this.editingItem = res.data\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    }\r\n    await crudAndListsService.searchList('directory/units', this.var_default_search_payload)\r\n        .then((res) => {\r\n          this.units = res.data.list;\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n  padding-top: 0;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n}\r\n</style>"]}]}