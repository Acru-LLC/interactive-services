{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\commission\\create\\SendForSign.vue?vue&type=style&index=0&id=1c1b945e&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\commission\\create\\SendForSign.vue","mtime":1675054786260},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouc3RpY2t5SGVhZCB7DQogIG1hcmdpbjogMCAhaW1wb3J0YW50Ow0KICBwYWRkaW5nOiAxNXB4ICFpbXBvcnRhbnQ7DQogIGJvcmRlci1yYWRpdXM6IDA7DQogIHBvc2l0aW9uOiBmaXhlZDsNCiAgdG9wOiA3MHB4Ow0KICBsZWZ0OiAwOw0KICByaWdodDogMDsNCiAgYmFja2dyb3VuZDogd2hpdGU7DQogIHotaW5kZXg6IDQ7DQogIHdpZHRoOiAxMDAlOw0KfQ0K"},{"version":3,"sources":["SendForSign.vue"],"names":[],"mappings":";AAsbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SendForSign.vue","sourceRoot":"src/modules/commission/create","sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"myHeader\" class=\"card card-body stickyHead\">\r\n      <div class=\"d-flex\">\r\n        <div style=\"width: 58%\">\r\n          <h5 v-if=\"numPages\" class=\"float-right m-0\">\r\n            {{ currentPage }} / {{ numPages }}\r\n          </h5>\r\n        </div>\r\n        <div style=\"width: 43%\">\r\n          <div class=\"float-right d-flex align-items-center\">\r\n            <b-button-group>\r\n              <b-button class=\"float-right\" variant=\"primary\" @click=\"signData\">\r\n                <b-overlay :opacity=\"0.1\" :show=\"loaderQrCode\" rounded=\"sm\">\r\n                  <i class=\"fa fa-qrcode mr-1\"></i>\r\n                  {{ $t(\"actions.qrcode\") }}\r\n                </b-overlay>\r\n              </b-button>\r\n              <b-button class=\"float-right mr-2\" variant=\"success\" @click=\"save\">\r\n                <i class=\"fa fa-save\"></i>\r\n                {{ $t(\"actions.save\") }}\r\n              </b-button>\r\n            </b-button-group>\r\n            <b-button :to=\"{name: 'LetterCreate'}\" class=\"float-right mr-2\" variant=\"primary\">\r\n              <i class=\"fa fa-arrow-left\"></i>\r\n            </b-button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"mt-5\">\r\n      <b-row>\r\n        <b-col cols=\"12\">\r\n          <div class=\"d-flex justify-content-center\">\r\n            <b-overlay\r\n                :opacity=\"1\"\r\n                :show=\"loaderPdf\"\r\n                rounded=\"lg\"\r\n                variant=\"white\"\r\n            >\r\n              <div\r\n                  id=\"pdfId\"\r\n                  style=\"width: 270mm !important;min-height: 210mm;position: relative;\"\r\n              >\r\n                <VueDragResize\r\n                    v-if=\"imgUrl && qrCodePage === currentPage\"\r\n                    :h=\"110\"\r\n                    :isActive=\"true\"\r\n                    :isResizable=\"false\"\r\n                    :parent=\"true\"\r\n                    :parentLimitation=\"true\"\r\n                    :w=\"110\"\r\n\r\n                    :x=\"x\"\r\n                    :y=\"y\"\r\n                    style=\"z-index: 3\"\r\n                    v-on:dragging=\"resize\"\r\n                    v-on:resizing=\"resize\"\r\n                >\r\n                  <img\r\n                      :src=\"`${ imgUrl ? `data:image/png;base64, ${imgUrl}` : require('@/assets/img.png')}`\"\r\n                      @mouseenter=\"mouseEnter\"\r\n                      @mouseleave=\"mouseLeave\"\r\n                      @mousemove=\"mousemove\"\r\n                  />\r\n                </VueDragResize>\r\n                <pdf\r\n                    v-if=\"src\"\r\n                    ref=\"myPdfComponent\"\r\n                    :page=\"currentPage\"\r\n                    :src=\"src\"\r\n                    @num-pages=\"numPages = $event\"\r\n                />\r\n              </div>\r\n            </b-overlay>\r\n          </div>\r\n        </b-col>\r\n      </b-row>\r\n      <b-row>\r\n        <b-col cols=\"12\">\r\n          <div class=\"d-flex mt-4 justify-content-center\">\r\n            <div\r\n                class=\"d-flex mt-4\"\r\n                style=\"overflow: auto; max-width: 90%\"\r\n            >\r\n              <div\r\n                  v-for=\"page in numPages\"\r\n                  :key=\"page + 'page'\"\r\n                  class=\"ml-3 mb-4\"\r\n              >\r\n                <div\r\n                    :class=\"currentPage === page ? 'my-card-hovered-pdf-active' : ''\"\r\n                    class=\"my-card-hovered-pdf\"\r\n                    @click.prevent=\"setCurrentPage(page)\"\r\n                >\r\n                  <div style=\"width: 200px;!important;position:relative\">\r\n                    <div\r\n                        v-if=\"imgUrl && qrCodePage === page\"\r\n                        :style=\"{top: `${y / 5.1}px`,left: `${x / 5.08}px`,}\"\r\n                        style=\"position: absolute; z-index: 999\"\r\n                    >\r\n                      <img\r\n                          v-if=\"imgUrl\"\r\n                          :height=\"20\"\r\n                          :src=\"`${imgUrl ? `data:image/png;base64, ${imgUrl}`: require('@/assets/img.png')}`\"\r\n                          :width=\"20\"\r\n                          alt=\"\"/>\r\n                    </div>\r\n                    <pdf\r\n                        v-if=\"src\"\r\n                        :page=\"page\"\r\n                        :src=\"src\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </b-col>\r\n      </b-row>\r\n    </div>\r\n    <b-modal\r\n        v-model=\"commissionsModal\"\r\n        :title=\"`${$t('submodules.commission.title')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <BaseMultiselectWithValidation\r\n          v-model=\"managementEmployeeId\"\r\n          :custom-label=\"customLabelCommissionTypes\"\r\n          :label=\"$t('column.director')\"\r\n          :max-height=\"600\"\r\n          :options=\"managementEmployees ? managementEmployees.map(e => e.id): []\"\r\n          :show-labels=\"false\"\r\n          class=\"required\"\r\n          label-on-top\r\n          open-direction=\"bottom\"\r\n          placeholder=\"\"\r\n          rules=\"required\"\r\n      />\r\n\r\n      <b-form-textarea\r\n          v-model=\"managementComment\"\r\n          :placeholder=\"$t('submodules.doc.summary')\"\r\n          class=\"mt-3\"\r\n          rows=\"5\"\r\n      ></b-form-textarea>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"success\"\r\n            @click=\"openSignatureModalForCommission\"\r\n        >\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"commissionModalLoader\"\r\n              rounded=\"sm\"\r\n          >\r\n            {{ $t(\"actions.continue\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <b-modal\r\n        v-model=\"signatureModal\"\r\n        :title=\"`${$t('submodules.reports.make_sign')}`\"\r\n        hide-footer\r\n        scrollable\r\n        size=\"lg\"\r\n    >\r\n      <b-overlay\r\n          :opacity=\"0.1\"\r\n          :show=\"loaderSign\"\r\n          rounded=\"sm\"\r\n      >\r\n        <SignKeys\r\n            :dataToSign=\"currentDoc\"\r\n            @sign=\"signSuccess\"\r\n        />\r\n      </b-overlay>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nimport pdf from \"vue-pdf\";\r\nimport Service from \"../../letter/letterService\";\r\nimport SignKeys from \"../../letter/SignKeys.vue\";\r\nimport {mapState} from \"vuex\";\r\nimport VueDragResize from \"vue-drag-resize\";\r\nimport crudAndListsService from '@/shared/services/crud_and_list.service'\r\nimport {showMsgError, showMsgSuccess} from \"@/helper\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      x: 200,\r\n      y: 300,\r\n      src: null,\r\n      width: 110,\r\n      height: 110,\r\n      imgUrl: null,\r\n      numPages: undefined,\r\n      pageCount: 0,\r\n      loaderPdf: false,\r\n      qrCodePage: null,\r\n      loaderSign: false,\r\n      currentDoc: {},\r\n      currentPage: 1,\r\n      pageYOffset: 0,\r\n      loaderQrCode: false,\r\n      signatureModal: false,\r\n      managementEmployees: [],\r\n      commissionsModal: false,\r\n      managementEmployeeId: null,\r\n      deleteQrPosition: false,\r\n      managementComment: '',\r\n      commissionModalLoader: false,\r\n    };\r\n  },\r\n  name: \"SendForSign\",\r\n  computed: {\r\n    ...mapState('auth', '[UserInfo]'),\r\n    ...mapState('auth', 'currentApplicationItem')\r\n  },\r\n  components: {\r\n    VueDragResize,\r\n    SignKeys,\r\n    pdf,\r\n  },\r\n  created() {\r\n    this.getByIdLetter();\r\n    document.addEventListener(\"keyup\", this.keyUpEvents);\r\n  },\r\n  methods: {\r\n    openSignatureModalForCommission() {\r\n      if (this.managementEmployeeId) {\r\n        this.signatureModal = true\r\n      } else {\r\n        this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n      }\r\n    },\r\n    customLabelCommissionTypes(opt) {\r\n      let selected = this.managementEmployees.find(e => e.id === opt);\r\n      if (selected) {\r\n        return selected.fullName\r\n      }\r\n      return ``;\r\n    },\r\n    convertToPdf(selectedItem, forSign = false) {\r\n      return new Promise((res, rej) => {\r\n        let config = {\r\n          url: selectedItem.url,\r\n          outputtype: \".pdf\",\r\n          forSign: forSign,\r\n          key: selectedItem.key,\r\n        };\r\n        Service.convertToPdfByApi(config)\r\n            .then((rs) => {\r\n              if (rs.data.uploadPath) {\r\n                res(rs.data.uploadPath);\r\n              } else {\r\n                res(false);\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              rej(e);\r\n            });\r\n      });\r\n    },\r\n    mouseEnter() {\r\n      this.deleteQrPosition = true;\r\n    },\r\n    mouseLeave() {\r\n      this.deleteQrPosition = false;\r\n    },\r\n    mousemove() {\r\n      this.deleteQrPosition = true;\r\n    },\r\n    async signSuccess(data) {\r\n      this.loaderSign = true;\r\n      let eImzo = {\r\n        signedContent: data.content,\r\n        inn: data.inn,\r\n        pnfl: data.pnfl\r\n      };\r\n      Service.onlyDocSignSendToRaisOnInner(eImzo, this.currentDoc.id,\r\n        this.x,\r\n        this.y,\r\n        this.currentPage - 1, this.managementEmployeeId, this.managementComment)\r\n        .then(async () => {\r\n          this.$router.push({name: 'LetterCreate'});\r\n          showMsgSuccess(this.$t(\"successDocSigned\"));\r\n        })\r\n        .catch((err) => {\r\n        })\r\n        .finally(() => {\r\n            this.loaderSign = false;\r\n          });\r\n    },\r\n    getByIdLetter() {\r\n      Service.getByIdSendToRais(this.$route.params.id)\r\n        .then((rs) => {\r\n          this.currentDoc = rs.data;\r\n          if (rs.data.fileType === 'pdf') {\r\n            this.createLoadingTask(rs.data.url)\r\n            return;\r\n          }\r\n          this.loaderPdf = true;\r\n          this.convertToPdf(rs.data).then((uploadPath) => {\r\n            if (!uploadPath) {\r\n              setTimeout(() => {\r\n                this.convertToPdf(rs.data)\r\n                  .then((uploadPath2) => {\r\n                    this.createLoadingTask(uploadPath2);\r\n                    this.loaderPdf = false;\r\n                  })\r\n                  .catch((e) => {\r\n                    this.loaderPdf = false;\r\n                  });\r\n              }, 4000);\r\n            } else {\r\n              this.createLoadingTask(uploadPath);\r\n              this.loaderPdf = false;\r\n            }\r\n          });\r\n\r\n        })\r\n        .catch((e) => {\r\n        });\r\n    },\r\n    createLoadingTask(uploadPath){\r\n      this.$nextTick(() => {\r\n        this.src = pdf.createLoadingTask(`${this.baseUrl}/${uploadPath}`);\r\n      });\r\n    },\r\n    keyUpEvents(evt) {\r\n      if (\r\n          evt.keyCode === 46 &&\r\n          this.currentPage === this.qrCodePage &&\r\n          this.deleteQrPosition\r\n      ) {\r\n        this.imgUrl = null;\r\n        this.qrCodePage = null;\r\n        this.deleteQrPosition = false;\r\n      } else if (\r\n          evt.keyCode === 39 &&\r\n          this.currentPage !== this.numPages &&\r\n          this.src\r\n      ) {\r\n        this.currentPage++;\r\n      } else if (evt.keyCode === 37 && this.currentPage > 1 && this.src) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    setCurrentPage(page) {\r\n      this.currentPage = page;\r\n    },\r\n    resize(newRect) {\r\n      this.width = newRect.width;\r\n      this.height = newRect.height;\r\n      this.y = newRect.top;\r\n      this.x = newRect.left;\r\n    },\r\n    getPdf() {\r\n      return new Promise((res, rej) => {\r\n        this.convertToPdf();\r\n        Service.getDocPdf(this.$route.params.id)\r\n            .then((rs) => {\r\n              let pdfBase64 = rs.data;\r\n\r\n              this.$nextTick(() => {\r\n                this.src = pdf.createLoadingTask(\r\n                    `data:application/pdf;base64, ${pdfBase64}`\r\n                );\r\n              });\r\n\r\n              res(rs.data);\r\n            })\r\n            .catch((e) => {\r\n              rej(e);\r\n            })\r\n            .finally(() => {\r\n              setTimeout(() => {\r\n                this.loaderPdf = false;\r\n              }, 500);\r\n            });\r\n      });\r\n    },\r\n    signData() {\r\n      if (this.src) {\r\n        if (this.qrCodePage && this.imgUrl) {\r\n          showMsgError(this.$t(\"qrcodeWaring\"));\r\n        } else {\r\n          this.loaderQrCode = true;\r\n          Service.letterQRCODESendToRais(this.currentDoc.id)\r\n              .then((rs) => {\r\n                if (rs.data) {\r\n                  this.qrCodePage = this.currentPage;\r\n                  this.imgUrl = rs.data;\r\n                }\r\n              })\r\n              .catch((err) => {\r\n              })\r\n              .finally(() => {\r\n                this.loaderQrCode = false;\r\n              });\r\n        }\r\n      } else {\r\n        showMsgError(this.$t(\"docNotUploaded\"));\r\n      }\r\n    },\r\n    fetchManagementEmployeeList(callback) {\r\n      Service.getAllManagementEmployees()\r\n        .then(res => {\r\n          this.managementEmployees = res.data\r\n          callback(res.data)\r\n        })\r\n        .catch(e => {\r\n          console.log('error', e)\r\n        })\r\n    },\r\n    save() {\r\n      if (this.qrCodePage != null && this.imgUrl && this.src) {\r\n        if (['NOTICE_NOT_COMPLETED', 'NOTICE_NOT_BELONG', 'NOTICE_REGION'].indexOf(this.currentDoc.letterType) !== -1) {\r\n          this.fetchManagementEmployeeList(() => {\r\n            this.commissionsModal = true;\r\n          });\r\n        }\r\n      } else {\r\n        showMsgError(this.$t(\"qrcodeNotFound\"));\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.stickyHead {\r\n  margin: 0 !important;\r\n  padding: 15px !important;\r\n  border-radius: 0;\r\n  position: fixed;\r\n  top: 70px;\r\n  left: 0;\r\n  right: 0;\r\n  background: white;\r\n  z-index: 4;\r\n  width: 100%;\r\n}\r\n</style>"]}]}