{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\wordTemplates\\sample\\List.vue?vue&type=style&index=0&id=211270b2&scoped=true&lang=scss&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\wordTemplates\\sample\\List.vue","mtime":1677737415720},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1675061971809},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovKiBUaGUgY29udGFpbmVyIG11c3QgYmUgcG9zaXRpb25lZCByZWxhdGl2ZTogKi8NCi5jdXN0b20tc2VsZWN0IHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBmb250LWZhbWlseTogQXJpYWw7DQp9DQoNCi5jdXN0b20tc2VsZWN0IHNlbGVjdCB7DQogIGRpc3BsYXk6IG5vbmU7IC8qaGlkZSBvcmlnaW5hbCBTRUxFQ1QgZWxlbWVudDogKi8NCn0NCg0KLnNlbGVjdC1zZWxlY3RlZCB7DQogIGJhY2tncm91bmQtY29sb3I6IERvZGdlckJsdWU7DQp9DQoNCi8qIFN0eWxlIHRoZSBhcnJvdyBpbnNpZGUgdGhlIHNlbGVjdCBlbGVtZW50OiAqLw0KLnNlbGVjdC1zZWxlY3RlZDphZnRlciB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgY29udGVudDogIiI7DQogIHRvcDogMTRweDsNCiAgcmlnaHQ6IDEwcHg7DQogIHdpZHRoOiAwOw0KICBoZWlnaHQ6IDA7DQogIGJvcmRlcjogNnB4IHNvbGlkIHRyYW5zcGFyZW50Ow0KICBib3JkZXItY29sb3I6ICNmZmYgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7DQp9DQoNCi8qIFBvaW50IHRoZSBhcnJvdyB1cHdhcmRzIHdoZW4gdGhlIHNlbGVjdCBib3ggaXMgb3BlbiAoYWN0aXZlKTogKi8NCi5zZWxlY3Qtc2VsZWN0ZWQuc2VsZWN0LWFycm93LWFjdGl2ZTphZnRlciB7DQogIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgI2ZmZiB0cmFuc3BhcmVudDsNCiAgdG9wOiA3cHg7DQp9DQoNCi8qIHN0eWxlIHRoZSBpdGVtcyAob3B0aW9ucyksIGluY2x1ZGluZyB0aGUgc2VsZWN0ZWQgaXRlbTogKi8NCi5zZWxlY3QtaXRlbXMgZGl2LC5zZWxlY3Qtc2VsZWN0ZWQgew0KICBjb2xvcjogI2ZmZmZmZjsNCiAgcGFkZGluZzogOHB4IDE2cHg7DQogIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50Ow0KICBib3JkZXItY29sb3I6IHRyYW5zcGFyZW50IHRyYW5zcGFyZW50IHJnYmEoMCwgMCwgMCwgMC4xKSB0cmFuc3BhcmVudDsNCiAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KDQovKiBTdHlsZSBpdGVtcyAob3B0aW9ucyk6ICovDQouc2VsZWN0LWl0ZW1zIHsNCiAgcG9zaXRpb246IGFic29sdXRlOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiBEb2RnZXJCbHVlOw0KICB0b3A6IDEwMCU7DQogIGxlZnQ6IDA7DQogIHJpZ2h0OiAwOw0KICB6LWluZGV4OiA5OTsNCn0NCg0KLyogSGlkZSB0aGUgaXRlbXMgd2hlbiB0aGUgc2VsZWN0IGJveCBpcyBjbG9zZWQ6ICovDQouc2VsZWN0LWhpZGUgew0KICBkaXNwbGF5OiBub25lOw0KfQ0KDQouc2VsZWN0LWl0ZW1zIGRpdjpob3ZlciwgLnNhbWUtYXMtc2VsZWN0ZWQgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMSk7DQp9DQo="},{"version":3,"sources":["List.vue"],"names":[],"mappings":";AAgmBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"List.vue","sourceRoot":"src/modules/wordTemplates/sample","sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"col-md-12 text-center\">\r\n        <div class=\"h4 mb-4 d-inline-block\">{{ $t('word_templates.template_header_name') }}</div>\r\n      </div>\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row mb-2\">\r\n            <div class=\"col-sm-8\">\r\n              <div class=\"search-box me-4 mb-2 d-inline-block\">\r\n                <div class=\"position-relative\">\r\n                  <input\r\n                      v-model=\"searchKeyword\"\r\n                      type=\"text\"\r\n                      class=\"form-control\"\r\n                      @input=\"fetchTableItems\"\r\n                      :placeholder=\"$t('column.search')\"\r\n                  />\r\n                  <i class=\"bx bx-search-alt search-icon\"></i>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-3 me-2 mx-2 d-inline-block\">\r\n                <span>{{ $t('column.select.text1') }} {{ $t('column.select.text2') }}</span>\r\n                <!--                <span>{{ $t('column.select.text2') }}</span>-->\r\n\r\n                <div class=\"position-relative\">\r\n                  <b-form-select\r\n                      v-model=\"selected\"\r\n                      :options=\"optionsTable\"\r\n                      @change=\"selectList\"\r\n                      class=\"form-select\"\r\n                  ></b-form-select>\r\n                </div>\r\n              </div>\r\n\r\n\r\n              <div class=\"col-5 me-2 mx-2 d-inline-block\">\r\n                <!--                                <span>{{ $t('word_templates.categories') }}</span>-->\r\n                <div class=\"position-relative\">\r\n                  <div class=\"form-group\">\r\n                    <label>{{ $t('word_templates.categories') }}</label>\r\n                    <select class=\"form-control form-control-md\"\r\n                            v-model=\"templateCategory\"\r\n                    >\r\n                      <option value=\"\" readonly=\"\"></option>\r\n                      <option v-for=\"(categoryItem, key) in category\"\r\n                              :key=\"key\"\r\n                              :value=\"categoryItem.id\"\r\n                      >\r\n                        {{\r\n                          getName({\r\n                            nameUz: categoryItem.nameUz,\r\n                            nameRu: categoryItem.nameRu,\r\n                            nameLt: categoryItem.nameLt,\r\n                          })\r\n                        }}\r\n                      </option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <!--                                  <b-form-select-->\r\n                  <!--                                      v-model=\"templateCategory\"-->\r\n                  <!--                                      :options=\"category\"-->\r\n                  <!--                                      value-field=\"id\"-->\r\n                  <!--                                      :text-field=\"customLabelCategory\"-->\r\n                  <!--                                      @change=\"fetchCategoryList\"-->\r\n                  <!--                                      class=\"form-select\"-->\r\n                  <!--                                  ></b-form-select>-->\r\n                  <!--                                  <BaseMultiselectWithValidation-->\r\n                  <!--                                      custom-styles=\"grid-template-columns: 0% 100%\"-->\r\n                  <!--                                      v-model=\"templateCategory\"-->\r\n                  <!--                                      :options=\"category.map(e => e.id)\"-->\r\n                  <!--                                      :placeholder=\"$t('word_templates.categories')\"-->\r\n                  <!--                                      open-direction=\"bottom\"-->\r\n                  <!--                                      :show-labels=\"false\"-->\r\n                  <!--                                      :custom-label=\"customLabelCategory\"-->\r\n                  <!--                                      @search-change=\"fetchCategoryList\"-->\r\n                  <!--                                  />-->\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n              <div class=\"text-sm-end\">\r\n                <b-row>\r\n                  <b-col cols=\"10\">\r\n\r\n                    <!-- <div class=\"text-sm-end\">\r\n  <download-excel\r\n      :data=\"json_data\"\r\n      :fields=\"json_fields\"\r\n      header=\"Лавозим\"\r\n      worksheet=\"My Worksheet\"\r\n      name=\"Лавозим.xls\"\r\n  >\r\n    <b-btn\r\n        @click=\"downloadExcel\"\r\n        type=\"button\"\r\n        class=\"btn btn-rounded bg-primary mb-2\"\r\n    >\r\n      <i class=\"mdi mdi-microsoft-excel me-1\"></i> {{ $t('actions.download') }}\r\n    </b-btn>\r\n  </download-excel>\r\n</div> -->\r\n                  </b-col>\r\n                  <b-col cols=\"5\">\r\n                    <!--                    <b-btn-->\r\n                    <!--                        type=\"button\"-->\r\n                    <!--                        class=\"btn btn-success btn-rounded mb-2 me-2\"-->\r\n                    <!--                        :to=\"{name: 'CreateTemplateHeader'}\"-->\r\n                    <!--                    >-->\r\n                    <!--                      <i class=\"mdi mdi-plus me-1\"></i> {{ $t('actions.add') }}-->\r\n                    <!--                    </b-btn>-->\r\n                  </b-col>\r\n                </b-row>\r\n              </div>\r\n            </div>\r\n            <!-- end col-->\r\n          </div>\r\n          <!-- Table data -->\r\n          <b-table\r\n              :items=\"tableItems\"\r\n              :fields=\"tableFields\"\r\n              :busy=\"loadingTableItems\"\r\n              id=\"my-table\"\r\n              class=\"custom-b-table\"\r\n              responsive\r\n              striped\r\n              bordered\r\n              small\r\n              show-empty\r\n          >\r\n            <!-- NUMBER OF ITEM -->\r\n            <template #cell(index)=\"data\">\r\n              {{\r\n                util_paginate(data.index, var_default_search_payload.page, var_default_search_payload.itemsPerPage)\r\n              }}\r\n            </template>\r\n\r\n            <!-- NAME -->\r\n            <template #cell(receiver)=\"data\">\r\n              <div v-if=\"data.item.personType == 'Legal'\">\r\n                <p>\r\n                  {{\r\n                    getName({\r\n                      nameLt: data.item.organizationLetterNameLt,\r\n                      nameRu: data.item.organizationLetterNameRu,\r\n                      nameUz: data.item.organizationLetterNameUz,\r\n                      nameEn: data.item.organizationLetterNameEn\r\n                    })\r\n                  }}\r\n                  <br>\r\n                  {{ data.item.organizationLetterAdress }}\r\n                  <br>\r\n                  {{ data.item.organizationLetterEmail }}\r\n                </p>\r\n              </div>\r\n              <div v-if=\"data.item.personType == 'Physical'\">\r\n                <p>\r\n                  {{ data.item.senderFio }}\r\n                  <br>\r\n                  {{ data.item.senderRegion }}\r\n                </p>\r\n              </div>\r\n\r\n            </template>\r\n\r\n            <!-- ACTIONS -->\r\n            <template #cell(actions)=\"data\">\r\n              <div class=\"general-table__actions d-flex justify-content-center\">\r\n                <b-btn\r\n                    variant=\"link\"\r\n                    class=\"text-decoration-none p-0\"\r\n                    style=\"font-size: 1.2rem; margin-right: 1rem;\"\r\n                >\r\n                  <i\r\n                      @click=\"Export2Word(data.item)\"\r\n                      class=\"mdi mdi-microsoft-word edit\"\r\n                  ></i>\r\n                </b-btn>\r\n\r\n                <!--                <b-btn-->\r\n                <!--                    variant=\"link\"-->\r\n                <!--                    class=\"text-decoration-none p-0 text-danger\"-->\r\n                <!--                    style=\"font-size: 1.2rem;\"-->\r\n                <!--                >-->\r\n                <!--                  <i-->\r\n                <!--                      @click=\"deleteItem(data.item.id)\"-->\r\n                <!--                      class=\"mdi mdi-trash-can delete\"-->\r\n                <!--                  ></i>-->\r\n                <!--                </b-btn>-->\r\n              </div>\r\n            </template>\r\n\r\n            <!-- EMPTY SLOT -->\r\n            <template #empty=\"\">\r\n              <h4 class=\"text-center\">{{ $t('messages.data_not_found') }}</h4>\r\n            </template>\r\n\r\n            <!-- TABLE_BUSY SLOT -->\r\n            <template #table-busy>\r\n              <div class=\"text-center my-2\">\r\n                <b-spinner\r\n                    variant=\"primary\"\r\n                    class=\"align-middle\"\r\n                ></b-spinner>\r\n\r\n              </div>\r\n            </template>\r\n          </b-table>\r\n          <!-- end table -->\r\n\r\n          <b-pagination\r\n              v-model=\"var_default_search_payload.page\"\r\n              :total-rows=\"totalItems\"\r\n              :per-page=\"var_default_search_payload.itemsPerPage\"\r\n              aria-controls=\"my-table\"\r\n              class=\"justify-content-end\"\r\n          ></b-pagination>\r\n        </div>\r\n        <!-- end card-body -->\r\n      </div>\r\n      <!-- end card -->\r\n    </div>\r\n  </div>\r\n  <!-- end row -->\r\n</template>\r\n\r\n<script>\r\n\r\n\r\nimport Service from \"@/modules/letter/letterService\";\r\n\r\nconst MAIN_API_URL = 'templates/sample'\r\nimport appConfig from \"@/app.config\";\r\nimport crudAndListsService from '@/shared/services/crud_and_list.service'\r\nimport helperService from '@/shared/services/helper.service';\r\n\r\nexport default {\r\n  page: {\r\n    title: \"Positions\",\r\n    meta: [{name: \"description\", content: appConfig.description}],\r\n  },\r\n  components: {},\r\n  data() {\r\n    return {\r\n      templateCategory: null,\r\n      category: [],\r\n      x: 200,\r\n      y: 300,\r\n      loadingTableItems: false,\r\n      json_fields: {\r\n        \"Name Uz\": \"nameUz\",\r\n        \"Name Lt\": \"nameLt\",\r\n        \"Name Ru\": \"nameRu\",\r\n      },\r\n      json_data: [],\r\n      json_meta: [\r\n        [\r\n          {\r\n            key: \"charset\",\r\n            value: \"utf-8\",\r\n          },\r\n        ],\r\n      ],\r\n      searchKeyword: '',\r\n      selected: 20,\r\n      optionsTable: [\r\n        {value: 20, text: 20},\r\n        {value: 50, text: 50},\r\n        {value: 100, text: 100},\r\n        {value: 150, text: 150},\r\n        {value: 200, text: 200},\r\n      ],\r\n      title: \"Positions\",\r\n      activeDep: {},\r\n      tableItems: [],\r\n\r\n\r\n      totalItems: 0,\r\n      tableFields: [\r\n        {\r\n          label: \"#\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\",\r\n          sortable: false,\r\n          key: \"index\",\r\n        },\r\n        {\r\n          label: this.$t('word_templates.receiver'),\r\n          key: \"receiver\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\"\r\n        },\r\n        {\r\n          label: this.$t('word_templates.template_name'),\r\n          key: \"templateName\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\"\r\n        },\r\n        {\r\n          label: this.$t('word_templates.personType'),\r\n          key: \"personType\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\"\r\n        },\r\n        {\r\n          label: this.$t('word_templates.incomingDate'),\r\n          key: \"incomingDate\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\"\r\n        },\r\n        {\r\n          label: this.$t('word_templates.incomingNumber'),\r\n          key: \"incomingNumber\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\"\r\n        },\r\n        {\r\n          label: this.$t('word_templates.outgoingDate'),\r\n          key: \"outgoingDate\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\"\r\n        },\r\n        {\r\n          label: this.$t('word_templates.outgoingNumber'),\r\n          key: \"outgoingNumber\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\"\r\n        },\r\n        {\r\n          label: this.$t('column.actions'),\r\n          key: \"actions\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\",\r\n          sortable: false\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  /*\r\n  COMPUTED */\r\n  computed: {\r\n    numberOfPages() {\r\n      return (!this.totalItems || this.totalItems <= 0 || this.totalItems < this.var_default_search_payload.itemsPerPage) ? 1 : this.totalItems / this.var_default_search_payload.itemsPerPage\r\n    },\r\n    getBodyHtml() {\r\n      let body;\r\n      if (this.editingItem.templateId) {\r\n\r\n        // var image = document.getElementsByClassName(\"image2\");\r\n        // image.src = \"image1.jpg\"\r\n\r\n        //       let header = `\r\n        //   <div >\r\n        //   <img src=\"' + this.templateHeader + '\" />\r\n        //     <img style=\"width: 100% !important;\"  />\r\n        //   </div>\r\n        // `\r\n        let header = '<center style=\"width: 100% !important; display: block\" >' +\r\n            '<img style=\"width: 100% !important; display: block\" src=\"' + this.templateHeader + '\" />' +\r\n            '</center>'\r\n\r\n        let bodyHtml = \" <p style='margin:0cm;font-size:11pt;font-family:\\\"Calibri\\\",sans-serif;margin-left:14.2pt;margin-top:14.2pt;text-align:justify;text-indent:35.45pt;'>\\n\" +\r\n            \"            <span style='font-weight:bold;font-size:14pt;font-family:\\\"Times New Roman\\\",serif;'>\" +\r\n            this.editingItem.outgoingDate + \"<span style='margin-left:64.2pt;'>    </span>\" + this.editingItem.outgoingNumber +\r\n            \"- son</span>\\n\" +\r\n            \"          </p>\"\r\n\r\n\r\n        let bodyHtmlheaderRight = \"  <p id=\\\"isPasted\\\"\\n\" +\r\n            \"             style='margin:0cm;font-size:11pt;font-family:\\\"Calibri\\\",sans-serif;margin-left:14.2pt;text-align:right;text-indent:35.45pt;'>\\n\" +\r\n            \"            <span style='font-size:14pt;font-family:\\\"Times New Roman\\\",serif;'>\" +\r\n            this.organizationName.nameUz +\r\n            \"</span>\\n\" +\r\n            \"          </p>\\n\" +\r\n            \"          <p style='margin:0cm;font-size:11pt;font-family:\\\"Calibri\\\",sans-serif;margin-left:14.2pt;text-align:right;text-indent:35.45pt;'>\\n\" +\r\n            \"            <span style='font-size:11pt;font-family:\\\"Times New Roman\\\",serif;'> \" +\r\n            this.organizationName.adress +\r\n            \"</span>\\n\" +\r\n            \"          </p>\\n\" +\r\n            \"          <p style='margin:0cm;font-size:11pt;font-family:\\\"Calibri\\\",sans-serif;margin-left:14.2pt;text-align:right;text-indent:35.45pt;'>\\n\" +\r\n            \"            <span style='font-size:10pt;font-family:\\\"Times New Roman\\\",serif;'><i> \" +\r\n            this.organizationName.email +\r\n            \"</i></span>\\n\" +\r\n            \"          </p>\"\r\n\r\n        let innerDateNUmberHtml = \" <p style='margin:0cm;font-size:11pt;font-family:\\\"Calibri\\\",sans-serif;margin-left:14.2pt;margin-top:14.2pt;text-align:justify;text-indent:35.45pt;'>\\n\" +\r\n            \"            <span style='font-weight:bold;font-size:14pt;font-family:\\\"Times New Roman\\\",serif;'>\" +\r\n            this.editingItem.incomingDate + \"<span style='margin-left:64.2pt;'>    </span>\" + this.editingItem.incomingNumber +\r\n            \"- son</span>\\n\" +\r\n            \"          </p>\"\r\n\r\n        body = header + bodyHtml + bodyHtmlheaderRight + innerDateNUmberHtml + this.templates.find(e => e.id === this.editingItem.templateId).bodyHtml\r\n      }\r\n      return body\r\n    }\r\n  },\r\n  methods: {\r\n    customLabelCategory(opt) {\r\n      +\r\n          console.log(opt)\r\n      debugger\r\n      let selected = this.category.find(e => e.id === opt);\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    fetchCategoryList(keyword = '', callback = null) {\r\n      Service.searchList('template/category', this.var_default_search_payload, null, true)\r\n          .then(res => {\r\n            this.category = res.data.list\r\n            callback();\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    Export2Word(element, filename = '') {\r\n\r\n      var preHtml = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:w='urn:schemas-microsoft-com:office:word' xmlns='http://www.w3.org/TR/REC-html40'><head><meta charset='utf-8'><title>Export HTML To Doc</title></head><body>\";\r\n      var postHtml = \"</body></html>\";\r\n      var html = preHtml +\r\n          element.templateBodyHtml +\r\n          postHtml;\r\n\r\n\r\n      var blob = new Blob(['\\ufeff', html], {\r\n        type: 'application/msword'\r\n      });\r\n\r\n      // Specify link url\r\n      var url = 'data:application/vnd.ms-word;charset=utf-8,' + encodeURIComponent(html);\r\n\r\n      // Specify file name\r\n      filename = filename ? filename + '.doc' : 'document.doc';\r\n\r\n      // Create download link element\r\n      var downloadLink = document.createElement(\"a\");\r\n\r\n      document.body.appendChild(downloadLink);\r\n\r\n      if (navigator.msSaveOrOpenBlob) {\r\n        navigator.msSaveOrOpenBlob(blob, filename);\r\n      } else {\r\n        // Create a link to the file\r\n        downloadLink.href = url;\r\n\r\n        // Setting the file name\r\n        downloadLink.download = filename;\r\n\r\n        //triggering the function\r\n        downloadLink.click();\r\n      }\r\n\r\n      document.body.removeChild(downloadLink);\r\n    },\r\n    resize(newRect) {\r\n      this.width = newRect.width;\r\n      this.height = newRect.height;\r\n      this.y = newRect.top;\r\n      this.x = newRect.left;\r\n    },\r\n    fetchDateTypesByParentId(parentId, index) {\r\n      let payload = Object.assign({}, this.var_default_search_payload)\r\n      payload.page = 0;\r\n      payload.itemsPerPage = 500;\r\n      this.$set(this.tableItems[index], 'loadingInnerData', true)\r\n      helperService\r\n          .fetchDateTypesByParentId(parentId, payload)\r\n          .then((res) => {\r\n            this.$set(this.tableItems[index], 'children', res.data.list)\r\n          })\r\n          .catch(e => {\r\n            this.$set(this.tableItems[index], 'children', [])\r\n          })\r\n          .finally(() => {\r\n            this.$set(this.tableItems[index], 'loadingInnerData', false)\r\n          })\r\n    },\r\n    rowClicked(item, index) {\r\n      this.$set(item, '_showDetails', !item._showDetails)\r\n      this.fetchDateTypesByParentId(item.id, index)\r\n    },\r\n    downloadExcel() {\r\n      this.json_data = []\r\n      this.tableItems.forEach(res => {\r\n        let obj = {}\r\n        obj.nameUz = res.nameUz\r\n        obj.nameLt = res.nameLt\r\n        obj.nameRu = res.nameRu\r\n        this.json_data.push(obj)\r\n      })\r\n    },\r\n    selectList($event) {\r\n      if ($event == 'all') {\r\n        this.var_default_search_payload.itemsPerPage = this.totalItems\r\n      } else {\r\n        this.var_default_search_payload.itemsPerPage = $event\r\n      }\r\n      this.fetchTableItems();\r\n    },\r\n    async getCategory() {\r\n      // this.var_default_search_payload.itemsPerPage = 100\r\n      await crudAndListsService.searchListWithKeyword(\"template/category\", this.var_default_search_payload)\r\n          .then(res => {\r\n            this.category = res.data.list\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    async fetchTemplateList(keyword = '', callback = null) {\r\n      this.loadingTableItems = true\r\n      // this.var_default_search_payload.keyword = keyword\r\n      let payload = Object.assign({}, this.var_default_search_payload)\r\n      payload.page = 0;\r\n      payload.itemsPerPage = 500;\r\n      await helperService.getTemplateByCategoryId(this.templateCategory, keyword, payload)\r\n          .then(res => {\r\n            this.templates = res.data.list\r\n          })\r\n          .catch(e => {\r\n            this.templates = [];\r\n          }).finally(() => {\r\n            this.loadingTableItems = false\r\n          })\r\n    },\r\n    fetchTableItems() {\r\n      this.loadingTableItems = true\r\n      this.var_default_search_payload.keyword = this.searchKeyword\r\n      this.var_default_search_payload.personType = ''\r\n      this.var_default_search_payload.categoryId = ''\r\n      crudAndListsService\r\n          .searchListWithKeywordAndPersonType(MAIN_API_URL, this.var_default_search_payload)\r\n          .then((res) => {\r\n            this.tableItems = res.data.list;\r\n            this.totalItems = res.data.total;\r\n          })\r\n          .catch(e => {\r\n            this.tableItems = [];\r\n            this.totalItems = 0;\r\n          })\r\n          .finally(() => {\r\n            this.loadingTableItems = false\r\n          })\r\n    },\r\n    editItem(id) {\r\n      this.$router.push({name: 'UpdateTemplateHeader', params: {id: id}})\r\n    },\r\n    deleteItem(id, parentId = null, parentIndex = null, forChild = false) {\r\n      this.$bvModal.msgBoxConfirm(this.$t('messages.delete_title'), {\r\n        okTitle: this.$t('actions.confirm'),\r\n        cancelTitle: this.$t('actions.cancel')\r\n      })\r\n          .then(value => {\r\n            if (value) {\r\n              crudAndListsService\r\n                  .deleteById(MAIN_API_URL, id)\r\n                  .then((res) => {\r\n                    if (forChild && parentId) {\r\n                      this.fetchDateTypesByParentId(parentId, parentIndex)\r\n                    } else {\r\n                      this.fetchTableItems()\r\n                    }\r\n                  })\r\n                  .catch(e => {\r\n                    console.log(e)\r\n                  })\r\n            }\r\n          })\r\n          .catch(err => {\r\n            // An error occurred\r\n          })\r\n    },\r\n  },\r\n  /* CREATED */\r\n  async created() {\r\n    await this.fetchTableItems()\r\n    await this.getCategory();\r\n  },\r\n  /*\r\n  WATCH */\r\n  watch: {\r\n    'templateCategory': {\r\n      handler(id) {\r\n        if (id !== null) {\r\n          this.fetchTemplateList('')\r\n        } else {\r\n        }\r\n      }\r\n    },\r\n    'var_default_search_payload.page': {\r\n      handler() {\r\n        this.fetchTableItems()\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang='scss'>\r\n/* The container must be positioned relative: */\r\n.custom-select {\r\n  position: relative;\r\n  font-family: Arial;\r\n}\r\n\r\n.custom-select select {\r\n  display: none; /*hide original SELECT element: */\r\n}\r\n\r\n.select-selected {\r\n  background-color: DodgerBlue;\r\n}\r\n\r\n/* Style the arrow inside the select element: */\r\n.select-selected:after {\r\n  position: absolute;\r\n  content: \"\";\r\n  top: 14px;\r\n  right: 10px;\r\n  width: 0;\r\n  height: 0;\r\n  border: 6px solid transparent;\r\n  border-color: #fff transparent transparent transparent;\r\n}\r\n\r\n/* Point the arrow upwards when the select box is open (active): */\r\n.select-selected.select-arrow-active:after {\r\n  border-color: transparent transparent #fff transparent;\r\n  top: 7px;\r\n}\r\n\r\n/* style the items (options), including the selected item: */\r\n.select-items div,.select-selected {\r\n  color: #ffffff;\r\n  padding: 8px 16px;\r\n  border: 1px solid transparent;\r\n  border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Style items (options): */\r\n.select-items {\r\n  position: absolute;\r\n  background-color: DodgerBlue;\r\n  top: 100%;\r\n  left: 0;\r\n  right: 0;\r\n  z-index: 99;\r\n}\r\n\r\n/* Hide the items when the select box is closed: */\r\n.select-hide {\r\n  display: none;\r\n}\r\n\r\n.select-items div:hover, .same-as-selected {\r\n  background-color: rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n"]}]}