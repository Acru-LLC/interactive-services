{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\management\\modules\\project-lesson\\CreateOrUpdate.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\management\\modules\\project-lesson\\CreateOrUpdate.vue","mtime":1681702105060},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1675061970665},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbXBvcnQgYXBpU2VydmljZSBmcm9tICJAL3NoYXJlZC9zZXJ2aWNlcy9hcGkuc2VydmljZSI7DQppbXBvcnQgY3J1ZEFuZExpc3RzU2VydmljZSBmcm9tICJAL3NoYXJlZC9zZXJ2aWNlcy9jcnVkX2FuZF9saXN0LnNlcnZpY2UiDQppbXBvcnQgRmlsZUlucHV0IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvRmlsZUlucHV0Jw0KDQpjb25zdCBNQUlOX0FQSV9VUkwgPSAncHJvamVjdC1sZXNzb24nOw0KZXhwb3J0IGRlZmF1bHQgew0KICBuYW1lOiAiQ3JlYXRlT3JVcGRhdGUiLA0KICBjb21wb25lbnRzOiB7DQogICAgRmlsZUlucHV0DQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGVkaXRpbmdJdGVtOiB7fSwNCiAgICAgIHN0YXR1c2VzOiBbXSwNCiAgICAgIC8vIDIwMCBNQg0KICAgICAgZmlsZVNpemVMaW1pdDogMjA5NzE1MjAwLA0KICAgIH0NCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICBpc01vZGVDcmVhdGUoKSB7DQogICAgICByZXR1cm4gdGhpcy4kcm91dGUubmFtZSA9PT0gJ1Byb2plY3RMZXNzb25zQ3JlYXRlJw0KICAgIH0sDQogICAgY29tcHV0ZWRPYnNlcnZlcigpIHsNCiAgICAgIHJldHVybiB0aGlzLiRyZWZzLm9ic2VydmVyDQogICAgfQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgdHJlZUNsb3NlZCh2ZWVOYW1lKSB7DQogICAgICB0aGlzLmNvbXB1dGVkT2JzZXJ2ZXIucmVmc1t2ZWVOYW1lXS52YWxpZGF0ZSgpOw0KICAgIH0sDQogICAgZmlsZUlzTGFyZ2UoKXsNCiAgICAgIHRoaXMuJHRvYXN0Lndhcm5pbmcodGhpcy4kdCgnbW9kdWxlcy5tYW5hZ2VtZW50LnByb2plY3RfbGVzc29ucy5maWxlX3NpemVfdG9fbGFyZ2UnKSkNCiAgICB9LA0KICAgIHNhdmUoKSB7DQogICAgICB0aGlzLmNvbXB1dGVkT2JzZXJ2ZXIudmFsaWRhdGUoKS50aGVuKHZhbGlkID0+IHsNCiAgICAgICAgaWYgKHZhbGlkKSB7DQogICAgICAgICAgaWYgKHRoaXMuZWRpdGluZ0l0ZW0uZmlsZV9pZCkgew0KICAgICAgICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsNCiAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIHRoaXMuJHJlZnMudmlkZW8uZmlsZSk7DQogICAgICAgICAgICBhcGlTZXJ2aWNlDQogICAgICAgICAgICAgICAgLmZvcm1EYXRhRmlsZShNQUlOX0FQSV9VUkwgKyBgL3VwZGF0ZS8ke3RoaXMuZWRpdGluZ0l0ZW0uZmlsZV9pZH0vJHt0aGlzLmVkaXRpbmdJdGVtLmZpbGVOYW1lfWAsIGZvcm1EYXRhLCB0cnVlKQ0KICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHsNCiAgICAgICAgICAgICAgICAgIHRoaXMuJHJlZnMudmlkZW8uZmlsZSA9IG51bGw7DQogICAgICAgICAgICAgICAgICB0aGlzLmNvbXB1dGVkT2JzZXJ2ZXIucmVzZXQoKQ0KICAgICAgICAgICAgICAgICAgdGhpcy5lZGl0aW5nSXRlbSA9IE9iamVjdC5hc3NpZ24oe30sIHt9KTsNCiAgICAgICAgICAgICAgICAgIHRoaXMuJHJvdXRlci5nbygtMSkNCiAgICAgICAgICAgICAgICAgIHRoaXMuJHRvYXN0KHRoaXMuJHQoJ21lc3NhZ2VzLnNhdmVkX3N1Y2Nlc3NmdWxseScpLCB7IHR5cGU6ICdzdWNjZXNzJyB9KTsNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyKSA9PiB7DQogICAgICAgICAgICAgICAgICB0aGlzLiR0b2FzdChlcnIsIHsgdHlwZTogJ2Vycm9yJyB9KTsNCiAgICAgICAgICAgICAgICB9KTsNCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsNCiAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIHRoaXMuJHJlZnMudmlkZW8uZmlsZSk7DQogICAgICAgICAgICBhcGlTZXJ2aWNlDQogICAgICAgICAgICAgICAgLnBvc3QoTUFJTl9BUElfVVJMICsgYC9jcmVhdGUvJHt0aGlzLmVkaXRpbmdJdGVtLmZpbGVOYW1lfWAsIGZvcm1EYXRhLCB7DQogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7DQogICAgICAgICAgICAgICAgICAgICJDb250ZW50LVR5cGUiOiAibXVsdGlwYXJ0L2Zvcm0tZGF0YSIsDQogICAgICAgICAgICAgICAgICB9LA0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgLnRoZW4oKCkgPT4gew0KICAgICAgICAgICAgICAgICAgdGhpcy4kcmVmcy52aWRlby5maWxlID0gbnVsbDsNCiAgICAgICAgICAgICAgICAgIHRoaXMuY29tcHV0ZWRPYnNlcnZlci5yZXNldCgpDQogICAgICAgICAgICAgICAgICB0aGlzLmVkaXRpbmdJdGVtID0gT2JqZWN0LmFzc2lnbih7fSwge30pOw0KICAgICAgICAgICAgICAgICAgdGhpcy4kcm91dGVyLmdvKC0xKQ0KICAgICAgICAgICAgICAgICAgdGhpcy4kdG9hc3QodGhpcy4kdCgnbWVzc2FnZXMuc2F2ZWRfc3VjY2Vzc2Z1bGx5JyksIHsgdHlwZTogJ3N1Y2Nlc3MnIH0pOw0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgLmNhdGNoKChlcnIpID0+IHsNCiAgICAgICAgICAgICAgICAgIHRoaXMuJHRvYXN0KGVyciwgeyB0eXBlOiAnZXJyb3InIH0pOw0KICAgICAgICAgICAgICAgIH0pOw0KICAgICAgICAgIH0NCiAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICB0aGlzLiR0b2FzdCh0aGlzLiR0KCdtZXNzYWdlcy5maWxsX3JlcXVpcmVkX2ZpZWxkcycpLCB7IHR5cGU6ICdlcnJvcicgfSk7DQogICAgICAgIH0NCiAgICAgIH0pOw0KICAgIH0sDQogICAgYXN5bmMgaGFuZGxlQ3JlYXRlZCgpIHsNCiAgICAgIHRoaXMudmFyX2RlZmF1bHRfc2VhcmNoX3BheWxvYWQuaXRlbXNQZXJQYWdlID0gNTAwDQogICAgICBpZiAodGhpcy5pc01vZGVDcmVhdGUpIHsNCiAgICAgICAgYXdhaXQgY3J1ZEFuZExpc3RzU2VydmljZS5nZXRFbXB0eShNQUlOX0FQSV9VUkwsIG51bGwsIHRydWUpDQogICAgICAgICAgICAudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICB0aGlzLmVkaXRpbmdJdGVtID0gcmVzLmRhdGENCiAgICAgICAgICAgIH0pDQogICAgICAgICAgICAuY2F0Y2goZSA9PiB7DQogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpDQogICAgICAgICAgICB9KQ0KICAgICAgfSBlbHNlIHsNCiAgICAgICAgYXdhaXQgY3J1ZEFuZExpc3RzU2VydmljZS5nZXRCeUlkKE1BSU5fQVBJX1VSTCwgdGhpcy4kcm91dGUucGFyYW1zLmlkLCB0cnVlKQ0KICAgICAgICAgICAgLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgdGhpcy5lZGl0aW5nSXRlbSA9IHJlcy5kYXRhDQogICAgICAgICAgICB9KQ0KICAgICAgICAgICAgLmNhdGNoKGUgPT4gew0KICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKQ0KICAgICAgICAgICAgfSkNCiAgICAgIH0NCiAgICB9DQogIH0sDQogIGFzeW5jIGNyZWF0ZWQoKSB7DQogICAgYXdhaXQgdGhpcy5oYW5kbGVDcmVhdGVkKCk7DQogIH0NCn0NCg=="},{"version":3,"sources":["CreateOrUpdate.vue"],"names":[],"mappings":";AAqfile":"CreateOrUpdate.vue","sourceRoot":"src/modules/management/modules/project-lesson","sourcesContent":["<template>\r\n  <b-row class=\"mb-3\">\r\n    <b-col md=\"12\" class=\"text-center\">\r\n      <div class=\"h4 mb-4 d-inline-block\">\r\n        {{ $t('modules.management.project_lessons.title') }}\r\n      </div>\r\n    </b-col>\r\n    <b-col md=\"12\">\r\n      <base-create-or-update-wrapper\r\n          @save=\"save\"\r\n          has-save-suspend\r\n          :custom-title=\"isModeCreate ? $t('actions.create') : $t('actions.update')\"\r\n      >\r\n        <ValidationObserver ref=\"observer\" v-slot=\"{}\">\r\n          <b-row class=\"mb-3\">\r\n            <b-col sm=\"12\" md=\"6\" class=\"mt-2\">\r\n              <label for=\"\">{{ $t('modules.management.project_lessons.name') }}</label>\r\n              <b-form-input\r\n                  v-model=\"editingItem.fileName\"\r\n                  :placeholder=\"$t('modules.management.project_lessons.name')\"\r\n              />\r\n            </b-col>\r\n            <b-col sm=\"12\" md=\"6\" class=\"mt-2\">\r\n              <label for=\"\">{{ $t('modules.management.project_lessons.video') }}</label>\r\n              <file-input\r\n                  ref=\"video\"\r\n                  accept=\".mp4, .mkv, .webm, .pdf, .jpg, .jpeg, .gif, .png, .mp3\"\r\n                  :file-size-limit=\"fileSizeLimit\"\r\n                  @is-large=\"fileIsLarge\"/>\r\n            </b-col>\r\n          </b-row>\r\n        </ValidationObserver>\r\n      </base-create-or-update-wrapper>\r\n    </b-col>\r\n  </b-row>\r\n</template>\r\n<script>\r\nimport apiService from \"@/shared/services/api.service\";\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport FileInput from '../../components/FileInput'\r\n\r\nconst MAIN_API_URL = 'project-lesson';\r\nexport default {\r\n  name: \"CreateOrUpdate\",\r\n  components: {\r\n    FileInput\r\n  },\r\n  data() {\r\n    return {\r\n      editingItem: {},\r\n      statuses: [],\r\n      // 200 MB\r\n      fileSizeLimit: 209715200,\r\n    }\r\n  },\r\n  computed: {\r\n    isModeCreate() {\r\n      return this.$route.name === 'ProjectLessonsCreate'\r\n    },\r\n    computedObserver() {\r\n      return this.$refs.observer\r\n    }\r\n  },\r\n  methods: {\r\n    treeClosed(veeName) {\r\n      this.computedObserver.refs[veeName].validate();\r\n    },\r\n    fileIsLarge(){\r\n      this.$toast.warning(this.$t('modules.management.project_lessons.file_size_to_large'))\r\n    },\r\n    save() {\r\n      this.computedObserver.validate().then(valid => {\r\n        if (valid) {\r\n          if (this.editingItem.file_id) {\r\n            const formData = new FormData();\r\n            formData.append('file', this.$refs.video.file);\r\n            apiService\r\n                .formDataFile(MAIN_API_URL + `/update/${this.editingItem.file_id}/${this.editingItem.fileName}`, formData, true)\r\n                .then(() => {\r\n                  this.$refs.video.file = null;\r\n                  this.computedObserver.reset()\r\n                  this.editingItem = Object.assign({}, {});\r\n                  this.$router.go(-1)\r\n                  this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                })\r\n                .catch((err) => {\r\n                  this.$toast(err, { type: 'error' });\r\n                });\r\n          } else {\r\n            const formData = new FormData();\r\n            formData.append('file', this.$refs.video.file);\r\n            apiService\r\n                .post(MAIN_API_URL + `/create/${this.editingItem.fileName}`, formData, {\r\n                  headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                  },\r\n                })\r\n                .then(() => {\r\n                  this.$refs.video.file = null;\r\n                  this.computedObserver.reset()\r\n                  this.editingItem = Object.assign({}, {});\r\n                  this.$router.go(-1)\r\n                  this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                })\r\n                .catch((err) => {\r\n                  this.$toast(err, { type: 'error' });\r\n                });\r\n          }\r\n        } else {\r\n          this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n        }\r\n      });\r\n    },\r\n    async handleCreated() {\r\n      this.var_default_search_payload.itemsPerPage = 500\r\n      if (this.isModeCreate) {\r\n        await crudAndListsService.getEmpty(MAIN_API_URL, null, true)\r\n            .then(res => {\r\n              this.editingItem = res.data\r\n            })\r\n            .catch(e => {\r\n              console.log(e)\r\n            })\r\n      } else {\r\n        await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, true)\r\n            .then(res => {\r\n              this.editingItem = res.data\r\n            })\r\n            .catch(e => {\r\n              console.log(e)\r\n            })\r\n      }\r\n    }\r\n  },\r\n  async created() {\r\n    await this.handleCreated();\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\nul {\r\n  list-style-type: none;\r\n}\r\n</style>"]}]}