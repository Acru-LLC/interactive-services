{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\card-info.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\card-info.vue","mtime":1667352074510},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouaWNvblVwbG9hZCB7DQogIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgcmlnaHQ6IDJweDsNCiAgYm90dG9tOiAycHg7DQp9DQo="},{"version":3,"sources":["card-info.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsWA;AACA;AACA;AACA;AACA","file":"card-info.vue","sourceRoot":"src/modules/projects","sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <div class=\"mb-1 text-center\" v-if=\"cardInfo.uploadPath\">\r\n        <div\r\n          @click=\"singleImage = true\"\r\n          style=\"\r\n            background-repeat: no-repeat;\r\n            background-size: 30%;\r\n            background-repeat: no-repeat;\r\n            background-position: center center;\r\n            min-height: 15em;\r\n          \"\r\n          :style=\"`background-image: url(${baseUrl}/${cardInfo.uploadPath})`\"\r\n          alt\r\n          class=\"img-thumbnail\"\r\n        />\r\n\r\n        <vue-easy-lightbox\r\n          :visible=\"singleImage\"\r\n          :imgs=\"`${baseUrl}/${cardInfo.uploadPath}`\"\r\n          @hide=\"singleImage = false\"\r\n        ></vue-easy-lightbox>\r\n      </div>\r\n      <div\r\n        class=\"d-flex mb-2 mt-2\"\r\n        style=\"justify-content: space-between; align-items: center\"\r\n      >\r\n        <h4 class=\"card-title\">{{ $t(\"cmts\") }}</h4>\r\n        <form>\r\n          <div class=\"form-group m-0\">\r\n            <div class=\"input-group\">\r\n              <input\r\n                v-model=\"searchValue\"\r\n                type=\"text\"\r\n                class=\"form-control\"\r\n                :placeholder=\"$t('actions.filter')\"\r\n                aria-label=\"Recipient's username\"\r\n              />\r\n              <div class=\"input-group-append\">\r\n                <button class=\"btn btn-primary\" type=\"submit\">\r\n                  <i class=\"mdi mdi-magnify\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <simplebar\r\n        :style=\"`height:${\r\n          cardInfo.uploadPath ? heightWindow - 400 : heightWindow - 200\r\n        }px`\"\r\n        id=\"comment-list\"\r\n        ref=\"commentsRef\"\r\n        :key=\"cmpKey + 'COMMENT'\"\r\n      >\r\n        <div class=\"media mb-4\" v-for=\"(cmt, index) in comments\" :key=\"index\">\r\n          <div class=\"mr-3\">\r\n            <img\r\n              v-if=\"cmt.ownerUploadPath\"\r\n              class=\"media-object rounded-circle avatar-xs\"\r\n              alt\r\n              :src=\"`${hrUrl}/${cmt.ownerUploadPath}`\"\r\n            />\r\n            <div v-else class=\"avatar-xs mr-3\">\r\n              <span\r\n                class=\"avatar-title rounded-circle bg-soft-primary text-primary font-size-16\"\r\n              >\r\n                {{\r\n                  `${cmt.ownerLastName.charAt(0)}${cmt.ownerFirstName.charAt(\r\n                    0\r\n                  )}`\r\n                }}\r\n              </span>\r\n            </div>\r\n          </div>\r\n          <div class=\"media-body\">\r\n            <h5 class=\"font-size-13 mb-1 text-primary font-weight-bold\">\r\n              {{\r\n                `${cmt.ownerLastName} ${cmt.ownerFirstName} ${cmt.ownerParentName}`\r\n              }}\r\n            </h5>\r\n            <div v-if=\"cmt.uploadPath\">\r\n              <p class=\"mb-1 d-flex align-items-center\">\r\n                <a\r\n                  :href=\"`${baseUrl}/${cmt.uploadPath}`\"\r\n                  :download=\"`file.${cmt.fileExtension}`\"\r\n                  class=\"fa fas fa-arrow-alt-circle-down text-primary\"\r\n                  style=\"font-size: 35px\"\r\n                ></a>\r\n                <span class=\"ml-2\">{{ cmt.fileName }}</span>\r\n              </p>\r\n            </div>\r\n\r\n            <p class=\"mb-1\" style=\"word-break: break-all !important\">\r\n              <span class=\"font-size-13\">{{ cmt.comment }}</span>\r\n              <i\r\n                v-b-tooltip.hover.top\r\n                :title=\"$t('actions.delete')\"\r\n                @click=\"deleteComment(cmt)\"\r\n                class=\"bx ml-2 bx-trash font-size-16 p_cursor hi\"\r\n              ></i>\r\n              <i\r\n                v-b-tooltip.hover.top\r\n                :title=\"$t('actions.edit')\"\r\n                @click=\"editComment(cmt)\"\r\n                class=\"bx bx-pencil font-size-16 p_cursor hi\"\r\n              ></i>\r\n            </p>\r\n            <p class=\"text-muted mb-0 font-size-10\">\r\n              <i class=\"bx bx-calendar mr-1 text-primary\"></i>\r\n              {{ replaceDate(cmt.date).daym_shortyyyy_hm() }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </simplebar>\r\n    </div>\r\n\r\n    <div class=\"pl-3 pr-3 pt-3\">\r\n      <form>\r\n        <div class=\"form-group\" style=\"position: relative\">\r\n          <b-form-textarea\r\n            style=\"resize: none\"\r\n            @keyup.enter=\"leaveComment(comment)\"\r\n            v-model=\"comment\"\r\n            class=\"form-control\"\r\n            id=\"commentmessage-input\"\r\n            :placeholder=\"$t('writeCmt')\"\r\n            rows=\"3\"\r\n          ></b-form-textarea>\r\n          <b-button\r\n            variant=\"white\"\r\n            class=\"iconUpload\"\r\n            @click.prevent=\"clickUpload\"\r\n            style=\"padding: 1px\"\r\n            size=\"sm\"\r\n          >\r\n            <i class=\"bx bxs-file-doc text-primary font-size-20\"></i>\r\n          </b-button>\r\n        </div>\r\n      </form>\r\n\r\n      <upload-file :cmt=\"true\" ref=\"file\" @sendFile=\"sendFile\" />\r\n      <upload-file\r\n        :item=\"editData\"\r\n        :cmt=\"true\"\r\n        :edit=\"true\"\r\n        ref=\"fileEdit\"\r\n        @sendFile=\"saveChanges\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport projectService from \"@/shared/services/projectService\";\r\nimport simplebar from \"simplebar-vue\";\r\nimport { replaceDate } from \"@/helper\";\r\nimport VueEasyLightbox from \"vue-easy-lightbox\";\r\nexport default {\r\n  props: [\"height\", \"isCard\"],\r\n  watch: {\r\n    file: {\r\n      handler(v) {\r\n        if (v) {\r\n          this.fileModal = true;\r\n        }\r\n      },\r\n    },\r\n    async searchValue() {\r\n      await this.listComments();\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      replaceDate: replaceDate,\r\n      singleImage: false,\r\n      searchValue: \"\",\r\n      fileModal: false,\r\n      comment: \"\",\r\n      file: null,\r\n      page: 0,\r\n      itemsPerPage: 20,\r\n      comments: [],\r\n      commentPage: 0,\r\n      cardInfo: {},\r\n      cmpKey: 0,\r\n      editData: null,\r\n    };\r\n  },\r\n  components: {\r\n    simplebar,\r\n    VueEasyLightbox,\r\n  },\r\n  computed: {\r\n    params() {\r\n      return {\r\n        params: {\r\n          page: this.page,\r\n          itemsPerPage: this.itemsPerPage,\r\n        },\r\n        search: this.searchValue,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    reset() {\r\n      this.cmpKey += 1;\r\n      setTimeout(() => {\r\n        this.scrollActive();\r\n      }, 200);\r\n    },\r\n    deleteComment(d) {\r\n      this.cnf().then((v) => {\r\n        if (v.value) {\r\n          projectService\r\n            .deleteCardComment(d.id)\r\n            .then((rs) => {\r\n              this.deleteSuccess();\r\n              this.listComments();\r\n            })\r\n            .catch((err) => {\r\n              // this.catchErr(err);\r\n            });\r\n        }\r\n      });\r\n    },\r\n    editComment(v) {\r\n      this.editData = v;\r\n      setTimeout(() => {\r\n        this.$refs.fileEdit.openForComment();\r\n      }, 100);\r\n    },\r\n\r\n    setCardInfoData(data) {\r\n      this.cardInfo = data;\r\n      this.$nextTick(() => {\r\n        this.listComments();\r\n      });\r\n    },\r\n    saveChanges(message, file) {\r\n      this.updateCardComment(message, file);\r\n    },\r\n    updateCardComment(cmt, file) {\r\n      if (this.editData.id) {\r\n        projectService\r\n          .updateCardComment(this.editData.id, cmt, file)\r\n          .then((rs) => {\r\n            this.comment = \"\";\r\n            setTimeout(() => {\r\n              this.listComments();\r\n              this.$refs.fileEdit.reset();\r\n            }, 300);\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          });\r\n      } else {\r\n        this.showMsgError(`Not selected data`);\r\n      }\r\n    },\r\n    sendFile(message, file) {\r\n      this.leaveComment(message, file);\r\n      this.fileModal = false;\r\n      this.file = null;\r\n    },\r\n    clickUpload() {\r\n      this.$refs.file.upld();\r\n    },\r\n    leaveComment(cmt, file) {\r\n      if (this.cardInfo.id) {\r\n        projectService\r\n          .createCardComment(this.cardInfo.id, cmt, file)\r\n          .then((rs) => {\r\n            this.comment = \"\";\r\n            setTimeout(() => {\r\n              this.listComments();\r\n            }, 300);\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          });\r\n      } else {\r\n        this.$router.go(-1);\r\n      }\r\n    },\r\n    listComments() {\r\n      if (this.cardInfo.id) {\r\n        projectService\r\n          .listCardComment(this.cardInfo.id, this.params)\r\n          .then((rs) => {\r\n            this.comments = rs.data.list;\r\n            this.handleScroll();\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          });\r\n      } else {\r\n        this.$router.go(-1);\r\n      }\r\n    },\r\n    loadMoreComments(page) {\r\n      if (this.cardInfo.id) {\r\n        projectService\r\n          .listCardComment(this.cardInfo.id, {\r\n            params: {\r\n              page: page,\r\n              itemsPerPage: 20,\r\n            },\r\n            search: \"\",\r\n          })\r\n          .then(async ({ data }) => {\r\n            if (data.list.length > 0) {\r\n              this.comments = this.comments.concat(data.list);\r\n            } else {\r\n              this.commentPage + -1;\r\n            }\r\n          });\r\n      } else {\r\n        this.$router.go(-1);\r\n      }\r\n    },\r\n    scrollActive() {\r\n      this.$refs.commentsRef.SimpleBar.getScrollElement().addEventListener(\r\n        \"scroll\",\r\n        (e) => {\r\n          let { scrollTop, scrollHeight, clientHeight } = event.target;\r\n          const offsetForTrigger = 1;\r\n          if (scrollHeight - clientHeight - offsetForTrigger < scrollTop) {\r\n            this.loadMoreComments((this.commentPage += 1));\r\n          }\r\n        }\r\n      );\r\n    },\r\n    handleScroll() {\r\n      if (this.$refs.commentsRef.$el) {\r\n        setTimeout(() => {\r\n          this.$refs.commentsRef.SimpleBar.getScrollElement().scrollTop = 0;\r\n        }, 500);\r\n      }\r\n    },\r\n  },\r\n  mounted() {\r\n    // var container3 = document.querySelector(\r\n    //   \"#comment-list .simplebar-content-wrapper\"\r\n    // );\r\n    // if (container3) {\r\n    //   container3.scrollTo({ top: 500, behavior: \"smooth\" });\r\n    // }\r\n    // Contact list actions\r\n    if (this.isCard) {\r\n      this.scrollActive();\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.iconUpload {\r\n  position: absolute;\r\n  right: 2px;\r\n  bottom: 2px;\r\n}\r\n</style>"]}]}