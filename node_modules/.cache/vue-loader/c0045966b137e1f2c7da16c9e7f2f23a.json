{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\members.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\members.vue","mtime":1675054786278},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1667355361315},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouc2lkZWJhcjEgew0KICAuYi1zaWRlYmFyIHsNCiAgICB3aWR0aDogNTAwcHg7DQogICAgYmFja2dyb3VuZDogd2hpdGU7DQogIH0NCn0NCg=="},{"version":3,"sources":["members.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyQA;AACA;AACA;AACA;AACA;AACA","file":"members.vue","sourceRoot":"src/modules/projects","sourcesContent":["<template>\r\n  <div class=\"card mb-0\">\r\n    <div class=\"card-body\">\r\n      <h4 class=\"card-title mb-4\">{{ $t('members') }}</h4>\r\n      <simplebar\r\n          :key=\"cmpKey+'MEMBER'\"\r\n          data-simplebar-auto-hide=\"false\"\r\n          :style=\"`height: ${heightProp}px`\"\r\n          id=\"member-list\"\r\n          ref=\"membersRef\"\r\n      >\r\n        <div class=\"table-responsive\">\r\n          <table class=\"table table-centered\">\r\n            <tbody>\r\n            <tr v-for=\"(member, index) in members\" :key=\"index\">\r\n              <td style=\"width: 50px;\">\r\n                <img\r\n                    v-if=\"!member.employeePhotoUploadPath\"\r\n                    :src=\"`${hrUrl}/${member.employeePhotoUploadPath}`\"\r\n                    class=\"rounded-circle avatar-xs\"\r\n                    alt\r\n                />\r\n                <div v-else class=\"avatar-xs mr-3\">\r\n                  <span class=\"avatar-title rounded-circle bg-soft-primary text-primary font-size-16\">\r\n                      {{ `${member.firstName.charAt(0)}${member.lastName.charAt(0)}` }}\r\n                  </span>\r\n                </div>\r\n              </td>\r\n              <td style=\"vertical-align: middle\">\r\n                <h5 class=\"font-size-14 m-0\">\r\n                  <p href=\"#\" class=\"text-dark m-0 p-0\">\r\n                    {{ `${member.lastName} ${member.firstName} ${member.middleName}` }}\r\n                  </p>\r\n                </h5>\r\n                <p class=\"m-0 text-muted\">\r\n                  {{ getName({ nameLt: member.departmentNameLt, nameUz: member.departmentNameUz, nameRu: member.departmentNameRu }) }}\r\n                </p>\r\n                <p class=\"m-0 text-muted\">\r\n                  {{ getName({ nameLt: member.staffPositionNameLt, nameUz: member.staffPositionNameUz, nameRu: member.staffPositionNameRu }) }}\r\n                </p>\r\n                <p class=\"m-0\" v-if=\"member.mailingPurposeId\">\r\n                  {{ getName({ nameLt: member.mailingPurposeNameLt, nameUz: member.mailingPurposeNameUz, nameRu: member.mailingPurposeNameRu }) }}\r\n                </p>\r\n              </td>\r\n              <td>\r\n                <div v-if=\"isCommission\">\r\n                  <i v-if=\"member.isAdmin\" class=\"mdi mdi-shield-account-outline text-success font-size-20 hi\" />\r\n                  <i\r\n                      v-else-if=\"project.isAdmin && !['FINISHED', 'REVIEW_FINISHED', 'TEMPORARILY_CLOSED'].includes(project.status)\"\r\n                      class=\"bx bx-trash font-size-20 hi\"\r\n                      @click.prevent=\"deleteMember(member.employeeId)\"\r\n                  ></i>\r\n                </div>\r\n                <div v-else>\r\n                  <i v-if=\"member.isAdmin\" class=\"mdi mdi-shield-account-outline text-success font-size-20 hi\" />\r\n                  <i\r\n                      v-else-if=\"project.isAdmin && !['FINISHED', 'REVIEW_FINISHED', 'COMMISSION_REVIEW_CLOSED', 'TEMPORARILY_CLOSED'].includes(project.status)\"\r\n                      class=\"bx bx-trash font-size-20 hi\"\r\n                      @click.prevent=\"deleteMember(member.employeeId)\"\r\n                  />\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </simplebar>\r\n    </div>\r\n\r\n    <div class=\"p-3\" v-if=\"project && !['TEMPORARILY_CLOSED', 'REVIEW_FINISHED', 'COMMISSION_REVIEW_CLOSED', 'FINISHED'].includes(project.status)\">\r\n      <div>\r\n        <b-button @click.prevent=\"clickAdd\" variant=\"primary\" block >\r\n          <i class=\"fa fa-user-plus d-block font-size-16\"></i>\r\n          {{ $t('actions.add') }}\r\n        </b-button>\r\n      </div>\r\n    </div>\r\n\r\n    <b-sidebar\r\n        backdrop-variant=\"dark\"\r\n        backdrop\r\n        class=\"sidebar1\"\r\n        shadow\r\n        sidebar-class=\"p-0\"\r\n        :no-header=\"true\"\r\n        right\r\n        v-model=\"isModal\"\r\n    >\r\n      <div>\r\n        <members :notIn=\"true\" for-project v-if=\"isModal\" @save=\"save\" @cancel=\"isModal=false\" ref=\"empMembersRef\" />\r\n      </div>\r\n    </b-sidebar>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport projectService from \"@/shared/services/projectService\";\r\nimport simplebar from \"simplebar-vue\";\r\nimport Members from \"@/components/members\";\r\n\r\nexport default {\r\n  props: [\"heightProp\", \"close\", \"isMembers\", \"project\"],\r\n  data() {\r\n    return {\r\n      params: {\r\n        page: 0,\r\n        itemsPerPage: 20\r\n      },\r\n      members: [],\r\n      memberPage: 0,\r\n      isModal: false,\r\n      cmpKey: 0,\r\n    };\r\n  },\r\n  /*\r\n    COMPUTED */\r\n  computed: {\r\n    projectType() {\r\n      return this.$route.name === 'CommissionProjects' ? 'COMMISSION' : 'BEFORE_COMMISSION'\r\n    },\r\n    isCommission() {\r\n      return this.projectType === 'COMMISSION'\r\n    }\r\n  },\r\n  components: {\r\n    simplebar,\r\n    Members\r\n  },\r\n  created() {\r\n    if (\r\n        this.$route.query.page === \"overview\" ||\r\n        this.$route.query.page === \"tasks\"\r\n    ) {\r\n      this.listMembers();\r\n    }\r\n  },\r\n  methods: {\r\n    recalculate() {\r\n      this.cmpKey += 1;\r\n      setTimeout(() => {\r\n        this.scrollActive();\r\n      }, 200);\r\n    },\r\n    scrollActive() {\r\n      // Contact list actions\r\n      if (this.isMembers) {\r\n        this.$refs.membersRef.SimpleBar.getScrollElement().addEventListener(\r\n            \"scroll\",\r\n            e => {\r\n              let { scrollTop, scrollHeight, clientHeight } = event.target;\r\n              const offsetForTrigger = 1;\r\n              if (scrollHeight - clientHeight - offsetForTrigger < scrollTop) {\r\n                this.loadMoreMembers((this.memberPage += 1));\r\n              }\r\n            }\r\n        );\r\n      }\r\n    },\r\n    save(members) {\r\n      let projectId = this.$route.query.id;\r\n      if (members.length > 0) {\r\n        projectService\r\n            .addMember(projectId, members.map(emp => {\r\n              return { employeeId: emp.employeeId, mailingPurposeId: emp.mailingPurposeId }\r\n            }))\r\n            .then(rs => {\r\n              this.successSaved();\r\n              this.isModal = false;\r\n              this.listMembers();\r\n              this.$emit(\"success\");\r\n            })\r\n            .catch(err => {\r\n              // this.catchErr(err);\r\n            });\r\n      }\r\n    },\r\n    deleteMember(id) {\r\n      let projectId = this.$route.query.id;\r\n      this.cnf().then(v => {\r\n        if (v.value) {\r\n          projectService\r\n              .deleteMember(projectId, id)\r\n              .then(rs => {\r\n                this.deleteSuccess();\r\n                this.listMembers();\r\n              })\r\n              .catch(err => {\r\n                // this.catchErr(err);\r\n              });\r\n        }\r\n      });\r\n    },\r\n    clickAdd() {\r\n      this.isModal = true;\r\n      setTimeout(() => {\r\n        this.$refs.empMembersRef.reset();\r\n      });\r\n    },\r\n    leaveMember(cmt) {\r\n      let id = this.$route.query.id;\r\n      if (id) {\r\n        projectService\r\n            .leaveComment(id, null, cmt)\r\n            .then(rs => {\r\n              setTimeout(() => {\r\n                this.listMembers();\r\n              }, 300);\r\n            })\r\n            .catch(err => {\r\n              // this.catchErr(err);\r\n            });\r\n      } else {\r\n        this.$router.go(-1);\r\n      }\r\n    },\r\n    listMembers() {\r\n      let id = this.$route.query.id;\r\n      if (id) {\r\n        projectService\r\n            .listMembers(id, this.params, this.projectType)\r\n            .then(rs => {\r\n              this.members = rs.data.list;\r\n            })\r\n            .catch(err => {\r\n              // this.catchErr(err);\r\n            });\r\n      } else {\r\n        this.$router.go(-1);\r\n      }\r\n    },\r\n    loadMoreMembers(page) {\r\n      let id = this.$route.query.id;\r\n      if (id) {\r\n        projectService\r\n            .listMembers(id, {\r\n              page: (this.memberPage += 1),\r\n              itemsPerPage: 20\r\n            }, this.projectType)\r\n            .then(async ({ data }) => {\r\n              if (data.list.length > 0) {\r\n                this.members = this.members.concat(data.list);\r\n              } else {\r\n                this.memberPage -= 2;\r\n              }\r\n            });\r\n      } else {\r\n        this.$router.go(-1);\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    var container3 = document.querySelector(\r\n        \"#member-list .simplebar-content-wrapper\"\r\n    );\r\n    if (container3) {\r\n      container3.scrollTo({ top: 500, behavior: \"smooth\" });\r\n    }\r\n    setTimeout(() => {\r\n      this.scrollActive();\r\n    }, 200);\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.sidebar1 {\r\n  .b-sidebar {\r\n    width: 500px;\r\n    background: white;\r\n  }\r\n}\r\n</style>"]}]}