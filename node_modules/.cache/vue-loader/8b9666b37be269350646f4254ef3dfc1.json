{"remainingRequest":"D:\\ACRU\\interactive-services\\node_modules\\cache-loader\\dist\\cjs.js??ref--12-0!D:\\ACRU\\interactive-services\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ACRU\\interactive-services\\node_modules\\babel-loader\\lib\\index.js!D:\\ACRU\\interactive-services\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!D:\\ACRU\\interactive-services\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ACRU\\interactive-services\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ACRU\\interactive-services\\src\\modules\\fair-price\\Main.vue?vue&type=template&id=7e0f9ff0&scoped=true","dependencies":[{"path":"D:\\ACRU\\interactive-services\\src\\modules\\fair-price\\Main.vue","mtime":1710750342961},{"path":"D:\\ACRU\\interactive-services\\babel.config.js","mtime":1709020148252},{"path":"D:\\ACRU\\interactive-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ACRU\\interactive-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ACRU\\interactive-services\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ACRU\\interactive-services\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"D:\\ACRU\\interactive-services\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\ACRU\\interactive-services\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\ACRU\\interactive-services\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmxpbmsuanMiOwp2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkgewogIHZhciBfdm0kcmV0dXJuU2VhcmNoLCBfdm0kcmV0dXJuU2VhcmNoMiwgX3ZtJHJldHVyblNlYXJjaDMsIF92bSRyZXR1cm5TZWFyY2g0LCBfdm0kcmV0dXJuU2VhcmNoNSwgX3ZtJHJldHVyblNlYXJjaDYsIF92bSRyZXR1cm5TZWFyY2g3LCBfdm0kcmV0dXJuU2VhcmNoOCwgX3ZtJHJldHVyblNlYXJjaDksIF92bSRyZXR1cm5TZWFyY2gxMCwgX3ZtJHJldHVyblNlYXJjaDExLCBfdm0kcmV0dXJuU2VhcmNoMTIsIF92bSRyZXR1cm5TZWFyY2gxMywgX3ZtJHJldHVyblNlYXJjaDE0LCBfdm0kcmV0dXJuU2VhcmNoMTUsIF92bSRyZXR1cm5TZWFyY2gxNiwgX3ZtJHJldHVyblNlYXJjaDE3LCBfdm0kcmV0dXJuU2VhcmNoMTgsIF92bSRyZXR1cm5TZWFyY2gxOSwgX3ZtJHJldHVyblNlYXJjaDIwLCBfdm0kcmV0dXJuU2VhcmNoMjEsIF92bSRyZXR1cm5TZWFyY2gyMiwgX3ZtJHJldHVyblNlYXJjaDIzLCBfdm0kcmV0dXJuU2VhcmNoMjQsIF92bSRyZXR1cm5TZWFyY2gyNSwgX3ZtJHJldHVyblNlYXJjaDI2LCBfdm0kcmV0dXJuU2VhcmNoMjcsIF92bSRyZXR1cm5TZWFyY2gyOCwgX3ZtJHJldHVyblNlYXJjaDI5LCBfdm0kcmV0dXJuU2VhcmNoMzAsIF92bSRyZXR1cm5TZWFyY2gzMSwgX3ZtJHJldHVyblNlYXJjaDMyLCBfdm0kcmV0dXJuU2VhcmNoMzMsIF92bSRyZXR1cm5TZWFyY2gzNCwgX3ZtJHJldHVyblNlYXJjaDM1LCBfdm0kcmV0dXJuU2VhcmNoMzYsIF92bSRyZXR1cm5TZWFyY2gzNywgX3ZtJHJldHVyblNlYXJjaDM4LCBfdm0kcmV0dXJuU2VhcmNoMzksIF92bSRyZXR1cm5TZWFyY2g0MCwgX3ZtJHJldHVyblNlYXJjaDQxLCBfdm0kcmV0dXJuU2VhcmNoNDIsIF92bSRyZXR1cm5TZWFyY2g0MywgX3ZtJHJldHVyblNlYXJjaDQ0LCBfdm0kcmV0dXJuU2VhcmNoNDUsIF92bSRyZXR1cm5TZWFyY2g0NiwgX3ZtJHJldHVyblNlYXJjaDQ3LCBfdm0kcmV0dXJuU2VhcmNoNDgsIF92bSRyZXR1cm5TZWFyY2g0OSwgX3ZtJHJldHVyblNlYXJjaDUwLCBfdm0kcmV0dXJuU2VhcmNoNTEsIF92bSRyZXR1cm5TZWFyY2g1MiwgX3ZtJHJldHVyblNlYXJjaDUzLCBfdm0kcmV0dXJuU2VhcmNoNTQsIF92bSRyZXR1cm5TZWFyY2g1NSwgX3ZtJHJldHVyblNlYXJjaDU2LCBfdm0kcmV0dXJuU2VhcmNoNTcsIF92bSRyZXR1cm5TZWFyY2g1OCwgX3ZtJHJldHVyblNlYXJjaDU5LCBfdm0kcmV0dXJuU2VhcmNoNjAsIF92bSRyZXR1cm5TZWFyY2g2MSwgX3ZtJHJldHVyblNlYXJjaDYyLCBfdm0kcmV0dXJuU2VhcmNoNjMsIF92bSRyZXR1cm5TZWFyY2g2NCwgX3ZtJHJldHVyblNlYXJjaDY1LCBfdm0kcmV0dXJuU2VhcmNoNjYsIF92bSRyZXR1cm5TZWFyY2g2NywgX3ZtJHJldHVyblNlYXJjaDY4LCBfdm0kcmV0dXJuU2VhcmNoNzIsIF92bSRyZXR1cm5TZWFyY2g3NiwgX3ZtJHJldHVyblNlYXJjaDc3LCBfdm0kcmV0dXJuU2VhcmNoNzgsIF92bSRyZXR1cm5TZWFyY2g3OSwgX3ZtJHJldHVyblNlYXJjaDgwLCBfdm0kcmV0dXJuU2VhcmNoODEsIF92bSRyZXR1cm5TZWFyY2g4MiwgX3ZtJHJldHVyblNlYXJjaDgzLCBfdm0kcmV0dXJuU2VhcmNoODQsIF92bSRyZXR1cm5TZWFyY2g4NSwgX3ZtJHJldHVyblNlYXJjaDg2LCBfdm0kcmV0dXJuU2VhcmNoODcsIF92bSRyZXR1cm5TZWFyY2g5MSwgX3ZtJHJldHVyblNlYXJjaDk1LCBfdm0kcmV0dXJuU2VhcmNoOTYsIF92bSRyZXR1cm5TZWFyY2g5NywgX3ZtJHJldHVyblNlYXJjaDk4LCBfdm0kcmV0dXJuU2VhcmNoOTksIF92bSRyZXR1cm5TZWFyY2gxMDAsIF92bSRyZXR1cm5TZWFyY2gxMDEsIF92bSRyZXR1cm5TZWFyY2gxMDIsIF92bSRyZXR1cm5TZWFyY2gxMDMsIF92bSRyZXR1cm5TZWFyY2gxMDQsIF92bSRyZXR1cm5TZWFyY2gxMDUsIF92bSRyZXR1cm5TZWFyY2gxMDYsIF92bSRkZXRhaWxJbmZvLCBfdm0kZGV0YWlsSW5mbzIsIF92bSRkZXRhaWxJbmZvMywgX3ZtJGRldGFpbEluZm80LCBfdm0kZGV0YWlsSW5mbzUsIF92bSRkZXRhaWxJbmZvNiwgX3ZtJHJldHVyblNlYXJjaDEwNywgX3ZtJHJldHVyblNlYXJjaDEwOCwgX3ZtJHJldHVyblNlYXJjaDEwOSwgX3ZtJHJldHVyblNlYXJjaDExMCwgX3ZtJHJldHVyblNlYXJjaDExMSwgX3ZtJHJldHVyblNlYXJjaDExMiwgX3ZtJHJldHVyblNlYXJjaDExMywgX3ZtJHJldHVyblNlYXJjaDExNCwgX3ZtJHJldHVyblNlYXJjaDExNSwgX3ZtJHJldHVyblNlYXJjaDExNiwgX3ZtJHJldHVyblNlYXJjaDExNywgX3ZtJHJldHVyblNlYXJjaDExOCwgX3ZtJHJldHVyblNlYXJjaDExOSwgX3ZtJHJldHVyblNlYXJjaDEyMCwgX3ZtJHJldHVyblNlYXJjaDEyMSwgX3ZtJHJldHVyblNlYXJjaDEyMiwgX3ZtJHJldHVyblNlYXJjaDEyMywgX3ZtJHJldHVyblNlYXJjaDEyNCwgX3ZtJHJldHVyblNlYXJjaDEyNSwgX3ZtJHJldHVyblNlYXJjaDEyNiwgX3ZtJHJldHVyblNlYXJjaDEyNywgX3ZtJHJldHVyblNlYXJjaDEyOCwgX3ZtJHJldHVyblNlYXJjaDEyOSwgX3ZtJHJldHVyblNlYXJjaDEzMCwgX3ZtJHJldHVyblNlYXJjaDEzMSwgX3ZtJHJldHVyblNlYXJjaDEzMiwgX3ZtJHJldHVyblNlYXJjaDEzMywgX3ZtJHJldHVyblNlYXJjaDEzNCwgX3ZtJHJldHVyblNlYXJjaDEzNSwgX3ZtJHJldHVyblNlYXJjaDEzNiwgX3ZtJHJldHVyblNlYXJjaDEzNywgX3ZtJHJldHVyblNlYXJjaDEzOCwgX3ZtJHJldHVyblNlYXJjaDEzOSwgX3ZtJHJldHVyblNlYXJjaDE0MCwgX3ZtJHJldHVyblNlYXJjaDE0MSwgX3ZtJHJldHVyblNlYXJjaDE0MiwgX3ZtJHJldHVyblNlYXJjaDE0MywgX3ZtJHJldHVyblNlYXJjaDE0NCwgX3ZtJHJldHVyblNlYXJjaDE0NSwgX3ZtJHJldHVyblNlYXJjaDE0NiwgX3ZtJHJldHVyblNlYXJjaDE0NywgX3ZtJHJldHVyblNlYXJjaDE0OCwgX3ZtJHJldHVyblNlYXJjaDE0OSwgX3ZtJHJldHVyblNlYXJjaDE1MCwgX3ZtJHJldHVyblNlYXJjaDE1MSwgX3ZtJHJldHVyblNlYXJjaDE1MiwgX3ZtJHJldHVyblNlYXJjaDE1MywgX3ZtJHJldHVyblNlYXJjaDE1NCwgX3ZtJHJldHVyblNlYXJjaDE1NSwgX3ZtJHJldHVyblNlYXJjaDE1NiwgX3ZtJHJldHVyblNlYXJjaDE1NywgX3ZtJHJldHVyblNlYXJjaDE1OCwgX3ZtJHJldHVyblNlYXJjaDE1OSwgX3ZtJHJldHVyblNlYXJjaDE2MCwgX3ZtJHJldHVyblNlYXJjaDE2MTsKICB2YXIgX3ZtID0gdGhpcywKICAgIF9jID0gX3ZtLl9zZWxmLl9jLAogICAgX3NldHVwID0gX3ZtLl9zZWxmLl9zZXR1cFByb3h5OwogIHJldHVybiBfYygnZGl2JywgW19jKCdkaXYnLCBbX2MoJ2ItbW9kYWwnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAiYWRkRmlsZXMiLAogICAgICAiY2VudGVyZWQiOiAiIiwKICAgICAgInNpemUiOiAibGciLAogICAgICAidGl0bGUiOiBfdm0uJHQoJ2FjdGlvbnMucHJvZHVjdF9pbmZvJykKICAgIH0sCiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogIm1vZGFsLWZvb3RlciIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbigpIHsKICAgICAgICByZXR1cm4gW19jKCdiLWJ1dHRvbicsIHsKICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICJiYWNrZ3JvdW5kLWNvbG9yIjogIiMyYjY3NWIiLAogICAgICAgICAgICAiY29sb3IiOiAid2hpdGUiLAogICAgICAgICAgICAicGFkZGluZyI6ICIzcHggMjVweCIsCiAgICAgICAgICAgICJib3JkZXIiOiAibm9uZSIsCiAgICAgICAgICAgICJmb250LXNpemUiOiAiMTRweCIKICAgICAgICAgIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgICAgICBfdm0uaW5mb3JtYXRpb25Nb2RhbCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgW192bS5fdigiIE9LICIpXSldOwogICAgICB9LAogICAgICBwcm94eTogdHJ1ZQogICAgfV0pLAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5pbmZvcm1hdGlvbk1vZGFsLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLmluZm9ybWF0aW9uTW9kYWwgPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJpbmZvcm1hdGlvbk1vZGFsIgogICAgfQogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ2Itcm93JywgW19jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAicHgtMyBtYi00IiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIiwKICAgICAgIm1kIjogIjQiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiM4Mzk2OTAiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdhY3Rpb25zLnByb2R1Y3RfdHlwZScpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiCiAgfSwgW19jKCdiJywgewogICAgc3RhdGljQ2xhc3M6ICJkZXRhaWxUZXh0IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMjQ2MjU2IgogICAgfQogIH0sIFtfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgPyBfYygnc3BhbicsIFtfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKCgoX3ZtJHJldHVyblNlYXJjaCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2ggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaCA9IF92bSRyZXR1cm5TZWFyY2guYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2ggPSBfdm0kcmV0dXJuU2VhcmNoLm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoID0gX3ZtJHJldHVyblNlYXJjaC5wcmljZVByb2R1Y3REdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2ggPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2guY29kZSkgPT0gJ0ZPT0RTJyA/IF92bS4kdCgncHJvZHVjdFByaWNlLmN1c3RvbVByb2R1Y3QnKSA6IF92bS4kdCgncHJvZHVjdFByaWNlLm90aGVyUHJvZHVjdCcpKSldKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyA/IF9jKCdzcGFuJywgW19jKCdzcGFuJywgW192bS5fdihfdm0uX3MoKChfdm0kcmV0dXJuU2VhcmNoMiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gyID0gX3ZtJHJldHVyblNlYXJjaDIuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMiA9IF92bSRyZXR1cm5TZWFyY2gyLm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDIgPSBfdm0kcmV0dXJuU2VhcmNoMi5wcmljZVByb2R1Y3REdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMi5jb2RlKSA9PSAnRk9PRFMnID8gX3ZtLiR0KCdwcm9kdWN0UHJpY2UuY3VzdG9tUHJvZHVjdCcpIDogX3ZtLiR0KCdwcm9kdWN0UHJpY2Uub3RoZXJQcm9kdWN0JykpKV0pXSkgOiBfdm0uX2UoKV0pXSldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LTMgbWItNCIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIsCiAgICAgICJtZCI6ICI0IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjODM5NjkwIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdF9pbmZvLm5hbWUnKSkpXSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIgogIH0sIFtfYygnYicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGV0YWlsVGV4dCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzI0NjI1NiIKICAgIH0KICB9LCBbX3ZtLmluZm9Nb2RhbFZhbHVlID09ICdtYXgnID8gX2MoJ3NwYW4nLCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0TmFtZSh7CiAgICBuYW1lTHQ6IChfdm0kcmV0dXJuU2VhcmNoMyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzID0gX3ZtJHJldHVyblNlYXJjaDMuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMyA9IF92bSRyZXR1cm5TZWFyY2gzLm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDMgPSBfdm0kcmV0dXJuU2VhcmNoMy5wcmljZVByb2R1Y3REdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDMubmFtZUx0ID8gKF92bSRyZXR1cm5TZWFyY2g0ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQgPSBfdm0kcmV0dXJuU2VhcmNoNC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0ID0gX3ZtJHJldHVyblNlYXJjaDQubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNCA9IF92bSRyZXR1cm5TZWFyY2g0LnByaWNlUHJvZHVjdER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g0Lm5hbWVMdCA6ICcnLAogICAgbmFtZVV6OiAoX3ZtJHJldHVyblNlYXJjaDUgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNSA9IF92bSRyZXR1cm5TZWFyY2g1LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDUgPSBfdm0kcmV0dXJuU2VhcmNoNS5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1ID0gX3ZtJHJldHVyblNlYXJjaDUucHJpY2VQcm9kdWN0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g1Lm5hbWVVeiA/IChfdm0kcmV0dXJuU2VhcmNoNiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2ID0gX3ZtJHJldHVyblNlYXJjaDYuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNiA9IF92bSRyZXR1cm5TZWFyY2g2Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDYgPSBfdm0kcmV0dXJuU2VhcmNoNi5wcmljZVByb2R1Y3REdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoNi5uYW1lVXogOiAnJywKICAgIG5hbWVSdTogKF92bSRyZXR1cm5TZWFyY2g3ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDcgPSBfdm0kcmV0dXJuU2VhcmNoNy5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g3ID0gX3ZtJHJldHVyblNlYXJjaDcubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNyA9IF92bSRyZXR1cm5TZWFyY2g3LnByaWNlUHJvZHVjdER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDcgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNy5uYW1lUlUgPyAoX3ZtJHJldHVyblNlYXJjaDggPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOCA9IF92bSRyZXR1cm5TZWFyY2g4LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDggPSBfdm0kcmV0dXJuU2VhcmNoOC5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4ID0gX3ZtJHJldHVyblNlYXJjaDgucHJpY2VQcm9kdWN0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDgubmFtZVJVIDogJycKICB9KSkgKyAiICIpXSkgOiBfdm0uX2UoKSwgX3ZtLmluZm9Nb2RhbFZhbHVlID09ICdtaW4nID8gX2MoJ3NwYW4nLCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0TmFtZSh7CiAgICBuYW1lTHQ6IChfdm0kcmV0dXJuU2VhcmNoOSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g5ID0gX3ZtJHJldHVyblNlYXJjaDkuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoOSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoOSA9IF92bSRyZXR1cm5TZWFyY2g5Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDkgPSBfdm0kcmV0dXJuU2VhcmNoOS5wcmljZVByb2R1Y3REdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g5ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDkubmFtZUx0ID8gKF92bSRyZXR1cm5TZWFyY2gxMCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTAgPSBfdm0kcmV0dXJuU2VhcmNoMTAuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEwID0gX3ZtJHJldHVyblNlYXJjaDEwLm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMCA9IF92bSRyZXR1cm5TZWFyY2gxMC5wcmljZVByb2R1Y3REdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDEwLm5hbWVMdCA6ICcnLAogICAgbmFtZVV6OiAoX3ZtJHJldHVyblNlYXJjaDExID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMSA9IF92bSRyZXR1cm5TZWFyY2gxMS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTEgPSBfdm0kcmV0dXJuU2VhcmNoMTEubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExID0gX3ZtJHJldHVyblNlYXJjaDExLnByaWNlUHJvZHVjdER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDExLm5hbWVVeiA/IChfdm0kcmV0dXJuU2VhcmNoMTIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEyID0gX3ZtJHJldHVyblNlYXJjaDEyLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMiA9IF92bSRyZXR1cm5TZWFyY2gxMi5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTIgPSBfdm0kcmV0dXJuU2VhcmNoMTIucHJpY2VQcm9kdWN0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxMi5uYW1lVXogOiAnJywKICAgIG5hbWVSdTogKF92bSRyZXR1cm5TZWFyY2gxMyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTMgPSBfdm0kcmV0dXJuU2VhcmNoMTMuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEzID0gX3ZtJHJldHVyblNlYXJjaDEzLm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMyA9IF92bSRyZXR1cm5TZWFyY2gxMy5wcmljZVByb2R1Y3REdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMy5uYW1lUnUgPyAoX3ZtJHJldHVyblNlYXJjaDE0ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNCA9IF92bSRyZXR1cm5TZWFyY2gxNC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTQgPSBfdm0kcmV0dXJuU2VhcmNoMTQubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE0ID0gX3ZtJHJldHVyblNlYXJjaDE0LnByaWNlUHJvZHVjdER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTQubmFtZVJ1IDogJycKICB9KSkgKyAiICIpXSkgOiBfdm0uX2UoKV0pXSldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LTMgbWItNCIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIsCiAgICAgICJtZCI6ICI0IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjODM5NjkwIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgnYWN0aW9ucy5wcm9kdWN0X3ByaWNlJykpKV0pLCBfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIKICB9LCBbX2MoJ2InLCB7CiAgICBzdGF0aWNDbGFzczogImRldGFpbFRleHQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyNDYyNTYiCiAgICB9CiAgfSwgW192bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWF4JyA/IF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2gxNSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTUgPSBfdm0kcmV0dXJuU2VhcmNoMTUuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE1ID0gX3ZtJHJldHVyblNlYXJjaDE1Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE1Lm1heFByaWNlID8gX3ZtLmZvcm1hdE51bWJlcigoX3ZtJHJldHVyblNlYXJjaDE2ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNiA9IF92bSRyZXR1cm5TZWFyY2gxNi5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTYgPSBfdm0kcmV0dXJuU2VhcmNoMTYubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxNi5tYXhQcmljZSkgOiAnJykgKyAiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc29tJykpKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyA/IF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2gxNyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTcgPSBfdm0kcmV0dXJuU2VhcmNoMTcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE3ID0gX3ZtJHJldHVyblNlYXJjaDE3Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE3ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE3Lm1pblByaWNlID8gX3ZtLmZvcm1hdE51bWJlcigoX3ZtJHJldHVyblNlYXJjaDE4ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxOCA9IF92bSRyZXR1cm5TZWFyY2gxOC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxOCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTggPSBfdm0kcmV0dXJuU2VhcmNoMTgubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTggPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxOC5taW5QcmljZSkgOiAnJykgKyAiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc29tJykpKV0pIDogX3ZtLl9lKCldKV0pXSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC0zIG1iLTQiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiLAogICAgICAibWQiOiAiNCIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzgzOTY5MCIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2FjdGl2aXR5LnJhdGVJbmZvLm1vbm9wb2x5LmZvb2RzLmxhc3REYXRlMScpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiCiAgfSwgW19jKCdiJywgewogICAgc3RhdGljQ2xhc3M6ICJkZXRhaWxUZXh0IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMjQ2MjU2IgogICAgfQogIH0sIFtfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMTkgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE5ID0gX3ZtJHJldHVyblNlYXJjaDE5LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxOSA9IF92bSRyZXR1cm5TZWFyY2gxOS5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxOSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxOS5kYXRlID8gKF92bSRyZXR1cm5TZWFyY2gyMCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyMCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjAgPSBfdm0kcmV0dXJuU2VhcmNoMjAuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDIwID0gX3ZtJHJldHVyblNlYXJjaDIwLm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDIwID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMjAuZGF0ZSA6ICcnKSldKSA6IF92bS5fZSgpLCBfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21pbicgPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMjEgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDIxID0gX3ZtJHJldHVyblNlYXJjaDIxLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDIxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyMSA9IF92bSRyZXR1cm5TZWFyY2gyMS5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyMSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gyMS5kYXRlID8gKF92bSRyZXR1cm5TZWFyY2gyMiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjIgPSBfdm0kcmV0dXJuU2VhcmNoMjIuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDIyID0gX3ZtJHJldHVyblNlYXJjaDIyLm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDIyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMjIuZGF0ZSA6ICcnKSldKSA6IF92bS5fZSgpXSldKV0pXSksIF9jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAicHgtMyBtYi00IiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIiwKICAgICAgIm1kIjogIjQiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiM4Mzk2OTAiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdhY3Rpdml0eS5yYXRlSW5mby5jb250cm9sLnBsYWNlTmFtZScpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiCiAgfSwgW19jKCdiJywgewogICAgc3RhdGljQ2xhc3M6ICJkZXRhaWxUZXh0IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMjQ2MjU2IgogICAgfQogIH0sIFtfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgPyBfYygnc3BhbicsIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5nZXROYW1lKHsKICAgIG5hbWVMdDogKF92bSRyZXR1cm5TZWFyY2gyMyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjMgPSBfdm0kcmV0dXJuU2VhcmNoMjMuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDIzID0gX3ZtJHJldHVyblNlYXJjaDIzLm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDIzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyMyA9IF92bSRyZXR1cm5TZWFyY2gyMy5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjMgPSBfdm0kcmV0dXJuU2VhcmNoMjMucmVnaW9uRHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjMgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMjMubmFtZUx0ID8gKF92bSRyZXR1cm5TZWFyY2gyNCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjQgPSBfdm0kcmV0dXJuU2VhcmNoMjQuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDI0ID0gX3ZtJHJldHVyblNlYXJjaDI0Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDI0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gyNCA9IF92bSRyZXR1cm5TZWFyY2gyNC5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjQgPSBfdm0kcmV0dXJuU2VhcmNoMjQucmVnaW9uRHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gyNC5uYW1lTHQgOiAnJywKICAgIG5hbWVVejogKF92bSRyZXR1cm5TZWFyY2gyNSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjUgPSBfdm0kcmV0dXJuU2VhcmNoMjUuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDI1ID0gX3ZtJHJldHVyblNlYXJjaDI1Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDI1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyNSA9IF92bSRyZXR1cm5TZWFyY2gyNS5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjUgPSBfdm0kcmV0dXJuU2VhcmNoMjUucmVnaW9uRHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjUgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMjUubmFtZVV6ID8gKF92bSRyZXR1cm5TZWFyY2gyNiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjYgPSBfdm0kcmV0dXJuU2VhcmNoMjYuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDI2ID0gX3ZtJHJldHVyblNlYXJjaDI2Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDI2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gyNiA9IF92bSRyZXR1cm5TZWFyY2gyNi5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjYgPSBfdm0kcmV0dXJuU2VhcmNoMjYucmVnaW9uRHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gyNi5uYW1lVXogOiAnJywKICAgIG5hbWVSdTogKF92bSRyZXR1cm5TZWFyY2gyNyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjcgPSBfdm0kcmV0dXJuU2VhcmNoMjcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDI3ID0gX3ZtJHJldHVyblNlYXJjaDI3Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDI3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyNyA9IF92bSRyZXR1cm5TZWFyY2gyNy5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjcgPSBfdm0kcmV0dXJuU2VhcmNoMjcucmVnaW9uRHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjcgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMjcubmFtZVJVID8gKF92bSRyZXR1cm5TZWFyY2gyOCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyOCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjggPSBfdm0kcmV0dXJuU2VhcmNoMjguYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDI4ID0gX3ZtJHJldHVyblNlYXJjaDI4Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDI4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gyOCA9IF92bSRyZXR1cm5TZWFyY2gyOC5wcmljZVByb2R1Y3REdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyOCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDI4Lm5hbWVSVSA6ICcnCiAgfSkpICsgIiAiKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyA/IF9jKCdzcGFuJywgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLmdldE5hbWUoewogICAgbmFtZUx0OiAoX3ZtJHJldHVyblNlYXJjaDI5ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDI5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyOSA9IF92bSRyZXR1cm5TZWFyY2gyOS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyOSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjkgPSBfdm0kcmV0dXJuU2VhcmNoMjkubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDI5ID0gX3ZtJHJldHVyblNlYXJjaDI5Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDI5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyOSA9IF92bSRyZXR1cm5TZWFyY2gyOS5yZWdpb25EdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyOSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gyOS5uYW1lTHQgPyAoX3ZtJHJldHVyblNlYXJjaDMwID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDMwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzMCA9IF92bSRyZXR1cm5TZWFyY2gzMC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzMCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMzAgPSBfdm0kcmV0dXJuU2VhcmNoMzAubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDMwID0gX3ZtJHJldHVyblNlYXJjaDMwLm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDMwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzMCA9IF92bSRyZXR1cm5TZWFyY2gzMC5yZWdpb25EdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzMCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDMwLm5hbWVMdCA6ICcnLAogICAgbmFtZVV6OiAoX3ZtJHJldHVyblNlYXJjaDMxID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDMxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzMSA9IF92bSRyZXR1cm5TZWFyY2gzMS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzMSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMzEgPSBfdm0kcmV0dXJuU2VhcmNoMzEubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDMxID0gX3ZtJHJldHVyblNlYXJjaDMxLm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDMxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzMSA9IF92bSRyZXR1cm5TZWFyY2gzMS5yZWdpb25EdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzMSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gzMS5uYW1lVXogPyAoX3ZtJHJldHVyblNlYXJjaDMyID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDMyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzMiA9IF92bSRyZXR1cm5TZWFyY2gzMi5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMzIgPSBfdm0kcmV0dXJuU2VhcmNoMzIubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDMyID0gX3ZtJHJldHVyblNlYXJjaDMyLm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDMyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzMiA9IF92bSRyZXR1cm5TZWFyY2gzMi5yZWdpb25EdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDMyLm5hbWVVeiA6ICcnLAogICAgbmFtZVJ1OiAoX3ZtJHJldHVyblNlYXJjaDMzID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDMzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzMyA9IF92bSRyZXR1cm5TZWFyY2gzMy5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMzMgPSBfdm0kcmV0dXJuU2VhcmNoMzMubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDMzID0gX3ZtJHJldHVyblNlYXJjaDMzLm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDMzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzMyA9IF92bSRyZXR1cm5TZWFyY2gzMy5yZWdpb25EdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzMyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gzMy5uYW1lUnUgPyAoX3ZtJHJldHVyblNlYXJjaDM0ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDM0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzNCA9IF92bSRyZXR1cm5TZWFyY2gzNC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMzQgPSBfdm0kcmV0dXJuU2VhcmNoMzQubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDM0ID0gX3ZtJHJldHVyblNlYXJjaDM0Lm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDM0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzNCA9IF92bSRyZXR1cm5TZWFyY2gzNC5yZWdpb25EdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDM0Lm5hbWVSdSA6ICcnCiAgfSkpICsgIiAiKV0pIDogX3ZtLl9lKCldKV0pXSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC0zIG1iLTQiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiLAogICAgICAibWQiOiAiNCIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzgzOTY5MCIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2NvbHVtbi5zYXZkb09iaicpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiCiAgfSwgW19jKCdiJywgewogICAgc3RhdGljQ2xhc3M6ICJkZXRhaWxUZXh0IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMjQ2MjU2IgogICAgfQogIH0sIFtfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMzUgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDM1ID0gX3ZtJHJldHVyblNlYXJjaDM1LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDM1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzNSA9IF92bSRyZXR1cm5TZWFyY2gzNS5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMzUgPSBfdm0kcmV0dXJuU2VhcmNoMzUubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzUgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMzUubWFya2V0TmFtZSA/IChfdm0kcmV0dXJuU2VhcmNoMzYgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDM2ID0gX3ZtJHJldHVyblNlYXJjaDM2LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDM2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzNiA9IF92bSRyZXR1cm5TZWFyY2gzNi5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMzYgPSBfdm0kcmV0dXJuU2VhcmNoMzYubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gzNi5tYXJrZXROYW1lIDogJycpKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyA/IF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2gzNyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMzcgPSBfdm0kcmV0dXJuU2VhcmNoMzcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDM3ID0gX3ZtJHJldHVyblNlYXJjaDM3Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDM3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzNyA9IF92bSRyZXR1cm5TZWFyY2gzNy5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzNyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gzNy5tYXJrZXROYW1lID8gKF92bSRyZXR1cm5TZWFyY2gzOCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzOCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMzggPSBfdm0kcmV0dXJuU2VhcmNoMzguYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDM4ID0gX3ZtJHJldHVyblNlYXJjaDM4Lm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDM4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzOCA9IF92bSRyZXR1cm5TZWFyY2gzOC5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzOCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDM4Lm1hcmtldE5hbWUgOiAnJykpXSkgOiBfdm0uX2UoKV0pXSldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LTMgbWItNCIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIsCiAgICAgICJtZCI6ICI0IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjODM5NjkwIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgnYWN0aW9ucy5tYXJrZXRfcGxhY2UnKSkpXSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIgogIH0sIFtfYygnYicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGV0YWlsVGV4dCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzI0NjI1NiIKICAgIH0KICB9LCBbX3ZtLmluZm9Nb2RhbFZhbHVlID09ICdtYXgnID8gX2MoJ3NwYW4nLCBbX3ZtLl92KF92bS5fcygoX3ZtJHJldHVyblNlYXJjaDM5ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDM5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzOSA9IF92bSRyZXR1cm5TZWFyY2gzOS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzOSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMzkgPSBfdm0kcmV0dXJuU2VhcmNoMzkubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDM5ID0gX3ZtJHJldHVyblNlYXJjaDM5Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDM5ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDM5LmFkZHJlc3MgPyAoX3ZtJHJldHVyblNlYXJjaDQwID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0MCA9IF92bSRyZXR1cm5TZWFyY2g0MC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0MCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNDAgPSBfdm0kcmV0dXJuU2VhcmNoNDAubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQwID0gX3ZtJHJldHVyblNlYXJjaDQwLm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQwID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoNDAuYWRkcmVzcyA6ICcnKSldKSA6IF92bS5fZSgpLCBfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21pbicgPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoNDEgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDQxID0gX3ZtJHJldHVyblNlYXJjaDQxLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g0MSA9IF92bSRyZXR1cm5TZWFyY2g0MS5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0MSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNDEgPSBfdm0kcmV0dXJuU2VhcmNoNDEubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDEgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNDEuYWRkcmVzcyA/IChfdm0kcmV0dXJuU2VhcmNoNDIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQyID0gX3ZtJHJldHVyblNlYXJjaDQyLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0MiA9IF92bSRyZXR1cm5TZWFyY2g0Mi5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0MiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNDIgPSBfdm0kcmV0dXJuU2VhcmNoNDIubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g0Mi5hZGRyZXNzIDogJycpKV0pIDogX3ZtLl9lKCldKV0pXSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC0zIG1iLTQiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiLAogICAgICAibWQiOiAiNCIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzgzOTY5MCIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2FjdGlvbnMubWFya2V0X2xvY2F0aW9uJykpKV0pLCBfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIKICB9LCBbX2MoJ2InLCB7CiAgICBzdGF0aWNDbGFzczogImRldGFpbFRleHQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyNDYyNTYiCiAgICB9CiAgfSwgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQgYWxpZ24taXRlbXMtY2VudGVyIgogIH0sIFtfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgJiYgKChfdm0kcmV0dXJuU2VhcmNoNDMgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDQzID0gX3ZtJHJldHVyblNlYXJjaDQzLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g0MyA9IF92bSRyZXR1cm5TZWFyY2g0My5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0MyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNDMgPSBfdm0kcmV0dXJuU2VhcmNoNDMubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDMgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNDMubGFuZyB8fCAoX3ZtJHJldHVyblNlYXJjaDQ0ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQ0ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g0NCA9IF92bSRyZXR1cm5TZWFyY2g0NC5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0NCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNDQgPSBfdm0kcmV0dXJuU2VhcmNoNDQubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDQgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDQ0ID0gX3ZtJHJldHVyblNlYXJjaDQ0Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQ0ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDQ0LmxpbmspID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJ3aWR0aCI6ICI3MCUiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIsCiAgICAgICJmb250LXNpemUiOiAiMTNweCIsCiAgICAgICJib3JkZXIiOiAiMnB4IHNvbGlkICMyYjY3NWIiLAogICAgICAicGFkZGluZyI6ICI1cHgiLAogICAgICAiYm9yZGVyLXJhZGl1cyI6ICI1cHgiCiAgICB9CiAgfSwgW192bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWF4JyA/IF9jKCdzcGFuJywgW192bS5fdigiICIgKyBfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2g0NSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0NSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNDUgPSBfdm0kcmV0dXJuU2VhcmNoNDUuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDQ1ID0gX3ZtJHJldHVyblNlYXJjaDQ1Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQ1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g0NSA9IF92bSRyZXR1cm5TZWFyY2g0NS5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0NSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g0NS5sYW5nID8gKChfdm0kcmV0dXJuU2VhcmNoNDYgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQ2ID0gX3ZtJHJldHVyblNlYXJjaDQ2LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQ2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0NiA9IF92bSRyZXR1cm5TZWFyY2g0Ni5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0NiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNDYgPSBfdm0kcmV0dXJuU2VhcmNoNDYubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g0Ni5sYW5nKSArICcgLCAnICsgKChfdm0kcmV0dXJuU2VhcmNoNDcgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDcgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQ3ID0gX3ZtJHJldHVyblNlYXJjaDQ3LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQ3ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0NyA9IF92bSRyZXR1cm5TZWFyY2g0Ny5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0NyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNDcgPSBfdm0kcmV0dXJuU2VhcmNoNDcubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g0Ny5sYXQpIDogKF92bSRyZXR1cm5TZWFyY2g0OCA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0OCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNDggPSBfdm0kcmV0dXJuU2VhcmNoNDguYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDQ4ID0gX3ZtJHJldHVyblNlYXJjaDQ4Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQ4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g0OCA9IF92bSRyZXR1cm5TZWFyY2g0OC5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0OCAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g0OC5saW5rID8gKChfdm0kcmV0dXJuU2VhcmNoNDkgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDkgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQ5ID0gX3ZtJHJldHVyblNlYXJjaDQ5LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQ5ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0OSA9IF92bSRyZXR1cm5TZWFyY2g0OS5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0OSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNDkgPSBfdm0kcmV0dXJuU2VhcmNoNDkubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g0OS5saW5rLnNsaWNlKDAsIDE3KSkgKyAnLi4uJyA6ICcnKSArICIgIildKSA6IF92bS5fZSgpXSldKSA6IF92bS5fZSgpLCBfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21pbicgJiYgKChfdm0kcmV0dXJuU2VhcmNoNTAgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTAgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDUwID0gX3ZtJHJldHVyblNlYXJjaDUwLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDUwICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1MCA9IF92bSRyZXR1cm5TZWFyY2g1MC5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1MCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTAgPSBfdm0kcmV0dXJuU2VhcmNoNTAubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTAgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNTAubGFuZyB8fCAoX3ZtJHJldHVyblNlYXJjaDUxID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDUxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1MSA9IF92bSRyZXR1cm5TZWFyY2g1MS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1MSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTEgPSBfdm0kcmV0dXJuU2VhcmNoNTEubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDUxID0gX3ZtJHJldHVyblNlYXJjaDUxLm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDUxICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDUxLmxpbmspID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJ3aWR0aCI6ICI3MCUiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIsCiAgICAgICJmb250LXNpemUiOiAiMTNweCIsCiAgICAgICJib3JkZXIiOiAiMnB4IHNvbGlkICMyYjY3NWIiLAogICAgICAicGFkZGluZyI6ICI1cHgiLAogICAgICAiYm9yZGVyLXJhZGl1cyI6ICI1cHgiCiAgICB9CiAgfSwgW192bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyA/IF9jKCdzcGFuJywgW192bS5fdigiICIgKyBfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2g1MiA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1MiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTIgPSBfdm0kcmV0dXJuU2VhcmNoNTIuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTIgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDUyID0gX3ZtJHJldHVyblNlYXJjaDUyLm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDUyICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1MiA9IF92bSRyZXR1cm5TZWFyY2g1Mi5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1MiAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g1Mi5sYW5nID8gKChfdm0kcmV0dXJuU2VhcmNoNTMgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTMgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDUzID0gX3ZtJHJldHVyblNlYXJjaDUzLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDUzID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g1MyA9IF92bSRyZXR1cm5TZWFyY2g1My5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g1MyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNTMgPSBfdm0kcmV0dXJuU2VhcmNoNTMubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g1My5sYW5nKSArICcgLCAnICsgKChfdm0kcmV0dXJuU2VhcmNoNTQgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDU0ID0gX3ZtJHJldHVyblNlYXJjaDU0LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDU0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g1NCA9IF92bSRyZXR1cm5TZWFyY2g1NC5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g1NCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNTQgPSBfdm0kcmV0dXJuU2VhcmNoNTQubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g1NC5sYXQpIDogKF92bSRyZXR1cm5TZWFyY2g1NSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1NSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTUgPSBfdm0kcmV0dXJuU2VhcmNoNTUuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDU1ID0gX3ZtJHJldHVyblNlYXJjaDU1Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDU1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1NSA9IF92bSRyZXR1cm5TZWFyY2g1NS5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1NSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g1NS5saW5rID8gKChfdm0kcmV0dXJuU2VhcmNoNTYgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDU2ID0gX3ZtJHJldHVyblNlYXJjaDU2LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDU2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g1NiA9IF92bSRyZXR1cm5TZWFyY2g1Ni5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g1NiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNTYgPSBfdm0kcmV0dXJuU2VhcmNoNTYubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g1Ni5saW5rLnNsaWNlKDAsIDE3KSkgKyAnLi4uJyA6ICcnKSArICIgIildKSA6IF92bS5fZSgpXSldKSA6IF92bS5fZSgpLCBfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgJiYgKChfdm0kcmV0dXJuU2VhcmNoNTcgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDU3ID0gX3ZtJHJldHVyblNlYXJjaDU3LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDU3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1NyA9IF92bSRyZXR1cm5TZWFyY2g1Ny5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1NyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTcgPSBfdm0kcmV0dXJuU2VhcmNoNTcubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTcgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNTcubGF0IHx8IChfdm0kcmV0dXJuU2VhcmNoNTggPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDU4ID0gX3ZtJHJldHVyblNlYXJjaDU4LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDU4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1OCA9IF92bSRyZXR1cm5TZWFyY2g1OC5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1OCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTggPSBfdm0kcmV0dXJuU2VhcmNoNTgubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTggIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNTgubGluaykgPyBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJweC0yIgogIH0sIFsoX3ZtJHJldHVyblNlYXJjaDU5ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDU5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1OSA9IF92bSRyZXR1cm5TZWFyY2g1OS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1OSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTkgPSBfdm0kcmV0dXJuU2VhcmNoNTkubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDU5ID0gX3ZtJHJldHVyblNlYXJjaDU5Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDU5ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDU5LmxhdCA/IF9jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcz9xPSIuY29uY2F0KChfdm0kcmV0dXJuU2VhcmNoNjAgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDYwID0gX3ZtJHJldHVyblNlYXJjaDYwLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2MCA9IF92bSRyZXR1cm5TZWFyY2g2MC5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2MCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjAgPSBfdm0kcmV0dXJuU2VhcmNoNjAubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g2MC5sYXQsICIsIikuY29uY2F0KChfdm0kcmV0dXJuU2VhcmNoNjEgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjEgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDYxID0gX3ZtJHJldHVyblNlYXJjaDYxLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYxID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2MSA9IF92bSRyZXR1cm5TZWFyY2g2MS5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2MSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjEgPSBfdm0kcmV0dXJuU2VhcmNoNjEubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g2MS5sYW5nLCAiJmxsPSIpLmNvbmNhdCgoX3ZtJHJldHVyblNlYXJjaDYyID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2MiA9IF92bSRyZXR1cm5TZWFyY2g2Mi5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2MiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjIgPSBfdm0kcmV0dXJuU2VhcmNoNjIubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDYyID0gX3ZtJHJldHVyblNlYXJjaDYyLm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoNjIubGF0LCAiLCIpLmNvbmNhdCgoX3ZtJHJldHVyblNlYXJjaDYzID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYzID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2MyA9IF92bSRyZXR1cm5TZWFyY2g2My5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2MyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjMgPSBfdm0kcmV0dXJuU2VhcmNoNjMubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjMgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDYzID0gX3ZtJHJldHVyblNlYXJjaDYzLm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoNjMubGFuZywgIiZ6PTE2IiksCiAgICAgICJ0YXJnZXQiOiAiX2JsYW5rIgogICAgfQogIH0sIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL2xpbmsucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSkgOiAoX3ZtJHJldHVyblNlYXJjaDY0ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDY0ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g2NCA9IF92bSRyZXR1cm5TZWFyY2g2NC5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2NCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNjQgPSBfdm0kcmV0dXJuU2VhcmNoNjQubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNjQgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDY0ID0gX3ZtJHJldHVyblNlYXJjaDY0Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDY0ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDY0LmxpbmsgPyBfYygnYScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogKF92bSRyZXR1cm5TZWFyY2g2NSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2NSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjUgPSBfdm0kcmV0dXJuU2VhcmNoNjUuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjUgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDY1ID0gX3ZtJHJldHVyblNlYXJjaDY1Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDY1ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2NSA9IF92bSRyZXR1cm5TZWFyY2g2NS5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2NSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDY1LmxpbmssCiAgICAgICJ0YXJnZXQiOiAiX2JsYW5rIgogICAgfQogIH0sIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL2xpbmsucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSkgOiBfYygnYScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiMiCiAgICB9CiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvbGluay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWF4JyAmJiAoKF92bSRyZXR1cm5TZWFyY2g2NiA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2NiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNjYgPSBfdm0kcmV0dXJuU2VhcmNoNjYuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNjYgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDY2ID0gX3ZtJHJldHVyblNlYXJjaDY2Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDY2ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g2NiA9IF92bSRyZXR1cm5TZWFyY2g2Ni5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2NiAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g2Ni5sYXQgfHwgKF92bSRyZXR1cm5TZWFyY2g2NyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2NyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNjcgPSBfdm0kcmV0dXJuU2VhcmNoNjcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNjcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDY3ID0gX3ZtJHJldHVyblNlYXJjaDY3Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDY3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g2NyA9IF92bSRyZXR1cm5TZWFyY2g2Ny5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2NyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g2Ny5saW5rKSA/IF9jKCdkaXYnLCBbX2MoJ2xhYmVsJywgewogICAgc3RhdGljQ2xhc3M6ICJkcm9wZG93biIKICB9LCBbX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGQtYnV0dG9uIgogIH0sIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL3NoYXJlLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pLCBfYygnaW5wdXQnLCB7CiAgICBzdGF0aWNDbGFzczogImRkLWlucHV0IiwKICAgIGF0dHJzOiB7CiAgICAgICJ0eXBlIjogImNoZWNrYm94IiwKICAgICAgImlkIjogInRlc3QiCiAgICB9CiAgfSksIF9jKCd1bCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGQtbWVudSIKICB9LCBbKF92bSRyZXR1cm5TZWFyY2g2OCA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2OCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNjggPSBfdm0kcmV0dXJuU2VhcmNoNjguYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNjggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDY4ID0gX3ZtJHJldHVyblNlYXJjaDY4Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDY4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g2OCA9IF92bSRyZXR1cm5TZWFyY2g2OC5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2OCAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g2OC5sYXQgPyBfYygnbGknLCB7CiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICB2YXIgX3ZtJHJldHVyblNlYXJjaDY5LCBfdm0kcmV0dXJuU2VhcmNoNzA7CiAgICAgICAgcmV0dXJuIF92bS5zZW5kVG9UZWxlZ3JhbUxhdExhbmcoKF92bSRyZXR1cm5TZWFyY2g2OSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2OSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjkgPSBfdm0kcmV0dXJuU2VhcmNoNjkuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjkgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDY5ID0gX3ZtJHJldHVyblNlYXJjaDY5Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDY5ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2OSA9IF92bSRyZXR1cm5TZWFyY2g2OS5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2OSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDY5LmxhdCwgKF92bSRyZXR1cm5TZWFyY2g3MCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3MCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzAgPSBfdm0kcmV0dXJuU2VhcmNoNzAuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDcwID0gX3ZtJHJldHVyblNlYXJjaDcwLm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDcwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3MCA9IF92bSRyZXR1cm5TZWFyY2g3MC5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3MCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDcwLmxhdCk7CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ2knLCB7CiAgICBzdGF0aWNDbGFzczogIm1kaSBtZGktc2VuZCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzAzOWJlNSIKICAgIH0KICB9KSwgX3ZtLl92KCIgVGVsZWdyYW0gIildKSA6IF9jKCdsaScsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHZhciBfdm0kcmV0dXJuU2VhcmNoNzE7CiAgICAgICAgcmV0dXJuIF92bS5zZW5kVG9UZWxlZ3JhbUxpbmsoKF92bSRyZXR1cm5TZWFyY2g3MSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3MSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzEgPSBfdm0kcmV0dXJuU2VhcmNoNzEuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzEgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDcxID0gX3ZtJHJldHVyblNlYXJjaDcxLm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDcxID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3MSA9IF92bSRyZXR1cm5TZWFyY2g3MS5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3MSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDcxLmxpbmspOwogICAgICB9CiAgICB9CiAgfSwgW19jKCdpJywgewogICAgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLXNlbmQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMwMzliZTUiCiAgICB9CiAgfSksIF92bS5fdigiIFRlbGVncmFtICIpXSksIChfdm0kcmV0dXJuU2VhcmNoNzIgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzIgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDcyID0gX3ZtJHJldHVyblNlYXJjaDcyLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDcyICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g3MiA9IF92bSRyZXR1cm5TZWFyY2g3Mi5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3MiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNzIgPSBfdm0kcmV0dXJuU2VhcmNoNzIubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzIgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNzIubGF0ID8gX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgdmFyIF92bSRyZXR1cm5TZWFyY2g3MywgX3ZtJHJldHVyblNlYXJjaDc0OwogICAgICAgIHJldHVybiBfdm0uY29weUxhdExhbmdMaW5rKChfdm0kcmV0dXJuU2VhcmNoNzMgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzMgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDczID0gX3ZtJHJldHVyblNlYXJjaDczLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDczID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3MyA9IF92bSRyZXR1cm5TZWFyY2g3My5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3MyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzMgPSBfdm0kcmV0dXJuU2VhcmNoNzMubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g3My5sYXQsIChfdm0kcmV0dXJuU2VhcmNoNzQgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDc0ID0gX3ZtJHJldHVyblNlYXJjaDc0LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDc0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3NCA9IF92bSRyZXR1cm5TZWFyY2g3NC5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3NCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzQgPSBfdm0kcmV0dXJuU2VhcmNoNzQubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g3NC5sYW5nKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1jb250ZW50LWNvcHkiCiAgfSksIF92bS5fdigiIE51c3hhbGFzaCAiKV0pIDogX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgdmFyIF92bSRyZXR1cm5TZWFyY2g3NTsKICAgICAgICByZXR1cm4gX3ZtLmNvcHlMaW5rKChfdm0kcmV0dXJuU2VhcmNoNzUgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzUgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDc1ID0gX3ZtJHJldHVyblNlYXJjaDc1LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDc1ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3NSA9IF92bSRyZXR1cm5TZWFyY2g3NS5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3NSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzUgPSBfdm0kcmV0dXJuU2VhcmNoNzUubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g3NS5saW5rKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1jb250ZW50LWNvcHkiCiAgfSksIF92bS5fdigiIE51c3hhbGFzaCAiKV0pXSldKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyAmJiAoKF92bSRyZXR1cm5TZWFyY2g3NiA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3NiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNzYgPSBfdm0kcmV0dXJuU2VhcmNoNzYuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzYgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDc2ID0gX3ZtJHJldHVyblNlYXJjaDc2Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDc2ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g3NiA9IF92bSRyZXR1cm5TZWFyY2g3Ni5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3NiAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g3Ni5sYXQgfHwgKF92bSRyZXR1cm5TZWFyY2g3NyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3NyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNzcgPSBfdm0kcmV0dXJuU2VhcmNoNzcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDc3ID0gX3ZtJHJldHVyblNlYXJjaDc3Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDc3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g3NyA9IF92bSRyZXR1cm5TZWFyY2g3Ny5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3NyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g3Ny5saW5rKSA/IF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LTIiCiAgfSwgWyhfdm0kcmV0dXJuU2VhcmNoNzggPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDc4ID0gX3ZtJHJldHVyblNlYXJjaDc4LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDc4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g3OCA9IF92bSRyZXR1cm5TZWFyY2g3OC5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3OCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNzggPSBfdm0kcmV0dXJuU2VhcmNoNzgubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzggIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNzgubGF0ID8gX2MoJ2EnLCB7CiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzP3E9Ii5jb25jYXQoKF92bSRyZXR1cm5TZWFyY2g3OSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3OSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzkgPSBfdm0kcmV0dXJuU2VhcmNoNzkuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzkgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDc5ID0gX3ZtJHJldHVyblNlYXJjaDc5Lm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDc5ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3OSA9IF92bSRyZXR1cm5TZWFyY2g3OS5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3OSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDc5LmxhdCwgIiwiKS5jb25jYXQoKF92bSRyZXR1cm5TZWFyY2g4MCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4MCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODAgPSBfdm0kcmV0dXJuU2VhcmNoODAuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDgwID0gX3ZtJHJldHVyblNlYXJjaDgwLm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDgwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4MCA9IF92bSRyZXR1cm5TZWFyY2g4MC5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4MCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDgwLmxhbmcsICImbGw9IikuY29uY2F0KChfdm0kcmV0dXJuU2VhcmNoODEgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODEgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDgxID0gX3ZtJHJldHVyblNlYXJjaDgxLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDgxID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4MSA9IF92bSRyZXR1cm5TZWFyY2g4MS5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4MSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODEgPSBfdm0kcmV0dXJuU2VhcmNoODEubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g4MS5sYXQsICIsIikuY29uY2F0KChfdm0kcmV0dXJuU2VhcmNoODIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDgyID0gX3ZtJHJldHVyblNlYXJjaDgyLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDgyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4MiA9IF92bSRyZXR1cm5TZWFyY2g4Mi5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4MiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODIgPSBfdm0kcmV0dXJuU2VhcmNoODIubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g4Mi5sYW5nLCAiJno9MTYiKSwKICAgICAgInRhcmdldCI6ICJfYmxhbmsiCiAgICB9CiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvbGluay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSA6IChfdm0kcmV0dXJuU2VhcmNoODMgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoODMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDgzID0gX3ZtJHJldHVyblNlYXJjaDgzLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDgzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g4MyA9IF92bSRyZXR1cm5TZWFyY2g4My5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g4MyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoODMgPSBfdm0kcmV0dXJuU2VhcmNoODMubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoODMgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoODMubGluayA/IF9jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAoX3ZtJHJldHVyblNlYXJjaDg0ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4NCA9IF92bSRyZXR1cm5TZWFyY2g4NC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4NCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODQgPSBfdm0kcmV0dXJuU2VhcmNoODQubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDg0ID0gX3ZtJHJldHVyblNlYXJjaDg0Lm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoODQubGluaywKICAgICAgInRhcmdldCI6ICJfYmxhbmsiCiAgICB9CiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvbGluay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSA6IF9jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiIyIKICAgIH0KICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9saW5rLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pXSkgOiBfdm0uX2UoKSwgX3ZtLmluZm9Nb2RhbFZhbHVlID09ICdtaW4nICYmICgoX3ZtJHJldHVyblNlYXJjaDg1ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g4NSA9IF92bSRyZXR1cm5TZWFyY2g4NS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g4NSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoODUgPSBfdm0kcmV0dXJuU2VhcmNoODUubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoODUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDg1ID0gX3ZtJHJldHVyblNlYXJjaDg1Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg1ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDg1LmxhdCB8fCAoX3ZtJHJldHVyblNlYXJjaDg2ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg2ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g4NiA9IF92bSRyZXR1cm5TZWFyY2g4Ni5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g4NiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoODYgPSBfdm0kcmV0dXJuU2VhcmNoODYubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoODYgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDg2ID0gX3ZtJHJldHVyblNlYXJjaDg2Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg2ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDg2LmxpbmspID8gX2MoJ2RpdicsIFtfYygnbGFiZWwnLCB7CiAgICBzdGF0aWNDbGFzczogImRyb3Bkb3duIgogIH0sIFtfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJkZC1idXR0b24iCiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvc2hhcmUucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSksIF9jKCdpbnB1dCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGQtaW5wdXQiLAogICAgYXR0cnM6IHsKICAgICAgInR5cGUiOiAiY2hlY2tib3giLAogICAgICAiaWQiOiAidGVzdCIKICAgIH0KICB9KSwgX2MoJ3VsJywgewogICAgc3RhdGljQ2xhc3M6ICJkZC1tZW51IgogIH0sIFsoX3ZtJHJldHVyblNlYXJjaDg3ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g4NyA9IF92bSRyZXR1cm5TZWFyY2g4Ny5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g4NyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoODcgPSBfdm0kcmV0dXJuU2VhcmNoODcubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoODcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDg3ID0gX3ZtJHJldHVyblNlYXJjaDg3Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg3ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDg3LmxhdCA/IF9jKCdsaScsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHZhciBfdm0kcmV0dXJuU2VhcmNoODgsIF92bSRyZXR1cm5TZWFyY2g4OTsKICAgICAgICByZXR1cm4gX3ZtLnNlbmRUb1RlbGVncmFtTGF0TGFuZygoX3ZtJHJldHVyblNlYXJjaDg4ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4OCA9IF92bSRyZXR1cm5TZWFyY2g4OC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4OCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODggPSBfdm0kcmV0dXJuU2VhcmNoODgubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDg4ID0gX3ZtJHJldHVyblNlYXJjaDg4Lm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg4ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoODgubGF0LCAoX3ZtJHJldHVyblNlYXJjaDg5ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg5ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4OSA9IF92bSRyZXR1cm5TZWFyY2g4OS5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4OSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODkgPSBfdm0kcmV0dXJuU2VhcmNoODkubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODkgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDg5ID0gX3ZtJHJldHVyblNlYXJjaDg5Lm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoODkubGFuZyk7CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ2knLCB7CiAgICBzdGF0aWNDbGFzczogIm1kaSBtZGktc2VuZCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzAzOWJlNSIKICAgIH0KICB9KSwgX3ZtLl92KCIgVGVsZWdyYW0gIildKSA6IF9jKCdsaScsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHZhciBfdm0kcmV0dXJuU2VhcmNoOTA7CiAgICAgICAgcmV0dXJuIF92bS5zZW5kVG9UZWxlZ3JhbUxpbmsoKF92bSRyZXR1cm5TZWFyY2g5MCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5MCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOTAgPSBfdm0kcmV0dXJuU2VhcmNoOTAuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDkwID0gX3ZtJHJldHVyblNlYXJjaDkwLm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDkwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g5MCA9IF92bSRyZXR1cm5TZWFyY2g5MC5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5MCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDkwLmxpbmspOwogICAgICB9CiAgICB9CiAgfSwgW19jKCdpJywgewogICAgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLXNlbmQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMwMzliZTUiCiAgICB9CiAgfSksIF92bS5fdigiIFRlbGVncmFtICIpXSksIChfdm0kcmV0dXJuU2VhcmNoOTEgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoOTEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDkxID0gX3ZtJHJldHVyblNlYXJjaDkxLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDkxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g5MSA9IF92bSRyZXR1cm5TZWFyY2g5MS5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g5MSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoOTEgPSBfdm0kcmV0dXJuU2VhcmNoOTEubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoOTEgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoOTEubGF0ID8gX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgdmFyIF92bSRyZXR1cm5TZWFyY2g5MiwgX3ZtJHJldHVyblNlYXJjaDkzOwogICAgICAgIHJldHVybiBfdm0uY29weUxhdExhbmdMaW5rKChfdm0kcmV0dXJuU2VhcmNoOTIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDkyID0gX3ZtJHJldHVyblNlYXJjaDkyLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDkyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g5MiA9IF92bSRyZXR1cm5TZWFyY2g5Mi5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5MiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOTIgPSBfdm0kcmV0dXJuU2VhcmNoOTIubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g5Mi5sYXQsIChfdm0kcmV0dXJuU2VhcmNoOTMgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTMgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDkzID0gX3ZtJHJldHVyblNlYXJjaDkzLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDkzID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g5MyA9IF92bSRyZXR1cm5TZWFyY2g5My5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5MyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOTMgPSBfdm0kcmV0dXJuU2VhcmNoOTMubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g5My5sYW5nKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1jb250ZW50LWNvcHkiCiAgfSksIF92bS5fdigiIE51c3hhbGFzaCAiKV0pIDogX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgdmFyIF92bSRyZXR1cm5TZWFyY2g5NDsKICAgICAgICByZXR1cm4gX3ZtLmNvcHlMaW5rKChfdm0kcmV0dXJuU2VhcmNoOTQgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDk0ID0gX3ZtJHJldHVyblNlYXJjaDk0LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDk0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g5NCA9IF92bSRyZXR1cm5TZWFyY2g5NC5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5NCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOTQgPSBfdm0kcmV0dXJuU2VhcmNoOTQubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g5NC5saW5rKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1jb250ZW50LWNvcHkiCiAgfSksIF92bS5fdigiIE51c3hhbGFzaCAiKV0pXSldKV0pIDogX3ZtLl9lKCldKV0pXSldKV0pXSwgMSldLCAxKV0sIDEpXSwgMSksIF92bS5sb2FkaW5nID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICAgInotaW5kZXgiOiAiMTEiLAogICAgICAicG9zaXRpb24iOiAic3RpY2t5IiwKICAgICAgInRvcCI6ICI1MCUiCiAgICB9CiAgfSwgW19jKCdiLW92ZXJsYXknLCB7CiAgICBhdHRyczogewogICAgICAic2hvdyI6IF92bS5sb2FkaW5nLAogICAgICAib3BhY2l0eSI6ICIwLjkiCiAgICB9CiAgfSldLCAxKSA6IF92bS5fZSgpLCBfYygnYi1jb250YWluZXInLCB7CiAgICBkaXJlY3RpdmVzOiBbewogICAgICBuYW1lOiAic2hvdyIsCiAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICB2YWx1ZTogIV92bS5hbGxJbmZvcm1hdGlvbiwKICAgICAgZXhwcmVzc2lvbjogIiFhbGxJbmZvcm1hdGlvbiIKICAgIH1dLAogICAgc3RhdGljQ2xhc3M6ICJweC1tZC01IHB4LTIgbXQtNSBtYi1tZC0wIG1iLTQiLAogICAgYXR0cnM6IHsKICAgICAgImZsdWlkIjogIjEwMCUiCiAgICB9CiAgfSwgW19jKCdiLXJvdycsIFtfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ2Itcm93JywgW19jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMyIsCiAgICAgICJsZyI6ICIxIgogICAgfQogIH0sIFtfYygnaW1nJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAibWF4LXdpZHRoIjogIjgwcHgiCiAgICB9LAogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9mYWlyUHJpY2UxLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogImQtbGctbm9uZSBkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiOSIsCiAgICAgICJsZyI6ICIxIgogICAgfQogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLmZhaXJUZWNoJykpKV0pXSksIF9jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIiwKICAgICAgImxnIjogIjExIgogICAgfQogIH0sIFtfYygnZGl2JywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0xIGQtbGctYmxvY2sgZC1ub25lIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLmZhaXJUZWNoJykpKV0pLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJkLWxnLWZsZXggZC1ibG9jayIKICB9LCBbX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAicHItbGctMyIKICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTEiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIxM3B4IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnRleHQxJykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UudGV4dDInKSkgKyAiICIpLCBfYygnYnInKSwgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS50ZXh0MycpKSArICIgIildKV0pLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJwbC1sZy0zIgogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMSIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZGVyIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1lYXN1cmUnKSkpXSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0xIgogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnRleHQ0JykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UudGV4dDUnKSkgKyAiICIpXSldKV0pXSldKV0sIDEpXSwgMSksIF9jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1zdGFydCBteS1sZy0zIG1iLTQgbXQtMyBwbC0wIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdiLWJ0bicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICJib3JkZXItcmFkaXVzIjogIjVweCIsCiAgICAgICJwYWRkaW5nIjogIjNweCAxNXB4IiwKICAgICAgIm1hcmdpbi1yaWdodCI6ICIxMHB4IgogICAgfSwKICAgIHN0eWxlOiBfdm0udGFiUHJvZHVjdCA9PSAnY3VzdG9tUHJvZHVjdCcgPyAnYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgIzI0NjI1NiwgIzFBOEY3OSk7IGNvbG9yOndoaXRlICFpbXBvcnRhbnQ7JyA6ICdiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgY29sb3I6IzJiNjc1YiAhaW1wb3J0YW50OyBib3JkZXI6MXB4IHNvbGlkICMyYjY3NWI7JywKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0uZm9vZHNQcmljZSgpOwogICAgICB9CiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UuY3VzdG9tUHJvZHVjdCcpKSArICIgIildKV0sIDEpLCBfYygnZGl2JywgW19jKCdiLWJ0bicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICJib3JkZXItcmFkaXVzIjogIjVweCIsCiAgICAgICJwYWRkaW5nIjogIjNweCAyMHB4IiwKICAgICAgIm1hcmdpbi1sZWZ0IjogIjEwcHgiCiAgICB9LAogICAgc3R5bGU6IF92bS50YWJQcm9kdWN0ID09ICdvdGhlclByb2R1Y3QnID8gJ2JhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICMyNDYyNTYsICMxQThGNzkpOyBjb2xvcjp3aGl0ZSAhaW1wb3J0YW50OycgOiAnYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IGNvbG9yOiMyYjY3NWIgIWltcG9ydGFudDsgYm9yZGVyOjFweCBzb2xpZCAjMmI2NzViOycsCiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLm90aGVyUHJpY2UoKTsKICAgICAgfQogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm90aGVyUHJvZHVjdCcpKSArICIgIildKV0sIDEpXSksIF9jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1sZy1ibG9jayBkLW5vbmUiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1jZW50ZXIiCiAgfSwgW192bS5fbChfdm0ucHJvZHVjdERhdGEuc2xpY2UoMCwgOCksIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgcmV0dXJuIF9jKCdiLWNvbCcsIHsKICAgICAga2V5OiBpbmRleCwKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0zIgogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJtYXgtd2lkdGgiOiAiMTcwcHgiLAogICAgICAgICJjdXJzb3IiOiAicG9pbnRlciIsCiAgICAgICAgImJvcmRlciI6ICIxcHggc29saWQgcmdiKDQzLCAxMDMsIDkxLCAwLjIpIiwKICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICIzcHgiLAogICAgICAgICJib3gtc2hhZG93IjogInJnYigyMDEsIDIxOSwgMjE1KSAycHggNHB4IDhweCAwcHgiCiAgICAgIH0sCiAgICAgIG9uOiB7CiAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gX3ZtLnNob3dEZXRhaWxJbmZvKGl0ZW0uaWQpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiNXB4IDVweCAycHggNXB4IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtpdGVtLnBob3RvU3ZnICYmIGl0ZW0ucGhvdG9TdmcudXBsb2FkUGF0aCA/IF9jKCdpbWcnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJtYXgtd2lkdGgiOiAiNTVweCIKICAgICAgfSwKICAgICAgYXR0cnM6IHsKICAgICAgICAic3JjIjogIiIuY29uY2F0KF92bS5yb3V0ZU5hbWUsICIvIikuY29uY2F0KGl0ZW0ucGhvdG9TdmcudXBsb2FkUGF0aCksCiAgICAgICAgImFsdCI6ICIiCiAgICAgIH0KICAgIH0pIDogX2MoJ2ltZycsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICAgIm1heC13aWR0aCI6ICI1NXB4IgogICAgICB9LAogICAgICBhdHRyczogewogICAgICAgICJzcmMiOiByZXF1aXJlKCIuLi8uLi9hc3NldHMvZGVmYXVsdC5zdmciKSwKICAgICAgICAiYWx0IjogIiIKICAgICAgfQogICAgfSldKSwgX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImhlaWdodCI6ICIzMHB4IiwKICAgICAgICAiZGlzcGxheSI6ICJmbGV4IiwKICAgICAgICAianVzdGlmeS1jb250ZW50IjogImNlbnRlciIsCiAgICAgICAgImFsaWduLWl0ZW1zIjogImNlbnRlciIsCiAgICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICAgIH0KICAgIH0sIFtfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICAgImZvbnQtc2l6ZSI6ICIxNXB4IiwKICAgICAgICAibGluZS1oZWlnaHQiOiAiMSIKICAgICAgfQogICAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLmdldE5hbWUoewogICAgICBuYW1lTHQ6IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5uYW1lTHQsCiAgICAgIG5hbWVVejogaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm5hbWVVeiwKICAgICAgbmFtZVJ1OiBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubmFtZVJ1CiAgICB9KSkgKyAiICIpXSldKSwgX2MoJ2RpdicsIFtfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYXJvdW5kIGFsaWduLWl0ZW1zLWNlbnRlciIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiMHB4IgogICAgICB9CiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIxMnB4IiwKICAgICAgICAiY29sb3IiOiAiIzI0NjI1NiIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImxpZ2h0ZXIiLAogICAgICAgICJsaW5lLWhlaWdodCI6ICIxLjQiLAogICAgICAgICJ0ZXh0LWFsaWduIjogInN0YXJ0IgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5taW5TdW0yJykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc3VtJykpKV0pLCBfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiY29sb3IiOiAiIzI0NzEwMCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKGl0ZW0gIT09IG51bGwgJiYgaXRlbSAhPT0gdm9pZCAwICYmIGl0ZW0ubWluU3VtID8gaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm1pblN1bSA6ICcnKSkpXSldKSwgX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWFyb3VuZCBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJwYWRkaW5nIjogIjBweCIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTJweCIsCiAgICAgICAgImNvbG9yIjogIiMyNDYyNTYiLAogICAgICAgICJmb250LXdlaWdodCI6ICJsaWdodGVyIiwKICAgICAgICAibGluZS1oZWlnaHQiOiAiMS40IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJzdGFydCIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWF4U3VtMicpKSArICIgIiksIF9jKCdicicpLCBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnN1bScpKSldKSwgX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICAgImNvbG9yIjogIiNBRjAwMDAiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcihpdGVtICE9PSBudWxsICYmIGl0ZW0gIT09IHZvaWQgMCAmJiBpdGVtLm1heFN1bSA/IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5tYXhTdW0gOiAnJykpKV0pXSksIF9jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1hcm91bmQgYWxpZ24taXRlbXMtY2VudGVyIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICIwcHgiLAogICAgICAgICJib3JkZXIiOiAiMXB4IHNvbGlkICMyNDYyNTYiLAogICAgICAgICJib3JkZXItcmFkaXVzIjogIjNweCIsCiAgICAgICAgIm1hcmdpbiI6ICI0cHggNHB4IgogICAgICB9CiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIxMnB4IiwKICAgICAgICAiY29sb3IiOiAiIzI0NjI1NiIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImxpZ2h0ZXIiLAogICAgICAgICJsaW5lLWhlaWdodCI6ICIxLjQiLAogICAgICAgICJ0ZXh0LWFsaWduIjogInN0YXJ0IgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5taWRkbGVTdW0xJykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc3VtJykpKV0pLCBfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiY29sb3IiOiAiI0Q0QjUxMyIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKGl0ZW0gIT09IG51bGwgJiYgaXRlbSAhPT0gdm9pZCAwICYmIGl0ZW0ubWlkZGxlU3VtID8gaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm1pZGRsZVN1bSA6ICcnKSkpXSldKV0pXSldKTsKICB9KSwgX3ZtLl9sKF92bS50YWJQcm9kdWN0ID09ICdvdGhlclByb2R1Y3QnICYmIF92bS5wcm9kdWN0RGF0YS5sZW5ndGggPT0gMSA/IDcgOiBfdm0udGFiUHJvZHVjdCA9PSAnb3RoZXJQcm9kdWN0JyAmJiBfdm0ucHJvZHVjdERhdGEubGVuZ3RoID09IDIgPyA2IDogX3ZtLnRhYlByb2R1Y3QgPT0gJ290aGVyUHJvZHVjdCcgJiYgX3ZtLnByb2R1Y3REYXRhLmxlbmd0aCA9PSAzID8gNSA6IF92bS50YWJQcm9kdWN0ID09ICdvdGhlclByb2R1Y3QnICYmIF92bS5wcm9kdWN0RGF0YS5sZW5ndGggPT0gNCA/IDQgOiBfdm0udGFiUHJvZHVjdCA9PSAnb3RoZXJQcm9kdWN0JyAmJiBfdm0ucHJvZHVjdERhdGEubGVuZ3RoID09IDUgPyAzIDogX3ZtLnRhYlByb2R1Y3QgPT0gJ290aGVyUHJvZHVjdCcgJiYgX3ZtLnByb2R1Y3REYXRhLmxlbmd0aCA9PSA2ID8gMiA6IF92bS50YWJQcm9kdWN0ID09ICdvdGhlclByb2R1Y3QnICYmIF92bS5wcm9kdWN0RGF0YS5sZW5ndGggPT0gNyA/IDEgOiAwLCBmdW5jdGlvbiAoaSkgewogICAgcmV0dXJuIF9jKCdiLWNvbCcsIHsKICAgICAga2V5OiBpLAogICAgICBzdGF0aWNDbGFzczogIm1iLTMgdGV4dC1jZW50ZXIiCiAgICB9LCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICAgIm1heC13aWR0aCI6ICIxNzBweCIKICAgICAgfQogICAgfSldKTsKICB9KV0sIDIpLCBfYygnYi1yb3cnLCB7CiAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIgogIH0sIFtfdm0uX2woX3ZtLnByb2R1Y3REYXRhLnNsaWNlKDgsIDE2KSwgZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICByZXR1cm4gX2MoJ2ItY29sJywgewogICAgICBrZXk6IGluZGV4LAogICAgICBzdGF0aWNDbGFzczogIm1iLTMiCiAgICB9LCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICAgIm1heC13aWR0aCI6ICIxNzBweCIsCiAgICAgICAgImN1cnNvciI6ICJwb2ludGVyIiwKICAgICAgICAiYm9yZGVyIjogIjFweCBzb2xpZCByZ2IoNDMsIDEwMywgOTEsIDAuMikiLAogICAgICAgICJib3JkZXItcmFkaXVzIjogIjNweCIsCiAgICAgICAgImJveC1zaGFkb3ciOiAicmdiKDIwMSwgMjE5LCAyMTUpIDJweCA0cHggOHB4IDBweCIKICAgICAgfSwKICAgICAgb246IHsKICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfdm0uc2hvd0RldGFpbEluZm8oaXRlbS5pZCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICI1cHggNXB4IDJweCA1cHgiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW2l0ZW0ucGhvdG9TdmcgJiYgaXRlbS5waG90b1N2Zy51cGxvYWRQYXRoID8gX2MoJ2ltZycsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICAgIm1heC13aWR0aCI6ICI1NXB4IgogICAgICB9LAogICAgICBhdHRyczogewogICAgICAgICJzcmMiOiAiIi5jb25jYXQoX3ZtLnJvdXRlTmFtZSwgIi8iKS5jb25jYXQoaXRlbS5waG90b1N2Zy51cGxvYWRQYXRoKSwKICAgICAgICAiYWx0IjogIiIKICAgICAgfQogICAgfSkgOiBfYygnaW1nJywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICAgICAibWF4LXdpZHRoIjogIjU1cHgiCiAgICAgIH0sCiAgICAgIGF0dHJzOiB7CiAgICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL2RlZmF1bHQuc3ZnIiksCiAgICAgICAgImFsdCI6ICIiCiAgICAgIH0KICAgIH0pXSksIF9jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJoZWlnaHQiOiAiMzBweCIsCiAgICAgICAgImRpc3BsYXkiOiAiZmxleCIsCiAgICAgICAgImp1c3RpZnktY29udGVudCI6ICJjZW50ZXIiLAogICAgICAgICJhbGlnbi1pdGVtcyI6ICJjZW50ZXIiLAogICAgICAgICJjb2xvciI6ICIjMmI2NzViIgogICAgICB9CiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICAgImxpbmUtaGVpZ2h0IjogIjEiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5nZXROYW1lKHsKICAgICAgbmFtZUx0OiBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubmFtZUx0LAogICAgICBuYW1lVXo6IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5uYW1lVXosCiAgICAgIG5hbWVSdTogaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm5hbWVSdQogICAgfSkpICsgIiAiKV0pXSksIF9jKCdkaXYnLCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWFyb3VuZCBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJwYWRkaW5nIjogIjBweCIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTJweCIsCiAgICAgICAgImNvbG9yIjogIiMyNDYyNTYiLAogICAgICAgICJmb250LXdlaWdodCI6ICJsaWdodGVyIiwKICAgICAgICAibGluZS1oZWlnaHQiOiAiMS40IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1pblN1bTInKSkgKyAiICIpLCBfYygnYnInKSwgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zdW0nKSkpXSksIF9jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICJjb2xvciI6ICIjMjQ3MTAwIiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoaXRlbSAhPT0gbnVsbCAmJiBpdGVtICE9PSB2b2lkIDAgJiYgaXRlbS5taW5TdW0gPyBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubWluU3VtIDogJycpKSldKV0pLCBfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYXJvdW5kIGFsaWduLWl0ZW1zLWNlbnRlciIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiMHB4IgogICAgICB9CiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIxMnB4IiwKICAgICAgICAiY29sb3IiOiAiIzI0NjI1NiIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImxpZ2h0ZXIiLAogICAgICAgICJsaW5lLWhlaWdodCI6ICIxLjQiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWF4U3VtMicpKSArICIgIiksIF9jKCdicicpLCBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnN1bScpKSldKSwgX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICAgImNvbG9yIjogIiNBRjAwMDAiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcihpdGVtICE9PSBudWxsICYmIGl0ZW0gIT09IHZvaWQgMCAmJiBpdGVtLm1heFN1bSA/IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5tYXhTdW0gOiAnJykpKV0pXSksIF9jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1hcm91bmQgYWxpZ24taXRlbXMtY2VudGVyIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICIwcHgiLAogICAgICAgICJib3JkZXIiOiAiMXB4IHNvbGlkICMyNDYyNTYiLAogICAgICAgICJib3JkZXItcmFkaXVzIjogIjNweCIsCiAgICAgICAgIm1hcmdpbiI6ICI0cHggNHB4IgogICAgICB9CiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIxMnB4IiwKICAgICAgICAiY29sb3IiOiAiIzI0NjI1NiIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImxpZ2h0ZXIiLAogICAgICAgICJsaW5lLWhlaWdodCI6ICIxLjQiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWlkZGxlU3VtMScpKSArICIgIiksIF9jKCdicicpLCBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnN1bScpKSldKSwgX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICAgImNvbG9yIjogIiNENEI1MTMiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcihpdGVtICE9PSBudWxsICYmIGl0ZW0gIT09IHZvaWQgMCAmJiBpdGVtLm1pZGRsZVN1bSA/IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5taWRkbGVTdW0gOiAnJykpKV0pXSldKV0pXSk7CiAgfSksIF92bS5fbChfdm0udGFiUHJvZHVjdCAhPSAnb3RoZXJQcm9kdWN0JyAmJiBfdm0ucHJvZHVjdERhdGEubGVuZ3RoID09IDkgPyA3IDogX3ZtLnRhYlByb2R1Y3QgIT0gJ290aGVyUHJvZHVjdCcgJiYgX3ZtLnByb2R1Y3REYXRhLmxlbmd0aCA9PSAxMCA/IDYgOiBfdm0udGFiUHJvZHVjdCAhPSAnb3RoZXJQcm9kdWN0JyAmJiBfdm0ucHJvZHVjdERhdGEubGVuZ3RoID09IDExID8gNSA6IF92bS50YWJQcm9kdWN0ICE9ICdvdGhlclByb2R1Y3QnICYmIF92bS5wcm9kdWN0RGF0YS5sZW5ndGggPT0gMTIgPyA0IDogX3ZtLnRhYlByb2R1Y3QgIT0gJ290aGVyUHJvZHVjdCcgJiYgX3ZtLnByb2R1Y3REYXRhLmxlbmd0aCA9PSAxMyA/IDMgOiBfdm0udGFiUHJvZHVjdCAhPSAnb3RoZXJQcm9kdWN0JyAmJiBfdm0ucHJvZHVjdERhdGEubGVuZ3RoID09IDE0ID8gMiA6IF92bS50YWJQcm9kdWN0ICE9ICdvdGhlclByb2R1Y3QnICYmIF92bS5wcm9kdWN0RGF0YS5sZW5ndGggPT0gMTUgPyAxIDogMCwgZnVuY3Rpb24gKGkpIHsKICAgIHJldHVybiBfYygnYi1jb2wnLCB7CiAgICAgIGtleTogaSwKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0zIHRleHQtY2VudGVyIgogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJtYXgtd2lkdGgiOiAiMTcwcHgiCiAgICAgIH0KICAgIH0pXSk7CiAgfSldLCAyKSwgX2MoJ2Itcm93JywgewogICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlciIKICB9LCBbX3ZtLl9sKF92bS5wcm9kdWN0RGF0YS5zbGljZSgxNiksIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgcmV0dXJuIF9jKCdiLWNvbCcsIHsKICAgICAga2V5OiBpbmRleCwKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0zIHRleHQtY2VudGVyIgogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJtYXgtd2lkdGgiOiAiMTcwcHgiLAogICAgICAgICJjdXJzb3IiOiAicG9pbnRlciIsCiAgICAgICAgImJvcmRlciI6ICIxcHggc29saWQgcmdiKDQzLCAxMDMsIDkxLCAwLjIpIiwKICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICIzcHgiLAogICAgICAgICJib3gtc2hhZG93IjogInJnYigyMDEsIDIxOSwgMjE1KSAycHggNHB4IDhweCAwcHgiCiAgICAgIH0sCiAgICAgIG9uOiB7CiAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gX3ZtLnNob3dEZXRhaWxJbmZvKGl0ZW0uaWQpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiNXB4IDVweCAycHggNXB4IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtpdGVtLnBob3RvU3ZnICYmIGl0ZW0ucGhvdG9TdmcudXBsb2FkUGF0aCA/IF9jKCdpbWcnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJtYXgtd2lkdGgiOiAiNTVweCIKICAgICAgfSwKICAgICAgYXR0cnM6IHsKICAgICAgICAic3JjIjogIiIuY29uY2F0KF92bS5yb3V0ZU5hbWUsICIvIikuY29uY2F0KGl0ZW0ucGhvdG9TdmcudXBsb2FkUGF0aCksCiAgICAgICAgImFsdCI6ICIiCiAgICAgIH0KICAgIH0pIDogX2MoJ2ltZycsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICAgIm1heC13aWR0aCI6ICI1NXB4IgogICAgICB9LAogICAgICBhdHRyczogewogICAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9kZWZhdWx0LnN2ZyIpLAogICAgICAgICJhbHQiOiAiIgogICAgICB9CiAgICB9KV0pLCBfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogInRleHQtY2VudGVyIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiaGVpZ2h0IjogIjMwcHgiLAogICAgICAgICJkaXNwbGF5IjogImZsZXgiLAogICAgICAgICJqdXN0aWZ5LWNvbnRlbnQiOiAiY2VudGVyIiwKICAgICAgICAiYWxpZ24taXRlbXMiOiAiY2VudGVyIiwKICAgICAgICAiY29sb3IiOiAiIzJiNjc1YiIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiZm9udC1zaXplIjogIjE1cHgiLAogICAgICAgICJsaW5lLWhlaWdodCI6ICIxIgogICAgICB9CiAgICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0TmFtZSh7CiAgICAgIG5hbWVMdDogaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm5hbWVMdCwKICAgICAgbmFtZVV6OiBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubmFtZVV6LAogICAgICBuYW1lUnU6IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5uYW1lUnUKICAgIH0pKSArICIgIildKV0pLCBfYygnZGl2JywgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1hcm91bmQgYWxpZ24taXRlbXMtY2VudGVyIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICIwcHgiCiAgICAgIH0KICAgIH0sIFtfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjEycHgiLAogICAgICAgICJjb2xvciI6ICIjMjQ2MjU2IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAibGlnaHRlciIsCiAgICAgICAgImxpbmUtaGVpZ2h0IjogIjEuNCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5taW5TdW0yJykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc3VtJykpKV0pLCBfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiY29sb3IiOiAiIzI0NzEwMCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKGl0ZW0gIT09IG51bGwgJiYgaXRlbSAhPT0gdm9pZCAwICYmIGl0ZW0ubWluU3VtID8gaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm1pblN1bSA6ICcnKSkpXSldKSwgX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWFyb3VuZCBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJwYWRkaW5nIjogIjBweCIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTJweCIsCiAgICAgICAgImNvbG9yIjogIiMyNDYyNTYiLAogICAgICAgICJmb250LXdlaWdodCI6ICJsaWdodGVyIiwKICAgICAgICAibGluZS1oZWlnaHQiOiAiMS40IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1heFN1bTInKSkgKyAiICIpLCBfYygnYnInKSwgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zdW0nKSkpXSksIF9jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICJjb2xvciI6ICIjQUYwMDAwIiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoaXRlbSAhPT0gbnVsbCAmJiBpdGVtICE9PSB2b2lkIDAgJiYgaXRlbS5tYXhTdW0gPyBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubWF4U3VtIDogJycpKSldKV0pLCBfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYXJvdW5kIGFsaWduLWl0ZW1zLWNlbnRlciIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiMHB4IiwKICAgICAgICAiYm9yZGVyIjogIjFweCBzb2xpZCAjMjQ2MjU2IiwKICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICIzcHgiLAogICAgICAgICJtYXJnaW4iOiAiNHB4IDRweCIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTJweCIsCiAgICAgICAgImNvbG9yIjogIiMyNDYyNTYiLAogICAgICAgICJmb250LXdlaWdodCI6ICJsaWdodGVyIiwKICAgICAgICAibGluZS1oZWlnaHQiOiAiMS40IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1pZGRsZVN1bTEnKSkgKyAiICIpLCBfYygnYnInKSwgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zdW0nKSkpXSksIF9jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICJjb2xvciI6ICIjRDRCNTEzIiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoaXRlbSAhPT0gbnVsbCAmJiBpdGVtICE9PSB2b2lkIDAgJiYgaXRlbS5taWRkbGVTdW0gPyBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubWlkZGxlU3VtIDogJycpKSldKV0pXSldKV0pOwogIH0pLCBfdm0uX2woNCwgZnVuY3Rpb24gKGkpIHsKICAgIHJldHVybiBfYygnYi1jb2wnLCB7CiAgICAgIGtleTogaSwKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0zIHRleHQtY2VudGVyIgogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJtYXgtd2lkdGgiOiAiMTcwcHgiCiAgICAgIH0KICAgIH0pXSk7CiAgfSldLCAyKV0sIDEpLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogImQtbGctbm9uZSBkLWJsb2NrIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygnYi1yb3cnLCB7CiAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtY2VudGVyIgogIH0sIF92bS5fbChfdm0ucHJvZHVjdERhdGEsIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgcmV0dXJuIF9jKCdiLWNvbCcsIHsKICAgICAga2V5OiBpbmRleCwKICAgICAgc3RhdGljQ2xhc3M6ICJtYi00IHB4LTQiLAogICAgICBhdHRyczogewogICAgICAgICJjb2xzIjogIjEyIgogICAgICB9CiAgICB9LCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICAgImN1cnNvciI6ICJwb2ludGVyIiwKICAgICAgICAiYm9yZGVyIjogIjFweCBzb2xpZCByZ2IoNDMsIDEwMywgOTEsIDAuMikiLAogICAgICAgICJib3JkZXItcmFkaXVzIjogIjVweCIKICAgICAgfSwKICAgICAgb246IHsKICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfdm0uc2hvd0RldGFpbEluZm8oaXRlbS5pZCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICI1cHggNXB4IDJweCA1cHgiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW2l0ZW0ucGhvdG9TdmcgJiYgaXRlbS5waG90b1N2Zy51cGxvYWRQYXRoID8gX2MoJ2ltZycsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICAgIm1heC13aWR0aCI6ICI4MHB4IgogICAgICB9LAogICAgICBhdHRyczogewogICAgICAgICJzcmMiOiAiIi5jb25jYXQoX3ZtLnJvdXRlTmFtZSwgIi8iKS5jb25jYXQoaXRlbS5waG90b1N2Zy51cGxvYWRQYXRoKSwKICAgICAgICAiYWx0IjogIiIKICAgICAgfQogICAgfSkgOiBfYygnaW1nJywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICAgICAibWF4LXdpZHRoIjogIjgwcHgiCiAgICAgIH0sCiAgICAgIGF0dHJzOiB7CiAgICAgICAgInNyYyI6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9kZWZhdWx0LnN2ZyIpLAogICAgICAgICJhbHQiOiAiIgogICAgICB9CiAgICB9KV0pLCBfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogInRleHQtY2VudGVyIG1iLTIiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJoZWlnaHQiOiAiMzBweCIsCiAgICAgICAgImRpc3BsYXkiOiAiZmxleCIsCiAgICAgICAgImp1c3RpZnktY29udGVudCI6ICJjZW50ZXIiLAogICAgICAgICJhbGlnbi1pdGVtcyI6ICJjZW50ZXIiLAogICAgICAgICJjb2xvciI6ICIjMmI2NzViIgogICAgICB9CiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICJmb250LXNpemUiOiAiMjBweCIsCiAgICAgICAgImxpbmUtaGVpZ2h0IjogIjEiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5nZXROYW1lKHsKICAgICAgbmFtZUx0OiBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubmFtZUx0LAogICAgICBuYW1lVXo6IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5uYW1lVXosCiAgICAgIG5hbWVSdTogaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm5hbWVSdQogICAgfSkpICsgIiAiKV0pXSksIF9jKCdkaXYnLCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWFyb3VuZCBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJwYWRkaW5nIjogIjBweCIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICAgImNvbG9yIjogIiMyNDYyNTYiLAogICAgICAgICJmb250LXdlaWdodCI6ICJsaWdodGVyIiwKICAgICAgICAibGluZS1oZWlnaHQiOiAiMS40IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJzdGFydCIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWluU3VtMicpKSArICIgIiksIF9jKCdicicpLCBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnN1bScpKSldKSwgX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIyMHB4IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICAgImNvbG9yIjogIiMyNDcxMDAiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcihpdGVtICE9PSBudWxsICYmIGl0ZW0gIT09IHZvaWQgMCAmJiBpdGVtLm1pblN1bSA/IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5taW5TdW0gOiAnJykpKV0pXSksIF9jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1hcm91bmQgYWxpZ24taXRlbXMtY2VudGVyIG15LTIiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJwYWRkaW5nIjogIjBweCIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICAgImNvbG9yIjogIiMyNDYyNTYiLAogICAgICAgICJmb250LXdlaWdodCI6ICJsaWdodGVyIiwKICAgICAgICAibGluZS1oZWlnaHQiOiAiMS40IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJzdGFydCIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWF4U3VtMicpKSArICIgIiksIF9jKCdicicpLCBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnN1bScpKSldKSwgX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIyMHB4IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICAgImNvbG9yIjogIiNBRjAwMDAiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcihpdGVtICE9PSBudWxsICYmIGl0ZW0gIT09IHZvaWQgMCAmJiBpdGVtLm1heFN1bSA/IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5tYXhTdW0gOiAnJykpKV0pXSksIF9jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1hcm91bmQgYWxpZ24taXRlbXMtY2VudGVyIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICIwcHgiLAogICAgICAgICJib3JkZXIiOiAiMXB4IHNvbGlkICMyNDYyNTYiLAogICAgICAgICJib3JkZXItcmFkaXVzIjogIjNweCIsCiAgICAgICAgIm1hcmdpbiI6ICI4cHggOHB4IgogICAgICB9CiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IiwKICAgICAgICAiY29sb3IiOiAiIzI0NjI1NiIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImxpZ2h0ZXIiLAogICAgICAgICJsaW5lLWhlaWdodCI6ICIxLjQiLAogICAgICAgICJ0ZXh0LWFsaWduIjogInN0YXJ0IgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5taWRkbGVTdW0xJykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc3VtJykpKV0pLCBfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjIwcHgiLAogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiY29sb3IiOiAiI0Q0QjUxMyIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKGl0ZW0gIT09IG51bGwgJiYgaXRlbSAhPT0gdm9pZCAwICYmIGl0ZW0ubWlkZGxlU3VtID8gaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm1pZGRsZVN1bSA6ICcnKSkpXSldKV0pXSldKTsKICB9KSwgMSldLCAxKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0yIG10LTMiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdiLWJ1dHRvbicsIHsKICAgIHN0YXRpY0NsYXNzOiAiYnRuIGJ0bi13YXJuaW5nIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJiYWNrZ3JvdW5kIjogIiNmMWI0NGMiLAogICAgICAicGFkZGluZyI6ICI1cHggMjBweCIKICAgIH0sCiAgICBhdHRyczogewogICAgICAic2l6ZSI6ICJtZCIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLiRyb3V0ZXIuZ28oLTEpOwogICAgICB9CiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCJhY3Rpb25zLmJhY2siKSkgKyAiICIpXSldLCAxKV0sIDEpXSwgMSksIF9jKCdiLWNvbnRhaW5lcicsIHsKICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgIHZhbHVlOiBfdm0uYWxsSW5mb3JtYXRpb24sCiAgICAgIGV4cHJlc3Npb246ICJhbGxJbmZvcm1hdGlvbiIKICAgIH1dLAogICAgc3RhdGljQ2xhc3M6ICJweC1tZC01IHB4LTIgbXQtNSBtYi1tZC0wIG1iLTQiLAogICAgYXR0cnM6IHsKICAgICAgImZsdWlkIjogIjEwMCUiCiAgICB9CiAgfSwgW192bS5kZXRhaWxJbmZvID8gX2MoJ2Itcm93JywgW19jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygnZGl2JywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICB9CiAgfSwgW192bS50YWJQcm9kdWN0ID09ICdjdXN0b21Qcm9kdWN0JyA/IF9jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAiZm9udC1zaXplIjogIjE4cHgiLAogICAgICAidGV4dC10cmFuc2Zvcm0iOiAidXBwZXJjYXNlIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLmN1c3RvbVByb2R1Y3QnKSkpXSkgOiBfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxOHB4IiwKICAgICAgInRleHQtdHJhbnNmb3JtIjogInVwcGVyY2FzZSIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5vdGhlclByb2R1Y3QnKSkpXSldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogIm15LTQgcGwtMCIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ2Itcm93JywgewogICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gYWxpZ24taXRlbXMtc3RhcnQiCiAgfSwgW19jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAicHgtMyIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIsCiAgICAgICJsZyI6ICI0IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICJtYXgtd2lkdGgiOiAiNDQwcHgiLAogICAgICAiaGVpZ2h0IjogIjI2MHB4IiwKICAgICAgImRpc3BsYXkiOiAiZmxleCIsCiAgICAgICJqdXN0aWZ5LWNvbnRlbnQiOiAiY2VudGVyIiwKICAgICAgImFsaWduLWl0ZW1zIjogImNlbnRlciIsCiAgICAgICJib3JkZXIiOiAiMXB4IHNvbGlkIHJnYig0MywgMTAzLCA5MSwgMC4xKSIsCiAgICAgICJib3gtc2hhZG93IjogInJnYigyMDEsIDIxOSwgMjE1KSAycHggNHB4IDhweCAwcHgiLAogICAgICAiYm9yZGVyLXJhZGl1cyI6ICIxMHB4IiwKICAgICAgInBhZGRpbmciOiAiNXB4IDVweCIsCiAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgIH0KICB9LCBbX3ZtLmRldGFpbEluZm8ucGhvdG9QbmcgJiYgX3ZtLmRldGFpbEluZm8ucGhvdG9QbmcudXBsb2FkUGF0aCA/IF9jKCdpbWcnLCB7CiAgICBzdGF0aWNDbGFzczogImQtbGctYmxvY2sgZC1ub25lIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJib3JkZXItcmFkaXVzIjogIjdweCIKICAgIH0sCiAgICBhdHRyczogewogICAgICAic3JjIjogIiIuY29uY2F0KF92bS5yb3V0ZU5hbWUsICIvIikuY29uY2F0KF92bS5kZXRhaWxJbmZvLnBob3RvUG5nLnVwbG9hZFBhdGgpLAogICAgICAid2lkdGgiOiAiNDE1IiwKICAgICAgImhlaWdodCI6ICIyNDAiLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KSA6IF92bS5fZSgpLCBfdm0uZGV0YWlsSW5mby5waG90b1BuZyAmJiBfdm0uZGV0YWlsSW5mby5waG90b1BuZy51cGxvYWRQYXRoID8gX2MoJ2ltZycsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1sZy1ub25lIGQtYmxvY2siLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImJvcmRlci1yYWRpdXMiOiAiN3B4IgogICAgfSwKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiAiIi5jb25jYXQoX3ZtLnJvdXRlTmFtZSwgIi8iKS5jb25jYXQoX3ZtLmRldGFpbEluZm8ucGhvdG9QbmcudXBsb2FkUGF0aCksCiAgICAgICJ3aWR0aCI6ICIzNDAiLAogICAgICAiaGVpZ2h0IjogIjIzMCIsCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pIDogX2MoJ2ltZycsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJib3JkZXItcmFkaXVzIjogIjEwcHgiCiAgICB9LAogICAgYXR0cnM6IHsKICAgICAgIndpZHRoIjogIjE3MCIsCiAgICAgICJzcmMiOiByZXF1aXJlKCIuLi8uLi9hc3NldHMvZGVmYXVsdC5zdmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1zdGFydCBhbGlnbi1pdGVtcy1jZW50ZXIgbXktMyIKICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9NYXJrLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAgbWwtMiBzaXRlQ29sb3IiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIyMHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgnY29sdW1uLnNhdmRvVGFybW9xJykpKV0pXSksIF9jKCdiLXJvdycsIFtfdm0udGFiUHJvZHVjdCA9PSAnY3VzdG9tUHJvZHVjdCcgPyBfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ0Jhc2VUcmVlc2VsZWN0V2l0aFZhbGlkYXRpb24nLCB7CiAgICByZWY6ICJwYXJlbnREZXAxIiwKICAgIHN0YXRpY0NsYXNzOiAicmVxdWlyZWQiLAogICAgYXR0cnM6IHsKICAgICAgImRpc2FibGUtYnJhbmNoLW5vZGVzIjogdHJ1ZSwKICAgICAgInNlYXJjaGFibGUiOiB0cnVlLAogICAgICAiY2xlYXJhYmxlIjogdHJ1ZSwKICAgICAgIm9wZW4tZGlyZWN0aW9uIjogImJvdHRvbSIsCiAgICAgICJ2ZWUtbmFtZSI6ICJwYXJlbnREZXBWZWVOYW1lIiwKICAgICAgInJ1bGVzIjogInJlcXVpcmVkIiwKICAgICAgInBsYWNlaG9sZGVyIjogX3ZtLiR0KCcnKSwKICAgICAgIm9ubHktZm9ybS1lbGVtZW50IjogIiIsCiAgICAgICJmb3JtLWxhYmVsIjogIl9fbm9uZSIsCiAgICAgICJvcHRpb25zIjogX3ZtLmNvbGxlY3RTYXZkbywKICAgICAgImRlZmF1bHQtZXhwYW5kLWxldmVsIjogMSwKICAgICAgIm5vcm1hbGl6ZXIiOiBfdm0ubm9ybWFsaXplcjEsCiAgICAgICJuYW1lIjogInBhcmVudERlcDEiLAogICAgICAiY3VzdG9tLXN0eWxlcyI6ICJ3aWR0aDogOTAlOyBib3JkZXI6IDFweCBzb2xpZCAjMmI2NzViOyIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xvc2UiOiBmdW5jdGlvbiBjbG9zZSgkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLnRyZWVDbG9zZWQoJ3BhcmVudERlcFZlZU5hbWUnKTsKICAgICAgfQogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0ubWFya2V0SWQsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0ubWFya2V0SWQgPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJtYXJrZXRJZCIKICAgIH0KICB9KV0sIDEpIDogX3ZtLl9lKCksIF92bS50YWJQcm9kdWN0ID09ICdvdGhlclByb2R1Y3QnICYmIChfdm0ucHJvZHVjdENoaWxkSWQgPT0gNjEgfHwgX3ZtLnByb2R1Y3RDaGlsZElkID09IDEyMyB8fCBfdm0ucHJvZHVjdENoaWxkSWQgPT0gMTI1KSA/IF9jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygnQmFzZVRyZWVzZWxlY3RXaXRoVmFsaWRhdGlvbicsIHsKICAgIHJlZjogInBhcmVudERlcDEiLAogICAgc3RhdGljQ2xhc3M6ICJyZXF1aXJlZCIsCiAgICBhdHRyczogewogICAgICAiZGlzYWJsZS1icmFuY2gtbm9kZXMiOiB0cnVlLAogICAgICAic2VhcmNoYWJsZSI6IHRydWUsCiAgICAgICJjbGVhcmFibGUiOiB0cnVlLAogICAgICAib3Blbi1kaXJlY3Rpb24iOiAiYm90dG9tIiwKICAgICAgInZlZS1uYW1lIjogInBhcmVudERlcFZlZU5hbWUiLAogICAgICAicnVsZXMiOiAicmVxdWlyZWQiLAogICAgICAicGxhY2Vob2xkZXIiOiBfdm0uJHQoJycpLAogICAgICAib25seS1mb3JtLWVsZW1lbnQiOiAiIiwKICAgICAgImZvcm0tbGFiZWwiOiAiX19ub25lIiwKICAgICAgIm9wdGlvbnMiOiBfdm0uY29sbGVjdFNhdmRvR2F6LAogICAgICAiZGVmYXVsdC1leHBhbmQtbGV2ZWwiOiAxLAogICAgICAibm9ybWFsaXplciI6IF92bS5ub3JtYWxpemVyMSwKICAgICAgIm5hbWUiOiAicGFyZW50RGVwMSIsCiAgICAgICJjdXN0b20tc3R5bGVzIjogIndpZHRoOiA5MCU7IGJvcmRlcjogMXB4IHNvbGlkICMyYjY3NWI7IgogICAgfSwKICAgIG9uOiB7CiAgICAgICJjbG9zZSI6IGZ1bmN0aW9uIGNsb3NlKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0udHJlZUNsb3NlZCgncGFyZW50RGVwVmVlTmFtZScpOwogICAgICB9CiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5tYXJrZXRJZCwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS5tYXJrZXRJZCA9ICQkdjsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogIm1hcmtldElkIgogICAgfQogIH0pXSwgMSkgOiBfdm0uX2UoKSwgX3ZtLnRhYlByb2R1Y3QgPT0gJ290aGVyUHJvZHVjdCcgJiYgKF92bS5wcm9kdWN0Q2hpbGRJZCA9PSA2MCB8fCBfdm0ucHJvZHVjdENoaWxkSWQgPT0gMTQ4IHx8IF92bS5wcm9kdWN0Q2hpbGRJZCA9PSAxMzEgfHwgX3ZtLnByb2R1Y3RDaGlsZElkID09IDEyOSB8fCBfdm0ucHJvZHVjdENoaWxkSWQgPT0gMTI3KSA/IF9jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygnQmFzZVRyZWVzZWxlY3RXaXRoVmFsaWRhdGlvbicsIHsKICAgIHJlZjogInBhcmVudERlcDEiLAogICAgc3RhdGljQ2xhc3M6ICJyZXF1aXJlZCIsCiAgICBhdHRyczogewogICAgICAiZGlzYWJsZS1icmFuY2gtbm9kZXMiOiB0cnVlLAogICAgICAic2VhcmNoYWJsZSI6IHRydWUsCiAgICAgICJjbGVhcmFibGUiOiB0cnVlLAogICAgICAib3Blbi1kaXJlY3Rpb24iOiAiYm90dG9tIiwKICAgICAgInZlZS1uYW1lIjogInBhcmVudERlcFZlZU5hbWUiLAogICAgICAicnVsZXMiOiAicmVxdWlyZWQiLAogICAgICAicGxhY2Vob2xkZXIiOiBfdm0uJHQoJycpLAogICAgICAib25seS1mb3JtLWVsZW1lbnQiOiAiIiwKICAgICAgImZvcm0tbGFiZWwiOiAiX19ub25lIiwKICAgICAgIm9wdGlvbnMiOiBfdm0uY29sbGVjdFNhdmRvQmVuemluLAogICAgICAiZGVmYXVsdC1leHBhbmQtbGV2ZWwiOiAxLAogICAgICAibm9ybWFsaXplciI6IF92bS5ub3JtYWxpemVyMSwKICAgICAgIm5hbWUiOiAicGFyZW50RGVwMSIsCiAgICAgICJjdXN0b20tc3R5bGVzIjogIndpZHRoOiA5MCU7IGJvcmRlcjogMXB4IHNvbGlkICMyYjY3NWI7IgogICAgfSwKICAgIG9uOiB7CiAgICAgICJjbG9zZSI6IGZ1bmN0aW9uIGNsb3NlKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0udHJlZUNsb3NlZCgncGFyZW50RGVwVmVlTmFtZScpOwogICAgICB9CiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5tYXJrZXRJZCwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS5tYXJrZXRJZCA9ICQkdjsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogIm1hcmtldElkIgogICAgfQogIH0pXSwgMSkgOiBfdm0uX2UoKSwgX3ZtLnRhYlByb2R1Y3QgPT0gJ290aGVyUHJvZHVjdCcgJiYgKF92bS5wcm9kdWN0Q2hpbGRJZCA9PSA1NiB8fCBfdm0ucHJvZHVjdENoaWxkSWQgPT0gNTcgfHwgX3ZtLnByb2R1Y3RDaGlsZElkID09IDU4KSA/IF9jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygnQmFzZVRyZWVzZWxlY3RXaXRoVmFsaWRhdGlvbicsIHsKICAgIHJlZjogInBhcmVudERlcDEiLAogICAgc3RhdGljQ2xhc3M6ICJyZXF1aXJlZCIsCiAgICBhdHRyczogewogICAgICAiZGlzYWJsZS1icmFuY2gtbm9kZXMiOiB0cnVlLAogICAgICAic2VhcmNoYWJsZSI6IHRydWUsCiAgICAgICJjbGVhcmFibGUiOiB0cnVlLAogICAgICAib3Blbi1kaXJlY3Rpb24iOiAiYm90dG9tIiwKICAgICAgInZlZS1uYW1lIjogInBhcmVudERlcFZlZU5hbWUiLAogICAgICAicnVsZXMiOiAicmVxdWlyZWQiLAogICAgICAicGxhY2Vob2xkZXIiOiBfdm0uJHQoJycpLAogICAgICAib25seS1mb3JtLWVsZW1lbnQiOiAiIiwKICAgICAgImZvcm0tbGFiZWwiOiAiX19ub25lIiwKICAgICAgIm9wdGlvbnMiOiBfdm0uY29sbGVjdFNhdmRvUGF4dGEsCiAgICAgICJkZWZhdWx0LWV4cGFuZC1sZXZlbCI6IDEsCiAgICAgICJub3JtYWxpemVyIjogX3ZtLm5vcm1hbGl6ZXIxLAogICAgICAibmFtZSI6ICJwYXJlbnREZXAxIiwKICAgICAgImN1c3RvbS1zdHlsZXMiOiAid2lkdGg6IDkwJTsgYm9yZGVyOiAxcHggc29saWQgIzJiNjc1YjsiCiAgICB9LAogICAgb246IHsKICAgICAgImNsb3NlIjogZnVuY3Rpb24gY2xvc2UoJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS50cmVlQ2xvc2VkKCdwYXJlbnREZXBWZWVOYW1lJyk7CiAgICAgIH0KICAgIH0sCiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLm1hcmtldElkLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLm1hcmtldElkID0gJCR2OwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAibWFya2V0SWQiCiAgICB9CiAgfSldLCAxKSA6IF92bS5fZSgpXSwgMSksIF92bS50YWJQcm9kdWN0ID09ICdjdXN0b21Qcm9kdWN0JyAmJiBfdm0ubWFya2V0SWQgPyBfYygnYi1yb3cnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAibWFyZ2luLXRvcCI6ICIyNnB4IgogICAgfQogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LWxnLTIgcHgtMSB0ZXh0LW1kLWxlZnQgdGV4dC1jZW50ZXIiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiNCIKICAgIH0KICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5taWRkbGVTdW0nKSkpXSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImNvbG9yIjogIiMyODkyMDIiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcigoX3ZtJHJldHVyblNlYXJjaDk1ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDk1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g5NSA9IF92bSRyZXR1cm5TZWFyY2g5NS5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoOTUgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoOTUubWlkZGxlU3VtID8gKF92bSRyZXR1cm5TZWFyY2g5NiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5NiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOTYgPSBfdm0kcmV0dXJuU2VhcmNoOTYubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDk2ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoOTYubWlkZGxlU3VtIDogX3ZtLiR0KCdwcm9kdWN0UHJpY2Uubm90Rm91bmQnKSkpICsgIiAiKSwgKF92bSRyZXR1cm5TZWFyY2g5NyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g5NyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoOTcgPSBfdm0kcmV0dXJuU2VhcmNoOTcubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDk3ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDk3Lm1pZGRsZVN1bSA/IF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc29tJykpKV0pIDogX3ZtLl9lKCldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LWxnLTIgcHgtMSB0ZXh0LW1kLWxlZnQgdGV4dC1jZW50ZXIiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiNCIKICAgIH0KICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5tYXhTdW0nKSkpXSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImNvbG9yIjogIiNEM0FCMUQiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcigoX3ZtJHJldHVyblNlYXJjaDk4ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDk4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g5OCA9IF92bSRyZXR1cm5TZWFyY2g5OC5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoOTggIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoOTgubWF4U3VtID8gKF92bSRyZXR1cm5TZWFyY2g5OSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5OSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOTkgPSBfdm0kcmV0dXJuU2VhcmNoOTkubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDk5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoOTkubWF4U3VtIDogX3ZtLiR0KCdwcm9kdWN0UHJpY2Uubm90Rm91bmQnKSkpICsgIiAiKSwgKF92bSRyZXR1cm5TZWFyY2gxMDAgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTAwICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMDAgPSBfdm0kcmV0dXJuU2VhcmNoMTAwLm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMDAgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTAwLm1heFN1bSA/IF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc29tJykpKV0pIDogX3ZtLl9lKCldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LWxnLTIgcHgtMSB0ZXh0LW1kLWxlZnQgdGV4dC1jZW50ZXIiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiNCIKICAgIH0KICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5taW5TdW0nKSkpXSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcigoX3ZtJHJldHVyblNlYXJjaDEwMSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMDEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEwMSA9IF92bSRyZXR1cm5TZWFyY2gxMDEubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEwMSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMDEubWluU3VtID8gKF92bSRyZXR1cm5TZWFyY2gxMDIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTAyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMDIgPSBfdm0kcmV0dXJuU2VhcmNoMTAyLm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxMDIubWluU3VtIDogX3ZtLiR0KCdwcm9kdWN0UHJpY2Uubm90Rm91bmQnKSkpICsgIiAiKSwgKF92bSRyZXR1cm5TZWFyY2gxMDMgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTAzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMDMgPSBfdm0kcmV0dXJuU2VhcmNoMTAzLm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMDMgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTAzLm1pblN1bSA/IF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc29tJykpKV0pIDogX3ZtLl9lKCldKV0pXSwgMSkgOiBfdm0udGFiUHJvZHVjdCA9PSAnb3RoZXJQcm9kdWN0JyAmJiBfdm0ubWFya2V0SWQgPyBfYygnYi1yb3cnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LTQiCiAgfSwgW19jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAicHgtbGctMiBteS1sZy0wIG15LTMiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiLAogICAgICAibGciOiAiNiIKICAgIH0KICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zdW0xJykpKV0pLCBfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjMmI2NzViIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoKF92bSRyZXR1cm5TZWFyY2gxMDQgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTA0ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMDQgPSBfdm0kcmV0dXJuU2VhcmNoMTA0Lm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMDQgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTA0Lm1heFN1bSA/IChfdm0kcmV0dXJuU2VhcmNoMTA1ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEwNSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTA1ID0gX3ZtJHJldHVyblNlYXJjaDEwNS5tYXJrZXQxKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTA1ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTA1Lm1heFN1bSA6IF92bS4kdCgncHJvZHVjdFByaWNlLm5vdEZvdW5kJykpKSArICIgIiksIChfdm0kcmV0dXJuU2VhcmNoMTA2ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEwNiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTA2ID0gX3ZtJHJldHVyblNlYXJjaDEwNi5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTA2ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEwNi5tYXhTdW0gPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnNvbScpKSldKSA6IF92bS5fZSgpXSldKV0sIDEpIDogX3ZtLl9lKCldLCAxKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LTMgbXQtbGctMCBtdC00IiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIiwKICAgICAgImxnIjogIjQiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMjRweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLmdldE5hbWUoewogICAgbmFtZUx0OiAoX3ZtJGRldGFpbEluZm8gPSBfdm0uZGV0YWlsSW5mbykgPT09IG51bGwgfHwgX3ZtJGRldGFpbEluZm8gPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRkZXRhaWxJbmZvLm5hbWVMdCwKICAgIG5hbWVVejogKF92bSRkZXRhaWxJbmZvMiA9IF92bS5kZXRhaWxJbmZvKSA9PT0gbnVsbCB8fCBfdm0kZGV0YWlsSW5mbzIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRkZXRhaWxJbmZvMi5uYW1lVXosCiAgICBuYW1lUnU6IChfdm0kZGV0YWlsSW5mbzMgPSBfdm0uZGV0YWlsSW5mbykgPT09IG51bGwgfHwgX3ZtJGRldGFpbEluZm8zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kZGV0YWlsSW5mbzMubmFtZVJ1CiAgfSkpICsgIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm5hcnhsYXJpJykpKV0pXSksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LTMiCiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdigi0KXRg9C00YPQtCDQsdGD0LnQuNGH0LAiKV0pLCBfYygnc2VsZWN0JywgewogICAgZGlyZWN0aXZlczogW3sKICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICB2YWx1ZTogX3ZtLnJlZ2lvblNvYXRvLAogICAgICBleHByZXNzaW9uOiAicmVnaW9uU29hdG8iCiAgICB9XSwKICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sIGZvcm0tY29udHJvbC1tZCBkLWxnLWJsb2NrIGQtbm9uZSIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAid2lkdGgiOiAiOTAlIiwKICAgICAgImJvcmRlciI6ICIxcHggc29saWQgIzJiNjc1YiIKICAgIH0sCiAgICBvbjogewogICAgICAiY2hhbmdlIjogZnVuY3Rpb24gY2hhbmdlKCRldmVudCkgewogICAgICAgIHZhciAkJHNlbGVjdGVkVmFsID0gQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKCRldmVudC50YXJnZXQub3B0aW9ucywgZnVuY3Rpb24gKG8pIHsKICAgICAgICAgIHJldHVybiBvLnNlbGVjdGVkOwogICAgICAgIH0pLm1hcChmdW5jdGlvbiAobykgewogICAgICAgICAgdmFyIHZhbCA9ICJfdmFsdWUiIGluIG8gPyBvLl92YWx1ZSA6IG8udmFsdWU7CiAgICAgICAgICByZXR1cm4gdmFsOwogICAgICAgIH0pOwogICAgICAgIF92bS5yZWdpb25Tb2F0byA9ICRldmVudC50YXJnZXQubXVsdGlwbGUgPyAkJHNlbGVjdGVkVmFsIDogJCRzZWxlY3RlZFZhbFswXTsKICAgICAgfQogICAgfQogIH0sIFtfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncmFpcy5kZXBhcnRtZW50LnJlcHVibGljJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MDMiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5hbmRpam9uJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MDYiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5idXhvcm8nKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTcwOCIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLmppenpheCcpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzEyIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24ubmF2b2knKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTcxNCIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLm5hbWFuZ2FuJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MTgiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5zYW1hcnFhbmQnKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTcyNCIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLnNpcmRhcnlvJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MjIiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5zdXJ4YW5kYXJ5bycpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzMwIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24uZmFyZ29uYScpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzI3IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24udG9zaGtlbnRWJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MjYiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi50b3Noa2VudFNoJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MTAiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5xYXNocWFkYXJ5bycpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzMzIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24ueG9yYXptJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MzUiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5xb3JhcWFscG9xJykpKV0pXSksIF9jKCdzZWxlY3QnLCB7CiAgICBkaXJlY3RpdmVzOiBbewogICAgICBuYW1lOiAibW9kZWwiLAogICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgIHZhbHVlOiBfdm0ucmVnaW9uU29hdG8sCiAgICAgIGV4cHJlc3Npb246ICJyZWdpb25Tb2F0byIKICAgIH1dLAogICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNvbnRyb2wgZm9ybS1jb250cm9sLW1kIGQtbGctbm9uZSBkLWJsb2NrIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICAgImJvcmRlciI6ICIxcHggc29saWQgIzJiNjc1YiIKICAgIH0sCiAgICBvbjogewogICAgICAiY2hhbmdlIjogZnVuY3Rpb24gY2hhbmdlKCRldmVudCkgewogICAgICAgIHZhciAkJHNlbGVjdGVkVmFsID0gQXJyYXkucHJvdG90eXBlLmZpbHRlci5jYWxsKCRldmVudC50YXJnZXQub3B0aW9ucywgZnVuY3Rpb24gKG8pIHsKICAgICAgICAgIHJldHVybiBvLnNlbGVjdGVkOwogICAgICAgIH0pLm1hcChmdW5jdGlvbiAobykgewogICAgICAgICAgdmFyIHZhbCA9ICJfdmFsdWUiIGluIG8gPyBvLl92YWx1ZSA6IG8udmFsdWU7CiAgICAgICAgICByZXR1cm4gdmFsOwogICAgICAgIH0pOwogICAgICAgIF92bS5yZWdpb25Tb2F0byA9ICRldmVudC50YXJnZXQubXVsdGlwbGUgPyAkJHNlbGVjdGVkVmFsIDogJCRzZWxlY3RlZFZhbFswXTsKICAgICAgfQogICAgfQogIH0sIFtfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncmFpcy5kZXBhcnRtZW50LnJlcHVibGljJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MDMiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5hbmRpam9uJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MDYiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5idXhvcm8nKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTcwOCIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLmppenpheCcpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzEyIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24ubmF2b2knKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTcxNCIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLm5hbWFuZ2FuJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MTgiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5zYW1hcnFhbmQnKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTcyNCIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLnNpcmRhcnlvJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MjIiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5zdXJ4YW5kYXJ5bycpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzMwIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24uZmFyZ29uYScpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzI3IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24udG9zaGtlbnRWJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MjYiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi50b3Noa2VudFNoJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MTAiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5xYXNocWFkYXJ5bycpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzMzIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24ueG9yYXptJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MzUiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5xb3JhcWFscG9xJykpKV0pXSldKSwgX3ZtLmNoaWxkZXJCeUlEICYmIF92bS5jaGlsZGVyQnlJRC5sZW5ndGggPyBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJtdC00IGQtbGctYmxvY2sgZC1ub25lIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJtYXJnaW4tYm90dG9tIjogIjcwcHgiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KCLQnNCw0rPRgdGD0LvQvtGCINGC0YPRgNC4INCx0YPQudC40YfQsCIpXSldKSwgX2MoJ0Jhc2VUcmVlc2VsZWN0V2l0aFZhbGlkYXRpb24nLCB7CiAgICByZWY6ICJwYXJlbnREZXAiLAogICAgc3RhdGljQ2xhc3M6ICJyZXF1aXJlZCIsCiAgICBhdHRyczogewogICAgICAic2VhcmNoYWJsZSI6IHRydWUsCiAgICAgICJjbGVhcmFibGUiOiB0cnVlLAogICAgICAib3Blbi1kaXJlY3Rpb24iOiAiYm90dG9tIiwKICAgICAgInZlZS1uYW1lIjogInBhcmVudERlcFZlZU5hbWUiLAogICAgICAicnVsZXMiOiAicmVxdWlyZWQiLAogICAgICAicGxhY2Vob2xkZXIiOiBfdm0uJHQoJycpLAogICAgICAib25seS1mb3JtLWVsZW1lbnQiOiAiIiwKICAgICAgImZvcm0tbGFiZWwiOiAiX19ub25lIiwKICAgICAgIm9wdGlvbnMiOiBfdm0uY2hpbGRlckJ5SUQsCiAgICAgICJkZWZhdWx0LWV4cGFuZC1sZXZlbCI6IDEsCiAgICAgICJub3JtYWxpemVyIjogX3ZtLm5vcm1hbGl6ZXIsCiAgICAgICJuYW1lIjogInBhcmVudERlcCIsCiAgICAgICJjdXN0b20tc3R5bGVzIjogIndpZHRoOiA5MCU7IGJvcmRlcjogMXB4IHNvbGlkICMyYjY3NWI7IgogICAgfSwKICAgIG9uOiB7CiAgICAgICJjbG9zZSI6IGZ1bmN0aW9uIGNsb3NlKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0udHJlZUNsb3NlZCgncGFyZW50RGVwVmVlTmFtZScpOwogICAgICB9CiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5wcm9kdWN0Q2hpbGRJZCwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS5wcm9kdWN0Q2hpbGRJZCA9ICQkdjsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogInByb2R1Y3RDaGlsZElkIgogICAgfQogIH0pLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJkLW5vbmUgYXNpZGUiCiAgfSwgW19jKCd1bCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibGlzdCIKICB9LCBbX2MoJ2xpJywgewogICAgc3RhdGljQ2xhc3M6ICJsaXN0LWl0ZW0iCiAgfSwgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImRyb3AgZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLWNlbnRlciIKICB9LCBbX2MoJ2RpdicsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0uZ2V0QnlDaGlsZChfdm0uZGV0YWlsSW5mby5pZCk7CiAgICAgIH0KICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0TmFtZSh7CiAgICBuYW1lTHQ6IChfdm0kZGV0YWlsSW5mbzQgPSBfdm0uZGV0YWlsSW5mbykgPT09IG51bGwgfHwgX3ZtJGRldGFpbEluZm80ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kZGV0YWlsSW5mbzQubmFtZUx0LAogICAgbmFtZVV6OiAoX3ZtJGRldGFpbEluZm81ID0gX3ZtLmRldGFpbEluZm8pID09PSBudWxsIHx8IF92bSRkZXRhaWxJbmZvNSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJGRldGFpbEluZm81Lm5hbWVVeiwKICAgIG5hbWVSdTogKF92bSRkZXRhaWxJbmZvNiA9IF92bS5kZXRhaWxJbmZvKSA9PT0gbnVsbCB8fCBfdm0kZGV0YWlsSW5mbzYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRkZXRhaWxJbmZvNi5uYW1lUnUKICB9KSkpXSksIF92bS5jaGlsZGVyQnlJRC5jaGlsZHJlbiAmJiBfdm0uY2hpbGRlckJ5SUQuY2hpbGRyZW4ubGVuZ3RoID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAidGV4dC1lbmQiLAogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS5vcGVuUHJvZHVjdFR5cGUxKCk7CiAgICAgIH0KICAgIH0KICB9LCBbX3ZtLmRyb3Bkb3duT3BlbjEgPyBfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgIndpZHRoIjogIjkiLAogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvdXAucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pIDogX3ZtLl9lKCksICFfdm0uZHJvcGRvd25PcGVuMSA/IF9jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvZG93bi5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSkgOiBfdm0uX2UoKV0pIDogX3ZtLl9lKCldKSwgX2MoJ3VsJywgewogICAgZGlyZWN0aXZlczogW3sKICAgICAgbmFtZTogInNob3ciLAogICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgdmFsdWU6IF92bS5kcm9wZG93bk9wZW4xLAogICAgICBleHByZXNzaW9uOiAiZHJvcGRvd25PcGVuMSIKICAgIH1dLAogICAgc3RhdGljQ2xhc3M6ICJkcm9wbGlzdCIKICB9LCBbX2MoJ2xpJywgX3ZtLl9sKF92bS5jaGlsZGVyQnlJRC5jaGlsZHJlbiwgZnVuY3Rpb24gKHZtLCBpbmRleCkgewogICAgcmV0dXJuIF9jKCdkaXYnLCB7CiAgICAgIGtleTogaW5kZXgsCiAgICAgIHN0YXRpY0NsYXNzOiAiZHJvcCIKICAgIH0sIFtfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBhbGlnbi1pdGVtcy1jZW50ZXIiCiAgICB9LCBbX2MoJ2RpdicsIHsKICAgICAgb246IHsKICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfdm0uZ2V0QnlDaGlsZCh2bS5pZCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0TmFtZSh7CiAgICAgIG5hbWVMdDogdm0gPT09IG51bGwgfHwgdm0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZtLm5hbWVMdCwKICAgICAgbmFtZVV6OiB2bSA9PT0gbnVsbCB8fCB2bSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdm0ubmFtZVV6LAogICAgICBuYW1lUnU6IHZtID09PSBudWxsIHx8IHZtID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2bS5uYW1lUnUKICAgIH0pKSldKSwgdm0uY2hpbGRyZW4gJiYgdm0uY2hpbGRyZW4ubGVuZ3RoID8gX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LWVuZCIsCiAgICAgIG9uOiB7CiAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gX3ZtLm9wZW5Qcm9kdWN0VHlwZSh2bS5pZCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBbX3ZtLmRyb3Bkb3duT3BlbjIgPyBfYygnaW1nJywgewogICAgICBhdHRyczogewogICAgICAgICJ3aWR0aCI6ICI5IiwKICAgICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvdXAucG5nIiksCiAgICAgICAgImFsdCI6ICIiCiAgICAgIH0KICAgIH0pIDogX3ZtLl9lKCksICFfdm0uZHJvcGRvd25PcGVuMiA/IF9jKCdpbWcnLCB7CiAgICAgIGF0dHJzOiB7CiAgICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL2Rvd24ucG5nIiksCiAgICAgICAgImFsdCI6ICIiCiAgICAgIH0KICAgIH0pIDogX3ZtLl9lKCldKSA6IF92bS5fZSgpXSksIF9jKCd1bCcsIHsKICAgICAgZGlyZWN0aXZlczogW3sKICAgICAgICBuYW1lOiAic2hvdyIsCiAgICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgICAgdmFsdWU6IF92bS5kcm9wZG93bk9wZW4yLAogICAgICAgIGV4cHJlc3Npb246ICJkcm9wZG93bk9wZW4yIgogICAgICB9XSwKICAgICAgc3RhdGljQ2xhc3M6ICJkcm9wbGlzdCIKICAgIH0sIFtfYygnbGknLCBfdm0uX2wodm0uY2hpbGRyZW4sIGZ1bmN0aW9uIChkbSwgaW5kZXgxKSB7CiAgICAgIHJldHVybiBfYygnZGl2JywgewogICAgICAgIGtleTogaW5kZXgxLAogICAgICAgIHN0YXRpY0NsYXNzOiAiZHJvcCIKICAgICAgfSwgW19jKCdkaXYnLCB7CiAgICAgICAgb246IHsKICAgICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgICByZXR1cm4gX3ZtLmdldEJ5Q2hpbGQoZG0uaWQpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLmdldE5hbWUoewogICAgICAgIG5hbWVMdDogZG0gPT09IG51bGwgfHwgZG0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGRtLm5hbWVMdCwKICAgICAgICBuYW1lVXo6IGRtID09PSBudWxsIHx8IGRtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkbS5uYW1lVXosCiAgICAgICAgbmFtZVJ1OiBkbSA9PT0gbnVsbCB8fCBkbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZG0ubmFtZVJ1CiAgICAgIH0pKSldKV0pOwogICAgfSksIDApXSldKTsKICB9KSwgMCldKV0pXSldKV0sIDEpIDogX3ZtLl9lKCksIF92bS5jaGlsZGVyQnlJRCAmJiBfdm0uY2hpbGRlckJ5SUQubGVuZ3RoID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibXQtNCBkLWxnLW5vbmUgZC1ibG9jayIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAibWFyZ2luLWJvdHRvbSI6ICIxNXB4IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdigi0JzQsNKz0YHRg9C70L7RgiDRgtGD0YDQuCDQsdGD0LnQuNGH0LAiKV0pXSksIF9jKCdCYXNlVHJlZXNlbGVjdFdpdGhWYWxpZGF0aW9uJywgewogICAgcmVmOiAicGFyZW50RGVwIiwKICAgIHN0YXRpY0NsYXNzOiAicmVxdWlyZWQiLAogICAgYXR0cnM6IHsKICAgICAgInNlYXJjaGFibGUiOiB0cnVlLAogICAgICAiY2xlYXJhYmxlIjogdHJ1ZSwKICAgICAgIm9wZW4tZGlyZWN0aW9uIjogImJvdHRvbSIsCiAgICAgICJ2ZWUtbmFtZSI6ICJwYXJlbnREZXBWZWVOYW1lIiwKICAgICAgInJ1bGVzIjogInJlcXVpcmVkIiwKICAgICAgInBsYWNlaG9sZGVyIjogX3ZtLiR0KCcnKSwKICAgICAgIm9ubHktZm9ybS1lbGVtZW50IjogIiIsCiAgICAgICJmb3JtLWxhYmVsIjogIl9fbm9uZSIsCiAgICAgICJvcHRpb25zIjogX3ZtLmNoaWxkZXJCeUlELAogICAgICAiZGVmYXVsdC1leHBhbmQtbGV2ZWwiOiAxLAogICAgICAibm9ybWFsaXplciI6IF92bS5ub3JtYWxpemVyLAogICAgICAibmFtZSI6ICJwYXJlbnREZXAiLAogICAgICAiY3VzdG9tLXN0eWxlcyI6ICJ3aWR0aDogOTAlOyBib3JkZXI6IDFweCBzb2xpZCAjMmI2NzViOyIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xvc2UiOiBmdW5jdGlvbiBjbG9zZSgkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLnRyZWVDbG9zZWQoJ3BhcmVudERlcFZlZU5hbWUnKTsKICAgICAgfQogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0ucHJvZHVjdENoaWxkSWQsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0ucHJvZHVjdENoaWxkSWQgPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJwcm9kdWN0Q2hpbGRJZCIKICAgIH0KICB9KV0sIDEpIDogX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiYmVzdEFjcnUiCiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIndoaXRlIgogICAgfQogIH0sIFtfdm0uX3YoImFjcnUgZGV2ZWxvcGVycyBhcmUgYmVzdCIpXSldKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1zdGFydCBhbGlnbi1pdGVtcy1jZW50ZXIgbXktMyIKICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9NYXJrLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAgbWwtMiBzaXRlQ29sb3IiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIyMHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgnY29sdW1uLnNlbGVjdElqcm8nKSkpXSldKSwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxICYmIF92bS5tYXJrZXRJZCA/IF9jKCdiLXJvdycsIFtfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2FjdGl2aXR5LnJhdGVJbmZvLm1vbm9wb2x5LmZvb2RzLmxhc3REYXRlMScpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjMmI2NzViIgogICAgfQogIH0sIFsoX3ZtJHJldHVyblNlYXJjaDEwNyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMDcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEwNyA9IF92bSRyZXR1cm5TZWFyY2gxMDcubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEwNyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMDcubGFzdERhdGUgPyBfYygnc3BhbicsIFtfdm0uX3YoIiAiICsgX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMTA4ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEwOCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTA4ID0gX3ZtJHJldHVyblNlYXJjaDEwOC5tYXJrZXQxKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTA4ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTA4Lmxhc3REYXRlKSArICIgIildKSA6IF9jKCdzcGFuJywgW19jKCdiJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIndoaXRlIgogICAgfQogIH0sIFtfdm0uX3YoIi4iKV0pXSldKV0pXSwgMSkgOiBfdm0uX2UoKSwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxICYmIF92bS5tYXJrZXRJZCA/IF9jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAibXQtMiIKICB9LCBbX2MoJ2ItY29sJywgewogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdjb2x1bW4uc2F2ZG9PYmoyJykpKV0pLCBfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLmdldE5hbWUoewogICAgbmFtZUx0OiAoX3ZtJHJldHVyblNlYXJjaDEwOSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMDkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEwOSA9IF92bSRyZXR1cm5TZWFyY2gxMDkubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEwOSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTA5ID0gX3ZtJHJldHVyblNlYXJjaDEwOS5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMDkgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTA5LnByaWNlTWFya2V0VHlwZUR0by5uYW1lTHQgPyAoX3ZtJHJldHVyblNlYXJjaDExMCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMTAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDExMCA9IF92bSRyZXR1cm5TZWFyY2gxMTAubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDExMCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTEwID0gX3ZtJHJldHVyblNlYXJjaDExMC5tYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMTAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxMTAucHJpY2VNYXJrZXRUeXBlRHRvLm5hbWVMdCA6ICcnLAogICAgbmFtZVV6OiAoX3ZtJHJldHVyblNlYXJjaDExMSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExMSA9IF92bSRyZXR1cm5TZWFyY2gxMTEubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExMSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTExID0gX3ZtJHJldHVyblNlYXJjaDExMS5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTEgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTExLnByaWNlTWFya2V0VHlwZUR0by5uYW1lVXogPyAoX3ZtJHJldHVyblNlYXJjaDExMiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMTIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDExMiA9IF92bSRyZXR1cm5TZWFyY2gxMTIubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDExMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTEyID0gX3ZtJHJldHVyblNlYXJjaDExMi5tYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxMTIucHJpY2VNYXJrZXRUeXBlRHRvLm5hbWVVeiA6ICcnLAogICAgbmFtZVJ1OiAoX3ZtJHJldHVyblNlYXJjaDExMyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExMyA9IF92bSRyZXR1cm5TZWFyY2gxMTMubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTEzID0gX3ZtJHJldHVyblNlYXJjaDExMy5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTMgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTEzLnByaWNlTWFya2V0VHlwZUR0by5uYW1lUnUgPyAoX3ZtJHJldHVyblNlYXJjaDExNCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMTQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDExNCA9IF92bSRyZXR1cm5TZWFyY2gxMTQubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDExNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTE0ID0gX3ZtJHJldHVyblNlYXJjaDExNC5tYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMTQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxMTQucHJpY2VNYXJrZXRUeXBlRHRvLm5hbWVSdSA6ICcnCiAgfSkpICsgIiAiKV0pXSldLCAxKSA6IF92bS5fZSgpLCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEgJiYgX3ZtLm1hcmtldElkID8gX2MoJ2Itcm93JywgewogICAgc3RhdGljQ2xhc3M6ICJtdC0zIGQtbGctbm9uZSBkLWJsb2NrIgogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LWxnLTIiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdyZXBvcnRpbmcubWFpbi5mb3JtMS5uYW1lNScpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjMmI2NzViIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMTE1ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTE1ID0gX3ZtJHJldHVyblNlYXJjaDExNS5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTE1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMTUgPSBfdm0kcmV0dXJuU2VhcmNoMTE1Lm1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExNSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMTUuYWRkcmVzcyA/IChfdm0kcmV0dXJuU2VhcmNoMTE2ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDExNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTE2ID0gX3ZtJHJldHVyblNlYXJjaDExNi5tYXJrZXQxKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTE2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMTYgPSBfdm0kcmV0dXJuU2VhcmNoMTE2Lm1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDExNiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDExNi5hZGRyZXNzIDogJycpICsgIiAiKV0pXSldLCAxKSA6IF92bS5fZSgpLCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEgJiYgX3ZtLm1hcmtldElkID8gX2MoJ2Itcm93JywgewogICAgc3RhdGljQ2xhc3M6ICJtdC0zIGQtbGctbm9uZSBkLWJsb2NrIgogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LWxnLTIgbXktbGctMCBteS0zIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFsoX3ZtJHJldHVyblNlYXJjaDExNyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExNyA9IF92bSRyZXR1cm5TZWFyY2gxMTcubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTE3ID0gX3ZtJHJldHVyblNlYXJjaDExNy5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTcgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTE3LmxhbmcgfHwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5saW5rID8gX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2NvbHVtbi5sb2NhdGlvbjEnKSkpXSkgOiBfdm0uX2UoKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1zdGFydCBhbGlnbi1pdGVtcy1jZW50ZXIiCiAgfSwgWyhfdm0kcmV0dXJuU2VhcmNoMTE4ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExOCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTE4ID0gX3ZtJHJldHVyblNlYXJjaDExOC5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTE4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMTggPSBfdm0kcmV0dXJuU2VhcmNoMTE4Lm1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExOCAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMTgubGFuZyB8fCAoX3ZtJHJldHVyblNlYXJjaDExOSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExOSA9IF92bSRyZXR1cm5TZWFyY2gxMTkubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExOSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTE5ID0gX3ZtJHJldHVyblNlYXJjaDExOS5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTkgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTE5LmxpbmsgPyBfYygnZGl2JywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIndpZHRoIjogIjcwJSIKICAgIH0KICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxM3B4IiwKICAgICAgImJvcmRlciI6ICIycHggc29saWQgIzJiNjc1YiIsCiAgICAgICJwYWRkaW5nIjogIjVweCIsCiAgICAgICJib3JkZXItcmFkaXVzIjogIjVweCIKICAgIH0KICB9LCBbX2MoJ3NwYW4nLCBbX3ZtLl92KCIgIiArIF92bS5fcygoX3ZtJHJldHVyblNlYXJjaDEyMCA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMjAgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEyMCA9IF92bSRyZXR1cm5TZWFyY2gxMjAubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEyMCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTIwID0gX3ZtJHJldHVyblNlYXJjaDEyMC5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMjAgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTIwLmxhbmcgPyAoKF92bSRyZXR1cm5TZWFyY2gxMjEgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTIxID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMjEgPSBfdm0kcmV0dXJuU2VhcmNoMTIxLm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMjEgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEyMSA9IF92bSRyZXR1cm5TZWFyY2gxMjEubWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTIxID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTIxLmxhbmcpICsgJyAsICcgKyAoKF92bSRyZXR1cm5TZWFyY2gxMjIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTIyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMjIgPSBfdm0kcmV0dXJuU2VhcmNoMTIyLm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMjIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEyMiA9IF92bSRyZXR1cm5TZWFyY2gxMjIubWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTIyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTIyLmxhdCkgOiAoX3ZtJHJldHVyblNlYXJjaDEyMyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMjMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEyMyA9IF92bSRyZXR1cm5TZWFyY2gxMjMubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEyMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTIzID0gX3ZtJHJldHVyblNlYXJjaDEyMy5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMjMgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTIzLmxpbmsgPyAoKF92bSRyZXR1cm5TZWFyY2gxMjQgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTI0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMjQgPSBfdm0kcmV0dXJuU2VhcmNoMTI0Lm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMjQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEyNCA9IF92bSRyZXR1cm5TZWFyY2gxMjQubWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTI0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTI0Lmxpbmsuc2xpY2UoMCwgMzUpKSArICcuLi4nIDogJycpICsgIiAiKV0pXSldKSA6IF92bS5fZSgpLCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCB8fCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxpbmsgPyBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJweC0yIgogIH0sIFtfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCA/IF9jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcz9xPSIuY29uY2F0KF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0LCAiLCIpLmNvbmNhdChfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhbmcsICImbGw9IikuY29uY2F0KF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0LCAiLCIpLmNvbmNhdChfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhbmcsICImej0xNiIpLAogICAgICAidGFyZ2V0IjogIl9ibGFuayIKICAgIH0KICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9saW5rLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pIDogX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5saW5rID8gX2MoJ2EnLCB7CiAgICBhdHRyczogewogICAgICAiaHJlZiI6IChfdm0kcmV0dXJuU2VhcmNoMTI1ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyNSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTI1ID0gX3ZtJHJldHVyblNlYXJjaDEyNS5tYXJrZXQxKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTI1ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMjUgPSBfdm0kcmV0dXJuU2VhcmNoMTI1Lm1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyNSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDEyNS5saW5rLAogICAgICAidGFyZ2V0IjogIl9ibGFuayIKICAgIH0KICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9saW5rLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pIDogX2MoJ2EnLCB7CiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjIgogICAgfQogIH0sIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL2xpbmsucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSldKSA6IF92bS5fZSgpLCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCB8fCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxpbmsgPyBfYygnZGl2JywgW19jKCdsYWJlbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZHJvcGRvd24iCiAgfSwgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImRkLWJ1dHRvbiIKICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9zaGFyZS5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSwgX2MoJ2lucHV0JywgewogICAgc3RhdGljQ2xhc3M6ICJkZC1pbnB1dCIsCiAgICBhdHRyczogewogICAgICAidHlwZSI6ICJjaGVja2JveCIsCiAgICAgICJpZCI6ICJ0ZXN0IgogICAgfQogIH0pLCBfYygndWwnLCB7CiAgICBzdGF0aWNDbGFzczogImRkLW1lbnUiCiAgfSwgW192bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0ID8gX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS5zZW5kVG9UZWxlZ3JhbUxhdExhbmcoX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYXQsIF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGFuZyk7CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ2knLCB7CiAgICBzdGF0aWNDbGFzczogIm1kaSBtZGktc2VuZCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzAzOWJlNSIKICAgIH0KICB9KSwgX3ZtLl92KCIgVGVsZWdyYW0gIildKSA6IF9jKCdsaScsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0uc2VuZFRvVGVsZWdyYW1MaW5rKF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGluayk7CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ2knLCB7CiAgICBzdGF0aWNDbGFzczogIm1kaSBtZGktc2VuZCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzAzOWJlNSIKICAgIH0KICB9KSwgX3ZtLl92KCIgVGVsZWdyYW0gIildKSwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYXQgPyBfYygnbGknLCB7CiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLmNvcHlMYXRMYW5nTGluayhfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYW5nKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1jb250ZW50LWNvcHkiCiAgfSksIF92bS5fdigiIE51c3hhbGFzaCAiKV0pIDogX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS5jb3B5TGluayhfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxpbmspOwogICAgICB9CiAgICB9CiAgfSwgW19jKCdpJywgewogICAgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLWNvbnRlbnQtY29weSIKICB9KSwgX3ZtLl92KCIgTnVzeGFsYXNoICIpXSldKV0pXSkgOiBfdm0uX2UoKV0pXSldLCAxKSA6IF92bS5fZSgpXSwgMSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC0zIG10LWxnLTAgbXQtNCIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIsCiAgICAgICJsZyI6ICI0IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LTIiCiAgfSwgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQgYWxpZ24taXRlbXMtY2VudGVyIG10LTEiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiMjBweCIKICAgIH0KICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9NYXJrLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAgbWwtMiBzaXRlQ29sb3IiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIyMHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgnY29sdW1uLm1haW5EYXRhJykpKV0pXSksIChfdm0kcmV0dXJuU2VhcmNoMTI2ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEyNiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTI2ID0gX3ZtJHJldHVyblNlYXJjaDEyNi5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMjYgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTI2Lm1heE1hcmtldCB8fCAoX3ZtJHJldHVyblNlYXJjaDEyNyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMjcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEyNyA9IF92bSRyZXR1cm5TZWFyY2gxMjcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTI3ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEyNy5taW5NYXJrZXQgPyBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJtdC0yIgogIH0sIFtfYygnZGl2JywgW19jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IgogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICI2IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNXB4IiwKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiOHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1pblN1bScpKSldKV0pLCBfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIxOXB4IiwKICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAiY29sb3IiOiAiIzJiNjc1YiIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKChfdm0kcmV0dXJuU2VhcmNoMTI4ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEyOCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTI4ID0gX3ZtJHJldHVyblNlYXJjaDEyOC5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMjggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEyOCA9IF92bSRyZXR1cm5TZWFyY2gxMjgubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTI4ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEyOC5taW5QcmljZSA/IChfdm0kcmV0dXJuU2VhcmNoMTI5ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyOSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTI5ID0gX3ZtJHJldHVyblNlYXJjaDEyOS5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMjkgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEyOSA9IF92bSRyZXR1cm5TZWFyY2gxMjkubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTI5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTI5Lm1pblByaWNlIDogX3ZtLiR0KCdwcm9kdWN0UHJpY2Uubm90Rm91bmQnKSkpICsgIiAiKSwgKF92bSRyZXR1cm5TZWFyY2gxMzAgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMwICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMzAgPSBfdm0kcmV0dXJuU2VhcmNoMTMwLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzMCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTMwID0gX3ZtJHJldHVyblNlYXJjaDEzMC5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzAgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMwLm1pblByaWNlID8gX2MoJ3NwYW4nLCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zb20nKSkpXSkgOiBfdm0uX2UoKV0pXSksIF9jKCdkaXYnLCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LTEiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjEzcHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2gxMzEgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMzEgPSBfdm0kcmV0dXJuU2VhcmNoMTMxLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzMSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTMxID0gX3ZtJHJldHVyblNlYXJjaDEzMS5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzEgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMxLmRhdGUgPyAoX3ZtJHJldHVyblNlYXJjaDEzMiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMzIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEzMiA9IF92bSRyZXR1cm5TZWFyY2gxMzIuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTMyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMzIgPSBfdm0kcmV0dXJuU2VhcmNoMTMyLm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEzMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDEzMi5kYXRlIDogJycpICsgIiAiICsgX3ZtLl9zKF92bS4kdCgnZm9vdGVyVGl0bGUnKSkgKyAiICIpXSldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICI1IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNXB4IiwKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiOHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgnY29sdW1uLnNhdmRvT2JqMScpKSldKV0pLCBfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIxNXB4IiwKICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAiY29sb3IiOiAiIzJiNjc1YiIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcygoX3ZtJHJldHVyblNlYXJjaDEzMyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEzMyA9IF92bSRyZXR1cm5TZWFyY2gxMzMuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMzMgPSBfdm0kcmV0dXJuU2VhcmNoMTMzLm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTMzID0gX3ZtJHJldHVyblNlYXJjaDEzMy5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzMgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMzLm1hcmtldE5hbWUgPyAoX3ZtJHJldHVyblNlYXJjaDEzNCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMzQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEzNCA9IF92bSRyZXR1cm5TZWFyY2gxMzQuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTM0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMzQgPSBfdm0kcmV0dXJuU2VhcmNoMTM0Lm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEzNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTM0ID0gX3ZtJHJldHVyblNlYXJjaDEzNC5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMzQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxMzQubWFya2V0TmFtZSA6ICcnKSArICIgIildKV0pXSksIF9jKCdiLWNvbCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJ0ZXh0LWFsaWduIjogImVuZCIsCiAgICAgICJtYXJnaW4tdG9wIjogIjE1cHgiCiAgICB9LAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMSIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygnZGl2JywgW19jKCdpbWcnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY3Vyc29yIjogInBvaW50ZXIiCiAgICB9LAogICAgYXR0cnM6IHsKICAgICAgIndpZHRoIjogIjM1IiwKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL3Nob3dEZXRhaWwuZ2lmIiksCiAgICAgICJhbHQiOiAiWW91ciBHSUYiCiAgICB9LAogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS5vcGVuSW50b0RhdGEoJ21pbicpOwogICAgICB9CiAgICB9CiAgfSldKV0pXSldLCAxKV0sIDEpXSkgOiBfdm0uX2UoKSwgKF92bSRyZXR1cm5TZWFyY2gxMzUgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTM1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMzUgPSBfdm0kcmV0dXJuU2VhcmNoMTM1LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzNSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMzUubWF4TWFya2V0IHx8IChfdm0kcmV0dXJuU2VhcmNoMTM2ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzNiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTM2ID0gX3ZtJHJldHVyblNlYXJjaDEzNi5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzYgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTM2Lm1pbk1hcmtldCA/IF9jKCdkaXYnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAibWFyZ2luIjogIjEzcHggMCIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygnYi1yb3cnLCB7CiAgICBzdGF0aWNDbGFzczogImQtZmxleCIKICB9LCBbX2MoJ2ItY29sJywgewogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiNiIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5tYXhTdW0nKSkpXSldKSwgX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTlweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcigoX3ZtJHJldHVyblNlYXJjaDEzNyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEzNyA9IF92bSRyZXR1cm5TZWFyY2gxMzcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTM3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMzcgPSBfdm0kcmV0dXJuU2VhcmNoMTM3Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzNyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMzcubWF4UHJpY2UgPyAoX3ZtJHJldHVyblNlYXJjaDEzOCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMzggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEzOCA9IF92bSRyZXR1cm5TZWFyY2gxMzguYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTM4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMzggPSBfdm0kcmV0dXJuU2VhcmNoMTM4Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEzOCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDEzOC5tYXhQcmljZSA6IF92bS4kdCgncHJvZHVjdFByaWNlLm5vdEZvdW5kJykpKSArICIgIiksIChfdm0kcmV0dXJuU2VhcmNoMTM5ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzOSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTM5ID0gX3ZtJHJldHVyblNlYXJjaDEzOS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEzOSA9IF92bSRyZXR1cm5TZWFyY2gxMzkubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTM5ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEzOS5tYXhQcmljZSA/IF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc29tJykpKV0pIDogX3ZtLl9lKCldKV0pLCBfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtdC0xIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxM3B4IiwKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiOHB4IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMTQwID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE0MCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTQwID0gX3ZtJHJldHVyblNlYXJjaDE0MC5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNDAgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE0MCA9IF92bSRyZXR1cm5TZWFyY2gxNDAubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQwICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE0MC5kYXRlID8gKF92bSRyZXR1cm5TZWFyY2gxNDEgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTQxID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNDEgPSBfdm0kcmV0dXJuU2VhcmNoMTQxLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE0MSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTQxID0gX3ZtJHJldHVyblNlYXJjaDE0MS5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNDEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxNDEuZGF0ZSA6ICcnKSArICIgIiArIF92bS5fcyhfdm0uJHQoJ2Zvb3RlclRpdGxlJykpICsgIiAiKV0pXSldKSwgX2MoJ2ItY29sJywgewogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiNSIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2NvbHVtbi5zYXZkb09iajEnKSkpXSldKSwgX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2gxNDIgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQyICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNDIgPSBfdm0kcmV0dXJuU2VhcmNoMTQyLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE0MiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTQyID0gX3ZtJHJldHVyblNlYXJjaDE0Mi5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNDIgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE0MiA9IF92bSRyZXR1cm5TZWFyY2gxNDIubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQyICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE0Mi5tYXJrZXROYW1lID8gKF92bSRyZXR1cm5TZWFyY2gxNDMgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTQzID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNDMgPSBfdm0kcmV0dXJuU2VhcmNoMTQzLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE0MyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTQzID0gX3ZtJHJldHVyblNlYXJjaDE0My5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNDMgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE0MyA9IF92bSRyZXR1cm5TZWFyY2gxNDMubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTQzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTQzLm1hcmtldE5hbWUgOiAnJykgKyAiICIpXSldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAidGV4dC1hbGlnbiI6ICJlbmQiLAogICAgICAibWFyZ2luLXRvcCI6ICIxNXB4IgogICAgfSwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ2RpdicsIFtfYygnaW1nJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImN1cnNvciI6ICJwb2ludGVyIgogICAgfSwKICAgIGF0dHJzOiB7CiAgICAgICJ3aWR0aCI6ICIzNSIsCiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9zaG93RGV0YWlsLmdpZiIpLAogICAgICAiYWx0IjogIllvdXIgR0lGIgogICAgfSwKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0ub3BlbkludG9EYXRhKCdtYXgnKTsKICAgICAgfQogICAgfQogIH0pXSldKV0pXSwgMSldLCAxKV0pIDogX3ZtLl9lKCksIChfdm0kcmV0dXJuU2VhcmNoMTQ0ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE0NCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTQ0ID0gX3ZtJHJldHVyblNlYXJjaDE0NC5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNDQgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQ0Lm1heE1hcmtldCB8fCAoX3ZtJHJldHVyblNlYXJjaDE0NSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNDUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE0NSA9IF92bSRyZXR1cm5TZWFyY2gxNDUuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQ1ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE0NS5taW5NYXJrZXQgPyBfYygnZGl2JywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiNDVweCIKICAgIH0KICB9LCBbX2MoJ2Itcm93JywgewogICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgiCiAgfSwgW19jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjYiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIxOXB4IiwKICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAiY29sb3IiOiAiIzI4OTIwMiIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5taWRkbGVTdW0nKSkgKyAiICIpXSldKSwgX2MoJ2ItY29sJywgewogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiNiIKICAgIH0KICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAgbXItbGctMyIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjIwcHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjMjg5MjAyIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoKF92bSRyZXR1cm5TZWFyY2gxNDYgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQ2ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNDYgPSBfdm0kcmV0dXJuU2VhcmNoMTQ2LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE0NiAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNDYubWlkZGxlU3VtID8gKF92bSRyZXR1cm5TZWFyY2gxNDcgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTQ3ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNDcgPSBfdm0kcmV0dXJuU2VhcmNoMTQ3LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE0NyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDE0Ny5taWRkbGVTdW0gOiBfdm0uJHQoJ3Byb2R1Y3RQcmljZS5ub3RGb3VuZCcpKSkgKyAiICIpLCAoX3ZtJHJldHVyblNlYXJjaDE0OCA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNDggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE0OCA9IF92bSRyZXR1cm5TZWFyY2gxNDguYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQ4ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE0OC5taWRkbGVTdW0gPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnNvbScpKSldKSA6IF92bS5fZSgpXSldKV0sIDEpXSwgMSkgOiBfdm0uX2UoKSwgISgoX3ZtJHJldHVyblNlYXJjaDE0OSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNDkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE0OSA9IF92bSRyZXR1cm5TZWFyY2gxNDkuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQ5ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE0OS5tYXhNYXJrZXQpICYmICEoKF92bSRyZXR1cm5TZWFyY2gxNTAgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTUwICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNTAgPSBfdm0kcmV0dXJuU2VhcmNoMTUwLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1MCAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNTAubWluTWFya2V0KSA/IF9jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAibXktNSBweS01IgogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTUiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIm1hcmdpbi10b3AiOiAiMjVweCIKICAgIH0sCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAid2hpdGUiCiAgICB9CiAgfSwgW192bS5fdigiLiIpXSldKV0sIDEpIDogX3ZtLl9lKCksIF92bS5yZXR1cm5TZWFyY2gubWFya2V0MSAmJiBfdm0ubWFya2V0SWQgPyBfYygnYi1yb3cnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LTMgZC1sZy1ibG9jayBkLW5vbmUiCiAgfSwgW19jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAicHgtbGctMiIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3JlcG9ydGluZy5tYWluLmZvcm0xLm5hbWU1JykpKV0pLCBfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2gxNTEgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTUxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNTEgPSBfdm0kcmV0dXJuU2VhcmNoMTUxLm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNTEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE1MSA9IF92bSRyZXR1cm5TZWFyY2gxNTEubWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTUxICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE1MS5hZGRyZXNzID8gKF92bSRyZXR1cm5TZWFyY2gxNTIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTUyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNTIgPSBfdm0kcmV0dXJuU2VhcmNoMTUyLm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNTIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE1MiA9IF92bSRyZXR1cm5TZWFyY2gxNTIubWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTUyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTUyLmFkZHJlc3MgOiAnJykgKyAiICIpXSldKV0sIDEpIDogX3ZtLl9lKCksIF92bS5yZXR1cm5TZWFyY2gubWFya2V0MSAmJiBfdm0ubWFya2V0SWQgPyBfYygnYi1yb3cnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LTIgZC1sZy1ibG9jayBkLW5vbmUiCiAgfSwgW19jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAicHgtbGctMiBteS1sZy0wIG15LTMiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgWyhfdm0kcmV0dXJuU2VhcmNoMTUzID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1MyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTUzID0gX3ZtJHJldHVyblNlYXJjaDE1My5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTUzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNTMgPSBfdm0kcmV0dXJuU2VhcmNoMTUzLm1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1MyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNTMubGFuZyB8fCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxpbmsgPyBfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNHB4IiwKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiOHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgnY29sdW1uLmxvY2F0aW9uMScpKSldKSA6IF92bS5fZSgpLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LXN0YXJ0IGFsaWduLWl0ZW1zLWNlbnRlciIKICB9LCBbKF92bSRyZXR1cm5TZWFyY2gxNTQgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTU0ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNTQgPSBfdm0kcmV0dXJuU2VhcmNoMTU0Lm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNTQgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE1NCA9IF92bSRyZXR1cm5TZWFyY2gxNTQubWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTU0ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE1NC5sYW5nIHx8IChfdm0kcmV0dXJuU2VhcmNoMTU1ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1NSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTU1ID0gX3ZtJHJldHVyblNlYXJjaDE1NS5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTU1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNTUgPSBfdm0kcmV0dXJuU2VhcmNoMTU1Lm1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1NSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNTUubGluayA/IF9jKCdkaXYnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAid2lkdGgiOiAiNzAlIgogICAgfQogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiLAogICAgICAiZm9udC1zaXplIjogIjEzcHgiLAogICAgICAiYm9yZGVyIjogIjJweCBzb2xpZCAjMmI2NzViIiwKICAgICAgInBhZGRpbmciOiAiNXB4IiwKICAgICAgImJvcmRlci1yYWRpdXMiOiAiNXB4IgogICAgfQogIH0sIFtfYygnc3BhbicsIFtfdm0uX3YoIiAiICsgX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMTU2ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1NiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTU2ID0gX3ZtJHJldHVyblNlYXJjaDE1Ni5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTU2ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNTYgPSBfdm0kcmV0dXJuU2VhcmNoMTU2Lm1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1NiAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNTYubGFuZyA/ICgoX3ZtJHJldHVyblNlYXJjaDE1NyA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNTcgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE1NyA9IF92bSRyZXR1cm5TZWFyY2gxNTcubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE1NyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTU3ID0gX3ZtJHJldHVyblNlYXJjaDE1Ny5tYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNTcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxNTcubGFuZykgKyAnICwgJyArICgoX3ZtJHJldHVyblNlYXJjaDE1OCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNTggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE1OCA9IF92bSRyZXR1cm5TZWFyY2gxNTgubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE1OCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTU4ID0gX3ZtJHJldHVyblNlYXJjaDE1OC5tYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNTggPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxNTgubGF0KSA6IChfdm0kcmV0dXJuU2VhcmNoMTU5ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1OSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTU5ID0gX3ZtJHJldHVyblNlYXJjaDE1OS5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTU5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNTkgPSBfdm0kcmV0dXJuU2VhcmNoMTU5Lm1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1OSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNTkubGluayA/ICgoX3ZtJHJldHVyblNlYXJjaDE2MCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNjAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE2MCA9IF92bSRyZXR1cm5TZWFyY2gxNjAubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE2MCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTYwID0gX3ZtJHJldHVyblNlYXJjaDE2MC5tYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNjAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxNjAubGluay5zbGljZSgwLCAzNSkpICsgJy4uLicgOiAnJykgKyAiICIpXSldKV0pIDogX3ZtLl9lKCksIF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0IHx8IF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGluayA/IF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LTIiCiAgfSwgW192bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0ID8gX2MoJ2EnLCB7CiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzP3E9Ii5jb25jYXQoX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYXQsICIsIikuY29uY2F0KF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGFuZywgIiZsbD0iKS5jb25jYXQoX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYXQsICIsIikuY29uY2F0KF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGFuZywgIiZ6PTE2IiksCiAgICAgICJ0YXJnZXQiOiAiX2JsYW5rIgogICAgfQogIH0sIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL2xpbmsucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSkgOiBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxpbmsgPyBfYygnYScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogKF92bSRyZXR1cm5TZWFyY2gxNjEgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTYxID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNjEgPSBfdm0kcmV0dXJuU2VhcmNoMTYxLm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNjEgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE2MSA9IF92bSRyZXR1cm5TZWFyY2gxNjEubWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTYxID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTYxLmxpbmssCiAgICAgICJ0YXJnZXQiOiAiX2JsYW5rIgogICAgfQogIH0sIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL2xpbmsucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSkgOiBfYygnYScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiMiCiAgICB9CiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvbGluay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKV0pIDogX3ZtLl9lKCksIF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0IHx8IF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGluayA/IF9jKCdkaXYnLCBbX2MoJ2xhYmVsJywgewogICAgc3RhdGljQ2xhc3M6ICJkcm9wZG93biIKICB9LCBbX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGQtYnV0dG9uIgogIH0sIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL3NoYXJlLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pLCBfYygnaW5wdXQnLCB7CiAgICBzdGF0aWNDbGFzczogImRkLWlucHV0IiwKICAgIGF0dHJzOiB7CiAgICAgICJ0eXBlIjogImNoZWNrYm94IiwKICAgICAgImlkIjogInRlc3QiCiAgICB9CiAgfSksIF9jKCd1bCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGQtbWVudSIKICB9LCBbX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYXQgPyBfYygnbGknLCB7CiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLnNlbmRUb1RlbGVncmFtTGF0TGFuZyhfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYW5nKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1zZW5kIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMDM5YmU1IgogICAgfQogIH0pLCBfdm0uX3YoIiBUZWxlZ3JhbSAiKV0pIDogX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS5zZW5kVG9UZWxlZ3JhbUxpbmsoX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5saW5rKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1zZW5kIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMDM5YmU1IgogICAgfQogIH0pLCBfdm0uX3YoIiBUZWxlZ3JhbSAiKV0pLCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCA/IF9jKCdsaScsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0uY29weUxhdExhbmdMaW5rKF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0LCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhbmcpOwogICAgICB9CiAgICB9CiAgfSwgW19jKCdpJywgewogICAgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLWNvbnRlbnQtY29weSIKICB9KSwgX3ZtLl92KCIgTnVzeGFsYXNoICIpXSkgOiBfYygnbGknLCB7CiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLmNvcHlMaW5rKF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGluayk7CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ2knLCB7CiAgICBzdGF0aWNDbGFzczogIm1kaSBtZGktY29udGVudC1jb3B5IgogIH0pLCBfdm0uX3YoIiBOdXN4YWxhc2ggIildKV0pXSldKSA6IF92bS5fZSgpXSldKV0sIDEpIDogX3ZtLl9lKCldLCAxKV0pXSldLCAxKV0sIDEpLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LTIgZC1sZy1ibG9jayBkLW5vbmUiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogInRleHQtY2VudGVyIgogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxOHB4IiwKICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAidGV4dC10cmFuc2Zvcm0iOiAidXBwZXJjYXNlIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm90aGVyUHJvZHVjdCcpKSArICIgIildKV0pLCBfYyhfc2V0dXAuQ2Fyb3VzZWwsIHsKICAgIGF0dHJzOiB7CiAgICAgICJwZXItcGFnZSI6IDYsCiAgICAgICJsb29wIjogdHJ1ZSwKICAgICAgInBhZ2luYXRpb25FbmFibGVkIjogZmFsc2UsCiAgICAgICJtb3VzZS1kcmFnIjogdHJ1ZSwKICAgICAgInNjcm9sbFBlclBhZ2UiOiB0cnVlLAogICAgICAibmF2aWdhdGlvbi1lbmFibGVkIjogdHJ1ZQogICAgfQogIH0sIF92bS5fbChfdm0ucHJvZHVjdERhdGEsIGZ1bmN0aW9uICh2bSwgaW5kZXgpIHsKICAgIHJldHVybiBfYyhfc2V0dXAuU2xpZGUsIHsKICAgICAga2V5OiBpbmRleAogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImN1cnNvciI6ICJwb2ludGVyIgogICAgICB9LAogICAgICBvbjogewogICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgcmV0dXJuIF92bS5zaG93RGV0YWlsSW5mbyh2bS5pZCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciBtYi0yIHB0LTQiCiAgICB9LCBbdm0ucGhvdG9QbmcgJiYgdm0ucGhvdG9QbmcudXBsb2FkUGF0aCA/IF9jKCdpbWcnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImJvcmRlciI6ICIxcHggc29saWQgcmdiKDQzLCAxMDMsIDkxLCAwLjMpIiwKICAgICAgICAiYm94LXNoYWRvdyI6ICJyZ2IoMjAxLCAyMTksIDIxNSkgMnB4IDRweCA4cHggMHB4IiwKICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICI4cHgiLAogICAgICAgICJwYWRkaW5nIjogIjVweCIKICAgICAgfSwKICAgICAgYXR0cnM6IHsKICAgICAgICAic3JjIjogIiIuY29uY2F0KF92bS5yb3V0ZU5hbWUsICIvIikuY29uY2F0KHZtLnBob3RvUG5nLnVwbG9hZFBhdGgpLAogICAgICAgICJ3aWR0aCI6ICIyNzAiLAogICAgICAgICJoZWlnaHQiOiAiMTYwIiwKICAgICAgICAiYWx0IjogIiIKICAgICAgfQogICAgfSkgOiBfYygnaW1nJywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJib3JkZXIiOiAiM3B4IHNvbGlkICMyYjY3NWIiLAogICAgICAgICJib3JkZXItcmFkaXVzIjogIjhweCIsCiAgICAgICAgInBhZGRpbmciOiAiMTBweCAyMHB4IgogICAgICB9LAogICAgICBhdHRyczogewogICAgICAgICJ3aWR0aCI6ICIyNzAiLAogICAgICAgICJoZWlnaHQiOiAiMTYwIiwKICAgICAgICAic3JjIjogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2RlZmF1bHQuc3ZnIiksCiAgICAgICAgImFsdCI6ICIiCiAgICAgIH0KICAgIH0pXSksIF9jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIiCiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5nZXROYW1lKHsKICAgICAgbmFtZUx0OiB2bSA9PT0gbnVsbCB8fCB2bSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdm0ubmFtZUx0LAogICAgICBuYW1lVXo6IHZtID09PSBudWxsIHx8IHZtID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2bS5uYW1lVXosCiAgICAgIG5hbWVSdTogdm0gPT09IG51bGwgfHwgdm0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZtLm5hbWVSdQogICAgfSkpICsgIiAiKV0pXSldKV0pOwogIH0pLCAxKV0sIDEpLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LTIgZC1sZy1ub25lIGQtYmxvY2siLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogInRleHQtY2VudGVyIgogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxOHB4IiwKICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAidGV4dC10cmFuc2Zvcm0iOiAidXBwZXJjYXNlIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm90aGVyUHJvZHVjdCcpKSArICIgIildKV0pLCBfYyhfc2V0dXAuQ2Fyb3VzZWwsIHsKICAgIGF0dHJzOiB7CiAgICAgICJwZXItcGFnZSI6IDEsCiAgICAgICJsb29wIjogdHJ1ZSwKICAgICAgInBhZ2luYXRpb25FbmFibGVkIjogZmFsc2UsCiAgICAgICJtb3VzZS1kcmFnIjogdHJ1ZSwKICAgICAgInNjcm9sbFBlclBhZ2UiOiB0cnVlLAogICAgICAibmF2aWdhdGlvbi1lbmFibGVkIjogdHJ1ZQogICAgfQogIH0sIF92bS5fbChfdm0ucHJvZHVjdERhdGEsIGZ1bmN0aW9uICh2bSwgaW5kZXgpIHsKICAgIHJldHVybiBfYyhfc2V0dXAuU2xpZGUsIHsKICAgICAga2V5OiBpbmRleAogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImN1cnNvciI6ICJwb2ludGVyIgogICAgICB9LAogICAgICBvbjogewogICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgcmV0dXJuIF92bS5zaG93RGV0YWlsSW5mbyh2bS5pZCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciBtYi0yIHB0LTQiCiAgICB9LCBbdm0ucGhvdG9QbmcgJiYgdm0ucGhvdG9QbmcudXBsb2FkUGF0aCA/IF9jKCdpbWcnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImJvcmRlciI6ICIxcHggc29saWQgcmdiKDQzLCAxMDMsIDkxLCAwLjMpIiwKICAgICAgICAiYm94LXNoYWRvdyI6ICJyZ2IoMjAxLCAyMTksIDIxNSkgMnB4IDRweCA4cHggMHB4IiwKICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICI4cHgiLAogICAgICAgICJwYWRkaW5nIjogIjVweCIKICAgICAgfSwKICAgICAgYXR0cnM6IHsKICAgICAgICAic3JjIjogIiIuY29uY2F0KF92bS5yb3V0ZU5hbWUsICIvIikuY29uY2F0KHZtLnBob3RvUG5nLnVwbG9hZFBhdGgpLAogICAgICAgICJ3aWR0aCI6ICIyNzAiLAogICAgICAgICJoZWlnaHQiOiAiMTYwIiwKICAgICAgICAiYWx0IjogIiIKICAgICAgfQogICAgfSkgOiBfYygnaW1nJywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJib3JkZXIiOiAiM3B4IHNvbGlkICMyYjY3NWIiLAogICAgICAgICJib3JkZXItcmFkaXVzIjogIjhweCIsCiAgICAgICAgInBhZGRpbmciOiAiMTBweCAyMHB4IgogICAgICB9LAogICAgICBhdHRyczogewogICAgICAgICJ3aWR0aCI6ICIxNjUiLAogICAgICAgICJoZWlnaHQiOiAiMTM1IiwKICAgICAgICAic3JjIjogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2RlZmF1bHQuc3ZnIiksCiAgICAgICAgImFsdCI6ICIiCiAgICAgIH0KICAgIH0pXSksIF9jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIiCiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5nZXROYW1lKHsKICAgICAgbmFtZUx0OiB2bSA9PT0gbnVsbCB8fCB2bSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdm0ubmFtZUx0LAogICAgICBuYW1lVXo6IHZtID09PSBudWxsIHx8IHZtID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2bS5uYW1lVXosCiAgICAgIG5hbWVSdTogdm0gPT09IG51bGwgfHwgdm0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZtLm5hbWVSdQogICAgfSkpICsgIiAiKV0pXSldKV0pOwogIH0pLCAxKV0sIDEpLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LWxnLTIgbXQtMyBtbC0zIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdiLWJ0bicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJiYWNrZ3JvdW5kLWNvbG9yIjogIiNmMWI0NGMiLAogICAgICAiYm9yZGVyIjogIm5vbmUiLAogICAgICAicGFkZGluZyI6ICI1cHggMjBweCIsCiAgICAgICJjb2xvciI6ICJ3aGl0ZSIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLmdvQmFjaygpOwogICAgICB9CiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdhY3Rpb25zLmJhY2snKSkpXSldLCAxKV0pXSwgMSkgOiBfdm0uX2UoKV0sIDEpXSwgMSk7Cn07CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXTsKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfTs="},null]}