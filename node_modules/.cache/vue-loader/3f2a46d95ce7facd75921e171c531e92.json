{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\report\\templates\\create-template.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\report\\templates\\create-template.vue","mtime":1674799497851},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1667355361315},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5yb3RhdGVfdGV4dCB7DQogIGhlaWdodDogMTAwJTsNCiAgd29yZC1icmVhazogbm9ybWFsOw0KICB3cml0aW5nLW1vZGU6IHZlcnRpY2FsLXJsOw0KICAtbXMtd3JpdGluZy1tb2RlOiB2ZXJ0aWNhbC1scjsNCiAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgtMTgwZGVnKTsNCiAgLW1vei10cmFuc2Zvcm06IHJvdGF0ZSgtMTgwZGVnKTsNCiAgLW8tdHJhbnNmb3JtOiByb3RhdGUoLTE4MGRlZyk7DQogIHRyYW5zZm9ybTogcm90YXRlKC0xODBkZWcpOw0KICBwYWRkaW5nLWJvdHRvbTogMjBweCAhaW1wb3J0YW50Ow0KICBwYWRkaW5nLXRvcDogMjBweCAhaW1wb3J0YW50Ow0KfQ0K"},{"version":3,"sources":["create-template.vue"],"names":[],"mappingsstBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"create-template.vue","sourceRoot":"src/modules/report/templates","sourcesContent":["<script>\r\n// import Layout from \"@/router/views/dashboards/default\";\r\n// import PageHeader from \"@/components/page-header\";\r\n\r\n/**\r\n * Products-order component\r\n */\r\n\r\nimport TableColumns from \"../columns/components/for templates/table\";\r\nimport TableRows from \"../rows/components/table\";\r\nimport TableTemplate from \"./table/table\";\r\nimport Service from \"../reportService\";\r\n// import { getName } from \"@/helper\";\r\nimport Create from \"./components/addUpdate\";\r\n\r\nexport default {\r\n  components: {\r\n    // Layout,\r\n    // PageHeader,\r\n    TableColumns,\r\n    TableRows,\r\n    TableTemplate,\r\n    Create,\r\n  },\r\n  watch: {\r\n    isSidebarColumns: {\r\n      handler(v) {\r\n        if (v) {\r\n          this.getListColumns();\r\n        }\r\n      },\r\n    },\r\n\r\n    isSidebarRows: {\r\n      handler(v) {\r\n        if (v) {\r\n          this.getListRows();\r\n        }\r\n      },\r\n    },\r\n\r\n    searchValueColumns: {\r\n      handler() {\r\n        this.getListColumns();\r\n      },\r\n    },\r\n\r\n    searchValueRows: {\r\n      handler() {\r\n        this.getListRows();\r\n      },\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      title: this.$t(\"createReportTemplate\"),\r\n      items: [\r\n        {\r\n          text: this.$t(\"Hisobotlar\"),\r\n          href: \"/\",\r\n        },\r\n        {\r\n          text: this.$t(\"reportTemplates\"),\r\n          href: \"/report/templates\",\r\n        },\r\n        {\r\n          text: this.$t(\"createReportTemplate\"),\r\n          active: true,\r\n        },\r\n      ],\r\n      isGenerated: false,\r\n      // getName: getName,\r\n      isSidebarColumns: false,\r\n      limitColumns: 20,\r\n      pageColumns: 1,\r\n      totalColumns: 0,\r\n      listColumns: [],\r\n      loadingColumns: false,\r\n      searchValueColumns: \"\",\r\n      secondSelectedColumns: [],\r\n      selectedColumns: [],\r\n      isSidebarRows: false,\r\n      limitRows: 20,\r\n      pageRows: 1,\r\n      totalRows: 0,\r\n      listRows: [],\r\n      loadingRows: false,\r\n      searchValueRows: \"\",\r\n      firstColumns: [],\r\n      secondColumns: [],\r\n      selectedRows: [],\r\n      oldSelectedRows: [],\r\n      thirdColumns: [],\r\n      thirdTrIdData: [],\r\n      loader: false,\r\n      saveModal: false,\r\n      mode: \"create\",\r\n    };\r\n  },\r\n  computed: {\r\n    paramsRows() {\r\n      return {\r\n        params: {\r\n          limit: this.limitRows,\r\n          page: this.pageRows - 1,\r\n        },\r\n        search: this.searchValueRows,\r\n      };\r\n    },\r\n    paramsColumns() {\r\n      return {\r\n        params: {\r\n          limit: this.limitColumns,\r\n          page: this.pageColumns - 1,\r\n        },\r\n        search: this.searchValueColumns,\r\n      };\r\n    },\r\n  },\r\n  methods: {\r\n    isGeneratedChanged($event) {\r\n      if ($event) {\r\n        this.oldSelectedRows = JSON.parse(JSON.stringify(this.selectedRows))\r\n        this.selectedRows = []\r\n      } else {\r\n        this.selectedRows = JSON.parse(JSON.stringify(this.oldSelectedRows))\r\n      }\r\n      console.log(this.selectedRows)\r\n    },\r\n    changePageRow() {\r\n      this.getListRows();\r\n    },\r\n    changePageColumn() {\r\n      this.getListColumns();\r\n    },\r\n    saveTableModal() {\r\n      this.saveModal = true;\r\n    },\r\n    checkAndReturnIsGathered(cols) {\r\n      for (let i = 0; i < cols.length; i++) {\r\n        const element = cols[i];\r\n        if (element.children && element.children.length) {\r\n          this.checkAndReturnIsGathered(element.children)\r\n        } else {\r\n          if (element.typeCode != 'BIGDECIMAL') {\r\n            return false\r\n          }\r\n        }\r\n      }\r\n      return true\r\n    },\r\n    //create\r\n    create() {\r\n      this.$refs.addRef.form.isGathered = this.checkAndReturnIsGathered(this.selectedColumns)\r\n      this.$refs.addRef.form.isGenerated = this.isGenerated\r\n\r\n      let columnObjects = this.selectedColumns.map((el, index) => {\r\n        return {\r\n          id: el.id,\r\n          index: index,\r\n          isVertical: el.isVertical === 1 ? 1 : 0\r\n        };\r\n      });\r\n\r\n      let rowObjects = this.selectedRows.map((el, index) => {\r\n        return {\r\n          id: el.id,\r\n          index: index,\r\n        };\r\n      });\r\n      this.loader = true;\r\n      if (!this.$refs.addRef.form.generateType || !this.isGenerated) {\r\n        this.$refs.addRef.form.generateType = 'OTHER'\r\n      }\r\n      Service.saveTable(\r\n          this.$refs.addRef.form,\r\n          this.selectedColumns,\r\n          this.selectedRows,\r\n          columnObjects,\r\n          rowObjects\r\n      )\r\n          .then((rs) => {\r\n            if (rs.data) {\r\n              this.successSaved();\r\n              this.$router.push(\"/report/templates\");\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          })\r\n          .finally(() => {\r\n            this.loader = false;\r\n          });\r\n    },\r\n    update() {\r\n      this.loader = true;\r\n      if (!this.$refs.addRef.form.generateType || !this.isGenerated) {\r\n        this.$refs.addRef.form.generateType = 'OTHER'\r\n      }\r\n      Service.updateRow(this.$refs.addRef.form)\r\n          .then((rs) => {\r\n            if (rs.data) {\r\n              this.successCreateAndEdit();\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          })\r\n          .finally(() => {\r\n            this.loader = false;\r\n          });\r\n    },\r\n\r\n    okModal(b) {\r\n      b.preventDefault();\r\n      if (!this.$refs.addRef.checkValidity()) {\r\n        if (this.mode === \"create\") {\r\n          this.create();\r\n        } else {\r\n          this.update();\r\n        }\r\n      } else {\r\n        this.enterInfo();\r\n      }\r\n    },\r\n\r\n    setColumns(v) {\r\n      this.selectedColumns = []\r\n      this.selectedColumns = v;\r\n      this.firstColumns = [];\r\n      this.secondColumns = [];\r\n      this.thirdColumns = [];\r\n      v.forEach((el1) => {\r\n        let isVerticalOfEl1 = el1.isVertical\r\n        this.$set(el1, 'isVertical', isVerticalOfEl1)\r\n        this.firstColumns.push(el1);\r\n        el1.children.forEach((el2) => {\r\n          el2.isVertical = el1.isVertical\r\n          this.secondColumns.push(el2);\r\n          el2.children.forEach((el3) => {\r\n            el3.isVertical = el1.isVertical\r\n            this.thirdColumns.push({...el3, fId: el1.id});\r\n          });\r\n        });\r\n      });\r\n      setTimeout(() => {\r\n        this.thirdTrIdData = Array.prototype.slice.call(\r\n            document.getElementsByClassName(\"thirdTrId\")\r\n        );\r\n      }, 300);\r\n    },\r\n    setRow(v) {\r\n      this.selectedRows = v;\r\n      // this.$refs.refTable.setRows(v)\r\n    },\r\n    getListRows() {\r\n      this.loadingRows = true;\r\n      Service.getListRow(this.paramsRows)\r\n          .then((rs) => {\r\n            this.listRows = rs.data.list;\r\n            this.totalRows = rs.data.total;\r\n          })\r\n          .catch((e) => {\r\n            // this.catchErr(e);\r\n          })\r\n          .finally(() => {\r\n            this.loadingRows = false;\r\n          });\r\n    },\r\n    getListColumns() {\r\n      this.loadingColumns = true;\r\n      Service.getListColumnWithChildren(this.paramsColumns)\r\n          .then((rs) => {\r\n            this.listColumns = rs.data.list;\r\n            this.totalColumns = rs.data.total;\r\n          })\r\n          .catch((e) => {\r\n            // this.catchErr(e);\r\n          })\r\n          .finally(() => {\r\n            this.loadingColumns = false;\r\n          });\r\n    },\r\n    addRows() {\r\n      this.isSidebarRows = true;\r\n      setTimeout(() => {\r\n        this.$refs.tableRefRow.reset(this.selectedRows);\r\n      }, 300);\r\n    },\r\n    addColumns() {\r\n      this.isSidebarColumns = true;\r\n      setTimeout(() => {\r\n        this.$refs.tableRefColumn.reset(this.selectedColumns);\r\n      }, 300);\r\n    },\r\n\r\n    rowspanFirst(el) {\r\n      return el.children.length > 0\r\n          ? 1\r\n          : el.children.length > 0 && this.thirdColumns.length > 0\r\n              ? 3\r\n              : 3;\r\n    },\r\n    colspanFirst(el) {\r\n      let found = this.thirdColumns.filter((i) => i.fId === el.id);\r\n      let totalNotChild = el.children.filter((d) => d.children.length == 0);\r\n      return el.children.length > 0 && found.length == 0\r\n          ? el.children.length\r\n          : el.children.length > 0 && found.length > 0\r\n              ? totalNotChild.length + found.length\r\n              : 1;\r\n    },\r\n\r\n    rowspanSecond(el) {\r\n      return el.children.length == 0 && this.thirdColumns.length == 0\r\n          ? 1\r\n          : el.children.length == 0 && this.thirdColumns.length > 0\r\n              ? 2\r\n              : 1;\r\n    },\r\n    colspanSecond(el) {\r\n      return el.children.length > 0 ? el.children.length : 1;\r\n    },\r\n    rowspanFirstClass(el) {\r\n      return el.children.length > 0\r\n          ? \"\"\r\n          : el.children.length > 0 && this.thirdColumns.length > 0\r\n              ? \"thirdTrId\"\r\n              : \"thirdTrId\";\r\n    },\r\n    rowspanSecondClass(el) {\r\n      return el.children.length == 0 && this.thirdColumns.length == 0\r\n          ? \"thirdTrId\"\r\n          : el.children.length == 0 && this.thirdColumns.length > 0\r\n              ? \"thirdTrId\"\r\n              : \"\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div>\r\n      <!-- saveModal -->\r\n      <b-modal\r\n          :cancel-variant=\"'outline-danger'\"\r\n          :ok-variant=\"'success'\"\r\n          :no-close-on-backdrop=\"true\"\r\n          :ok-title=\"$t('actions.save')\"\r\n          :cancel-title=\"$t('actions.cancel')\"\r\n          @close=\"saveModal = false\"\r\n          @cancel=\"saveModal = false\"\r\n          @ok=\"okModal\"\r\n          size=\"md\"\r\n          v-model=\"saveModal\"\r\n          :title=\"$t('actions.add')\"\r\n      >\r\n        <Create :isGenerated='isGenerated' ref=\"addRef\"/>\r\n\r\n        <template v-slot:modal-footer>\r\n          <b-button variant=\"secondary\" @click=\"saveModal = false\" >\r\n            {{$t(\"actions.close\")}}\r\n          </b-button>\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"loader\"\r\n              rounded=\"sm\"\r\n          >\r\n            <b-button variant=\"success\" @click=\"okModal\" >\r\n              {{$t(\"actions.save\")}}\r\n            </b-button>\r\n          </b-overlay>\r\n        </template>\r\n      </b-modal>\r\n      <!-- columns list for select -->\r\n      <b-modal\r\n          size=\"xl\"\r\n          footer-bg-variant=\"light\"\r\n          header-bg-variant=\"light\"\r\n          v-model=\"isSidebarColumns\"\r\n          scrollable\r\n      >\r\n        <template v-slot:modal-header>\r\n          <div\r\n              class=\"d-flex align-items-center justify-content-center\"\r\n              style=\"width: 100%\"\r\n          >\r\n            <b-input-group style=\"width: 300px\">\r\n              <b-form-input\r\n                  size=\"md\"\r\n                  v-model=\"searchValueColumns\"\r\n                  :placeholder=\"`${$t('reportColumn')}`\"\r\n                  type=\"search\"\r\n              ></b-form-input>\r\n              <b-input-group-append>\r\n                <b-button size variant=\"outline-primary\" >\r\n                  <i class=\"fa fa-search\"></i>\r\n                </b-button>\r\n              </b-input-group-append>\r\n            </b-input-group>\r\n          </div>\r\n        </template>\r\n        <template v-slot:modal-footer>\r\n          <b-button variant=\"secondary\" @click=\"isSidebarColumns = false\" >\r\n            {{$t(\"actions.close\")}}\r\n          </b-button>\r\n        </template>\r\n        <div>\r\n          <TableColumns\r\n              @changePage=\"changePageColumn\"\r\n              @setColumns=\"setColumns\"\r\n              :page=\"pageColumns\"\r\n              :limit=\"limitColumns\"\r\n              ref=\"tableRefColumn\"\r\n              :list=\"listColumns\"\r\n              :loading=\"loadingColumns\"\r\n              :sidebar=\"true\"\r\n          >\r\n            <template v-slot:thead>\r\n              <tr>\r\n                <th class=\"text-center\" style=\"width: 5% !important\" >\r\n                  №\r\n                </th>\r\n                <th style=\"width: 80% !important\">\r\n                  <div class=\"pl-2\">\r\n                    {{ $t(\"submodules.templates_row.nm\") }}\r\n                  </div>\r\n                </th>\r\n                <th style=\"width: 30% \" class=\"text-center\">{{ $t(\"column.comment\") }}</th>\r\n                <th class=\"text-center\" style=\"width: 5% !important\" >\r\n                  {{ $t('column.status') }}\r\n                </th>\r\n              </tr>\r\n            </template>\r\n            <template v-slot:pagination>\r\n              <div class=\"row\" v-if=\"listColumns.length > 0\" >\r\n                <div class=\"col-lg-12\">\r\n                  <b-pagination\r\n                      size=\"sm\"\r\n                      class=\"m-0\"\r\n                      :total-rows=\"totalColumns\"\r\n                      :per-page=\"limitColumns\"\r\n                      v-model=\"pageColumns\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </TableColumns>\r\n        </div>\r\n      </b-modal>\r\n      <!-- end -->\r\n\r\n      <!-- rows list for select -->\r\n      <b-modal\r\n          size=\"xl\"\r\n          footer-bg-variant=\"light\"\r\n          header-bg-variant=\"light\"\r\n          scrollable\r\n          v-model=\"isSidebarRows\"\r\n      >\r\n        <template v-slot:modal-header>\r\n          <div\r\n              class=\"d-flex align-items-center justify-content-center\"\r\n              style=\"width: 100%\"\r\n          >\r\n            <b-input-group style=\"max-width: 300px\">\r\n              <b-form-input\r\n                  size=\"md\"\r\n                  v-model=\"searchValueRows\"\r\n                  :placeholder=\"`${$t('reportRows')}`\"\r\n                  type=\"search\"\r\n              ></b-form-input>\r\n              <b-input-group-append>\r\n                <b-button\r\n                    size\r\n                    variant=\"outline-primary\"\r\n                >\r\n                  <i class=\"fa fa-search\"></i>\r\n                </b-button>\r\n              </b-input-group-append>\r\n            </b-input-group>\r\n          </div>\r\n        </template>\r\n        <template v-slot:modal-footer>\r\n          <b-button\r\n              variant=\"secondary\"\r\n              @click=\"isSidebarRows = false\"\r\n          >{{\r\n              $t(\"actions.close\")\r\n            }}\r\n          </b-button>\r\n        </template>\r\n        <div class=\"p-2 table-reponsive\">\r\n          <TableRows\r\n              :sidebar=\"true\"\r\n              @changePage=\"changePageRow\"\r\n              :page=\"pageRows\"\r\n              :limit=\"limitRows\"\r\n              ref=\"tableRefRow\"\r\n              :list=\"listRows\"\r\n              :loading=\"loadingRows\"\r\n              @setRow=\"setRow\"\r\n          >\r\n            <template v-slot:thead>\r\n              <tr>\r\n                <th\r\n                    class=\"text-center\"\r\n                    style=\"width: 5% !important\"\r\n                >№\r\n                </th>\r\n                <th>{{ $t(\"submodules.templates_row.nm\") }}</th>\r\n              </tr>\r\n            </template>\r\n            <template v-slot:pagination>\r\n              <div\r\n                  class=\"row\"\r\n                  v-if=\"listRows.length > 0\"\r\n              >\r\n                <div class=\"col-lg-12\">\r\n                  <b-pagination\r\n                      size=\"sm\"\r\n                      class=\"m-0\"\r\n                      :total-rows=\"totalRows\"\r\n                      :per-page=\"limitRows\"\r\n                      v-model=\"pageRows\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </template>\r\n          </TableRows>\r\n        </div>\r\n      </b-modal>\r\n      <!-- end -->\r\n\r\n      <!-- <PageHeader :title=\"title\" :items=\"items\" /> -->\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-body\">\r\n              <div class=\"row\">\r\n                <div class=\"col-sm-4\">\r\n                  <div class=\"mr-2 d-inline-block\">\r\n                    <Back :to=\"`/report/templates`\"/>\r\n                  </div>\r\n                </div>\r\n                <!-- <div class=\"col-sm-4\">\r\n\r\n                </div> -->\r\n                <div class=\"col-sm-8\">\r\n                  <div class=\"d-flex align-items-center justify-content-end\">\r\n                    <div class=\"mr-2 d-flex w-100 h-100 align-items-center justify-content-end\"\r\n                         v-if=\"$can('create', 'auto-generated-doctable')\">\r\n                      <label\r\n                          class=\"mb-0 mr-2 mt-2\"\r\n                          for=\"isGenerated\"\r\n                      >{{ `${$t(\"auto_generate_info\")}` }}</label>\r\n                      <b-form-checkbox\r\n                          class=\"\"\r\n                          switch\r\n                          @change=\"isGeneratedChanged\"\r\n                          id=\"isGenerated\"\r\n                          size=\"lg\"\r\n                          v-model=\"isGenerated\"\r\n                          :value=\"true\"\r\n                          :unchecked-value=\"false\"\r\n                      ></b-form-checkbox>\r\n                    </div>\r\n                    <b-button-group style=\"width: 60%;\">\r\n                      <b-button\r\n                          @click.prevent=\"addColumns\"\r\n                          type=\"button\"\r\n                          class=\"d-flex align-items-center\"\r\n                          variant=\"outline-primary\"\r\n                      >\r\n                        <i class=\"bx bx-columns mr-1\"></i>\r\n                        {{ $t(\"selectColumns\") }}\r\n                      </b-button>\r\n                      <b-button\r\n                          @click.prevent=\"addRows\"\r\n                          :disabled=\"isGenerated\"\r\n                          type=\"button\"\r\n                          class=\"d-flex align-items-center\"\r\n                          variant=\"outline-primary\"\r\n                      >\r\n                        <i class=\"bx bx-table mr-1\"></i>\r\n                        {{ $t(\"selectRows\") }}\r\n                      </b-button>\r\n\r\n                      <b-button\r\n                          :disabled=\"selectedColumns.length == 0\"\r\n                          @click.prevent=\"saveTableModal\"\r\n                          type=\"button\"\r\n                          class=\"d-flex align-items-center\"\r\n                          variant=\"success\"\r\n                      >\r\n                        <i class=\"bx bx-save mr-1\"></i>\r\n                        {{ $t(\"actions.save\") }}\r\n                      </b-button>\r\n                    </b-button-group>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n          <div\r\n              class=\"bg-white p-3\"\r\n              style=\"min-height: 75vh\"\r\n          >\r\n\r\n            <TableTemplate\r\n                :listRows=\"selectedRows\"\r\n                ref=\"refTable\"\r\n                :thirdColumns=\"thirdTrIdData\"\r\n            >\r\n              <template v-slot:thead>\r\n                <tr class=\"tr-text-center\">\r\n                  <th\r\n                      style=\"width: 3%\"\r\n                      :class=\"rowspanFirstClass(el, index)\"\r\n                      :rowspan=\"rowspanFirst(el)\"\r\n                      :colspan=\"colspanFirst(el)\"\r\n                      v-for=\"(el, index) in firstColumns\"\r\n                      :key=\"index + 'first'\"\r\n                  >\r\n                    <div style=\"\r\n                        max-height: 200px;\r\n                          display: inline-block;\r\n                        \">\r\n                      <div\r\n                          v-b-tooltip=\"{ variant: 'success' }\"\r\n                          :title=\"\r\n                          getName({ nameLt: el.nameLt, nameRu: el.nameRu, nameUz: el.nameUz })\r\n                        \"\r\n                          :class=\"  (el.isVertical == 1 )   ? 'rotate_text'  : ''\r\n                        \"\r\n                      >\r\n                        {{ getName({nameLt: el.nameLt, nameRu: el.nameRu, nameUz: el.nameUz}) }}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n                <tr class=\"tr-text-center\">\r\n                  <th\r\n                      style=\"width: 3%\"\r\n                      :class=\"rowspanSecondClass(el)\"\r\n                      :rowspan=\"rowspanSecond(el)\"\r\n                      :colspan=\"colspanSecond(el)\"\r\n                      v-for=\"(el, index) in secondColumns\"\r\n                      :key=\"index + 'second'\"\r\n                  >\r\n                    <div style=\"\r\n                        position: relative;\r\n                        display: inline-block;\r\n                        cursor: pointer;\r\n                      \">\r\n                      <div\r\n                          v-b-tooltip=\"{ variant: 'success' }\"\r\n                          :title=\"\r\n                          getName({ nameLt: el.nameLt, nameRu: el.nameRu, nameUz: el.nameUz })\r\n                        \"\r\n                          :class=\"(el.isVertical == 1 )  ? 'rotate_text' : ''\"\r\n                          style=\"max-height: 150px\"\r\n                      >\r\n                        {{ getName({nameLt: el.nameLt, nameRu: el.nameRu, nameUz: el.nameUz}) }}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n\r\n                <tr class=\"tr-text-center\">\r\n                  <th\r\n                      style=\"width: 3%\"\r\n                      class=\"thirdTrId\"\r\n                      :colspan=\"el.children.length > 0 ? el.children.length : 1\"\r\n                      v-for=\"(el, index) in thirdColumns\"\r\n                      :key=\"index + 'third'\"\r\n                  >\r\n                    <div\r\n                        style=\"\r\n                            max-height: 200px;\r\n                            position: relative;\r\n                            display: inline-block;\r\n                            cursor: pointer;\r\n                          \"\r\n                    >\r\n\r\n                      <div\r\n                          v-b-tooltip=\"{ variant: 'success' }\"\r\n                          :title=\"\r\n                          getName({ nameLt: el.nameLt, nameRu: el.nameRu, nameUz: el.nameUz })\r\n                        \"\r\n                          :class=\"(el.isVertical == 1 )  ? 'rotate_text' : ''\"\r\n                      >\r\n                        {{ getName({nameLt: el.nameLt, nameRu: el.nameRu, nameUz: el.nameUz}) }}\r\n                      </div>\r\n                    </div>\r\n                  </th>\r\n                </tr>\r\n                <tr class=\"tr-text-center\">\r\n                  <td\r\n                      v-for=\"(item, index) of thirdTrIdData\"\r\n                      :key=\"index + 'I-1'\"\r\n                  >\r\n                    <strong v-if=\"selectedRows.length > 1\">{{\r\n                        selectedRows.length > 1 && index == 0 ? \"\" : index\r\n                      }}</strong>\r\n\r\n                    <strong v-else>{{ index + 1 }}</strong>\r\n                  </td>\r\n                </tr>\r\n              </template>\r\n            </TableTemplate>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n.rotate_text {\r\n  height: 100%;\r\n  word-break: normal;\r\n  writing-mode: vertical-rl;\r\n  -ms-writing-mode: vertical-lr;\r\n  -webkit-transform: rotate(-180deg);\r\n  -moz-transform: rotate(-180deg);\r\n  -o-transform: rotate(-180deg);\r\n  transform: rotate(-180deg);\r\n  padding-bottom: 20px !important;\r\n  padding-top: 20px !important;\r\n}\r\n</style>\r\n\r\n"]}]}