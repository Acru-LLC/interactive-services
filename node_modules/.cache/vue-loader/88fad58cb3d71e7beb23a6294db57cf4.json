{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\management\\modules\\users_and_employees\\Index.vue?vue&type=style&index=0&id=642cb996&scoped=true&lang=scss&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\management\\modules\\users_and_employees\\Index.vue","mtime":1674799497575},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1667355361315},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5ob3ZlcmFibGUgew0KICBmb250LXNpemU6IDE1cHg7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCg0KICAub3JnLXN0ci1hY3Rpb25zIHsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIG1pbi13aWR0aDogMjAlOw0KICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQoNCiAgICAuYnRuIHsNCiAgICAgIGxpbmUtaGVpZ2h0OiAxOw0KDQogICAgICAmOmZvY3VzIHsNCiAgICAgICAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50Ow0KICAgICAgICBib3gtc2hhZG93OiBub25lOw0KICAgICAgfQ0KICAgIH0NCg0KICAgIGkgew0KICAgICAgZm9udC1zaXplOiAxLjNyZW07DQogICAgfQ0KICB9DQp9DQoNCi5tYXgtaGVpZ2h0LTQwIHsNCiAgbWF4LWhlaWdodDogNDB2aDsNCn0NCg0KLm1heC1oZWlnaHQtNDAgew0KICBtYXgtaGVpZ2h0OiA0MHZoOw0KfQ0KDQouZGVwLW5hbWUgew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIG1hcmdpbjogMDsNCn0NCg0KOjp2LWRlZXAgLm9yZy1zdHItYWN0aW9ucyB7DQogIHZpc2liaWxpdHk6IGhpZGRlbjsNCn0NCg0KOjp2LWRlZXAgbGkgPiBkaXYgew0KICAmOmhvdmVyIHsNCiAgICAub3JnLXN0ci1hY3Rpb25zIHsNCiAgICAgIHZpc2liaWxpdHk6IHZpc2libGUgIWltcG9ydGFudDsNCiAgICAgIEBtZWRpYSAobWF4LXdpZHRoOiA1NjhweCkgew0KICAgICAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7DQogICAgICB9DQogICAgfQ0KICB9DQp9DQoNCjo6di1kZWVwIGxpIGRpdiBkaXY6Zmlyc3QtY2hpbGQsDQouYWRkLA0KLmRlbGV0ZSwNCi5lZGl0IHsNCiAgZGlzcGxheTogaW5saW5lLWJsb2NrOw0KICBtYXJnaW46IDZweCAwOw0KICBjdXJzb3I6IHBvaW50ZXI7DQp9DQoNCjo6di1kZWVwIGxpIGRpdiB7DQogICY6aG92ZXIgew0KICAgIHAgew0KICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7DQogICAgfQ0KICB9DQp9DQoNCjo6di1kZWVwIGxpIC5hY3RpdmUgew0KICBmb250LXdlaWdodDogYm9sZDsNCn0NCg0KLm1kaSB7DQogIG1hcmdpbi1yaWdodDogMC44ZW07DQp9DQoNCi5idWlsZGluZy1pY29uIHsNCiAgY29sb3I6ICNmMGQ0NWY7DQogIGZvbnQtc2l6ZTogMS41cmVtOw0KICBjdXJzb3I6IHBvaW50ZXI7DQoNCiAgLm1kaS1vZmZpY2UtYnVpbGRpbmctb3V0bGluZSB7DQogICAgZm9udC1zaXplOiAxLjRyZW07DQogIH0NCn0NCg0KLm9yZy1zdHItdGl0bGUgew0KICBmb250LXNpemU6IDEuMnJlbTsNCn0NCg=="},{"version":3,"sources":["Index.vue"],"names":[],"mappingsiBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Index.vue","sourceRoot":"src/modules/management/modules/users_and_employees","sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 text-center\">\r\n      <div class=\"h4 mb-4 d-inline-block\">{{ $t('submodules.users.title') }}</div>\r\n    </div>\r\n    <div class=\"col-xl-4\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"d-flex align-items-center justify-content-between mb-4\">\r\n            <h3 class=\"card-title mb-0 org-str-title\">{{ $t('not_translated.organizational_structure') }}</h3>\r\n          </div>\r\n          <ul v-if=\"departments.length > 0\" style=\"list-style-type: none;\">\r\n            <template v-for=\"dep in departments\">\r\n              <org-str-tree-view\r\n                  @showRefModal=\"showRefModal\"\r\n                  @deleteDep=\"deleteDepartment\"\r\n                  @toggleActiveClass=\"toggleActiveClass\"\r\n                  without-actions\r\n                  class=\"item\"\r\n                  :key=\"dep.id + 'dep'\"\r\n                  :department-for-tree=\"dep\"\r\n              >\r\n              </org-str-tree-view>\r\n            </template>\r\n          </ul>\r\n          <template v-else>\r\n            <h5>Ҳозирча бўлинмалар қўшилмаган</h5>\r\n          </template>\r\n          <!-- TREE VIEW -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-xl-8\">\r\n      <div class=\"card fixed-user-employee-list-card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row mb-2\">\r\n            <div class=\"col-sm-4\">\r\n              <h5 class=\"mb-0\">{{ selectedDep }}</h5>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n              <div class=\"text-center\">\r\n                <h4>\r\n                  {{activeTab === 'employees' ? $t('submodules.employees.title') : $t('submodules.users.title')}}\r\n                </h4>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-4\">\r\n              <div class=\"text-sm-end\">\r\n                <b-btn\r\n                    type=\"button\"\r\n                    class=\"btn btn-success btn-rounded mb-2 me-2\"\r\n                    :to=\"activeTab === 'employees' ? {name: 'CreateEmployee'} : {name: 'CreateUser'}\"\r\n                >\r\n                  <i class=\"mdi mdi-plus me-1\"></i> {{ $t('actions.add') }}\r\n                </b-btn>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-12\">\r\n              <b-tabs\r\n                  v-model=\"activeTabIndex\"\r\n                  justified\r\n                  nav-class=\"nav-tabs-custom\"\r\n                  content-class=\"p-3 text-muted\"\r\n              >\r\n                <b-tab\r\n                    style=\"max-height: 50vh; overflow: auto;\"\r\n                    active\r\n                    @click=\"fetchItemsByActiveTab('employees')\"\r\n                >\r\n                  <template v-slot:title>\r\n                    <span class=\"d-inline-block d-sm-none\">\r\n                        <i class=\"fas fa-home\"></i>\r\n                    </span>\r\n                    <span class=\"d-none d-sm-inline-block\">{{ $t('submodules.employees.title') }}</span>\r\n                  </template>\r\n                  <b-table\r\n                      :items=\"employees\"\r\n                      :fields=\"employeeHeaders\"\r\n                      :busy.sync=\"loadingTableItems\"\r\n                      sticky-header=\"sticky-header\"\r\n                      id=\"employees-table\"\r\n                      class=\"custom-b-table max-height-40\"\r\n                      responsive\r\n                      striped\r\n                      bordered\r\n                      small\r\n                      hover\r\n                      show-empty\r\n                  >\r\n                    <template #cell(index)=\"data\">\r\n                      {{ util_paginate(data.index, searchPayloadEmployees.page, searchPayloadEmployees.itemsPerPage) }}\r\n                    </template>\r\n                    <template #cell(fullName)=\"data\">\r\n                      {{ data.item.lastName }} {{ data.item.firstName }}\r\n                      {{ data.item.middleName ? data.item.middleName : '' }}\r\n                    </template>\r\n                    <template #cell(positionName)=\"data\">\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>\r\n                          {{\r\n                            getName({\r\n                              nameRu: data.item.directoryPositionNameRu,\r\n                              nameLt: data.item.directoryPositionNameLt,\r\n                              nameUz: data.item.directoryPositionNameUz,\r\n                            })\r\n                          }}\r\n                        </span>\r\n                      </div>\r\n                    </template>\r\n                    <template #cell(departmentName)=\"data\">\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <span>\r\n                          {{\r\n                            getName({\r\n                              nameRu: data.item.departmentNameRu,\r\n                              nameLt: data.item.departmentNameLt,\r\n                              nameUz: data.item.departmentNameUz,\r\n                            })\r\n                          }}\r\n                        </span>\r\n                      </div>\r\n                    </template>\r\n                    <template #cell(status)=\"data\">\r\n                      <p class=\"mb-0\" style=\"font-size: .95rem;\">\r\n                        <span :class=\"['badge', data.item.statusNameEn === 'ACTIVE' ? 'bg-success' :\r\n                                                data.item.statusNameEn === 'DELETED' ? 'bg-danger' : 'bg-info']\">\r\n                          {{\r\n                            getName({\r\n                              nameRu: data.item.statusNameRu,\r\n                              nameLt: data.item.statusNameLt,\r\n                              nameUz: data.item.statusNameUz,\r\n                            })\r\n                          }}\r\n                        </span>\r\n                      </p>\r\n                    </template>\r\n                    <template #cell(actions)=\"data\">\r\n                      <div class=\"general-table__actions d-flex justify-content-center\">\r\n                        <b-btn\r\n                            variant=\"link\"\r\n                            class=\"text-decoration-none p-0\"\r\n                            style=\"font-size: 1.2rem; margin-right: 1rem;\"\r\n                        >\r\n                          <i\r\n                              @click=\"editItem(data.item.id, 'employees')\"\r\n                              class=\"mdi mdi-circle-edit-outline edit\"\r\n                          ></i>\r\n                        </b-btn>\r\n                        <b-btn\r\n                            variant=\"link\"\r\n                            class=\"text-decoration-none p-0 text-danger\"\r\n                            style=\"font-size: 1.2rem;\"\r\n                        >\r\n                          <i\r\n                              @click=\"deleteItem(data.item.id, 'employees')\"\r\n                              class=\"mdi mdi-trash-can delete\"\r\n                          ></i>\r\n                        </b-btn>\r\n                      </div>\r\n                    </template>\r\n                    <template #empty=\"\">\r\n                      <h4 class=\"text-center\">{{ activeDep.id ? $t('not_found') : $t('choose_department') }}</h4>\r\n                    </template>\r\n                    <template #table-busy>\r\n                      <div class=\"text-center my-2\">\r\n                        <b-spinner\r\n                            variant=\"primary\"\r\n                            class=\"align-middle\"\r\n                        ></b-spinner>\r\n                      </div>\r\n                    </template>\r\n                  </b-table>\r\n                  <b-pagination\r\n                      v-model=\"searchPayloadEmployees.page\"\r\n                      :total-rows=\"totalEmployees\"\r\n                      :per-page=\"searchPayloadEmployees.itemsPerPage\"\r\n                      aria-controls=\"my-table\"\r\n                      class=\"justify-content-end\"\r\n                  ></b-pagination>\r\n                </b-tab>\r\n                <b-tab @click=\"fetchItemsByActiveTab('users')\" style=\"max-height: 50vh; overflow: auto;\">\r\n                  <template v-slot:title>\r\n                    <span class=\"d-inline-block d-sm-none\">\r\n                        <i class=\"far fa-user\"></i>\r\n                    </span>\r\n                    <span class=\"d-none d-sm-inline-block\">{{ $t('submodules.users.title') }}</span>\r\n                  </template>\r\n                  <b-table\r\n                      :items=\"users\"\r\n                      :fields=\"userHeaders\"\r\n                      :busy.sync=\"loadingTableItems\"\r\n                      id=\"users-table\"\r\n                      class=\"custom-b-table\"\r\n                      responsive\r\n                      striped\r\n                      bordered\r\n                      small\r\n                      hover\r\n                      show-empty\r\n                  >\r\n                    <template #cell(index)=\"data\">\r\n                      {{ util_paginate(data.index, searchPayloadUsers.page, searchPayloadUsers.itemsPerPage) }}\r\n                    </template>\r\n                    <template #cell(roleNames)=\"data\">\r\n                      <div class=\"d-flex justify-content-between\">\r\n                        <p\r\n                            v-for=\"(role, index) in data.item.roleNames\"\r\n                            :key=\"`${role}-${index}`\"\r\n                            class=\"mb-0\"\r\n                            style=\"flex-basis: 0; flex-grow: 1; font-size: .95rem;\"\r\n                        ><span class=\"badge bg-primary badge-pill\">{{ role }}</span></p>\r\n                      </div>\r\n                    </template>\r\n                    <template #cell(status)=\"data\">\r\n                      <p class=\"mb-0\" style=\"font-size: .95rem;\" >\r\n                        <span :class=\"['badge', data.item.statusUz === 'ACTIVE' ? 'bg-success' :\r\n                                                data.item.statusUz === 'DELETED' ? 'bg-danger' : 'bg-info']\">\r\n                          {{\r\n                            getName({\r\n                              nameRu: data.item.statusRu,\r\n                              nameLt: data.item.statusLt,\r\n                              nameUz: data.item.statusUz,\r\n                            })\r\n                          }}\r\n                        </span>\r\n                      </p>\r\n                    </template>\r\n                    <template #cell(actions)=\"data\">\r\n                      <div\r\n                          v-if=\"data.item.id !== currentUserId\"\r\n                          class=\"general-table__actions d-flex justify-content-center\"\r\n                      >\r\n                        <b-btn\r\n                            v-if=\"data.item.statusUz !== 'DELETED'\"\r\n                            variant=\"link\"\r\n                            class=\"text-decoration-none p-0\"\r\n                            style=\"font-size: 1.2rem; margin-right: 1rem;\"\r\n                        >\r\n                          <i\r\n                              @click=\"editItem(data.item.id, 'users')\"\r\n                              class=\"mdi mdi-circle-edit-outline edit\"\r\n                          ></i>\r\n                        </b-btn>\r\n                        <b-btn\r\n                            v-if=\"data.item.statusUz !== 'DELETED'\"\r\n                            variant=\"link\"\r\n                            class=\"text-decoration-none p-0\"\r\n                            style=\"font-size: 1.2rem; margin-right: 1rem;\"\r\n                        >\r\n                          <i\r\n                              @click=\"updateDepPerms(data.item)\"\r\n                              class=\"mdi mdi-office-building edit\"\r\n                          ></i>\r\n                        </b-btn>\r\n                        <b-btn\r\n                            v-if=\"data.item.statusUz !== 'DELETED'\"\r\n                            variant=\"link\"\r\n                            class=\"text-decoration-none p-0 text-danger\"\r\n                            style=\"font-size: 1.2rem;\"\r\n                        >\r\n                          <i\r\n                              @click=\"deleteItem(data.item.id, 'users')\"\r\n                              class=\"mdi mdi-trash-can delete\"\r\n                          ></i>\r\n                        </b-btn>\r\n                      </div>\r\n                    </template>\r\n                    <template #empty=\"\">\r\n                      <h4 class=\"text-center\">{{ activeDep.id ? $t('not_found') : $t('choose_department') }}</h4>\r\n                    </template>\r\n                    <template #table-busy>\r\n                      <div class=\"text-center my-2\">\r\n                        <b-spinner\r\n                            variant=\"primary\"\r\n                            class=\"align-middle\"\r\n                        ></b-spinner>\r\n                      </div>\r\n                    </template>\r\n                  </b-table>\r\n                  <b-pagination\r\n                      v-model=\"searchPayloadUsers.page\"\r\n                      :total-rows=\"totalUsers\"\r\n                      :per-page=\"searchPayloadUsers.itemsPerPage\"\r\n                      aria-controls=\"my-table\"\r\n                      class=\"justify-content-end\"\r\n                  ></b-pagination>\r\n                </b-tab>\r\n              </b-tabs>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport {mapState} from 'vuex'\r\nimport {TokenService} from '@/shared/services/storage.service'\r\nimport appConfig from \"@/app.config\";\r\nimport OrgStrTreeView from '@/modules/management/components/OrgStrTreeView.vue'\r\nimport crudAndListsService from '@/shared/services/crud_and_list.service'\r\nimport helperService from '@/shared/services/helper.service'\r\n\r\nconst MAIN_API_URL_USERS = 'user'\r\nconst MAIN_API_URL_EMPLOYEES = 'employee'\r\nexport default {\r\n  page: {\r\n    title: \"Users and Employees\",\r\n    meta: [{name: \"description\", content: appConfig.description}],\r\n  },\r\n  components: {\r\n    OrgStrTreeView\r\n  },\r\n  data() {\r\n    return {\r\n      currentUserId: TokenService.getUserId(),\r\n      title: \"Users and Employees\",\r\n      selectedDep: '',\r\n      activeDep: {},\r\n      loadingTableItems: false,\r\n      activeTabIndex: 0,\r\n      departments: [],\r\n      users: [],\r\n      totalUsers: 0,\r\n      employees: [],\r\n      totalEmployees: 0,\r\n      searchPayloadEmployees: {},\r\n      searchPayloadUsers: {}\r\n    };\r\n  },\r\n  /*\r\n  COMPUTED */\r\n  computed: {\r\n    ...mapState('managementUsersAndEmployees', ['userHeaders', 'employeeHeaders']),\r\n    activeTab() {\r\n      if (this.activeTabIndex === 0) {\r\n        return 'employees'\r\n      } else if (this.activeTabIndex === 1) {\r\n        return 'users'\r\n      } else {\r\n        return ''\r\n      }\r\n    },\r\n    userInfo() {\r\n      return TokenService.getUserInfo()\r\n    }\r\n  },\r\n  methods: {\r\n    getActiveTabIndexByTabName(tabName){\r\n      if (tabName === 'employees') {\r\n        return 0;\r\n      } else if (tabName === 'users') {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    },\r\n    updateDepPerms(user) {\r\n      this.$router.push({\r\n        name: 'UpdateUserPermissionsToDepartments',\r\n        params: {id: user.id},\r\n        query: {name: user.employeeFullName}\r\n      })\r\n    },\r\n    async fetchDepartments() {\r\n      await crudAndListsService.searchList('department', this.var_default_search_payload, null, true)\r\n          .then(res => {\r\n            this.departments = []\r\n            if (res.data.id) {\r\n              this.departments.push(res.data)\r\n            }\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    deleteItem(id, tabName = this.activeTab) {\r\n      this.$bvModal.msgBoxConfirm('Are you sure?', {\r\n        okTitle: this.$t('actions.confirm'),\r\n        cancelTitle: this.$t('actions.cancel')\r\n      })\r\n          .then(value => {\r\n            if (value) {\r\n              if (tabName === 'employees') {\r\n                crudAndListsService\r\n                    .deleteById(MAIN_API_URL_EMPLOYEES, id)\r\n                    .then((res) => {\r\n                      this.fetchItemsByActiveTab()\r\n                    })\r\n                    .catch(e => {\r\n                      console.log(e)\r\n                    })\r\n              } else if (tabName === 'users') {\r\n                crudAndListsService\r\n                    .deleteById(MAIN_API_URL_USERS, id)\r\n                    .then((res) => {\r\n                      if (this.userInfo.id === id) {\r\n                        this.$store.dispatch('auth/logout')\r\n                      }\r\n                      this.fetchItemsByActiveTab()\r\n                    })\r\n                    .catch(e => {\r\n                      console.log(e)\r\n                    })\r\n              }\r\n            }\r\n          })\r\n          .catch(err => {\r\n            // An error occurred\r\n          })\r\n    },\r\n    editItem(id, tabName = this.activeTab) {\r\n      this.$router.push(tabName === 'users' ?\r\n          {name: 'UpdateUser', params: {id: id}} :\r\n          tabName === 'employees' ?\r\n              {name: 'UpdateEmployee', params: {id: id}} :\r\n              this.$toast('Илтимос табни қайта босинг ва яна уриниб кўринг', {type: 'info'}))\r\n    },\r\n    async fetchItemsByActiveTab(tab = this.activeTab) {\r\n      this.urlPushState({\r\n        't': tab\r\n      })\r\n      if (this.activeDep.id) {\r\n        if (tab === 'employees') {\r\n          this.loadingTableItems = true\r\n          let searchPayload = this.searchPayloadEmployees;\r\n          this.employees = [];\r\n          this.totalEmployees = 0\r\n          await helperService\r\n              .searchEmployeesByDep(\r\n                  searchPayload,\r\n                  this.activeDep.id\r\n              )\r\n              .then((res) => {\r\n                this.employees = res.data.list;\r\n                this.totalEmployees = res.data.total\r\n              })\r\n              .catch(e => {\r\n                console.log(e)\r\n              })\r\n              .finally(() => {\r\n                this.loadingTableItems = false\r\n              });\r\n        } else if (tab === 'users') {\r\n          this.loadingTableItems = true\r\n          let payload = {\r\n            data: this.searchPayloadUsers,\r\n            depId: this.activeDep.id,\r\n          };\r\n          this.users = [];\r\n          this.totalUsers = 0\r\n          await crudAndListsService\r\n              .searchByDepId(MAIN_API_URL_USERS, payload)\r\n              .then((res) => {\r\n                this.users = res.data.list;\r\n                this.totalUsers = res.data.total\r\n              })\r\n              .catch(e => {\r\n                console.log(e)\r\n              })\r\n              .finally(() => {\r\n                this.loadingTableItems = false\r\n              });\r\n        }\r\n      }\r\n    },\r\n    async giveActiveClassToDep(treeArr, activeId, step = 0, parents = {}) {\r\n      for (const el of treeArr) {\r\n        if (el.id === activeId) {\r\n          document.getElementById(`depId-${activeId}`).classList.add('active')\r\n        } else {\r\n          document.getElementById(`depId-${el.id}`).classList.remove('active')\r\n          if (el.children && el.children.length > 0) {\r\n            await this.giveActiveClassToDep(el.children, activeId, step, parents);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    showRefModal() {\r\n\r\n    },\r\n    deleteDepartment() {\r\n\r\n    },\r\n    async toggleActiveClass(activeDep) {\r\n      if (!activeDep) {\r\n        activeDep = await this.findDepartmentById(this.$route.query.d, null, true)\r\n      }\r\n      if (parseInt(this.$route.query.d) !== activeDep.id) {\r\n        await this.urlPushState({\r\n          'd': activeDep.id\r\n        })\r\n      }\r\n      this.activeDep = Object.assign({}, activeDep)\r\n      await this.giveActiveClassToDep(this.departments, activeDep.id)\r\n      this.selectedDep = activeDep.nameUz\r\n      this.openDepartmentTreeStyle(activeDep)\r\n    },\r\n    async openDepartmentTreeStyle(activeDep){\r\n      if (!activeDep.parentId) {\r\n        return false;\r\n      }\r\n      const parent = await this.findDepartmentById(activeDep.parentId, null, true)\r\n      await this.openDepartmentTreeStyle(parent)\r\n      const self = document.getElementById(`dep-toggle-icon-id-${activeDep.id}`)\r\n      if (self) {\r\n        self.click();\r\n      }\r\n    },\r\n    async findDepartmentById(id, children = null, activate = true) {\r\n      if (!this.departments) {\r\n        await this.fetchDepartments()\r\n      }\r\n      if (typeof id === 'string') {\r\n        id = parseInt(id)\r\n      }\r\n      if (!children) {\r\n        children = this.departments\r\n      }\r\n      for (const el of children) {\r\n        if (el.id === id) {\r\n          return el\r\n        }\r\n        if (el.children && el.children.length > 0) {\r\n          const res = await this.findDepartmentById(id, el.children)\r\n          if (res) {\r\n            return res\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n  async created() {\r\n    await this.fetchDepartments()\r\n    this.searchPayloadEmployees = Object.assign({}, this.var_default_search_payload)\r\n    this.searchPayloadUsers = Object.assign({}, this.var_default_search_payload)\r\n    if (this.$route.query.d) {\r\n      const dep = await this.findDepartmentById(this.$route.query.d)\r\n      await this.toggleActiveClass(dep)\r\n      if (this.$route.query.t) {\r\n        this.activeTabIndex = this.getActiveTabIndexByTabName(this.$route.query.t);\r\n        await this.fetchItemsByActiveTab(this.$route.query.t)\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    activeDep: {\r\n      deep: true,\r\n      handler() {\r\n        this.fetchItemsByActiveTab(this.$route.query.t);\r\n      },\r\n    },\r\n  }\r\n};\r\n</script>\r\n<style scoped lang='scss'>\r\n.hoverable {\r\n  font-size: 15px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  .org-str-actions {\r\n    display: flex;\r\n    min-width: 20%;\r\n    align-items: center;\r\n\r\n    .btn {\r\n      line-height: 1;\r\n\r\n      &:focus {\r\n        outline: none !important;\r\n        box-shadow: none;\r\n      }\r\n    }\r\n\r\n    i {\r\n      font-size: 1.3rem;\r\n    }\r\n  }\r\n}\r\n\r\n.max-height-40 {\r\n  max-height: 40vh;\r\n}\r\n\r\n.max-height-40 {\r\n  max-height: 40vh;\r\n}\r\n\r\n.dep-name {\r\n  display: inline-block;\r\n  margin: 0;\r\n}\r\n\r\n::v-deep .org-str-actions {\r\n  visibility: hidden;\r\n}\r\n\r\n::v-deep li > div {\r\n  &:hover {\r\n    .org-str-actions {\r\n      visibility: visible !important;\r\n      @media (max-width: 568px) {\r\n        display: flex !important;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n::v-deep li div div:first-child,\r\n.add,\r\n.delete,\r\n.edit {\r\n  display: inline-block;\r\n  margin: 6px 0;\r\n  cursor: pointer;\r\n}\r\n\r\n::v-deep li div {\r\n  &:hover {\r\n    p {\r\n      text-decoration: underline;\r\n    }\r\n  }\r\n}\r\n\r\n::v-deep li .active {\r\n  font-weight: bold;\r\n}\r\n\r\n.mdi {\r\n  margin-right: 0.8em;\r\n}\r\n\r\n.building-icon {\r\n  color: #f0d45f;\r\n  font-size: 1.5rem;\r\n  cursor: pointer;\r\n\r\n  .mdi-office-building-outline {\r\n    font-size: 1.4rem;\r\n  }\r\n}\r\n\r\n.org-str-title {\r\n  font-size: 1.2rem;\r\n}\r\n</style>"]}]}