{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\excel-table\\modules\\final-forecast-fill\\Update.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\excel-table\\modules\\final-forecast-fill\\Update.vue","mtime":1674799497248},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Update.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"Update.vue","sourceRoot":"src/modules/excel-table/modules/final-forecast-fill","sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 text-center\">\r\n      <div class=\"btn btn-outline-dark btn-secondary float-left\"\r\n           @click=\"$router.push({name: 'IndexFinalForecastFill'})\">\r\n        {{ $t('actions.back') }}\r\n      </div>\r\n      <div class=\"h5 mb-4 d-inline-block\">{{ $t('submodules.final_forecast.title') }}</div>\r\n      <div class=\"btn btn-success float-right\" @click=\"save\">{{ $t('actions.save') }}</div>\r\n      <div class=\"btn btn-primary float-right\" @click=\"excelExport\">{{ $t('actions.excel') }}</div>\r\n    </div>\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <table class=\"table table-sm table-bordered table-condensed vertical-align-middle\" ref=\"table\">\r\n                <thead>\r\n                <tr>\r\n                  <th :colspan=\"getTableMaxRows\" class=\"text-center h5\">\r\n                    {{\r\n                      form.StatisticReportHeaderDto ? getName({\r\n                        nameUz: form.StatisticReportHeaderDto.decisionNameUz,\r\n                        nameRu: form.StatisticReportHeaderDto.decisionNameRu,\r\n                        nameLt: form.StatisticReportHeaderDto.decisionNameLt,\r\n                      }) : ''\r\n                    }}\r\n                  </th>\r\n                </tr>\r\n                <tr class=\"text-center\">\r\n                  <th rowspan=\"3\">№</th>\r\n                  <th rowspan=\"3\" colspan=\"2\" class=\"text-center\">{{\r\n                      $t('submodules.final_forecast.state_program_and_target_indicator')\r\n                    }}\r\n                  </th>\r\n                  <th rowspan=\"3\">{{ $t('column.unit') }}</th>\r\n                  <th :colspan=\"quarterPlanDoneList.length || 1\" class=\"text-center\">\r\n                    {{\r\n                      $t('submodules.final_forecast.year_plan', {year: form.StatisticReportHeaderDto ? form.StatisticReportHeaderDto.year : ''})\r\n                    }}\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th v-for=\"(quarterItem, quarterKey) in quarterList\" :key=\"quarterKey\" class=\"text-center\"\r\n                      colspan=\"2\">\r\n                    {{\r\n                      getName({\r\n                        nameUz: quarterItem.nameUz,\r\n                        nameRu: quarterItem.nameRu,\r\n                        nameLt: quarterItem.nameLt,\r\n                      })\r\n                    }}\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th v-for=\"(quarterItem, quarterKey) in quarterPlanDoneList\" :key=\"quarterKey\" class=\"text-center\">\r\n                    {{\r\n                      quarterItem.type === 'plan' ? $t('submodules.final_forecast.plan') : $t('submodules.final_forecast.done')\r\n                    }}\r\n                  </th>\r\n                </tr>\r\n                <tr class=\"text-center\">\r\n                  <th colspan=\"3\">\r\n                    {{\r\n                      form.StatisticReportHeaderDto ? getName({\r\n                        nameUz: form.StatisticReportHeaderDto.organizationNameUz,\r\n                        nameRu: form.StatisticReportHeaderDto.organizationNameRu,\r\n                        nameLt: form.StatisticReportHeaderDto.organizationNameLt,\r\n                      }) : ''\r\n                    }}\r\n                  </th>\r\n                  <th>\r\n                    {{\r\n                      form.StatisticReportHeaderDto ? getName({\r\n                        nameUz: form.StatisticReportHeaderDto.measurementUnitNameUz,\r\n                        nameRu: form.StatisticReportHeaderDto.measurementUnitNameRu,\r\n                        nameLt: form.StatisticReportHeaderDto.measurementUnitNameLt,\r\n                      }) : ''\r\n                    }}\r\n                  </th>\r\n                  <th :colspan=\"quarterPlanDoneList.length || 1\">\r\n                    {{ form.StatisticReportHeaderDto ? form.StatisticReportHeaderDto.value : '' }}\r\n                  </th>\r\n                </tr>\r\n                <tr class=\"text-center\">\r\n                  <td></td>\r\n                  <th :colspan=\"getTableMaxRows-1\">\r\n                    {{\r\n                      form.StatisticReportHeaderDto ? getName({\r\n                        nameUz: form.StatisticReportHeaderDto.strategicPurposeUz,\r\n                        nameRu: form.StatisticReportHeaderDto.strategicPurposeRu,\r\n                        nameLt: form.StatisticReportHeaderDto.strategicPurposeLt,\r\n                      }) : ''\r\n                    }}\r\n                  </th>\r\n                </tr>\r\n                </thead>\r\n                <Info v-for=\"(infoTypeItem, infoTypeKey) in infoTypeList\"\r\n                      :key=\"infoTypeKey\"\r\n                      :infoTypeKey=\"infoTypeKey\"\r\n                      :infoType=\"infoTypeItem\"\r\n                      :statisticReportInfoDto=\"form.StatisticReportInfoDto\"\r\n                      :getTableMaxRows=\"getTableMaxRows\"\r\n                      :quarterList=\"quarterList\"\r\n                      ref=\"infoType\"\r\n                      :quarterPlanDoneList=\"quarterPlanDoneList\"\r\n                      :measurementUnitList=\"measurementUnitList\"\r\n                      :measurementUnitMap=\"measurementUnitMap\"\r\n                      @open-parent-modal=\"openModal\"\r\n                      @confirm-quarter-value=\"confirmQuarterValue\"\r\n                />\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <b-modal id=\"modal-1\"\r\n             :title=\"modal.title\"\r\n             v-model=\"modal.show\"\r\n             ref=\"modal\">\r\n      <div v-if=\"modal.step === 'quarter_plan'\">\r\n        <div class=\"form-group\">\r\n          <label>{{ $t('column.value') }}</label>\r\n          <input class=\"form-control\"\r\n                 type=\"number\"\r\n                 ref=\"quarter_plan\"\r\n                 step=\"any\"\r\n                 v-model=\"form.StatisticReportInfoDto[modal.parentIndex].children[modal.childIndex].quarterValueDtoList[modal.quarterKey].done\"/>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"modal.step === 'bases'\">\r\n        <div class=\"form-group\">\r\n          <BaseFileUploaderWithValidation\r\n              not-required\r\n              ref=\"supplementDocUploader\"\r\n              v-model=\"modal.bases\"\r\n              :max-files=\"null\"\r\n              :max-fileSize=\"null\"\r\n              :label-on-top=\"false\"\r\n              :label=\"$t('attached_files')\"\r\n          ></BaseFileUploaderWithValidation>\r\n        </div>\r\n        <div v-if=\"this.modal.childIndex !== undefined\">\r\n          <div\r\n              v-if=\"form.StatisticReportInfoDto[this.modal.parentIndex].children[this.modal.childIndex].bases && form.StatisticReportInfoDto[this.modal.parentIndex].children[this.modal.childIndex].bases[modal.quarterKey]\"\r\n              class=\"d-inline-block\">\r\n            <div\r\n                v-for=\"(items, keys) in form.StatisticReportInfoDto[this.modal.parentIndex].children[this.modal.childIndex].bases[modal.quarterKey]\"\r\n                :key=\"keys\" class=\"d-inline-block\">\r\n              <a :href=\"'/'+items.url\" download class=\"btn\"><i class=\"mdi mdi-download\"></i> {{ items.name }}</a>\r\n            </div>\r\n          </div>\r\n          <div\r\n              v-for=\"(items, keys) in form.StatisticReportInfoDto[this.modal.parentIndex].children[this.modal.childIndex].quarterValueDtoList[modal.quarterKey].baseFiles\"\r\n              :key=\"keys\" class=\"d-inline-block\">\r\n            <a :href=\"'/'+items.url\" download class=\"btn\"><i class=\"mdi mdi-download\"></i> {{ items.name }}</a>\r\n          </div>\r\n        </div>\r\n        <div v-else>\r\n          <div v-if=\"form.StatisticReportInfoDto[this.modal.parentIndex].bases && form.StatisticReportInfoDto[this.modal.parentIndex].bases[modal.quarterKey]\"\r\n               class=\"d-inline-block\">\r\n            <div v-for=\"(items, keys) in form.StatisticReportInfoDto[this.modal.parentIndex].bases[modal.quarterKey]\"\r\n                 :key=\"keys\" class=\"d-inline-block\">\r\n              <a :href=\"'/'+items.url\" download class=\"btn\"><i class=\"mdi mdi-download\"></i> {{ items.name }}</a>\r\n            </div>\r\n            <div\r\n                v-for=\"(items, keys) in form.StatisticReportInfoDto[this.modal.parentIndex].quarterValueDtoList[modal.quarterKey].baseFiles\"\r\n                :key=\"keys\" class=\"d-inline-block\">\r\n              <a :href=\"'/'+items.url\" download class=\"btn\"><i class=\"mdi mdi-download\"></i> {{ items.name }}</a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <template #modal-footer>\r\n        <button type=\"button\" class=\"btn btn-primary\" @click=\"modal.show = false;\">{{ $t('actions.save') }}</button>\r\n      </template>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport i18n from \"../../../../i18n\";\r\n\r\nconst MAIN_API_URL = 'statistic-report'\r\n\r\nimport Info from \"./Info\";\r\nimport appConfig from \"@/app.config\";\r\nimport apiService from \"@/shared/services/api.service\";\r\nimport XLSX from \"xlsx\";\r\n\r\nconst urls = {\r\n  create: MAIN_API_URL + '/create',\r\n  update: MAIN_API_URL + '/update/',\r\n  saveValue: MAIN_API_URL + '/save-value',\r\n  get: MAIN_API_URL + '/get-by-id/',\r\n  quarter: MAIN_API_URL + '/directory/quarter/list-search',\r\n  measurementUnit: MAIN_API_URL + '/directory/measurement-unit/list-search',\r\n  innerEmployee: '/employee/list-search/inner',\r\n  confirmQuarterValue: '/statistic-report/confirm-quarter-value/',\r\n}\r\n\r\nexport default {\r\n  page: {\r\n    title: i18n.t('submodules.final_forecast.title'),\r\n    meta: [{name: \"description\", content: appConfig.description}],\r\n  },\r\n  components: {\r\n    Info,\r\n  },\r\n  data() {\r\n    return {\r\n      form: {},\r\n      modal: {\r\n        show: false,\r\n        step: '',\r\n        title: \"\",\r\n        infoTypeKey: '',\r\n        parentIndex: 0,\r\n        childIndex: undefined,\r\n        quarterKey: undefined,\r\n        bases: undefined,\r\n      },\r\n      infoTypeList: [\r\n        {\r\n          code: 'FINAL',\r\n          name: i18n.t('submodules.final_forecast.info_type_final'),\r\n        },\r\n        {\r\n          code: 'DIRECTLY',\r\n          name: i18n.t('submodules.final_forecast.info_type_directly'),\r\n        },\r\n      ],\r\n      quarterList: [],\r\n      measurementUnitList: [],\r\n      measurementUnitMap: {},\r\n      employeeListKeyword: '',\r\n      employeeList: [],\r\n      employeeListMap: {},\r\n      saveLoading: false,\r\n    };\r\n  },\r\n  methods: {\r\n    getEmployeeInnerList() {\r\n      apiService.post(urls.innerEmployee + '?keyword=' + encodeURIComponent(this.employeeListKeyword), {\r\n        itemsPerPage: 10,\r\n        page: 0,\r\n      }).then(res => {\r\n        this.employeeList = res.data.list;\r\n        this.employeeListMap = {};\r\n        this.employeeList.forEach(item => {\r\n          this.employeeListMap[item.id] = item;\r\n        });\r\n      });\r\n    },\r\n    openModal(show, step, infoTypeKey, parentIndex, childIndex, quarterKey = undefined) {\r\n      console.log(show, step, infoTypeKey, parentIndex, childIndex, quarterKey)\r\n      this.modal.show = show;\r\n      this.modal.step = step;\r\n      this.modal.infoTypeKey = infoTypeKey;\r\n      this.modal.parentIndex = parentIndex;\r\n      this.modal.childIndex = childIndex;\r\n      this.modal.quarterKey = quarterKey;\r\n    },\r\n    customLabelAdDesignType(id) {\r\n      let selected = this.employeeListMap[id];\r\n      if (selected) {\r\n        return selected.fullName;\r\n      }\r\n      return '';\r\n    },\r\n    customLabelMeasurementUnitList(id) {\r\n      let selected = this.measurementUnitList[id];\r\n      if (selected) {\r\n        return this.getName({});\r\n      }\r\n      return '';\r\n    },\r\n    onEmployeeChange(selectedList) {\r\n      if (this.modal.step === 'employee_child') {\r\n        this.form.StatisticReportInfoDto[this.modal.parentIndex].children[this.modal.childIndex].employeeFullNames = selectedList.map(e => {\r\n          return this.employeeListMap[e].lastName + ' ' + this.employeeNameFirstChar(this.employeeListMap[e].firstName) + ' ' + this.employeeNameFirstChar(this.employeeListMap[e].middleName);\r\n        });\r\n      } else if (this.modal.step === 'employee') {\r\n        this.form.StatisticReportInfoDto[this.modal.parentIndex].employeeFullNames = selectedList.map(e => {\r\n          return this.employeeListMap[e].lastName + ' ' + this.employeeNameFirstChar(this.employeeListMap[e].firstName) + ' ' + this.employeeNameFirstChar(this.employeeListMap[e].middleName);\r\n        });\r\n      }\r\n      this.$refs['infoType'][this.modal.infoTypeKey].serializeItems()\r\n    },\r\n    employeeNameFirstChar(name) {\r\n      let fs = name.charAt(0) + name.charAt(1);\r\n      if (['sh', 'ch', \"o'\", \"g'\"].indexOf(fs.toLowerCase().replace('`', \"'\")) !== -1) {\r\n        return fs;\r\n      }\r\n      return name.charAt(0);\r\n    },\r\n    save() {\r\n      if (this.saveLoading) {\r\n        return;\r\n      }\r\n      this.saveLoading = true;\r\n      let data = this.serializeSaveResult(this.form.StatisticReportInfoDto);\r\n      apiService.post(urls.saveValue, data, true).then(res => {\r\n        this.$toast(this.$t('messages.saved_successfully'), {\r\n          type: 'success'\r\n        });\r\n        this.saveLoading = false;\r\n        this.$router.push({name: 'IndexFinalForecastFill'});\r\n      }).catch(err => {\r\n        this.saveLoading = false;\r\n      });\r\n    },\r\n    serializeSaveResult(infos, result = []) {\r\n      for (const index in infos) {\r\n        infos[index].quarterValueDtoList.map(e => {\r\n          result.push({\r\n            id: e.id,\r\n            done: e.done,\r\n            quarterId: e.quarterId,\r\n          });\r\n        });\r\n        if (infos[index].children) {\r\n          result = this.serializeSaveResult(infos[index].children, result);\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n    serializeEmployeeIds(infoList) {\r\n      return infoList.map(info => {\r\n        info.employeeIds = info.attachedEmployeeDtos.map(e => {\r\n          return e.employeeId;\r\n        });\r\n        info.employeeFullNames = info.attachedEmployeeDtos.map(e => {\r\n          return e.employeeLastName + ' ' + e.employeeFirstName + ' ' + e.employeeMiddleName;\r\n        });\r\n        if (info.children) {\r\n          info.children = this.serializeEmployeeIds(info.children);\r\n        }\r\n        return info;\r\n      });\r\n    },\r\n    excelExport() {\r\n      this.loaderExcel = true;\r\n      let fileName = `Report`;\r\n      let wb = XLSX.utils.table_to_book(this.$refs.table, {sheet: \"sheet1\"});\r\n      setTimeout(() => {\r\n        this.loaderExcel = false;\r\n      }, 500);\r\n      return XLSX.writeFile(wb, `${fileName}.xlsx`, {});\r\n    },\r\n    confirmQuarterValue({id}) {\r\n      this.cnf().then(({value}) => {\r\n        if (value) {\r\n          apiService.post(urls.confirmQuarterValue + id, {}, true).then(async res => {\r\n            await this.handleCreated()\r\n            await this.$toast(this.$t('success'), {\r\n              type: 'success'\r\n            });\r\n          }).catch(err => {\r\n          });\r\n        }\r\n      })\r\n    },\r\n    handleCreated(){\r\n      this.getEmployeeInnerList();\r\n      apiService.post(urls.get + this.$route.params.id).then(response => {\r\n        let res = {\r\n          StatisticReportHeaderDto: response.data.header,\r\n          StatisticReportInfoDto: response.data.infoList,\r\n        };\r\n        res.StatisticReportInfoDto = this.serializeEmployeeIds(res.StatisticReportInfoDto);\r\n        if (res.StatisticReportInfoDto.length === 1 && res.StatisticReportInfoDto[0].infoType === null) {\r\n          this.infoTypeList.forEach((item, index) => {\r\n            res.StatisticReportInfoDto[index] = JSON.parse(JSON.stringify(res.StatisticReportInfoDto[0]));\r\n            res.StatisticReportInfoDto[index].infoType = item.code;\r\n          });\r\n        }\r\n        this.form = res;\r\n      });\r\n      apiService.post(urls.quarter, {\r\n        itemsPerPage: 100,\r\n        page: 0,\r\n      }).then(response => {\r\n        this.quarterList = response.data.list;\r\n      });\r\n      apiService.post(urls.measurementUnit, {\r\n        itemsPerPage: 100,\r\n        page: 0,\r\n      }).then(response => {\r\n        this.measurementUnitList = response.data.list;\r\n      });\r\n    }\r\n  },\r\n  created() {\r\n    this.handleCreated()\r\n  },\r\n  computed: {\r\n    getTableMaxRows: function () {\r\n      return 4 + (this.quarterPlanDoneList.length)\r\n    },\r\n    quarterPlanDoneList() {\r\n      let list = [];\r\n      this.quarterList.forEach((e, i) => {\r\n        list.push({...e, type: 'plan', quarterIndex: i});\r\n        list.push({...e, type: 'done', quarterIndex: i});\r\n      });\r\n      return list;\r\n    },\r\n  },\r\n  watch: {\r\n    'modal.show': {\r\n      handler(val) {\r\n        if (this.modal.step === 'bases') {\r\n          if (val === false) {\r\n            if (this.modal.bases && this.modal.bases.length > 0) {\r\n              const files = this.modal.bases;\r\n              const formData = new FormData();\r\n              const quarter = this.quarterPlanDoneList[this.modal.quarterKey];\r\n              let info;\r\n              if (this.modal.childIndex !== undefined) {\r\n                info = this.form.StatisticReportInfoDto[this.modal.parentIndex].children[this.modal.childIndex];\r\n              } else {\r\n                info = this.form.StatisticReportInfoDto[this.modal.parentIndex];\r\n              }\r\n              files.forEach(file => {\r\n                formData.append('baseFiles', file.file);\r\n              });\r\n              apiService\r\n                  .post(MAIN_API_URL + `/save/base-files/${info.id}/${quarter.id}`, formData, {\r\n                    headers: {\r\n                      \"Content-Type\": \"multipart/form-data\",\r\n                    },\r\n                  })\r\n                  .then((res) => {\r\n                    if (this.modal.childIndex !== undefined) {\r\n                      if (!this.form.StatisticReportInfoDto[this.modal.parentIndex].children[this.modal.childIndex].bases) {\r\n                        this.form.StatisticReportInfoDto[this.modal.parentIndex].children[this.modal.childIndex].bases = [];\r\n                      }\r\n                      this.form.StatisticReportInfoDto[this.modal.parentIndex].children[this.modal.childIndex].bases[this.modal.quarterKey] = res.data.infoFiles;\r\n                    } else {\r\n                      if (!this.form.StatisticReportInfoDto[this.modal.parentIndex].bases) {\r\n                        this.form.StatisticReportInfoDto[this.modal.parentIndex].bases = [];\r\n                      }\r\n                      this.form.StatisticReportInfoDto[this.modal.parentIndex].bases[this.modal.quarterKey] = res.data.infoFiles;\r\n                    }\r\n                    this.modal.bases = [];\r\n                  })\r\n                  .catch((err) => {\r\n                    console.log(err);\r\n                  });\r\n            }\r\n          }\r\n        }\r\n      },\r\n      deep: true,\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang='scss'>\r\n.vertical-align-middle th, .vertical-align-middle td {\r\n  vertical-align: middle;\r\n}\r\n\r\n.preview {\r\n  max-width: 60px;\r\n  max-height: 60px;\r\n  border-radius: 5px;\r\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);\r\n}\r\n</style>"]}]}