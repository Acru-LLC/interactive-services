{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\shared\\views\\components\\CreateFormAdPrivilegeCoefficient.vue?vue&type=style&index=0&id=49fbe98e&scoped=true&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\shared\\views\\components\\CreateFormAdPrivilegeCoefficient.vue","mtime":1674799498059},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY29sLWZvcm0tbGFiZWwgew0KICAgIHBhZGRpbmctdG9wOiAwOw0KfQ0KDQp1bCB7DQogICAgbGlzdC1zdHlsZS10eXBlOiBub25lOw0KfQ0K"},{"version":3,"sources":["CreateFormAdPrivilegeCoefficient.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwRA;AACA;AACA;;AAEA;AACA;AACA","file":"CreateFormAdPrivilegeCoefficient.vue","sourceRoot":"src/shared/views/components","sourcesContent":["<template>\r\n    <ValidationObserver\r\n        ref=\"observer\"\r\n        v-slot=\"{}\"\r\n    >\r\n        <b-row class=\"mb-3\">\r\n            <b-col\r\n                sm=\"12\"\r\n                md=\"6\"\r\n            >\r\n                <BaseInputWithValidation\r\n                    rules=\"required|positiveNotZero\"\r\n                    class=\"required\"\r\n                    v-model=\"editingItem.coefficient\"\r\n                    name=\"coefficient\"\r\n                    :label=\"$t('column.coefficient')\"\r\n                />\r\n            </b-col>\r\n            <b-col\r\n                sm=\"12\"\r\n                md=\"6\"\r\n            >\r\n                <BaseMultiselectWithValidation\r\n                    rules=\"required\"\r\n                    class=\"required\"\r\n                    multiple\r\n                    :close-on-select=\"false\"\r\n                    :hide-selected=\"true\"\r\n                    v-model=\"editingItem.directoryAdvertisementDesignTypesIds\"\r\n                    :options=\"adDesignTypes.map(e => e.id)\"\r\n                    :label=\"$t('column.ad_design_types')\"\r\n                    :placeholder=\"''\"\r\n                    :custom-label=\"customLabelAdDesignType\"\r\n                    open-direction=\"bottom\"\r\n                    :max-height=\"600\"\r\n                    :show-labels=\"false\"\r\n                    withCreateAddition\r\n                >\r\n                    <template v-slot:append-slot>\r\n                        <b-button\r\n                            @click=\"adDesignTypeModal = true\"\r\n                            variant=\"outline-primary\"\r\n                            id=\"contractorSearchButton\"\r\n                            style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n                        >\r\n                            <i class=\"mdi mdi-plus-circle\"></i>\r\n                        </b-button>\r\n                    </template>\r\n                </BaseMultiselectWithValidation>\r\n            </b-col>\r\n        </b-row>\r\n\r\n        <b-row class=\"mb-3\">\r\n            <b-col\r\n                sm=\"12\"\r\n                md=\"6\"\r\n            >\r\n                <BaseInputWithValidation\r\n                    rules=\"required\"\r\n                    class=\"required\"\r\n                    v-model=\"editingItem.decisionNumber\"\r\n                    :label=\"$t('column.decision_number')\"\r\n                />\r\n            </b-col>\r\n            <b-col\r\n                sm=\"12\"\r\n                md=\"6\"\r\n            >\r\n                <BaseSelectWithValidation\r\n                    v-model=\"editingItem.statusId\"\r\n                    class=\"required\"\r\n                    rules=\"required\"\r\n                    :label=\"$t('column.status')\"\r\n                    value-field=\"id\"\r\n                >\r\n                    <template #first>\r\n                        <b-form-select-option\r\n                            :value=\"null\"\r\n                            disabled\r\n                        >{{ $t('column.status') }}\r\n                        </b-form-select-option>\r\n                        <b-form-select-option\r\n                            v-for=\"(status, index) in statuses\"\r\n                            :key=\"`${status}-${index}`\"\r\n                            :value=\"status.id\"\r\n                        >{{\r\n                getName({\r\n                  nameRu: status.nameRu,\r\n                  nameLt: status.nameLt,\r\n                  nameUz: status.nameUz,\r\n                })\r\n              }}\r\n                        </b-form-select-option>\r\n                    </template>\r\n                </BaseSelectWithValidation>\r\n            </b-col>\r\n        </b-row>\r\n\r\n        <b-row class=\"mb-3\">\r\n            <b-col\r\n                sm=\"12\"\r\n                md=\"6\"\r\n            >\r\n                <BaseTextareaWithValidation\r\n                    not-required\r\n                    v-model=\"editingItem.description\"\r\n                    max-rows=\"6\"\r\n                    :label=\"$t('column.reason')\"\r\n                />\r\n            </b-col>\r\n            <b-col\r\n                sm=\"12\"\r\n                md=\"6\"\r\n            >\r\n            </b-col>\r\n        </b-row>\r\n        <BaseModalForCreate\r\n            v-model=\"adDesignTypeModal\"\r\n            mainApiUrl=\"directory/advertisement-design-type\"\r\n            createFormName=\"CreateFormDesignType\"\r\n            @new-ref-created=\"newRefCreated\"\r\n        />\r\n    </ValidationObserver>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'directory/advertisement-design-type_privilege_coefficients'\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport helperService from \"@/shared/services/helper.service\"\r\n\r\nexport default {\r\n    name: \"CreateFormAdPrivilegeCoefficient\",\r\n    props: {\r\n        customIsModeCreate: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    /*\r\n    * COMPONENTS */\r\n    components: {\r\n    },\r\n    /*\r\n    * DATA */\r\n    data () {\r\n        return {\r\n            editingItem: {},\r\n            statuses: [],\r\n            adDesignTypes: [],\r\n            adDesignTypeModal: false\r\n        }\r\n    },\r\n    /*\r\n    * COMPUTED */\r\n    computed: {\r\n        isModeCreate () {\r\n            return this.customIsModeCreate ? this.customIsModeCreate : this.$route.name === 'CreateAdvertisementPrivilegeCoefficient'\r\n        },\r\n        computedObserver () {\r\n            return this.$refs.observer\r\n        }\r\n    },\r\n    /*\r\n    * METHODS */\r\n    methods: {\r\n        customLabelAdDesignType (opt) {\r\n            let selected = this.adDesignTypes.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        newRefCreated (newOptions, newId) {\r\n            this.adDesignTypes = newOptions\r\n            this.editingItem.designTypesIds.push(newId)\r\n        },\r\n        treeClosed (veeName) {\r\n            this.computedObserver.refs[veeName].validate();\r\n        },\r\n        normalizer (node) {\r\n            if (!node.children || node.children.length === 0) {\r\n                delete node.children\r\n                return {\r\n                    id: node.id,\r\n                    label: node.name,\r\n                }\r\n            }\r\n            return {\r\n                id: node.id,\r\n                label: node.name,\r\n                children: node.children && node.children.length > 0 ? node.children : [],\r\n            }\r\n        },\r\n        customFilter (item, queryText, itemText) {\r\n            const textOne = item.name.toLowerCase()\r\n            const textTwo = item.code.toLowerCase()\r\n            const searchText = queryText.toLowerCase()\r\n\r\n            return textOne.indexOf(searchText) > -1 ||\r\n                textTwo.indexOf(searchText) > -1\r\n        },\r\n        save () {\r\n            this.computedObserver.validate().then(valid => {\r\n                if (valid) {\r\n                    if (this.editingItem.id) {\r\n                        crudAndListsService.update(MAIN_API_URL, this.editingItem).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    } else {\r\n                        crudAndListsService.create(MAIN_API_URL, this.editingItem).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        }\r\n    },\r\n    /*\r\n    * CREATED */\r\n    async created () {\r\n        this.var_default_search_payload.itemsPerPage = 500\r\n        if (this.isModeCreate) {\r\n            await crudAndListsService.getEmpty(MAIN_API_URL)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        } else {\r\n            await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, false)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n        // GET STATUSES\r\n        await helperService.getRefByCode('status')\r\n            .then(res => {\r\n                this.statuses = res.data.children\r\n                if (this.isModeCreate) {\r\n                    let activeStatus = this.statuses.find(el => el.code == 'ACTIVE')\r\n                    if (activeStatus) {\r\n                        this.editingItem.statusId = activeStatus.id\r\n                    }\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET AD_DESIGN_TYPES\r\n        helperService\r\n            .getAdDesignTypesByActiveStatus()\r\n            .then((res) => {\r\n                this.adDesignTypes = res.data;\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n    padding-top: 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n}\r\n</style>"]}]}