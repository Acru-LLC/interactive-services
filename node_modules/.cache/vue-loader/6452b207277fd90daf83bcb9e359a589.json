{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\signature.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\signature.vue","mtime":1675054786280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouc3RpY2t5SGVhZCB7DQogIG1hcmdpbjogMHB4ICFpbXBvcnRhbnQ7DQogIHBhZGRpbmc6IDE1cHggIWltcG9ydGFudDsNCiAgYm9yZGVyLXJhZGl1czogMHB4Ow0KICBwb3NpdGlvbjogZml4ZWQ7DQogIHRvcDogNzBweDsNCiAgbGVmdDogMDsNCiAgcmlnaHQ6IDA7DQogIGJhY2tncm91bmQ6IHdoaXRlOw0KICB6LWluZGV4OiA0Ow0KICB3aWR0aDogMTAwJTsNCn0NCg=="},{"version":3,"sources":["signature.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2aA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"signature.vue","sourceRoot":"src/modules/projects","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <div id=\"myHeader\" class=\"card card-body stickyHead\">\r\n        <div class=\"d-flex\">\r\n          <div style=\"width: 58%\">\r\n            <h5 class=\"float-right m-0\" v-if=\"numPages\">\r\n              {{ currentPage }} / {{ numPages }}\r\n            </h5>\r\n          </div>\r\n          <div style=\"width: 43%\">\r\n            <div class=\"float-right d-flex align-items-center\">\r\n              <b-button-group>\r\n                <b-button class=\"float-right\" @click=\"signData\" variant=\"primary\">\r\n                  <b-overlay :opacity=\"0.1\" :show=\"loaderQrCode\" rounded=\"sm\">\r\n                    <i class=\"fa fa-qrcode mr-1\"></i>\r\n                    {{ $t(\"actions.qrcode\") }}\r\n                  </b-overlay>\r\n                </b-button>\r\n                <b-button class=\"float-right mr-2\" @click=\"save\" variant=\"success\">\r\n                  <i class=\"fa fa-save\"></i>\r\n                  {{ $t(\"actions.save\") }}\r\n                </b-button>\r\n              </b-button-group>\r\n              <b-button class=\"float-right mr-2\" :to=\"{name: 'LetterIncome'}\" variant=\"primary\">\r\n                <i class=\"fa fa-arrow-left\"></i>\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-5\">\r\n        <b-row>\r\n          <b-col cols=\"12\">\r\n            <div class=\"d-flex justify-content-center\">\r\n              <b-overlay variant=\"white\" :opacity=\"1\" :show=\"loaderPdf\" rounded=\"lg\">\r\n                <div id=\"pdfId\" style=\" width: 270mm !important; min-height: 210mm; position: relative; \">\r\n                  <VueDragResize\r\n                      style=\"z-index: 3\"\r\n                      :isActive=\"true\"\r\n                      v-if=\"imgUrl && qrCodePage == currentPage\"\r\n                      :w=\"110\"\r\n                      :h=\"110\"\r\n                      :x=\"x\"\r\n                      :y=\"y\"\r\n                      v-on:resizing=\"resize\"\r\n                      v-on:dragging=\"resize\"\r\n                      :parent=\"true\"\r\n                      :isResizable=\"false\"\r\n                      :parentLimitation=\"true\"\r\n                  >\r\n                    <img\r\n                        @mouseenter=\"mouseEnter\"\r\n                        @mousemove=\"mousemove\"\r\n                        @mouseleave=\"mouseLeave\"\r\n                        :src=\"`${ imgUrl ? `data:image/png;base64, ${imgUrl}` : require('@/assets/img.png') }`\"\r\n                    />\r\n                  </VueDragResize>\r\n                  <pdf @num-pages=\"numPages = $event\" v-if=\"src\" ref=\"myPdfComponent\" :page=\"currentPage\" :src=\"src\"/>\r\n                </div>\r\n              </b-overlay>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row>\r\n          <b-col cols=\"12\">\r\n            <div class=\"d-flex mt-4 justify-content-center\">\r\n              <div class=\"d-flex mt-4\" style=\"overflow: auto; max-width: 90%\" >\r\n                <div class=\"ml-3 mb-4\" v-for=\"page in numPages\" :key=\"page + 'page'\" >\r\n                  <div\r\n                      :class=\" currentPage == page ? 'my-card-hovered-pdf-active' : '' \"\r\n                      @click.prevent=\"setCurrentPage(page)\"\r\n                      class=\"my-card-hovered-pdf\"\r\n                  >\r\n                    <div style=\"width: 200px;!important;position:relative\">\r\n                      <div v-if=\"imgUrl && qrCodePage == page\"\r\n                           :style=\"{top:`${y/5.1}px`,left:`${x/5.08}px`, position: 'absolute', 'z-index': 999}\"\r\n                      >\r\n                        <img v-if=\"imgUrl\" :height=\"20\" :width=\"20\"\r\n                             :src=\"`${ imgUrl ? `data:image/png;base64, ${imgUrl}` : require('@/assets/img.png') }`\"\r\n                        />\r\n                      </div>\r\n\r\n                      <pdf v-if=\"src\" :src=\"src\" :page=\"page\" />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n      </div>\r\n    </div>\r\n    <b-modal scrollable v-model=\"commissionsModal\" size=\"md\" :title=\"`${$t('submodules.commission.title')}`\">\r\n      <BaseMultiselectWithValidation\r\n          rules=\"required\"\r\n          class=\"required\"\r\n          v-model=\"commissionTypeId\"\r\n          :options=\"commissionTypes.map(e => e.id)\"\r\n          :label=\"$t('submodules.commission.special_commission_type.title')\"\r\n          label-on-top\r\n          placeholder=\"\"\r\n          :custom-label=\"customLabelCommissionTypes\"\r\n          open-direction=\"bottom\"\r\n          :max-height=\"600\"\r\n          :show-labels=\"false\"\r\n      />\r\n      <b-form-textarea class=\"mt-3\" v-model=\"commissionComment\" :placeholder=\"$t('submodules.doc.summary')\" rows=\"5\"/>\r\n      <template v-slot:modal-footer>\r\n        <b-button variant=\"success\" @click=\"openSignatureModalForCommission\">\r\n          <b-overlay :opacity=\"0.1\" :show=\"commissionModalLoader\" rounded=\"sm\">\r\n            {{ $t(\"actions.continue\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <b-modal scrollable v-model=\"commissionsModalForComment\" size=\"md\" :title=\"`${$t('submodules.commission.title')}`\">\r\n      <b-form-textarea class=\"mt-3\" v-model=\"comment4Commission\" :placeholder=\"$t('submodules.doc.summary')\" rows=\"5\"/>\r\n      <template v-slot:modal-footer>\r\n        <b-button variant=\"success\" @click=\"openSignatureModalForCommissionForComment\">\r\n          <b-overlay :opacity=\"0.1\" :show=\"commissionModalLoader\" rounded=\"sm\">\r\n            {{ $t(\"actions.continue\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <b-modal scrollable v-model=\"signatureModal\" hide-footer size=\"lg\" :title=\"`${$t('submodules.reports.make_sign')}`\">\r\n      <b-overlay :opacity=\"0.1\" :show=\"loaderSign\" rounded=\"sm\">\r\n        <SignKeys @sign=\"signSuccess\" :dataToSign=\"currentDoc\"/>\r\n      </b-overlay>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import Layout from \"@/router/layouts/main\";\r\nimport { showMsgError, showMsgSuccess } from \"@/helper\";\r\nimport pdf from \"vue-pdf\";\r\nimport Service from \"../../modules/letter/letterService\";\r\n\r\nimport SignKeys from \"./SignKeys.vue\";\r\nimport VueDragResize from \"vue-drag-resize\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      commissionTypeId: null,\r\n      commissionComment: '',\r\n      comment4Commission: '',\r\n      commissionModalLoader: false,\r\n      commissionTypes: [],\r\n      commissionsModal: false,\r\n      commissionsModalForComment: false,\r\n      currentPage: 1,\r\n      pageCount: 0,\r\n      src: null,\r\n      imgUrl: null,\r\n      width: 110,\r\n      height: 110,\r\n      x: 200,\r\n      y: 300,\r\n      numPages: undefined,\r\n      pageYOffset: 0,\r\n      loaderQrCode: false,\r\n      qrCodePage: null,\r\n      loaderPdf: false,\r\n      currentDoc: {},\r\n      signatureModal: false,\r\n      deleteQrPosition: false,\r\n      loaderSign: false,\r\n    };\r\n  },\r\n  name: \"Signature\",\r\n  components: {\r\n    VueDragResize,\r\n    pdf,\r\n    SignKeys,\r\n  },\r\n  created() {\r\n    this.getByIdLetter();\r\n    document.addEventListener(\"keyup\", this.keyUpEvents);\r\n  },\r\n  methods: {\r\n    openSignatureModalForCommissionForComment() {\r\n      this.signatureModal = true\r\n    },\r\n    openSignatureModalForCommission() {\r\n      if (this.commissionTypeId) {\r\n        this.signatureModal = true\r\n      } else {\r\n        this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n      }\r\n    },\r\n    customLabelCommissionTypes(opt) {\r\n      let selected = this.commissionTypes.find(e => e.id == opt);\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    convertToPdf(selectedItem, forSign = false) {\r\n      return new Promise((res, rej) => {\r\n        let config = {\r\n          url: `${selectedItem.url}`,\r\n          outputtype: \".pdf\",\r\n          forSign: forSign,\r\n          key: selectedItem.key,\r\n        };\r\n        Service.convertToPdfByApi(config)\r\n            .then((rs) => {\r\n              if (rs.data.uploadPath) {\r\n                res(rs.data.uploadPath);\r\n              } else {\r\n                res(false);\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              rej(e);\r\n            });\r\n      });\r\n    },\r\n    mouseEnter() {\r\n      this.deleteQrPosition = true;\r\n    },\r\n    mouseLeave() {\r\n      this.deleteQrPosition = false;\r\n    },\r\n    mousemove() {\r\n      this.deleteQrPosition = true;\r\n    },\r\n    async signSuccess(data) {\r\n      this.loaderSign = true;\r\n      let payload = {\r\n        signedContent: data.content,\r\n        inn: data.inn,\r\n        pnfl: data.pnfl\r\n      };\r\n      switch (this.currentDoc.letterType) {\r\n        case 'DECISION_COMMISSION':\r\n          this.onlyDocSignFORBeforeProject(payload);\r\n          break;\r\n        case 'PRESCRIPTION_COMMISSION':\r\n          this.onlyDocSignFORBeforeProject(payload);\r\n          break;\r\n        case 'PROTOCOL_COMMISSION':\r\n          this.onlyDocSignFORBeforeProject(payload);\r\n          break;\r\n        case 'COMPROMISE_DECISION_SUSPEND':\r\n          this.onlyDocSignFORBeforeProject(payload);\r\n          break;\r\n        case 'COMPROMISE_DECISION_DELAY':\r\n          this.onlyDocSignFORBeforeProject(payload);\r\n          break;\r\n        case 'COMPROMISE_DECISION_RESUME':\r\n          this.onlyDocSignFORBeforeProject(payload);\r\n          break;\r\n        case 'PROTOCOL_SUSPEND':\r\n          this.onlyDocSignFORBeforeProject(payload);\r\n          break;\r\n        case 'PROTOCOL_DELAY':\r\n          this.onlyDocSignFORBeforeProject(payload);\r\n          break;\r\n        case 'PROTOCOL_RESUME':\r\n          this.onlyDocSignFORBeforeProject(payload);\r\n          break;\r\n        case 'LETTER_INVOKE':\r\n          this.onlyDocSignFORBeforeProject(payload);\r\n          break;\r\n        default:\r\n          Service.onlyDocSignFORBeforeProject(payload, this.$route.params.id,\r\n              this.x,\r\n              this.y,\r\n              this.currentPage - 1)\r\n              .then(() => {\r\n                showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                this.$router.push(\"/projects/main\");\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              })\r\n              .finally(() => {\r\n                this.loaderSign = false;\r\n                this.signatureModal = false;\r\n              });\r\n          break;\r\n      }\r\n    },\r\n    async onlyDocSignFORBeforeProject(payload) {\r\n      await Service.onlyDocSignFORBeforeProject(payload, this.$route.params.id, this.x, this.y, this.currentPage - 1)\r\n          .then(async () => {\r\n            showMsgSuccess(this.$t(\"successDocSigned\"));\r\n            await this.$router.push({ name: 'CommissionProjects' });\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          })\r\n          .finally(() => {\r\n            this.loaderSign = false;\r\n          });\r\n    },\r\n    getByIdLetter() {\r\n      this.loaderPdf = true;\r\n      Service.getByIdLetter(this.$route.params.id)\r\n          .then((rs) => {\r\n            this.currentDoc = rs.data;\r\n            this.loaderPdf = true;\r\n            if (this.currentDoc.fileType === 'pdf') {\r\n              return this.$nextTick(() => {\r\n                // this.src = pdf.createLoadingTask(`${this.baseUrl}/${this.currentDoc.url}`);\r\n                this.src = `${this.baseUrl}/${this.currentDoc.url}`;\r\n                this.loaderPdf = false;\r\n              });\r\n            }\r\n            this.convertToPdf(rs.data).then((uploadPath) => {\r\n              if (!uploadPath) {\r\n                setTimeout(() => {\r\n                  this.convertToPdf(rs.data)\r\n                      .then((uploadPath2) => {\r\n                        this.$nextTick(() => {\r\n                          let loadingTask = pdf.createLoadingTask(`${this.baseUrl}/${uploadPath2}`);\r\n                          this.src = loadingTask;\r\n                        });\r\n                        this.loaderPdf = false;\r\n                      })\r\n                      .catch((e) => {\r\n                        this.loaderPdf = false;\r\n                      });\r\n                }, 4000);\r\n              } else {\r\n                this.$nextTick(() => {\r\n                  this.src = pdf.createLoadingTask(\r\n                      `${this.baseUrl}/${uploadPath}`\r\n                  );\r\n                });\r\n                this.loaderPdf = false;\r\n              }\r\n            });\r\n          })\r\n          .catch((e) => {\r\n          })\r\n          .finally(() => {\r\n            if (this.loaderPdf) this.loaderPdf = false;\r\n          });\r\n    },\r\n    keyUpEvents(evt) {\r\n      if (evt.keyCode == 46 && this.currentPage == this.qrCodePage && this.deleteQrPosition) {\r\n        this.imgUrl = null;\r\n        this.qrCodePage = null;\r\n        this.deleteQrPosition = false;\r\n      } else if (evt.keyCode == 39 && this.currentPage != this.numPages && this.src) {\r\n        this.currentPage++;\r\n      } else if (evt.keyCode == 37 && this.currentPage > 1 && this.src) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    setCurrentPage(page) {\r\n      this.currentPage = page;\r\n    },\r\n    resize(newRect) {\r\n      this.width = newRect.width;\r\n      this.height = newRect.height;\r\n      this.y = newRect.top;\r\n      this.x = newRect.left;\r\n    },\r\n    getPdf() {\r\n      return new Promise((res, rej) => {\r\n        this.convertToPdf();\r\n        Service.getDocPdf(this.$route.params.id)\r\n            .then((rs) => {\r\n              let pdfBase64 = rs.data;\r\n              this.$nextTick(() => {\r\n                this.src = pdf.createLoadingTask(\r\n                    `data:application/pdf;base64, ${pdfBase64}`\r\n                );\r\n              });\r\n              res(rs.data);\r\n            })\r\n            .catch((e) => {\r\n              rej(e);\r\n            })\r\n            .finally(() => {\r\n              setTimeout(() => {\r\n                this.loaderPdf = false;\r\n              }, 500);\r\n            });\r\n      });\r\n    },\r\n    signData() {\r\n      if (this.src) {\r\n        if (this.qrCodePage && this.imgUrl) {\r\n          showMsgError(this.$t(\"qrcodeWaring\"));\r\n        } else {\r\n          this.loaderQrCode = true;\r\n          Service.letterQRCODE(this.$route.params.id)\r\n              .then((rs) => {\r\n                if (rs.data) {\r\n                  this.qrCodePage = this.currentPage;\r\n                  this.imgUrl = rs.data;\r\n                }\r\n              })\r\n              .catch((err) => {\r\n              })\r\n              .finally(() => {\r\n                this.loaderQrCode = false;\r\n              });\r\n        }\r\n      } else {\r\n        showMsgError(this.$t(\"docNotUploaded\"));\r\n      }\r\n    },\r\n    save() {\r\n      if (this.qrCodePage != null && this.imgUrl && this.src) {\r\n        this.signatureModal = true;\r\n      } else {\r\n        showMsgError(this.$t(\"qrcodeNotFound\"));\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.stickyHead {\r\n  margin: 0px !important;\r\n  padding: 15px !important;\r\n  border-radius: 0px;\r\n  position: fixed;\r\n  top: 70px;\r\n  left: 0;\r\n  right: 0;\r\n  background: white;\r\n  z-index: 4;\r\n  width: 100%;\r\n}\r\n</style>"]}]}