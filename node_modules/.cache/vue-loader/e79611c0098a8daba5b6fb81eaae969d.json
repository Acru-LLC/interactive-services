{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\references\\modules\\advertisement\\modules\\minimum_collections\\CreateOrUpdate.vue?vue&type=style&index=0&id=5824d0fa&scoped=true&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\references\\modules\\advertisement\\modules\\minimum_collections\\CreateOrUpdate.vue","mtime":1674799497372},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY29sLWZvcm0tbGFiZWwgew0KICAgIHBhZGRpbmctdG9wOiAwOw0KfQ0KdWwgew0KICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsNCn0NCg=="},{"version":3,"sources":["CreateOrUpdate.vue"],"names":[],"mappings":";AA28CA;AACA;AACA;AACA;AACA;AACA","file":"CreateOrUpdate.vue","sourceRoot":"src/modules/references/modules/advertisement/modules/minimum_collections","sourcesContent":["<template>\r\n    <base-create-or-update-wrapper\r\n        @save=\"save\"\r\n        has-save-suspend\r\n        :custom-title=\"isModeCreate ? $t('actions.create') : $t('actions.update')\"\r\n    >\r\n        <ValidationObserver\r\n            ref=\"observer\"\r\n            v-slot=\"{}\"\r\n        >\r\n            <b-row class=\"mb-3 justify-content-end\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                    :lg=\"isModeCreate ? '4' : '6'\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.decisionNumber\"\r\n                        :label=\"$t('column.decision_number')\"\r\n                        :placeholder=\"$t('column.decision_number')\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                    :lg=\"isModeCreate ? '4' : '6'\"\r\n                >\r\n                    <BaseDatePickerWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        :label=\"$t('column.decision_date')\"\r\n                        :placeholder=\"$t('column.decision_date')\"\r\n                        v-model=\"editingItem.decisionDate\"\r\n                        lang=\"ru\"\r\n                    ></BaseDatePickerWithValidation>\r\n                </b-col>\r\n\r\n                <!-- MINIMUM_COLLECTION_TYPE SHOW ONLY ON UPDATE -->\r\n                <b-col\r\n                    v-if=\"!isModeCreate && editingItem.isExtended\"\r\n                    class=\"mt-3\"\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <!-- <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryMinimumCollectionTypeId\"\r\n                        :options=\"minimumCollectionTypes.map(el => el.id)\"\r\n                        :label=\"$t('submodules.minimum_collection_types.title')\"\r\n                        :custom-label=\"customLabelMinimumCollectionType\"\r\n                        :placeholder=\"$t('submodules.minimum_collection_types.title')\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    /> -->\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.districtId\"\r\n                        :options=\"districts.map(e => e.id)\"\r\n                        :label=\"$t('column.district')\"\r\n                        :custom-label=\"customLabelDistrict\"\r\n                        :placeholder=\"$t('column.district')\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                    :lg=\"isModeCreate ? '4' : '6'\"\r\n                    :class=\"isModeCreate ? 'mt-md-2 mt-lg-0' : 'mt-3'\"\r\n                >\r\n                    <BaseTextareaWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.description\"\r\n                        max-rows=\"6\"\r\n                        :label=\"$t('column.reason')\"\r\n                        :placeholder=\"$t('column.reason')\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <!-- IF UPDATE MODE -->\r\n            <template v-if=\"!isModeCreate\">\r\n                <b-row class=\"mb-3\">\r\n                    <b-col\r\n                        sm=\"12\"\r\n                        md=\"6\"\r\n                    >\r\n                        <BaseMultiselectWithValidation\r\n                            rules=\"required\"\r\n                            class=\"required\"\r\n                            v-model=\"editingItem.regionId\"\r\n                            @select=\"regionSelected($event, editingItem.directoryAdvertisementLocationTypeId)\"\r\n                            :options=\"regions.map(el => el.id)\"\r\n                            :label=\"$t('column.region')\"\r\n                            :custom-label=\"customLabelRegion\"\r\n                            :placeholder=\"$t('column.region')\"\r\n                            open-direction=\"bottom\"\r\n                            :max-height=\"600\"\r\n                            :show-labels=\"false\"\r\n                        />\r\n                    </b-col>\r\n                    <b-col\r\n                        sm=\"12\"\r\n                        md=\"6\"\r\n                    >\r\n                        <BaseMultiselectWithValidation\r\n                            rules=\"required\"\r\n                            class=\"required\"\r\n                            v-model=\"editingItem.unitId\"\r\n                            :options=\"units.map(el => el.id)\"\r\n                            :label=\"$t('column.unit')\"\r\n                            :custom-label=\"customLabelUnit\"\r\n                            :placeholder=\"$t('column.unit')\"\r\n                            open-direction=\"bottom\"\r\n                            :max-height=\"600\"\r\n                            :show-labels=\"false\"\r\n                        />\r\n                    </b-col>\r\n                </b-row>\r\n\r\n                <b-row class=\"mb-3\">\r\n                    <b-col\r\n                        sm=\"12\"\r\n                        md=\"6\"\r\n                    >\r\n                        <BaseMultiselectWithValidation\r\n                            rules=\"required\"\r\n                            class=\"required\"\r\n                            v-model=\"editingItem.directoryAdvertisementLocationTypeId\"\r\n                            @select=\"adLocationTypeSelected\"\r\n                            :options=\"adLocationTypes.map(el => el.id)\"\r\n                            :label=\"$t('column.ad_location_type')\"\r\n                            :custom-label=\"customLabelAdLocationType\"\r\n                            :placeholder=\"$t('column.ad_location_type')\"\r\n                            open-direction=\"bottom\"\r\n                            :max-height=\"600\"\r\n                            :show-labels=\"false\"\r\n                        />\r\n                    </b-col>\r\n                    <b-col\r\n                        sm=\"12\"\r\n                        md=\"6\"\r\n                    >\r\n                        <BaseMultiselectWithValidation\r\n                            rules=\"required\"\r\n                            class=\"required\"\r\n                            v-model=\"editingItem.directoryAdvertisementDesignTypeId\"\r\n                            :options=\"adDesignTypes.map(el => el.id)\"\r\n                            :label=\"$t('column.ad_design_type')\"\r\n                            :custom-label=\"customLabelAdDesignType\"\r\n                            :placeholder=\"$t('column.ad_design_type')\"\r\n                            open-direction=\"bottom\"\r\n                            :max-height=\"600\"\r\n                            :show-labels=\"false\"\r\n                        />\r\n                    </b-col>\r\n                </b-row>\r\n                <b-row class=\"mb-3\">\r\n                    <b-col\r\n                        sm=\"12\"\r\n                        md=\"6\"\r\n                    >\r\n                        <BaseInputWithValidation\r\n                            rules=\"required|positiveNotZero\"\r\n                            class=\"required\"\r\n                            v-model=\"editingItem.cost\"\r\n                            :label=\"$t('column.minimum_collection')\"\r\n                            :placeholder=\"$t('column.minimum_collection')\"\r\n                        />\r\n                    </b-col>\r\n                    <b-col\r\n                        sm=\"12\"\r\n                        md=\"6\"\r\n                    >\r\n                        <BaseMultiselectWithValidation\r\n                            not-required\r\n                            v-model=\"editingItem.directoryAdvertisementVolumeTypeId\"\r\n                            :options=\"adVolumeTypes.map(el => el.id)\"\r\n                            :label=\"$t('submodules.ad_volume_types.title')\"\r\n                            :custom-label=\"customLabelAdVolumeType\"\r\n                            :placeholder=\"$t('submodules.ad_volume_types.title')\"\r\n                            open-direction=\"bottom\"\r\n                            :max-height=\"600\"\r\n                            :show-labels=\"false\"\r\n                        />\r\n                    </b-col>\r\n                </b-row>\r\n                <b-row class=\"mb-3\">\r\n                    <b-col\r\n                        sm=\"12\"\r\n                        md=\"6\"\r\n                    >\r\n                        <BaseSelectWithValidation\r\n                            v-model=\"editingItem.statusId\"\r\n                            class=\"required\"\r\n                            rules=\"required\"\r\n                            :label=\"$t('column.status')\"\r\n                            value-field=\"id\"\r\n                        >\r\n                            <template #first>\r\n                                <b-form-select-option\r\n                                    :value=\"null\"\r\n                                    disabled\r\n                                >{{ $t('column.status') }}</b-form-select-option>\r\n                                <b-form-select-option\r\n                                    v-for=\"(status, index) in statuses\"\r\n                                    :key=\"`${status}-${index}`\"\r\n                                    :value=\"status.id\"\r\n                                >{{\r\n                                  getName({\r\n                                    nameRu: status.nameRu,\r\n                                    nameLt: status.nameLt,\r\n                                    nameUz: status.nameUz,\r\n                                  })\r\n                                }}\r\n                                </b-form-select-option>\r\n                            </template>\r\n                        </BaseSelectWithValidation>\r\n                    </b-col>\r\n                    <b-col\r\n                        sm=\"12\"\r\n                        md=\"6\"\r\n                    >\r\n                    </b-col>\r\n                </b-row>\r\n            </template>\r\n\r\n            <!-- IF CREATE MODE -->\r\n            <template v-else>\r\n                <hr>\r\n                <div class=\"inner-title d-flex justify-content-between align-items-center mb-3\">\r\n                    <span></span>\r\n                    <div>\r\n                        <h5 class=\"m-0\">{{ $t('column.minimum_collections') }} <span class=\"text-danger\">*</span></h5>\r\n                    </div>\r\n                    <b-btn\r\n                        variant=\"info\"\r\n                        class=\"text-capitalize\"\r\n                        @click=\"createOrUpdateItem('create')\"\r\n                    >\r\n                        {{ $t(\"actions.create\") }}\r\n                    </b-btn>\r\n                </div>\r\n                <!-- Table data -->\r\n                <b-table\r\n                    :items=\"minimumCollections\"\r\n                    :fields=\"tableFields\"\r\n                    id=\"my-table\"\r\n                    class=\"custom-b-table\"\r\n                    responsive\r\n                    striped\r\n                    bordered\r\n                    small\r\n                    hover\r\n                    show-empty\r\n                >\r\n                    <!-- NUMBER OF ITEM -->\r\n                    <template #cell(index)=\"data\">\r\n                        {{ util_paginate(data.index, var_default_search_payload.page, var_default_search_payload.itemsPerPage) }}\r\n                    </template>\r\n\r\n                    <!-- NAME -->\r\n                    <template #cell(name)=\"data\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                            <p\r\n                                class=\"mb-0 d-flex align-items-center\"\r\n                                style=\"flex-basis: 0; flex-grow: 1; gap: .3rem;\"\r\n                            ><span class=\"badge bg-primary\">ЎЗ</span> : <span> {{ data.item.nameUz }}</span></p>\r\n                            <p\r\n                                class=\"mb-0 d-flex align-items-center\"\r\n                                style=\"flex-basis: 0; flex-grow: 1; gap: .3rem;\"\r\n                            ><span class=\"badge bg-primary\">O'Z</span> &nbsp;:&nbsp; <span> {{ data.item.nameLt }}</span></p>\r\n                            <p\r\n                                class=\"mb-0 d-flex align-items-center\"\r\n                                style=\"flex-basis: 0; flex-grow: 1; gap: .3rem;\"\r\n                            ><span class=\"badge bg-primary\">РУ</span> &nbsp;:&nbsp; <span> {{ data.item.nameRu }}</span></p>\r\n                        </div>\r\n                    </template>\r\n\r\n                    <!-- ADVERTISEMENT LOCATION TYPE NAME -->\r\n                    <template #cell(advertisementLocationTypeName)=\"data\">\r\n                        <p>\r\n                            {{\r\n                        getName({\r\n                          nameRu: data.item.directoryAdvertisementLocationTypeNameRu,\r\n                          nameLt: data.item.directoryAdvertisementLocationTypeNameLt,\r\n                          nameUz: data.item.directoryAdvertisementLocationTypeNameUz,\r\n                        })\r\n                      }}\r\n                        </p>\r\n                    </template>\r\n\r\n                    <!-- ADVERTISEMENT DESIGN TYPE NAME -->\r\n                    <template #cell(advertisementDesignTypeName)=\"data\">\r\n                        <p>\r\n                            {{\r\n                        getName({\r\n                          nameRu: data.item.directoryAdvertisementDesignTypeNameRu,\r\n                          nameLt: data.item.directoryAdvertisementDesignTypeNameLt,\r\n                          nameUz: data.item.directoryAdvertisementDesignTypeNameUz,\r\n                        })\r\n                      }}\r\n                        </p>\r\n                    </template>\r\n\r\n                    <!-- ADVERTISEMENT VOLUME TYPE NAME -->\r\n                    <template #cell(advertisementVolumeTypeName)=\"data\">\r\n                        <p>\r\n                            {{\r\n                        getName({\r\n                          nameRu: data.item.directoryAdvertisementVolumeTypeNameRu,\r\n                          nameLt: data.item.directoryAdvertisementVolumeTypeNameLt,\r\n                          nameUz: data.item.directoryAdvertisementVolumeTypeNameUz,\r\n                        })\r\n                      }}\r\n                        </p>\r\n                    </template>\r\n\r\n                    <!-- UNIT SHORT NAME -->\r\n                    <template #cell(unitShortName)=\"data\">\r\n                        <p>\r\n                            {{\r\n                        getName({\r\n                          nameRu: data.item.unitShortNameRu,\r\n                          nameLt: data.item.unitShortNameLt,\r\n                          nameUz: data.item.unitShortNameUz,\r\n                        })\r\n                      }}\r\n                        </p>\r\n                    </template>\r\n\r\n                    <!-- REGION -->\r\n                    <template #cell(regionName)=\"data\">\r\n                        <p>\r\n                            {{\r\n                        getName({\r\n                          nameRu: data.item.regionNameRu,\r\n                          nameLt: data.item.regionNameLt,\r\n                          nameUz: data.item.regionNameUz,\r\n                        })\r\n                      }}\r\n                        </p>\r\n                    </template>\r\n\r\n                    <!-- DISTRICT -->\r\n                    <template #cell(districtName)=\"data\">\r\n                        <p>\r\n                            {{\r\n                        getName({\r\n                          nameRu: data.item.districtNameRu,\r\n                          nameLt: data.item.districtNameLt,\r\n                          nameUz: data.item.districtNameUz,\r\n                        })\r\n                      }}\r\n                        </p>\r\n                    </template>\r\n\r\n                    <!-- STATUS -->\r\n                    <template #cell(status)=\"data\">\r\n                        <p>\r\n                            {{\r\n                        getName({\r\n                          nameRu: data.item.statusNameRu,\r\n                          nameLt: data.item.statusNameLt,\r\n                          nameUz: data.item.statusNameUz,\r\n                        })\r\n                      }}\r\n                        </p>\r\n                    </template>\r\n\r\n                    <!-- ACTIONS -->\r\n                    <template #cell(actions)=\"data\">\r\n                        <div class=\"general-table__actions d-flex justify-content-center\">\r\n                            <b-btn\r\n                                variant=\"link\"\r\n                                class=\"text-decoration-none p-0\"\r\n                                style=\"font-size: 1.2rem; margin-right: 1rem;\"\r\n                                @click=\"editItem(data.item, data.index)\"\r\n                            >\r\n                                <i class=\"mdi mdi-circle-edit-outline edit\"></i>\r\n                            </b-btn>\r\n                            <b-btn\r\n                                variant=\"link\"\r\n                                class=\"text-decoration-none p-0 text-danger\"\r\n                                style=\"font-size: 1.2rem;\"\r\n                                @click=\"deleteItem(data.item, data.index)\"\r\n                            >\r\n                                <i class=\"mdi mdi-trash-can delete\"></i>\r\n                            </b-btn>\r\n                        </div>\r\n                    </template>\r\n\r\n                    <!-- EMPTY SLOT -->\r\n                    <template #empty=\"\">\r\n                        <h4 class=\"text-center\">{{ $t('messages.data_not_found') }}</h4>\r\n                    </template>\r\n                </b-table>\r\n\r\n                <!-- MULTIPLE - MINIMUM_COLLECTIONS CREATE MODAL -->\r\n                <b-modal\r\n                    v-model=\"createMultipleMinimumCollectionsModal\"\r\n                    id=\"create-multiple-min-collections-modal-id\"\r\n                    size=\"xl\"\r\n                    :title=\"$t('column.minimum_collections')\"\r\n                    title-class=\"font-18\"\r\n                    :ok-title=\"$t('actions.save')\"\r\n                    ok-variant=\"success\"\r\n                    @ok=\"saveMultipleMinimumCollections\"\r\n                    :cancel-title=\"$t('actions.cancel')\"\r\n                    cancel-variant=\"danger\"\r\n                    no-close-on-backdrop\r\n                    no-close-on-esc\r\n                >\r\n                    <ValidationObserver\r\n                        ref=\"multiple-minimum-collections-observer\"\r\n                        v-slot=\"{}\"\r\n                    >\r\n                        <b-row class=\"mb-3\">\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseMultiselectWithValidation\r\n                                    rules=\"required\"\r\n                                    class=\"required\"\r\n                                    v-model=\"editingItemForMultiple.region\"\r\n                                    @select=\"regionSelected($event, editingItemForMultiple.directoryAdvertisementLocationType ? editingItemForMultiple.directoryAdvertisementLocationType.id : null)\"\r\n                                    :options=\"regions\"\r\n                                    :label=\"$t('column.region')\"\r\n                                    :custom-label=\"customLabelRegion\"\r\n                                    :placeholder=\"$t('column.region')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n                            </b-col>\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <div class=\"form-check form-check-right\">\r\n                                    <input\r\n                                        v-model=\"editingItemForMultiple.isExtended\"\r\n                                        class=\"form-check-input\"\r\n                                        type=\"checkbox\"\r\n                                        id=\"formCheckIsLegal\"\r\n                                    />\r\n                                    <label\r\n                                        class=\"form-check-label font-weight-normal\"\r\n                                        for=\"formCheckIsLegal\"\r\n                                    >\r\n                                        {{ $t('actions.select_district') }}\r\n                                    </label>\r\n                                </div>\r\n\r\n                            </b-col>\r\n                        </b-row>\r\n                        <!-- DISTRICTS ROW -->\r\n                        <b-row\r\n                            v-if=\"editingItemForMultiple.isExtended\"\r\n                            class=\"mb-3\"\r\n                        >\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseMultiselectWithValidation\r\n                                    rules=\"required\"\r\n                                    class=\"required\"\r\n                                    multiple\r\n                                    :close-on-select=\"false\"\r\n                                    :hide-selected=\"true\"\r\n                                    track-by=\"id\"\r\n                                    v-model=\"editingItemForMultiple.districts\"\r\n                                    :options=\"districts\"\r\n                                    :label=\"$t('column.district')\"\r\n                                    :custom-label=\"customLabelDistrict\"\r\n                                    :placeholder=\"$t('column.district')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n                            </b-col>\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n\r\n                            </b-col>\r\n                        </b-row>\r\n\r\n                        <b-row class=\"mb-3\">\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseMultiselectWithValidation\r\n                                    rules=\"required\"\r\n                                    class=\"required\"\r\n                                    v-model=\"editingItemForMultiple.directoryAdvertisementLocationType\"\r\n                                    @select=\"adLocationTypeSelected\"\r\n                                    :options=\"adLocationTypes\"\r\n                                    :label=\"$t('column.ad_location_type')\"\r\n                                    :custom-label=\"customLabelAdLocationType\"\r\n                                    :placeholder=\"$t('column.ad_location_type')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n                            </b-col>\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseMultiselectWithValidation\r\n                                    rules=\"required\"\r\n                                    class=\"required\"\r\n                                    v-model=\"editingItemForMultiple.unit\"\r\n                                    :options=\"units\"\r\n                                    :label=\"$t('column.unit')\"\r\n                                    :custom-label=\"customLabelUnit\"\r\n                                    :placeholder=\"$t('column.unit')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n\r\n                            </b-col>\r\n                        </b-row>\r\n                        <b-row class=\"mb-3\">\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseMultiselectWithValidation\r\n                                    rules=\"required\"\r\n                                    class=\"required\"\r\n                                    multiple\r\n                                    :close-on-select=\"false\"\r\n                                    :hide-selected=\"true\"\r\n                                    v-model=\"editingItemForMultiple.directoryAdvertisementDesignTypes\"\r\n                                    track-by=\"id\"\r\n                                    :options=\"adDesignTypes\"\r\n                                    :label=\"$t('column.ad_design_type')\"\r\n                                    :custom-label=\"customLabelAdDesignType\"\r\n                                    :placeholder=\"$t('column.ad_design_type')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n                            </b-col>\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseSelectWithValidation\r\n                                    v-model=\"editingItemForMultiple.statusId\"\r\n                                    class=\"required\"\r\n                                    rules=\"required\"\r\n                                    :label=\"$t('column.status')\"\r\n                                    value-field=\"id\"\r\n                                >\r\n                                    <template #first>\r\n                                        <b-form-select-option\r\n                                            :value=\"null\"\r\n                                            disabled\r\n                                        >{{ $t('column.status') }}</b-form-select-option>\r\n                                        <b-form-select-option\r\n                                            v-for=\"(status, index) in statuses\"\r\n                                            :key=\"`${status}-${index}`\"\r\n                                            :value=\"status.id\"\r\n                                        >{{\r\n                                          getName({\r\n                                            nameRu: status.nameRu,\r\n                                            nameLt: status.nameLt,\r\n                                            nameUz: status.nameUz,\r\n                                          })\r\n                                        }}\r\n                                        </b-form-select-option>\r\n                                    </template>\r\n                                </BaseSelectWithValidation>\r\n                            </b-col>\r\n                        </b-row>\r\n                        <b-row class=\"mb-3\">\r\n                            <b-col cols=\"12\">\r\n                                <BaseMultiselectWithValidation\r\n                                    not-required\r\n                                    multiple\r\n                                    :close-on-select=\"false\"\r\n                                    :hide-selected=\"true\"\r\n                                    v-model=\"editingItemForMultiple.directoryAdvertisementVolumeTypes\"\r\n                                    track-by=\"id\"\r\n                                    @input=\"adVolumeTypesSelected\"\r\n                                    :options=\"adVolumeTypes\"\r\n                                    :label=\"$t('submodules.ad_volume_types.title')\"\r\n                                    :custom-label=\"customLabelAdVolumeType\"\r\n                                    :placeholder=\"$t('submodules.ad_volume_types.title')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n                            </b-col>\r\n                        </b-row>\r\n                        <!-- MINIMAL COLLECTION COSTS  -->\r\n                        <!-- EXTENDED WITH AD_VOLUME_TYPES -->\r\n                        <b-row v-if=\"showVolumeTypesRow\">\r\n                            <hr v-if=\"showVolumeTypesRow\">\r\n                            <b-col\r\n                                v-for=\"(adVolumeType, index) in editingItemForMultiple.directoryAdvertisementVolumeTypes\"\r\n                                :key=\"`ad-volume-type-${index}`\"\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                                class=\"mb-3\"\r\n                            >\r\n                                <BaseInputWithValidation\r\n                                    rules=\"required|positiveNotZero\"\r\n                                    class=\"required\"\r\n                                    v-model=\"adVolumeType.cost\"\r\n                                    :label=\"`(M) ${adVolumeType.nameUz}`\"\r\n                                />\r\n                            </b-col>\r\n                        </b-row>\r\n                        <!-- NOT_EXTENDED -->\r\n                        <b-row v-else>\r\n                            <hr v-if=\"editingItemForMultiple.directoryAdvertisementDesignTypes ? editingItemForMultiple.directoryAdvertisementDesignTypes.length : false\">\r\n                            <b-col\r\n                                v-for=\"(adDesignType, index) in editingItemForMultiple.directoryAdvertisementDesignTypes\"\r\n                                :key=\"`ad-design-type-${index}`\"\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                                class=\"mb-3\"\r\n                            >\r\n                                <BaseInputWithValidation\r\n                                    rules=\"required|positiveNotZero\"\r\n                                    class=\"required\"\r\n                                    v-model=\"adDesignType.cost\"\r\n                                    :label=\"`(M) ${adDesignType.nameUz}`\"\r\n                                    :placeholder=\"adDesignType.nameUz\"\r\n                                />\r\n                            </b-col>\r\n                        </b-row>\r\n                    </ValidationObserver>\r\n                </b-modal>\r\n\r\n                <!-- SINGLE - MINIMUM_COLLECTION UPDATE (ON CREATE MODE) MODAL -->\r\n                <b-modal\r\n                    v-model=\"singleMinimumCollectionUpdateModal\"\r\n                    id=\"update-single-modal-id\"\r\n                    size=\"xl\"\r\n                    title=\"Minimal o'zgartirish\"\r\n                    title-class=\"font-18\"\r\n                    :ok-title=\"$t('actions.save')\"\r\n                    ok-variant=\"success\"\r\n                    @ok=\"updateSingleMinimumCollection\"\r\n                    :cancel-title=\"$t('actions.cancel')\"\r\n                    cancel-variant=\"danger\"\r\n                    no-close-on-backdrop\r\n                    no-close-on-esc\r\n                >\r\n                    <ValidationObserver\r\n                        ref=\"single-minimum-collection-update-observer\"\r\n                        v-slot=\"{}\"\r\n                    >\r\n                        <b-row class=\"mb-3\">\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseMultiselectWithValidation\r\n                                    rules=\"required\"\r\n                                    class=\"required\"\r\n                                    v-model=\"currentEditingItem.regionId\"\r\n                                    @select=\"regionSelected($event, currentEditingItem.directoryAdvertisementLocationTypeId)\"\r\n                                    :options=\"regions.map(el => el.id)\"\r\n                                    :label=\"$t('column.region')\"\r\n                                    :custom-label=\"customLabelRegion\"\r\n                                    :placeholder=\"$t('column.region')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n                            </b-col>\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseMultiselectWithValidation\r\n                                    rules=\"required\"\r\n                                    class=\"required\"\r\n                                    v-model=\"currentEditingItem.unitId\"\r\n                                    :options=\"units.map(el => el.id)\"\r\n                                    :label=\"$t('column.unit')\"\r\n                                    :custom-label=\"customLabelUnit\"\r\n                                    :placeholder=\"$t('column.unit')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n                            </b-col>\r\n                        </b-row>\r\n\r\n                        <!-- MINIMUM_COLLECTION_TYPES ROW -->\r\n                        <b-row\r\n                            v-if=\"currentEditingItem.isExtended\"\r\n                            class=\"mb-3\"\r\n                        >\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <!-- <BaseMultiselectWithValidation\r\n                                    rules=\"required\"\r\n                                    class=\"required\"\r\n                                    v-model=\"currentEditingItem.directoryMinimumCollectionTypeId\"\r\n                                    :options=\"minimumCollectionTypes.map(el => el.id)\"\r\n                                    :label=\"$t('submodules.minimum_collection_types.title')\"\r\n                                    :custom-label=\"customLabelMinimumCollectionType\"\r\n                                    :placeholder=\"$t('submodules.minimum_collection_types.title')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                /> -->\r\n                                <BaseMultiselectWithValidation\r\n                                    rules=\"required\"\r\n                                    class=\"required\"\r\n                                    v-model=\"currentEditingItem.districtId\"\r\n                                    :options=\"districts.map(e => e.id)\"\r\n                                    :label=\"$t('column.district')\"\r\n                                    :custom-label=\"customLabelDistrict\"\r\n                                    :placeholder=\"$t('column.district')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n                            </b-col>\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n\r\n                            </b-col>\r\n                        </b-row>\r\n\r\n                        <b-row class=\"mb-3\">\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseMultiselectWithValidation\r\n                                    rules=\"required\"\r\n                                    class=\"required\"\r\n                                    v-model=\"currentEditingItem.directoryAdvertisementLocationTypeId\"\r\n                                    @select=\"adLocationTypeSelected\"\r\n                                    :options=\"adLocationTypes.map(el => el.id)\"\r\n                                    :label=\"$t('column.ad_location_type')\"\r\n                                    :custom-label=\"customLabelAdLocationType\"\r\n                                    :placeholder=\"$t('column.ad_location_type')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n                            </b-col>\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseSelectWithValidation\r\n                                    v-model=\"currentEditingItem.statusId\"\r\n                                    class=\"required\"\r\n                                    rules=\"required\"\r\n                                    :label=\"$t('column.status')\"\r\n                                    value-field=\"id\"\r\n                                >\r\n                                    <template #first>\r\n                                        <b-form-select-option\r\n                                            :value=\"null\"\r\n                                            disabled\r\n                                        >{{ $t('column.status') }}</b-form-select-option>\r\n                                        <b-form-select-option\r\n                                            v-for=\"(status, index) in statuses\"\r\n                                            :key=\"`${status}-${index}`\"\r\n                                            :value=\"status.id\"\r\n                                        >{{\r\n                                          getName({\r\n                                            nameRu: status.nameRu,\r\n                                            nameLt: status.nameLt,\r\n                                            nameUz: status.nameUz,\r\n                                          })\r\n                                        }}\r\n                                        </b-form-select-option>\r\n                                    </template>\r\n                                </BaseSelectWithValidation>\r\n                            </b-col>\r\n                        </b-row>\r\n                        <b-row class=\"mb-3\">\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseMultiselectWithValidation\r\n                                    rules=\"required\"\r\n                                    class=\"required\"\r\n                                    v-model=\"currentEditingItem.directoryAdvertisementDesignTypeId\"\r\n                                    :options=\"adDesignTypes.map(el => el.id)\"\r\n                                    :label=\"$t('column.ad_design_type')\"\r\n                                    :custom-label=\"customLabelAdDesignType\"\r\n                                    :placeholder=\"$t('column.ad_design_type')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n                            </b-col>\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseInputWithValidation\r\n                                    rules=\"required|positiveNotZero\"\r\n                                    class=\"required\"\r\n                                    v-model=\"currentEditingItem.cost\"\r\n                                    :label=\"$t('column.minimum_collection')\"\r\n                                    :placeholder=\"$t('column.minimum_collection')\"\r\n                                />\r\n                            </b-col>\r\n                        </b-row>\r\n                        <b-row class=\"mb-3\">\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                                <BaseMultiselectWithValidation\r\n                                    not-required\r\n                                    v-model=\"currentEditingItem.directoryAdvertisementVolumeTypeId\"\r\n                                    :options=\"adVolumeTypes.map(el => el.id)\"\r\n                                    :label=\"$t('submodules.ad_volume_types.title')\"\r\n                                    :custom-label=\"customLabelAdVolumeType\"\r\n                                    :placeholder=\"$t('submodules.ad_volume_types.title')\"\r\n                                    open-direction=\"bottom\"\r\n                                    :max-height=\"600\"\r\n                                    :show-labels=\"false\"\r\n                                />\r\n                            </b-col>\r\n                            <b-col\r\n                                sm=\"12\"\r\n                                md=\"6\"\r\n                            >\r\n                            </b-col>\r\n                        </b-row>\r\n                    </ValidationObserver>\r\n                </b-modal>\r\n            </template>\r\n\r\n        </ValidationObserver>\r\n    </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'directory/minimum-collections'\r\nconst MAIN_API_URL_EXTENDED = 'directory/extended-minimum-collections'\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport helperService from \"@/shared/services/helper.service\"\r\n\r\nexport default {\r\n    name: \"CreateOrUpdate\",\r\n    /*\r\n    * COMPONENTS */\r\n    components: {\r\n\r\n    },\r\n    /*\r\n    * DATA */\r\n    data () {\r\n        return {\r\n            editingItem: {},\r\n            showVolumeTypesRow: false,\r\n            editingItemForMultiple: {},\r\n            currentEditingItem: {},\r\n            minimumCollections: [],\r\n            createMultipleMinimumCollectionsModal: false,\r\n            singleMinimumCollectionUpdateModal: false,\r\n            statuses: [],\r\n            regions: [],\r\n            units: [],\r\n            adLocationTypes: [],\r\n            adDesignTypes: [],\r\n            adVolumeTypes: [],\r\n            districts: [],\r\n            adDesignTypesByMinCollTypeForExtended: [],\r\n            tableFields: [\r\n                {\r\n                    label: \"#\",\r\n                    thClass: \"text-center\",\r\n                    tdClass: \"text-center\",\r\n                    sortable: false,\r\n                    key: \"index\",\r\n                },\r\n                { label: this.$t('column.ad_location_type'), key: \"advertisementLocationTypeName\" },\r\n                { label: this.$t('column.ad_design_type'), key: \"advertisementDesignTypeName\" },\r\n                { label: this.$t('submodules.ad_volume_types.title'), key: \"advertisementVolumeTypeName\" },\r\n                { label: this.$t('column.region'), key: \"regionName\" },\r\n                { label: this.$t('column.district'), key: \"districtName\" },\r\n                { label: this.$t('column.unit'), key: \"unitShortName\" },\r\n                { label: this.$t('column.minimum_collection'), key: \"cost\" },\r\n                { label: this.$t('column.status'), key: \"status\" },\r\n                {\r\n                    label: this.$t('column.actions'),\r\n                    key: \"actions\",\r\n                    thClass: \"text-center\",\r\n                    tdClass: \"text-center\",\r\n                    sortable: false\r\n                },\r\n            ],\r\n        }\r\n    },\r\n    /*\r\n    * COMPUTED */\r\n    computed: {\r\n        isModeCreate () {\r\n            return this.$route.name === 'CreateMinimumCollection'\r\n        },\r\n        isOnExtendedPage () {\r\n            return this.$route.name === 'UpdateMinimumCollectionExtended'\r\n        },\r\n        computedObserver () {\r\n            return this.$refs.observer\r\n        },\r\n        multipleMinimumCollectionsComputedObserver () {\r\n            return this.$refs['multiple-minimum-collections-observer']\r\n        },\r\n        singleMinimumCollectionUpdateComputedObserver () {\r\n            return this.$refs['single-minimum-collection-update-observer']\r\n        }\r\n    },\r\n    /*\r\n    * METHODS */\r\n    methods: {\r\n        adVolumeTypesSelected () {\r\n            this.showVolumeTypesRow = false\r\n            if (this.editingItemForMultiple.directoryAdvertisementVolumeTypes.length > 0) {\r\n                this.showVolumeTypesRow = true\r\n            }\r\n        },\r\n        async regionSelected ($event, adLocationTypeId, dontResetDistrict = false) {\r\n            if (!dontResetDistrict) {\r\n                this.editingItem.districtId = null\r\n                this.editingItemForMultiple.districts = []\r\n                this.currentEditingItem.districtId = null\r\n                // RESET AD_DESIGN_TYPE\r\n                this.editingItem.directoryAdvertisementDesignTypeId = null\r\n                this.editingItemForMultiple.directoryAdvertisementDesignTypes = []\r\n                this.currentEditingItem.directoryAdvertisementDesignTypeId = null\r\n            }\r\n            // GET DISTRICTS\r\n            if ($event) {\r\n                if (adLocationTypeId) {\r\n                    // GET AD_DESIGN_TYPES\r\n                    helperService\r\n                        .getAdDesignTypesByAdLocationTypeId(adLocationTypeId, $event.id ? $event.id : $event)\r\n                        .then((res) => {\r\n                            this.adDesignTypes = res.data\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                        })\r\n                }\r\n                if (this.isModeCreate || this.editingItem.isExtended) {\r\n                    await helperService.getGeoLocationsByParentId($event.id ? $event.id : $event)\r\n                        .then(res => {\r\n                            this.districts = res.data\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                        })\r\n                }\r\n            }\r\n        },\r\n        /* makeDirectoryAdDesignTypesForExtended () {\r\n            if (this.editingItemForMultiple.isExtended) {\r\n                this.adDesignTypesByMinCollTypeForExtended = []\r\n                if (!this.editingItemForMultiple.directoryMinimumCollectionTypes) {\r\n                    this.editingItemForMultiple.directoryMinimumCollectionTypes = []\r\n                }\r\n                this.editingItemForMultiple.directoryMinimumCollectionTypes.forEach(minCollectionType => {\r\n                    let tempMinCollTypeWithDesignType = {\r\n                        minCollectionTypeId: null,\r\n                        minCollectionTypeNameUz: '',\r\n                        adDesignTypesByMinCollectionType: []\r\n                    }\r\n                    this.$set(tempMinCollTypeWithDesignType, 'minCollectionTypeId', minCollectionType.id)\r\n                    this.$set(tempMinCollTypeWithDesignType, 'minCollectionTypeNameUz', minCollectionType.nameUz)\r\n\r\n                    if (!this.editingItemForMultiple.directoryAdvertisementDesignTypes) {\r\n                        this.editingItemForMultiple.directoryAdvertisementDesignTypes = []\r\n                    }\r\n                    this.editingItemForMultiple.directoryAdvertisementDesignTypes.forEach(adDesignType => {\r\n                        let tempAdDesignType = Object.assign({}, adDesignType)\r\n                        tempMinCollTypeWithDesignType.adDesignTypesByMinCollectionType.push(tempAdDesignType)\r\n                    })\r\n                    this.adDesignTypesByMinCollTypeForExtended.push(tempMinCollTypeWithDesignType)\r\n                })\r\n            }\r\n        }, */\r\n        updateSingleMinimumCollection (e) {\r\n            e.preventDefault();\r\n            // TODO: DUBLICATE LIKKA TEKSHIR (XUDDI SHUNDAYI TABLE GA QO'SHILMAGAN BO'LSIN)\r\n            this.singleMinimumCollectionUpdateComputedObserver.validate().then(valid => {\r\n                if (valid) {\r\n                    if (this.currentEditingItem.isExtended) {\r\n                        this.currentEditingItem.districtNameUz = this.districts.find(el => el.id == this.currentEditingItem.districtId).nameUz\r\n                        this.currentEditingItem.districtNameRu = this.districts.find(el => el.id == this.currentEditingItem.districtId).nameRu\r\n                        this.currentEditingItem.districtNameLt = this.districts.find(el => el.id == this.currentEditingItem.districtId).nameLt\r\n                        this.currentEditingItem.directoryAdvertisementDesignTypeNameUz = this.adDesignTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementDesignTypeId).nameUz\r\n                        this.currentEditingItem.directoryAdvertisementDesignTypeNameRu = this.adDesignTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementDesignTypeId).nameRu\r\n                        this.currentEditingItem.directoryAdvertisementDesignTypeNameLt = this.adDesignTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementDesignTypeId).nameLt\r\n\r\n                        this.currentEditingItem.directoryAdvertisementVolumeTypeNameUz = this.currentEditingItem.directoryAdvertisementVolumeTypeId ? this.adVolumeTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementVolumeTypeId).nameUz : null\r\n                        this.currentEditingItem.directoryAdvertisementVolumeTypeNameRu = this.currentEditingItem.directoryAdvertisementVolumeTypeId ? this.adVolumeTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementVolumeTypeId).nameRu : null\r\n                        this.currentEditingItem.directoryAdvertisementVolumeTypeNameLt = this.currentEditingItem.directoryAdvertisementVolumeTypeId ? this.adVolumeTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementVolumeTypeId).nameLt : null\r\n\r\n                        this.currentEditingItem.directoryAdvertisementLocationTypeNameUz = this.adLocationTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementLocationTypeId).nameUz\r\n                        this.currentEditingItem.directoryAdvertisementLocationTypeNameRu = this.adLocationTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementLocationTypeId).nameRu\r\n                        this.currentEditingItem.directoryAdvertisementLocationTypeNameLt = this.adLocationTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementLocationTypeId).nameLt\r\n\r\n                        this.currentEditingItem.regionNameUz = this.regions.find(el => el.id == this.currentEditingItem.regionId).nameUz\r\n                        this.currentEditingItem.regionNameRu = this.regions.find(el => el.id == this.currentEditingItem.regionId).nameRu\r\n                        this.currentEditingItem.regionNameLt = this.regions.find(el => el.id == this.currentEditingItem.regionId).nameLt\r\n                        this.currentEditingItem.statusNameUz = this.statuses.find(s => s.id == this.currentEditingItem.statusId).nameUz\r\n                        this.currentEditingItem.statusNameRu = this.statuses.find(s => s.id == this.currentEditingItem.statusId).nameRu\r\n                        this.currentEditingItem.statusNameLt = this.statuses.find(s => s.id == this.currentEditingItem.statusId).nameLt\r\n                        this.currentEditingItem.unitShortNameUz = this.units.find(el => el.id == this.currentEditingItem.unitId).shortNameUz\r\n                        this.currentEditingItem.unitShortNameRu = this.units.find(el => el.id == this.currentEditingItem.unitId).shortNameRu\r\n                        this.currentEditingItem.unitShortNameLt = this.units.find(el => el.id == this.currentEditingItem.unitId).shortNameLt\r\n\r\n                        this.$set(this.minimumCollections, this.currentEditingItem.index, this.currentEditingItem)\r\n                        this.singleMinimumCollectionUpdateModal = false\r\n                        this.currentEditingItem = Object.assign({}, {})\r\n                    } else {\r\n                        this.currentEditingItem.directoryAdvertisementDesignTypeNameUz = this.adDesignTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementDesignTypeId).nameUz\r\n                        this.currentEditingItem.directoryAdvertisementDesignTypeNameRu = this.adDesignTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementDesignTypeId).nameRu\r\n                        this.currentEditingItem.directoryAdvertisementDesignTypeNameLt = this.adDesignTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementDesignTypeId).nameLt\r\n\r\n                        this.currentEditingItem.directoryAdvertisementVolumeTypeNameUz = this.currentEditingItem.directoryAdvertisementVolumeTypeId ? this.adVolumeTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementVolumeTypeId).nameUz : null\r\n                        this.currentEditingItem.directoryAdvertisementVolumeTypeNameRu = this.currentEditingItem.directoryAdvertisementVolumeTypeId ? this.adVolumeTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementVolumeTypeId).nameRu : null\r\n                        this.currentEditingItem.directoryAdvertisementVolumeTypeNameLt = this.currentEditingItem.directoryAdvertisementVolumeTypeId ? this.adVolumeTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementVolumeTypeId).nameLt : null\r\n\r\n                        this.currentEditingItem.directoryAdvertisementLocationTypeNameUz = this.adLocationTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementLocationTypeId).nameUz\r\n                        this.currentEditingItem.directoryAdvertisementLocationTypeNameRu = this.adLocationTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementLocationTypeId).nameRu\r\n                        this.currentEditingItem.directoryAdvertisementLocationTypeNameLt = this.adLocationTypes.find(el => el.id == this.currentEditingItem.directoryAdvertisementLocationTypeId).nameLt\r\n                        this.currentEditingItem.regionNameUz = this.regions.find(el => el.id == this.currentEditingItem.regionId).nameUz\r\n                        this.currentEditingItem.regionNameRu = this.regions.find(el => el.id == this.currentEditingItem.regionId).nameRu\r\n                        this.currentEditingItem.regionNameLt = this.regions.find(el => el.id == this.currentEditingItem.regionId).nameLt\r\n                        this.currentEditingItem.statusNameUz = this.statuses.find(s => s.id == this.currentEditingItem.statusId).nameUz\r\n                        this.currentEditingItem.statusNameRu = this.statuses.find(s => s.id == this.currentEditingItem.statusId).nameRu\r\n                        this.currentEditingItem.statusNameLt = this.statuses.find(s => s.id == this.currentEditingItem.statusId).nameLt\r\n                        this.currentEditingItem.unitShortNameUz = this.units.find(el => el.id == this.currentEditingItem.unitId).shortNameUz\r\n                        this.currentEditingItem.unitShortNameRu = this.units.find(el => el.id == this.currentEditingItem.unitId).shortNameRu\r\n                        this.currentEditingItem.unitShortNameLt = this.units.find(el => el.id == this.currentEditingItem.unitId).shortNameLt\r\n\r\n                        this.$set(this.minimumCollections, this.currentEditingItem.index, this.currentEditingItem)\r\n                        this.singleMinimumCollectionUpdateModal = false\r\n                        this.currentEditingItem = Object.assign({}, {})\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        },\r\n        async adLocationTypeSelected (adLocationTypeObjectOrId, dontResetAdDesignType = false) {\r\n            if (!dontResetAdDesignType) {\r\n                // RESET AD_DESIGN_TYPE\r\n                this.editingItem.directoryAdvertisementDesignTypeId = null\r\n                this.editingItemForMultiple.directoryAdvertisementDesignTypes = []\r\n                this.currentEditingItem.directoryAdvertisementDesignTypeId = null\r\n                // RESET AD_VOLUME_TYPE\r\n                this.editingItem.directoryAdvertisementVolumeTypeId = null\r\n                this.editingItemForMultiple.directoryAdvertisementVolumeTypes = []\r\n                this.currentEditingItem.directoryAdvertisementVolumeTypeId = null\r\n            }\r\n            if (adLocationTypeObjectOrId) {\r\n                if (this.isModeCreate ? (this.editingItemForMultiple.region && this.editingItemForMultiple.region.id) : this.editingItem.regionId) {\r\n                    // GET AD_DESIGN_TYPES\r\n                    helperService\r\n                        .getAdDesignTypesByAdLocationTypeId(adLocationTypeObjectOrId.id ? adLocationTypeObjectOrId.id : adLocationTypeObjectOrId, this.isModeCreate ? this.editingItemForMultiple.region.id : this.editingItem.regionId)\r\n                        .then((res) => {\r\n                            this.adDesignTypes = res.data\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                        })\r\n                }\r\n                // GET AD_VOLUME_TYPES\r\n                helperService\r\n                    .getAdVolumeTypesByAdLocationTypeId(adLocationTypeObjectOrId.id ? adLocationTypeObjectOrId.id : adLocationTypeObjectOrId)\r\n                    .then((res) => {\r\n                        this.adVolumeTypes = res.data\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n            }\r\n        },\r\n        editItem (item, index) {\r\n            this.currentEditingItem = Object.assign({}, item)\r\n            this.$set(this.currentEditingItem, 'index', index)\r\n            this.singleMinimumCollectionUpdateModal = true\r\n        },\r\n        deleteItem (item, index) {\r\n            this.$bvModal.msgBoxConfirm(this.$t('messages.delete_title'), {\r\n                okTitle: this.$t('actions.confirm'),\r\n                cancelTitle: this.$t('actions.cancel')\r\n            })\r\n                .then(value => {\r\n                    if (value) {\r\n                        this.minimumCollections.splice(index, 1)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    // An error occurred\r\n                })\r\n        },\r\n        createOrUpdateItem (mode) {\r\n            if (mode == 'create') {\r\n                this.computedObserver.validate().then(valid => {\r\n                    if (valid) {\r\n                        this.editingItemForMultiple = Object.assign({}, {})\r\n                        let activeStatus = this.statuses.find(el => el.code == 'ACTIVE')\r\n                        if (activeStatus) {\r\n                            this.editingItemForMultiple.statusId = activeStatus.id\r\n                        }\r\n                        this.createMultipleMinimumCollectionsModal = true\r\n                    } else {\r\n                        this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                    }\r\n                })\r\n            }\r\n        },\r\n        resetEditingItem () {\r\n            let decisionNumber = this.editingItem.decisionNumber\r\n            let decisionDate = this.editingItem.decisionDate\r\n            let description = this.editingItem.description\r\n            this.editingItem = Object.assign({}, {})\r\n            this.$set(this.editingItem, 'decisionNumber', decisionNumber)\r\n            this.$set(this.editingItem, 'decisionDate', decisionDate)\r\n            this.$set(this.editingItem, 'description', description)\r\n        },\r\n        createMinCollectionsFromAdDesignTypesForMultipleSaveFn (eachDistrict = false, eachVolumeType = false) {\r\n            this.editingItemForMultiple.directoryAdvertisementDesignTypes.forEach(adDesignType => {\r\n                this.resetEditingItem()\r\n                if (eachDistrict) {\r\n                    this.editingItem.districtId = eachDistrict.id\r\n                    this.editingItem.districtNameUz = eachDistrict.nameUz\r\n                    this.editingItem.districtNameRu = eachDistrict.nameRu\r\n                    this.editingItem.districtNameLt = eachDistrict.nameLt\r\n                }\r\n\r\n                this.editingItem.isExtended = this.editingItemForMultiple.isExtended\r\n\r\n                this.editingItem.directoryAdvertisementDesignTypeId = adDesignType.id\r\n                this.editingItem.directoryAdvertisementDesignTypeNameUz = adDesignType.nameUz\r\n                this.editingItem.directoryAdvertisementDesignTypeNameRu = adDesignType.nameRu\r\n                this.editingItem.directoryAdvertisementDesignTypeNameLt = adDesignType.nameLt\r\n\r\n                if (eachVolumeType) {\r\n                    this.editingItem.directoryAdvertisementVolumeTypeId = eachVolumeType.id\r\n                    this.editingItem.directoryAdvertisementVolumeTypeNameUz = eachVolumeType.nameUz\r\n                    this.editingItem.directoryAdvertisementVolumeTypeNameRu = eachVolumeType.nameRu\r\n                    this.editingItem.directoryAdvertisementVolumeTypeNameLt = eachVolumeType.nameLt\r\n                    this.editingItem.cost = eachVolumeType.cost\r\n                } else {\r\n                    this.editingItem.cost = adDesignType.cost\r\n                }\r\n\r\n                this.editingItem.directoryAdvertisementLocationTypeId = this.editingItemForMultiple.directoryAdvertisementLocationType.id\r\n                this.editingItem.directoryAdvertisementLocationTypeNameUz = this.editingItemForMultiple.directoryAdvertisementLocationType.nameUz\r\n                this.editingItem.directoryAdvertisementLocationTypeNameRu = this.editingItemForMultiple.directoryAdvertisementLocationType.nameRu\r\n                this.editingItem.directoryAdvertisementLocationTypeNameLt = this.editingItemForMultiple.directoryAdvertisementLocationType.nameLt\r\n                this.editingItem.regionId = this.editingItemForMultiple.region.id\r\n                this.editingItem.regionNameUz = this.editingItemForMultiple.region.nameUz\r\n                this.editingItem.regionNameRu = this.editingItemForMultiple.region.nameRu\r\n                this.editingItem.regionNameLt = this.editingItemForMultiple.region.nameLt\r\n                this.editingItem.statusId = this.editingItemForMultiple.statusId\r\n\r\n                this.editingItem.statusNameUz = this.statuses.find(s => s.id == this.editingItemForMultiple.statusId).nameUz\r\n                this.editingItem.statusNameRu = this.statuses.find(s => s.id == this.editingItemForMultiple.statusId).nameRu\r\n                this.editingItem.statusNameLt = this.statuses.find(s => s.id == this.editingItemForMultiple.statusId).nameLt\r\n\r\n                this.editingItem.unitId = this.editingItemForMultiple.unit.id\r\n                this.editingItem.unitShortNameUz = this.editingItemForMultiple.unit.shortNameUz\r\n                this.editingItem.unitShortNameRu = this.editingItemForMultiple.unit.shortNameRu\r\n                this.editingItem.unitShortNameLt = this.editingItemForMultiple.unit.shortNameLt\r\n\r\n                let copiedItem = Object.assign({}, this.editingItem)\r\n\r\n                copiedItem.decisionNumber = this.editingItem.decisionNumber\r\n                copiedItem.createdDate = this.editingItem.createdDate\r\n                copiedItem.description = this.editingItem.description\r\n\r\n                this.minimumCollections.push(copiedItem)\r\n            })\r\n        },\r\n        saveMultipleMinimumCollections (e) {\r\n            e.preventDefault();\r\n\r\n            this.multipleMinimumCollectionsComputedObserver.validate().then(valid => {\r\n                if (valid) {\r\n\r\n                    if (this.editingItemForMultiple.isExtended) {\r\n                        this.editingItemForMultiple.districts.forEach(district => {\r\n                            if (this.editingItemForMultiple.directoryAdvertisementVolumeTypes && this.editingItemForMultiple.directoryAdvertisementVolumeTypes.length > 0) {\r\n                                this.editingItemForMultiple.directoryAdvertisementVolumeTypes.forEach(volumeType => {\r\n                                    this.createMinCollectionsFromAdDesignTypesForMultipleSaveFn(district, volumeType)\r\n                                })\r\n                            } else {\r\n                                this.createMinCollectionsFromAdDesignTypesForMultipleSaveFn(district)\r\n                            }\r\n                        })\r\n                    } else {\r\n                        if (this.editingItemForMultiple.directoryAdvertisementVolumeTypes && this.editingItemForMultiple.directoryAdvertisementVolumeTypes.length > 0) {\r\n                            this.editingItemForMultiple.directoryAdvertisementVolumeTypes.forEach(volumeType => {\r\n                                this.createMinCollectionsFromAdDesignTypesForMultipleSaveFn(false, volumeType)\r\n                            })\r\n                        } else {\r\n                            this.createMinCollectionsFromAdDesignTypesForMultipleSaveFn()\r\n                        }\r\n\r\n                        /* this.editingItemForMultiple.directoryAdvertisementDesignTypes.forEach(adDesignType => {\r\n                            this.resetEditingItem()\r\n                            this.editingItem.directoryAdvertisementDesignTypeId = adDesignType.id\r\n                            this.editingItem.directoryAdvertisementDesignTypeNameUz = adDesignType.nameUz\r\n                            this.editingItem.directoryAdvertisementDesignTypeNameRu = adDesignType.nameRu\r\n                            this.editingItem.directoryAdvertisementDesignTypeNameLt = adDesignType.nameLt\r\n                            this.editingItem.cost = adDesignType.cost\r\n\r\n                            this.editingItem.directoryAdvertisementLocationTypeId = this.editingItemForMultiple.directoryAdvertisementLocationType.id\r\n                            this.editingItem.directoryAdvertisementLocationTypeNameUz = this.editingItemForMultiple.directoryAdvertisementLocationType.nameUz\r\n                            this.editingItem.directoryAdvertisementLocationTypeNameRu = this.editingItemForMultiple.directoryAdvertisementLocationType.nameRu\r\n                            this.editingItem.directoryAdvertisementLocationTypeNameLt = this.editingItemForMultiple.directoryAdvertisementLocationType.nameLt\r\n                            this.editingItem.regionId = this.editingItemForMultiple.region.id\r\n                            this.editingItem.regionNameUz = this.editingItemForMultiple.region.nameUz\r\n                            this.editingItem.regionNameRu = this.editingItemForMultiple.region.nameRu\r\n                            this.editingItem.regionNameLt = this.editingItemForMultiple.region.nameLt\r\n                            this.editingItem.statusId = this.editingItemForMultiple.statusId\r\n\r\n                            this.editingItem.statusNameUz = this.statuses.find(s => s.id == this.editingItemForMultiple.statusId).nameUz\r\n                            this.editingItem.statusNameRu = this.statuses.find(s => s.id == this.editingItemForMultiple.statusId).nameRu\r\n                            this.editingItem.statusNameLt = this.statuses.find(s => s.id == this.editingItemForMultiple.statusId).nameLt\r\n\r\n                            this.editingItem.unitId = this.editingItemForMultiple.unit.id\r\n                            this.editingItem.unitShortNameUz = this.editingItemForMultiple.unit.shortNameUz\r\n                            this.editingItem.unitShortNameRu = this.editingItemForMultiple.unit.shortNameRu\r\n                            this.editingItem.unitShortNameLt = this.editingItemForMultiple.unit.shortNameLt\r\n\r\n                            let copiedItem = Object.assign({}, this.editingItem)\r\n\r\n                            copiedItem.decisionNumber = this.editingItem.decisionNumber\r\n                            copiedItem.createdDate = this.editingItem.createdDate\r\n                            copiedItem.description = this.editingItem.description\r\n\r\n                            this.minimumCollections.push(copiedItem)\r\n                        }) */\r\n                    }\r\n                    this.createMultipleMinimumCollectionsModal = false\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        },\r\n        customLabelAdLocationType (opt) {\r\n            let selected = this.adLocationTypes.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelDistrict (opt) {\r\n            let selected = this.districts.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdDesignType (opt) {\r\n            let selected = this.adDesignTypes.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdVolumeType (opt) {\r\n            let selected = this.adVolumeTypes.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelRegion (opt) {\r\n            let selected = this.regions.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelUnit (opt) {\r\n            let selected = this.units.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        treeClosed (veeName) {\r\n            this.computedObserver.refs[veeName].validate();\r\n        },\r\n        normalizer (node) {\r\n            if (!node.children || node.children.length === 0) {\r\n                delete node.children\r\n                return {\r\n                    id: node.id,\r\n                    label: this.getName({\r\n                        nameRu: node.nameRu,\r\n                        nameLt: node.nameLt,\r\n                        nameUz: node.nameUz,\r\n                    }),\r\n                }\r\n            }\r\n            return {\r\n                id: node.id,\r\n                label: this.getName({\r\n                    nameRu: node.nameRu,\r\n                    nameLt: node.nameLt,\r\n                    nameUz: node.nameUz,\r\n                }),\r\n                children: node.children && node.children.length > 0 ? node.children : [],\r\n            }\r\n        },\r\n        save () {\r\n            this.computedObserver.validate().then(valid => {\r\n                if (valid && (this.minimumCollections.length || !this.isModeCreate)) {\r\n                    this.minimumCollections.forEach(c => {\r\n                        c.decisionNumber = this.editingItem.decisionNumber\r\n                        c.createdDate = this.editingItem.createdDate\r\n                        c.description = this.editingItem.description\r\n                    })\r\n                    if (this.editingItem.id) {\r\n                        crudAndListsService.update(this.isOnExtendedPage ? MAIN_API_URL_EXTENDED : MAIN_API_URL, this.editingItem).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    } else {\r\n                        crudAndListsService.create(MAIN_API_URL, this.minimumCollections).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        }\r\n    },\r\n    /*\r\n    * CREATED */\r\n    async created () {\r\n        this.var_default_search_payload.itemsPerPage = 500;\r\n        if (this.isModeCreate) {\r\n            await crudAndListsService.getEmpty(MAIN_API_URL)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        } else {\r\n            await crudAndListsService.getById(this.isOnExtendedPage ? MAIN_API_URL_EXTENDED : MAIN_API_URL, this.$route.params.id, false)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n        // GET STATUSES\r\n        await helperService.getRefByCode('status')\r\n            .then(res => {\r\n                this.statuses = res.data.children\r\n                if (this.isModeCreate) {\r\n                    let activeStatus = this.statuses.find(el => el.code == 'ACTIVE')\r\n                    if (activeStatus) {\r\n                        this.editingItem.statusId = activeStatus.id\r\n                        this.editingItemForMultiple.statusId = activeStatus.id\r\n                    }\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET REGIONS\r\n        await helperService.fetchRegions()\r\n            .then(res => {\r\n                this.regions = res.data\r\n                this.regionSelected(this.editingItem.regionId, this.editingItem.directoryAdvertisementLocationTypeId, true)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET AD_LOCATION_TYPES\r\n        crudAndListsService\r\n            .searchList('directory/advertisement-location-types', this.var_default_search_payload)\r\n            .then((res) => {\r\n                this.adLocationTypes = res.data.list;\r\n                this.adLocationTypeSelected(this.editingItem.directoryAdvertisementLocationTypeId, true)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET UNITS\r\n        crudAndListsService\r\n            .searchList('directory/units', this.var_default_search_payload)\r\n            .then((res) => {\r\n                this.units = res.data.list;\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET MINIMUM_COLLECTION_TYPES\r\n        /* crudAndListsService\r\n            .searchList('directory/minimum-collection-types', this.var_default_search_payload)\r\n            .then((res) => {\r\n                this.minimumCollectionTypes = res.data.list;\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            }) */\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n    padding-top: 0;\r\n}\r\nul {\r\n    list-style-type: none;\r\n}\r\n</style>"]}]}