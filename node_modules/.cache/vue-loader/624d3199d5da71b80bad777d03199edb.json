{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\letter\\document\\verify-document\\verifyResolution.vue?vue&type=style&index=0&id=c599c75e&scoped=true&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\letter\\document\\verify-document\\verifyResolution.vue","mtime":1677039624501},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouYmctcHJpbWFyeSB7DQogIGJhY2tncm91bmQtY29sb3I6ICMwMDI4NTYgIWltcG9ydGFudDsNCn0NCg0KLm5hdmJhci1icmFuZCB7DQogIHRleHQtYWxpZ246IGNlbnRlciAhaW1wb3J0YW50Ow0KfQ0KDQojbXktcGRmLXZpZXcgew0KICB3aWR0aDogNjAwcHg7DQogIGhlaWdodDogNjAwcHg7DQogIG92ZXJmbG93OiBzY3JvbGw7DQp9DQoNCi5teS1wZGYtdmlld2VyLWRvY3VtZW50IHsNCiAgaGVpZ2h0OiA1MDBweDsNCiAgd2lkdGg6IDEwMCU7DQogIG92ZXJmbG93OiBzY3JvbGw7DQogIGJhY2tncm91bmQtY29sb3I6ICM0ZjVkNzM7DQoNCn0NCg0KLm15LXBkZi12aWV3ZXItcGFnZSB7DQogIGhlaWdodDogMTEwMHB4Ow0KICB3aWR0aDogOTAwcHg7DQogIHBhZGRpbmc6IDEyLjUlOw0KfQ0K"},{"version":3,"sources":["verifyResolution.vue"],"names":[],"mappings":";AAmTA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"verifyResolution.vue","sourceRoot":"src/modules/letter/document/verify-document","sourcesContent":["<template>\r\n  <div>\r\n    <b-navbar type=\"dark\" variant=\"primary\">\r\n      <b-navbar-brand class=\"mx-auto\" href=\"#\">\r\n        <b-row align-v=\"center\" class=\"text-center\">\r\n          <b-col>\r\n            <img :src=\" require('@/assets/images/acru-logo.png')\" alt height=\"70\"/>\r\n          </b-col>\r\n          <!--                    <b-col>-->\r\n          <!--                        <span class=\"ml-2\"><b>Uzbekistan GTL</b></span>-->\r\n          <!--                    </b-col>-->\r\n        </b-row>\r\n\r\n\r\n      </b-navbar-brand>\r\n    </b-navbar>\r\n    <div class=\"container-fluid mt-2 justify-content-center\">\r\n      <b-row>\r\n        <b-col lg=\"4\" md=\"8\" sm=\"12\" xl=\"4\">\r\n          <b-card>\r\n            <table class=\"table table-centered\">\r\n              <tr>\r\n                <td>\r\n                  <p>{{ $t('document.number') }}:</p>\r\n                </td>\r\n                <td>\r\n                  <p> {{ item.docNumber }}</p>\r\n                </td>\r\n              </tr>\r\n              <!--                            <tr>-->\r\n              <!--                                <td>-->\r\n              <!--                                    <p>{{$t('document.sender')}}:</p>-->\r\n              <!--                                </td>-->\r\n              <!--                                <td>-->\r\n              <!--                                    <p> {{item.sender}}</p>-->\r\n              <!--                                </td>-->\r\n              <!--                            </tr>-->\r\n            </table>\r\n            <br>\r\n            <p>{{ $t('document.signed_by_multiple') }}:</p>\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-centered\">\r\n                <tbody>\r\n                <template>\r\n                  <tr v-for=\"(el, index) in signedBy\" :key=\"index\">\r\n                    <td style=\"width: 50px;\">\r\n                      <div class=\"avatar-xs\">\r\n                        <span\r\n                            class=\"avatar-title rounded-circle bg-soft-primary text-white font-size-20\">\r\n                          {{ el.fullName[0] }}\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <p class=\"font-size-14 m-0\">\r\n                        <a href class=\"text-dark\">{{ el.fullName }}</a>\r\n                      </p>\r\n                      <span class=\"small\">{{ $t('document.signedDate') }} : {{ el.date }}</span>\r\n                    </td>\r\n                  </tr>\r\n                </template>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </b-card>\r\n          <b-modal\r\n              :cancel-title=\"$t('actions.cancel')\"\r\n              :ok-title=\"$t('actions.yes')\"\r\n              hide-footer\r\n              id=\"my-modal-dialog\"\r\n              size=\"lg\"\r\n              v-model=\"showModal\"\r\n          >\r\n            <vue-pdf-app\r\n                :config=\"config\"\r\n                :file-name=\"`${item.docNumber}.pdf`\"\r\n                :pdf=\"correctUrl\"\r\n            ></vue-pdf-app>\r\n          </b-modal>\r\n\r\n        </b-col>\r\n        <b-col lg=\"8\" md=\"8\" sm=\"12\" xl=\"8\">\r\n          <b-overlay :show=\"pdfLoadingProgressState\">\r\n            <b-card>\r\n              <b-row align-h=\"between\">\r\n\r\n                <b-col>\r\n                  <b-button @click=\"downloadFile\" :disabled=\"loadingButton\" size=\"sm\"\r\n                            variant=\"outline-primary\">\r\n                    <b-spinner v-if=\"loadingButton\" small></b-spinner>\r\n                    <i v-else class=\"fa fa-download\"></i>\r\n                    {{ $t('actions.download_file') }}\r\n                  </b-button>\r\n                </b-col>\r\n                <b-col class=\"text-right\">\r\n                  <b-button @click=\"showModal = !showModal\" size=\"sm\" variant=\"outline-primary\"><i\r\n                      class=\"fa fa-eye\"></i> {{ $t('actions.show_document') }}\r\n                  </b-button>\r\n\r\n                </b-col>\r\n              </b-row>\r\n              <hr>\r\n              <div class=\"my-pdf-viewer-document\">\r\n                <div v-for=\"(i, ii) in numPages\" :key=\"ii\" class=\"my-pdf-viewer-page\">\r\n                  <pdf\r\n                      :key=\"ii\"\r\n                      @progress=\"pdfLoadingProgress\"\r\n                      :src=\"correctUrl\"\r\n                      :page=\"i\"\r\n                  ></pdf>\r\n                </div>\r\n              </div>\r\n            </b-card>\r\n          </b-overlay>\r\n        </b-col>\r\n      </b-row>\r\n    </div>\r\n    <!--        <b-row>-->\r\n    <!--            <b-col lg=\"4\">-->\r\n    <!--                <b-overlay :show=\"pdfLoadingProgressState\">-->\r\n    <!--                    <div id=\"my-pdf-view\">-->\r\n    <!--                        {{currentPage}} / {{pageCount}}-->\r\n    <!--                        <pdf :src=\"correctUrl\" @progress=\"pdfLoadingProgress\" @num-pages=\"pageCount = $event\"-->\r\n    <!--                             @page-loaded=\"currentPage = $event\"></pdf>-->\r\n    <!--                    </div>-->\r\n    <!--                </b-overlay>-->\r\n    <!--            </b-col>-->\r\n    <!--        </b-row>-->\r\n\r\n    <!--        <div>-->\r\n    <!--            <input type=\"checkbox\" v-model=\"show\">-->\r\n    <!--            <input v-model.number=\"page\" type=\"number\" style=\"width: 5em\"> /{{numPages}}-->\r\n    <!--            <button @click=\"rotate += 90\">&#x27F3;</button>-->\r\n    <!--            <button @click=\"rotate -= 90\">&#x27F2;</button>-->\r\n    <!--            <button @click=\"$refs.pdf.print()\">print</button>-->\r\n    <!--            <div style=\"width: 50%\">-->\r\n    <!--                <div v-if=\"loadedRatio > 0 && loadedRatio < 1\"-->\r\n    <!--                     style=\"background-color: green; color: white; text-align: center\"-->\r\n    <!--                     :style=\"{ width: loadedRatio * 100 + '%' }\">{{ Math.floor(loadedRatio * 100) }}%-->\r\n    <!--                </div>-->\r\n    <!--                <pdf v-if=\"show\" v-for=\"i in numPages\" :key=\"i\" :page=\"i\" ref=\"pdf\"-->\r\n    <!--                     style=\"border: 1px solid red; display: inline-block; width: 25%;\" :src=\"correctUrl\"-->\r\n    <!--                     :rotate=\"rotate\" @progress=\"loadedRatio = $event\" @error=\"error\" @num-pages=\"numPages = $event\"-->\r\n    <!--                     @link-clicked=\"page = $event\"></pdf>-->\r\n\r\n    <!--            </div>-->\r\n    <!--        </div>-->\r\n\r\n\r\n  </div>\r\n\r\n</template>\r\n<script>\r\nimport VerifyDocumentService from \"../../verifyDocument.service\";\r\n\r\n``\r\nimport appConfig from \"@/app.config\";\r\nimport VuePdfApp from \"vue-pdf-app\";\r\nimport \"vue-pdf-app/dist/icons/main.css\";\r\nimport pdf from 'vue-pdf'\r\nimport {mapState} from \"vuex\";\r\n\r\n// var loadingTask = pdf.createLoadingTask('https://apiedoc.uzgtl.com/public/manualpdf');\r\n\r\nfunction getPdfTaskUrl(url) {\r\n  return pdf.createLoadingTask(url);\r\n}\r\n\r\nexport default {\r\n  name: \"VerifyDocument\",\r\n  components: {\r\n    VuePdfApp,\r\n    pdf\r\n  },\r\n  data() {\r\n    return {\r\n      windowHeight: window.innerHeight,\r\n      currentPage: 0,\r\n      pageCount: 0,\r\n      item: {\r\n        pdfUrl: \"\",\r\n        dateOfSigning: \"\",\r\n        docNumber: \"\",\r\n        sender: \"\",\r\n        signedBy: \"\",\r\n        signedByList: []\r\n      },\r\n      appConfig,\r\n      showModal: false,\r\n      config: {\r\n        secondaryToolbar: {\r\n          secondaryPresentationMode: false,\r\n          secondaryOpenFile: false,\r\n          secondaryPrint: false,\r\n          secondaryDownload: true,\r\n          secondaryViewBookmark: false,\r\n          firstPage: false,\r\n          lastPage: false,\r\n          pageRotateCw: true,\r\n          pageRotateCcw: true,\r\n          cursorSelectTool: false,\r\n          cursorHandTool: false,\r\n          scrollVertical: false,\r\n          scrollHorizontal: false,\r\n          scrollWrapped: false,\r\n          spreadNone: false,\r\n          spreadOdd: false,\r\n          spreadEven: false,\r\n          documentProperties: false,\r\n        },\r\n        toolbar: {\r\n          toolbarViewerRight: {\r\n            openFile: false,\r\n            print: false,\r\n            viewBookmark: false,\r\n          }\r\n        }\r\n      },\r\n      pdfLoadingProgressState: true,\r\n      show: true,\r\n      loadedRatio: 0,\r\n      page: 1,\r\n      numPages: 0,\r\n      rotate: 0,\r\n      loadingButton: false\r\n    }\r\n  },\r\n  methods: {\r\n    async downloadFile() {\r\n      this.loadingButton = true;\r\n      await VerifyDocumentService.downloadResolutionPdf(this.$route.params.id).then(response => {\r\n        var fileURL = window.URL.createObjectURL(new Blob([response.data], response.headers));\r\n        var fileLink = document.createElement('a');\r\n\r\n        fileLink.href = fileURL;\r\n        fileLink.setAttribute('download', this.item.docNumber + \".pdf\");\r\n\r\n        fileLink.click();\r\n      }).finally(() => {\r\n        this.loadingButton = false;\r\n      })\r\n    },\r\n    error: function (err) {\r\n\r\n      console.log(err);\r\n    },\r\n    pdfLoadingProgress(data) {\r\n      if (data === 1) {\r\n        this.pdfLoadingProgressState = false;\r\n      }\r\n    },\r\n    async getDefaultItem() {\r\n      // let urls = this.$route.fullPath.split(\"/\");\r\n      // urls[1] = urls[1].replace(/-/g, \"\");\r\n\r\n      await VerifyDocumentService.verifyResolution(this.$route.params.id).then(response => {\r\n\r\n        this.item = response.data;\r\n      }).catch((e) => {\r\n        this.$myMakeToast(\r\n            this.$globalCreateErrorMessageFromArray(\r\n                this.$getArrayFromArrayList(Object.values(e.response.data.errors))),\r\n            this.$t(\"actions.error\"),\r\n            \"danger\"\r\n        );\r\n        setTimeout(() => {\r\n          this.$router.push('/404');\r\n        }, 1000)\r\n      });\r\n\r\n    },\r\n    onResize() {\r\n      this.windowHeight = window.innerHeight\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$nextTick(() => {\r\n      window.addEventListener('resize', this.onResize);\r\n    })\r\n  },\r\n  computed: {\r\n    ...mapState('locales', ['locale']),\r\n    correctUrl() {\r\n      return `${this.appConfig.api_request_type}://${this.appConfig.api_url}${this.item.pdfUrl}`\r\n    },\r\n    signedBy() {\r\n      return this.item.signedByList\r\n    }\r\n  },\r\n  async created() {\r\n    await this.getDefaultItem();\r\n  },\r\n  watch: {\r\n    'item.pdfUrl': {\r\n      handler(newValue) {\r\n        getPdfTaskUrl(`${this.appConfig.api_request_type}://${this.appConfig.api_url}${newValue}`).promise.then(pdf => {\r\n          console.log(pdf)\r\n          this.numPages = pdf.numPages;\r\n        });\r\n\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n<style scoped>\r\n.bg-primary {\r\n  background-color: #002856 !important;\r\n}\r\n\r\n.navbar-brand {\r\n  text-align: center !important;\r\n}\r\n\r\n#my-pdf-view {\r\n  width: 600px;\r\n  height: 600px;\r\n  overflow: scroll;\r\n}\r\n\r\n.my-pdf-viewer-document {\r\n  height: 500px;\r\n  width: 100%;\r\n  overflow: scroll;\r\n  background-color: #4f5d73;\r\n\r\n}\r\n\r\n.my-pdf-viewer-page {\r\n  height: 1100px;\r\n  width: 900px;\r\n  padding: 12.5%;\r\n}\r\n</style>"]}]}