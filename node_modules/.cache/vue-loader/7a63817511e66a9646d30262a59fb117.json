{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\components\\base\\BaseInputWithValidation.vue?vue&type=style&index=0&id=0b2b6f6a&lang=scss&scoped=true&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\components\\base\\BaseInputWithValidation.vue","mtime":1667352074342},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1667355361315},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQo6OnYtZGVlcC5iYXNlLWZvcm0taW5wdXQtd2l0aC1hcHBlbmQgew0KICAgICYuYmFzZS1mb3JtLWlucHV0IHsNCiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyNSUgNjEuNSUgNS41JSAhaW1wb3J0YW50Ow0KDQogICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA0NjBweCkgew0KICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyNSUgNjYuNSUgOS41JSAhaW1wb3J0YW50Ow0KICAgICAgICB9DQoNCiAgICAgICAgQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7DQogICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDI1JSA2My41JSA5LjUlICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7DQogICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDI1JSA2NS41JSA5LjUlICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTQwMHB4KSB7DQogICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDI1JSA2Ny41JSA5LjUlICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCg0KICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogMTY1MHB4KSB7DQogICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDI1JSA3MCUgNSUgIWltcG9ydGFudDsNCiAgICAgICAgfQ0KICAgICAgICBpbnB1dCB7DQogICAgICAgICAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDAgIWltcG9ydGFudDsNCiAgICAgICAgfQ0KICAgICAgICAuYmFzZS1mb3JtLWlucHV0X19hcHBlbmQgew0KICAgICAgICAgICAgLmJ0biB7DQogICAgICAgICAgICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMCAhaW1wb3J0YW50Ow0KICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDAgIWltcG9ydGFudDsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICAuYmFzZS1mb3JtLWNvbXBvbmVudF9faW52YWxpZC1mZWVkYmFjaywNCiAgICAgICAgLmJhc2UtZm9ybS1jb21wb25lbnRfX2luZm8tbXNnIHsNCiAgICAgICAgICAgIGdyaWQtY29sdW1uOiBzcGFuIDIgIWltcG9ydGFudDsNCiAgICAgICAgICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAyICFpbXBvcnRhbnQ7DQogICAgICAgIH0NCiAgICB9DQp9DQo6OnYtZGVlcC5iYXNlLWZvcm0tY29tcG9uZW50X19sYWJlbC1vbi10b3Agew0KICAgICYuYmFzZS1mb3JtLWlucHV0LXdpdGgtYXBwZW5kIHsNCiAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyNSUgNjUlIDUlICFpbXBvcnRhbnQ7DQogICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMjAwcHgpIHsNCiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMjUlIDYwJSA1JSAhaW1wb3J0YW50Ow0KICAgICAgICB9DQogICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiAxNDAwcHgpIHsNCiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMjUlIDY1JSA1JSAhaW1wb3J0YW50Ow0KICAgICAgICB9DQogICAgfQ0KICAgIGxhYmVsIHsNCiAgICAgICAgZ3JpZC1jb2x1bW46IHNwYW4gMjsNCiAgICB9DQogICAgLmJhc2UtZm9ybS1jb21wb25lbnRfX21haW4tZm9ybS1lbGVtZW50IHsNCiAgICAgICAgZ3JpZC1jb2x1bW46IHNwYW4gMjsNCiAgICB9DQp9DQo="},{"version":3,"sources":["BaseInputWithValidation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwLA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseInputWithValidation.vue","sourceRoot":"src/components/base","sourcesContent":["<template>\r\n    <ValidationProvider\r\n        :style=\"validationProviderCustomStyle\"\r\n        :mode=\"notRequired ? 'passive' : 'aggressive'\"\r\n        :name=\"$attrs.name ? $attrs.name : $attrs.label\"\r\n        :rules=\"rules\"\r\n    >\r\n        <template v-slot:default=\"validationContext\">\r\n            <div\r\n                class=\"base-input-wrapper base-form-input base-form-component\"\r\n                :class=\"[withInputAppend ? 'base-form-input-with-append' : '', labelOnTop ? 'base-form-component__label-on-top' : '', customClasses]\"\r\n                :style=\"customStyles\"\r\n            >\r\n                <!-- LABEL -->\r\n                <label\r\n                    v-if=\"!onlyFormElement\"\r\n                    class=\"base-form-component__label\"\r\n                >{{ $attrs.label }}</label>\r\n\r\n                <!-- IF RESTRICTION FOR MIN MAX IS TRUE -->\r\n                <b-form-input\r\n                    v-if=\"restrictMinMaxValue\"\r\n                    v-model=\"innerValue\"\r\n                    :state=\"getValidationState(validationContext)\"\r\n                    :class=\"[hideNumberArrow ? 'hide-number-arrow' : '']\"\r\n                    class=\"base-form-component__input\"\r\n                    v-mask=\"mask\"\r\n                    v-bind=\"$attrs\"\r\n                    v-on=\"$listeners\"\r\n                    oninput=\"if (this.max) {if(Number(this.value) > Number(this.max) && this.value.trim() !== '') {this.value = this.max}}\r\n                 else if (Number(this.value) < Number(this.min) && this.value.trim() !== '') {this.value = this.min}\r\n                 else this.value = this.value\"\r\n                >\r\n                    <template\r\n                        v-for=\"(_, slot) of $slots\"\r\n                        v-slot:[slot]=\"scope\"\r\n                    >\r\n                        <slot\r\n                            :name=\"slot\"\r\n                            v-bind=\"scope\"\r\n                        />\r\n                    </template>\r\n                </b-form-input>\r\n\r\n                <!-- ELSE MIN MAX IS NOT RESTRICTED -->\r\n                <b-form-input\r\n                    v-else\r\n                    v-model=\"innerValue\"\r\n                    :state=\"getValidationState(validationContext)\"\r\n                    :class=\"[hideNumberArrow ? 'hide-number-arrow' : '']\"\r\n                    class=\"base-form-component__input base-form-component__main-form-element\"\r\n                    v-mask=\"mask\"\r\n                    v-bind=\"$attrs\"\r\n                    v-on=\"$listeners\"\r\n                >\r\n                    <template\r\n                        v-for=\"(_, slot) of $slots\"\r\n                        v-slot:[slot]=\"scope\"\r\n                    >\r\n                        <slot\r\n                            :name=\"slot\"\r\n                            v-bind=\"scope\"\r\n                        />\r\n                    </template>\r\n                </b-form-input>\r\n\r\n                <!-- APPEND SLOT -->\r\n                <b-input-group-append\r\n                    v-if=\"withInputAppend\"\r\n                    class=\"base-form-input__append\"\r\n                >\r\n                    <slot name=\"append-slot\"></slot>\r\n                </b-input-group-append>\r\n\r\n                <!-- INVALID FEEDBACK -->\r\n                <b-form-invalid-feedback\r\n                    v-if=\"!hideErrorMsg && !onlyFormElement\"\r\n                    class=\"base-form-component__invalid-feedback\"\r\n                >\r\n                    {{ validationContext.errors[0] }}\r\n                </b-form-invalid-feedback>\r\n\r\n                <!-- HELP TEXT -->\r\n                <b-form-text\r\n                    v-if=\"infoMsg && !onlyFormElement\"\r\n                    class=\"base-form-component__info-msg\"\r\n                >\r\n                    {{ infoMsg }}\r\n                </b-form-text>\r\n            </div>\r\n        </template>\r\n    </ValidationProvider>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n    props: {\r\n        infoMsg: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        mask: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        notRequired: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        onlyFormElement: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        labelOnTop: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        customStyles: {\r\n            type: [Object, String],\r\n            default: () => { }\r\n        },\r\n        validationProviderCustomStyle: {\r\n            type: [Object, String],\r\n            default: () => { }\r\n        },\r\n        customClasses: {\r\n            type: [Object, String],\r\n            default: () => { }\r\n        },\r\n        withInputAppend: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        hideNumberArrow: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        hideErrorMsg: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        restrictMinMaxValue: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        rules: {\r\n            type: [Object, String],\r\n            default: () => { }\r\n        },\r\n        // must be included in props\r\n        value: {\r\n            type: null\r\n        }\r\n    },\r\n    data: () => ({\r\n        innerValue: ''\r\n    }),\r\n    methods: {\r\n        getValidationState ({ dirty, validated, valid = null }) {\r\n            if (this.notRequired)\r\n                return null\r\n            return dirty || validated ? valid : null;\r\n        },\r\n    },\r\n    watch: {\r\n        // Handles internal model changes.\r\n        /* innerValue (newVal) {\r\n            this.$emit('input', newVal);\r\n        }, */\r\n        // Handles external model changes.\r\n        value (newVal) {\r\n            this.innerValue = newVal;\r\n        }\r\n    },\r\n    created () {\r\n        if (this.value) {\r\n            this.innerValue = this.value;\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep.base-form-input-with-append {\r\n    &.base-form-input {\r\n        grid-template-columns: 25% 61.5% 5.5% !important;\r\n\r\n        @media (min-width: 460px) {\r\n            grid-template-columns: 25% 66.5% 9.5% !important;\r\n        }\r\n\r\n        @media (min-width: 768px) {\r\n            grid-template-columns: 25% 63.5% 9.5% !important;\r\n        }\r\n\r\n        @media (min-width: 1200px) {\r\n            grid-template-columns: 25% 65.5% 9.5% !important;\r\n        }\r\n\r\n        @media (min-width: 1400px) {\r\n            grid-template-columns: 25% 67.5% 9.5% !important;\r\n        }\r\n\r\n        @media (min-width: 1650px) {\r\n            grid-template-columns: 25% 70% 5% !important;\r\n        }\r\n        input {\r\n            border-top-right-radius: 0 !important;\r\n            border-bottom-right-radius: 0 !important;\r\n        }\r\n        .base-form-input__append {\r\n            .btn {\r\n                border-top-left-radius: 0 !important;\r\n                border-bottom-left-radius: 0 !important;\r\n            }\r\n        }\r\n        .base-form-component__invalid-feedback,\r\n        .base-form-component__info-msg {\r\n            grid-column: span 2 !important;\r\n            grid-column-start: 2 !important;\r\n        }\r\n    }\r\n}\r\n::v-deep.base-form-component__label-on-top {\r\n    &.base-form-input-with-append {\r\n        grid-template-columns: 25% 65% 5% !important;\r\n        @media (min-width: 1200px) {\r\n            grid-template-columns: 25% 60% 5% !important;\r\n        }\r\n        @media (min-width: 1400px) {\r\n            grid-template-columns: 25% 65% 5% !important;\r\n        }\r\n    }\r\n    label {\r\n        grid-column: span 2;\r\n    }\r\n    .base-form-component__main-form-element {\r\n        grid-column: span 2;\r\n    }\r\n}\r\n</style>\r\n"]}]}