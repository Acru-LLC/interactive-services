{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\advertisement\\pages\\Notification.vue?vue&type=style&index=0&id=32fc2821&scoped=true&lang=scss&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\advertisement\\pages\\Notification.vue","mtime":1674799496706},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1667355361315},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5jZW50ZXJlZC10YWJsZSB7DQogIHRkLCB0aCB7DQogICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQogIH0NCn0NCg0KLm1heC1oZWlnaHQtNzAgew0KICBtYXgtaGVpZ2h0OiA3MHZoOw0KfQ0KDQo="},{"version":3,"sources":["Notification.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuaA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Notification.vue","sourceRoot":"src/modules/advertisement/pages","sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"col-sm-10\">\r\n            <div class=\"search-box me-2 mb-2 d-inline-block\">\r\n              <b-btn\r\n                  variant=\"warning\"\r\n                  class=\"text-capitalize\"\r\n                  @click=\"$router.go(-1)\"\r\n              >\r\n                {{ $t('actions.back') }}\r\n              </b-btn>\r\n\r\n            </div>\r\n\r\n            <div class=\"col-5 search-box me-4 mb-2 d-inline-block\">\r\n              <div class=\"position-relative\">\r\n                <input\r\n                    v-model=\"searchNotificationKeyword\"\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    @input=\"fetchNotificationTableItems($route.params.id)\"\r\n                    :placeholder=\"$t('column.search')\"\r\n                />\r\n                <i class=\"bx bx-search-alt search-icon\"></i>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-5 me-2 mx-2 d-inline-block\">\r\n              <div class=\"position-relative d-flex align-items-center\">\r\n                <BaseDatePickerWithValidation\r\n                    not-required\r\n                    custom-styles=\"grid-template-columns: 100%;\"\r\n                    :only-form-element=\"true\"\r\n                    v-model=\"createdDate\"\r\n                    :label=\"$t('column.created_date')\"\r\n                    @input=\"fetchNotificationTableItems($route.params.id)\"\r\n                    lang=\"ru\"\r\n                ></BaseDatePickerWithValidation>\r\n                <span class=\"p-2\">\r\n                       {{ $t('column.from_current_date') }}\r\n                    </span>\r\n\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Table data -->\r\n          <b-table\r\n              :items=\"notificationTableItems\"\r\n              :fields=\"notificationTableFields\"\r\n              id=\"notification-table\"\r\n              class=\"custom-b-table\"\r\n              borderless\r\n              bordered\r\n              small\r\n              fixed\r\n              hover\r\n              show-empty\r\n              striped>\r\n\r\n            <!-- NUMBER OF ITEM -->\r\n            <template #cell(index)=\"innerData\">\r\n              {{\r\n                util_paginate(innerData.index, var_default_search_payload.page, var_default_search_payload.itemsPerPage)\r\n              }}\r\n            </template>\r\n\r\n            <!-- ACTIONS -->\r\n            <template #cell(notificationActions)=\"innerData\">\r\n              <div class=\"general-table__actions d-flex justify-content-center\">\r\n\r\n                <!-- SHOW IMAGES LIGHTBOX -->\r\n                <vue-easy-lightbox\r\n                    :visible=\"visible\"\r\n                    :imgs=\"imgArr\"\r\n                    :index=\"index\"\r\n                    @hide=\"handleHide\"\r\n                    @on-next=\"handlePrevNext\"\r\n                    @on-prev=\"handlePrevNext\"\r\n                ></vue-easy-lightbox>\r\n\r\n                <!-- IMAGES BUTTON -->\r\n                <b-btn\r\n                    variant=\"link\"\r\n                    class=\"text-decoration-none p-0\"\r\n                    style=\"font-size: 1.2rem; margin-right: 1rem;\"\r\n                >\r\n                  <i @click=\"getImages(innerData.item.id, row.index)\" class=\"mdi mdi-image-multiple\"></i>\r\n                </b-btn>\r\n\r\n                <!-- NOTIFICATION BUTTON -->\r\n                <b-btn\r\n                    v-if=\"$can('get', 'advertisement notification')\"\r\n                    variant=\"link\"\r\n                    class=\"text-decoration-none p-0\"\r\n                    style=\"font-size: 1.2rem; margin-right: 1rem;\"\r\n                    :to=\"{name: 'Notifications', params: {notId: innerData.item.id}}\"\r\n                >\r\n                  <i class=\"mdi mdi-eye\"></i>\r\n                </b-btn>\r\n\r\n              </div>\r\n            </template>\r\n\r\n            <!-- EMPTY SLOT -->\r\n            <template #empty=\"\">\r\n              <h4 class=\"text-center\">{{ $t('messages.data_not_found') }}</h4>\r\n            </template>\r\n          </b-table>\r\n          <!-- end table -->\r\n          <b-pagination\r\n              v-model=\"var_default_search_payload.page\"\r\n              :total-rows=\"totalItems\"\r\n              :per-page=\"var_default_search_payload.itemsPerPage\"\r\n              aria-controls=\"my-table\"\r\n              class=\"justify-content-end\"\r\n          ></b-pagination>\r\n        </div>\r\n        <!-- end card-body -->\r\n      </div>\r\n      <!-- end card -->\r\n    </div>\r\n    <!-- end col -->\r\n  </div>\r\n  <!-- end row -->\r\n</template>\r\n\r\n<script>\r\n\r\nimport {mapActions} from 'vuex'\r\nimport {TokenService} from \"@/shared/services/storage.service\"\r\n\r\nconst MAIN_API_URL = 'contractor-advertising-construction'\r\nconst MAIN_NOTIFICATION_API_URL = 'report/advertisement-notifications'\r\nconst APPEND_API_URL = 'by-first-agent'\r\nimport appConfig from \"@/app.config\";\r\nimport crudAndListsService from '@/shared/services/crud_and_list.service'\r\nimport helperService from '@/shared/services/helper.service'\r\n\r\nconst i18n = require(\"@/i18n\");\r\n\r\nexport default {\r\n  page: {\r\n    title: \"Passport info\",\r\n    meta: [{name: \"description\", content: appConfig.description}],\r\n  },\r\n  components: {},\r\n  data() {\r\n    return {\r\n      publicPath: process.env.BASE_URL,\r\n      visible: false,\r\n      title: \"Passport info\",\r\n      activeDep: {},\r\n      tableItems: [],\r\n      notificationTableItems: [],\r\n      totalItems: 0,\r\n      notificationTableFields: [\r\n        {\r\n          label: \"â„–\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\",\r\n          sortable: false,\r\n          key: \"index\",\r\n        },\r\n        {\r\n          label: this.$t('column.comment'),\r\n          key: \"description\",\r\n        },\r\n        {\r\n          label: this.$t('column.created_by'),\r\n          key: \"createdBy\",\r\n        },\r\n        {\r\n          label: this.$t('column.placement_date'),\r\n          key: \"placedDate\",\r\n        },\r\n        {\r\n          label: this.$t('column.actions'),\r\n          key: \"notificationActions\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\",\r\n          sortable: false\r\n        },\r\n      ],\r\n      searchKeyword: '',\r\n      searchNotificationKeyword: '',\r\n      createdDate: '',\r\n      selected: 20,\r\n      optionsTable: [\r\n        {value: 20, text: 20},\r\n        {value: 50, text: 50},\r\n        {value: 100, text: 100},\r\n        {value: 150, text: 150},\r\n        {value: 200, text: 200},\r\n      ],\r\n      regions: [],\r\n      districts: [],\r\n      contractors: [],\r\n      adDesignTypes: [],\r\n      filterPayload: {\r\n        passportNumber: '',\r\n        contractorId: '',\r\n        regionId: '',\r\n        districtIds: [],\r\n        designTypeIds: []\r\n      },\r\n      index: 0,\r\n      photosFromServer: [],\r\n      loadingTableItems: false,\r\n      isOuter: TokenService.getIsOuter(),\r\n    };\r\n  },\r\n  /*\r\n  COMPUTED */\r\n  computed: {\r\n    tableFields() {\r\n      return this.$can('list', 'contractor advertising construction') ? this.tableFieldsForAgency : this.tableFieldsForGovernment;\r\n    },\r\n\r\n    dtoName() {\r\n      return this.$can('list', 'contractor advertising construction') ? 'contractorAdvertisingConstructionForSecondAgentDto' : 'contractorAdvertisingConstructionForFirstAgentDto';\r\n    },\r\n\r\n    numberOfPages() {\r\n      return (!this.totalItems || this.totalItems <= 0 || this.totalItems < this.var_default_search_payload.itemsPerPage) ? 1 : this.totalItems / this.var_default_search_payload.itemsPerPage\r\n    },\r\n    imgArr() {\r\n      let arrs = [];\r\n      this.photosFromServer.forEach(e => {\r\n        if (this.photosFromServer)\r\n          arrs.push(this.publicPath + e.url)\r\n      })\r\n      return arrs\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['setCount']),\r\n    selectList($event) {\r\n      if ($event == 'all') {\r\n        this.var_default_search_payload.itemsPerPage = this.totalItems\r\n      } else {\r\n        this.var_default_search_payload.itemsPerPage = $event\r\n      }\r\n      this.fetchNotificationTableItems(this.$route.params.id);\r\n    },\r\n    fetchNotificationTableItems(id) {\r\n      this.loadingTableItems = true\r\n      this.var_default_search_payload.keyword = this.searchKeyword\r\n      this.var_default_search_payload.placedDate = this.placedDate\r\n      crudAndListsService\r\n          .searchListNotificationByConstructionId(MAIN_NOTIFICATION_API_URL, this.var_default_search_payload, id, true)\r\n          .then((res) => {\r\n            this.notificationTableItems = res.data.list\r\n          })\r\n          .catch(e => {\r\n            this.notificationTableItems = [];\r\n          })\r\n          .finally(() => {\r\n            this.loadingTableItems = false\r\n          })\r\n    },\r\n    customLabelDistrict(opt) {\r\n      let selected = this.districts.find(e => e.id == opt);\r\n      if (selected) {\r\n        return `${\r\n            this.getName({\r\n              nameRu: selected.nameRu,\r\n              nameLt: selected.nameLt,\r\n              nameUz: selected.nameUz,\r\n            })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    customLabelContractor(opt) {\r\n      let selected = this.contractors.find(e => e.id == opt);\r\n      if (selected) {\r\n        return `${selected.fullName}`\r\n      }\r\n      return ``;\r\n    },\r\n    customLabelRegion(opt) {\r\n      let selected = this.regions.find(e => e.regionId == (opt.regionId ? opt.regionId : opt));\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.regionNameRu,\r\n          nameLt: selected.regionNameLt,\r\n          nameUz: selected.regionNameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    customLabelAdDesignType(opt) {\r\n      let selected = this.adDesignTypes.find(e => e.id == (opt.id ? opt.id : opt));\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    async regionSelected($event, dontResetDistrict = false) {\r\n      if (!dontResetDistrict) {\r\n        this.filterPayload.districtIds = []\r\n      }\r\n      // GET DISTRICTS\r\n      if ($event)\r\n        await helperService.getGeoLocationsByParentId($event)\r\n            .then(res => {\r\n              this.districts = res.data\r\n            })\r\n            .catch(e => {\r\n              console.log(e)\r\n            })\r\n      this.fetchNotificationTableItems(this.$route.params.id)\r\n    },\r\n    updateFiles(id, forAgency = false) {\r\n      this.$router.push({\r\n        name: forAgency ? 'UpdateAdPassportInfoFilesByAgency' : 'UpdateAdPassportInfoFilesByGovernment',\r\n        params: {id: id}\r\n      })\r\n    },\r\n    createItem(id, forAgency = false) {\r\n      this.$router.push({\r\n        name: 'CreateContractorNotification',\r\n        params: {adConstructionId: id}\r\n      })\r\n    },\r\n    editItem(id) {\r\n      this.$router.push({name: 'UpdateContractorNotification', params: {id: id}})\r\n    },\r\n    getImages(id, adConstructionIndex) {\r\n      let foundIndex = this.tableItems[adConstructionIndex].contractorAdvertisingConstructionForSecondAgentDto.notifications.findIndex(el => el.id == id)\r\n      if (foundIndex > -1) {\r\n        this.photosFromServer = this.tableItems[adConstructionIndex].contractorAdvertisingConstructionForSecondAgentDto.notifications[foundIndex].advertisementNotificationPhotoList\r\n        this.showImg(0)\r\n      }\r\n    },\r\n    showImg(index) {\r\n      this.index = index\r\n      this.visible = true\r\n    },\r\n    handleHide() {\r\n      this.visible = false\r\n    },\r\n    handlePrevNext(oldIndex, newIndex) {\r\n      this.index = newIndex\r\n    },\r\n    deleteItem(id) {\r\n      this.$bvModal.msgBoxConfirm(this.$t('messages.delete_title'), {\r\n        okTitle: this.$t('actions.confirm'),\r\n        cancelTitle: this.$t('actions.cancel')\r\n      })\r\n          .then(value => {\r\n            if (value) {\r\n              crudAndListsService\r\n                  .deleteById(MAIN_API_URL, id)\r\n                  .then((res) => {\r\n                    this.fetchNotificationTableItems(this.$route.params.id)\r\n                  })\r\n                  .catch(e => {\r\n                    console.log(e)\r\n                  })\r\n            }\r\n          })\r\n          .catch(err => {\r\n            // An error occurred\r\n          })\r\n    },\r\n  },\r\n  /* CREATED */\r\n  async created() {\r\n    this.fetchNotificationTableItems(this.$route.params.id)\r\n\r\n    // GET REGIONS\r\n    await helperService.fetchRegionsForAdvertisementByCurrentUserId()\r\n        .then(res => {\r\n          this.regions = res.data\r\n          // this.regionSelected(this.editingItem ? this.editingItem.regionId : null, true)\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n\r\n    // GET CONTRACTORS\r\n    if (!this.isOuter) {\r\n      await crudAndListsService.searchList('contractor', this.var_default_search_payload, 'by-contractor')\r\n          .then(res => {\r\n            this.contractors = res.data.list\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    }\r\n\r\n    // GET AD DESIGN TYPES\r\n    await helperService.getAdDesignTypesByActiveStatus()\r\n        .then((res) => {\r\n          this.adDesignTypes = res.data;\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n\r\n  },\r\n  /*\r\n  WATCH */\r\n  watch: {\r\n    'var_default_search_payload.page': {\r\n      handler() {\r\n        this.fetchNotificationTableItems(this.$route.params.id)\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang='scss'>\r\n.centered-table {\r\n  td, th {\r\n    vertical-align: middle;\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n.max-height-70 {\r\n  max-height: 70vh;\r\n}\r\n\r\n</style>"]}]}