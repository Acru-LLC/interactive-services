{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\management\\modules\\departments\\CreateOrUpdate.vue?vue&type=style&index=0&id=e942210e&scoped=true&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\management\\modules\\departments\\CreateOrUpdate.vue","mtime":1674799497588},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY29sLWZvcm0tbGFiZWwgew0KICAgIHBhZGRpbmctdG9wOiAwOw0KfQ0KdWwgew0KICAgIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsNCn0NCg=="},{"version":3,"sources":["CreateOrUpdate.vue"],"names":[],"mappings":";AAwoBA;AACA;AACA;AACA;AACA;AACA","file":"CreateOrUpdate.vue","sourceRoot":"src/modules/management/modules/departments","sourcesContent":["<template>\r\n    <base-create-or-update-wrapper\r\n        @save=\"save\"\r\n        has-save-suspend\r\n        :custom-title=\"isModeCreate ? $t('actions.create') : $t('actions.update')\"\r\n    >\r\n        <ValidationObserver\r\n            ref=\"observer\"\r\n            v-slot=\"{}\"\r\n        >\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.code\"\r\n                        :label=\"$t('column.code')\"\r\n                        :placeholder=\"$t('column.code')\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseTreeselectWithValidation\r\n                        not-required\r\n                        :placeholder=\"$t('column.parent_department')\"\r\n                        label=\"nameUz\"\r\n                        :form-label=\"$t('column.parent_department')\"\r\n                        ref=\"parentDepVeeName\"\r\n                        v-model=\"editingItem.parentId\"\r\n                        :options=\"departments\"\r\n                        :show-count=\"true\"\r\n                        :default-expand-level=\"1\"\r\n                        :normalizer=\"normalizer\"\r\n                        name=\"parentDepVeeName\"\r\n                        @close=\"treeClosed('parentDepVeeName')\"\r\n                    ></BaseTreeselectWithValidation>\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        v-model=\"editingItem.nameUz\"\r\n                        :label=\"$t('column.full_name')\"\r\n                        :placeholder=\"$t('column.full_name')\"\r\n                        class=\"required\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        v-model=\"editingItem.shortName\"\r\n                        :label=\"$t('column.short_name')\"\r\n                        :placeholder=\"$t('column.short_name')\"\r\n                        class=\"required\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        not-required\r\n                        v-model=\"editingItem.curatorId\"\r\n                        :options=\"curators.map(e => e.id)\"\r\n                        :label=\"$t('column.curator')\"\r\n                        :custom-label=\"customLabelCurators\"\r\n                        :placeholder=\"$t('column.curator')\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseSelectWithValidation\r\n                        v-model=\"editingItem.statusId\"\r\n                        class=\"required\"\r\n                        rules=\"required\"\r\n                        :label=\"$t('column.status')\"\r\n                        value-field=\"id\"\r\n                    >\r\n                        <template #first>\r\n                            <b-form-select-option\r\n                                :value=\"null\"\r\n                                disabled\r\n                            >{{ $t('column.status') }}</b-form-select-option>\r\n                        </template>\r\n                      <b-form-select-option v-for=\"(status, index) in statuses\" :key=\"`${status}-${index}`\" :value=\"status.id\">{{\r\n                          getName({\r\n                            nameRu: status.nameRu,\r\n                            nameLt: status.nameLt,\r\n                            nameUz: status.nameUz,\r\n                          })\r\n                        }}\r\n                      </b-form-select-option>\r\n                    </BaseSelectWithValidation>\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.typeId\"\r\n                        :options=\"types.map(e => e.id)\"\r\n                        :label=\"$t('submodules.department_types.title')\"\r\n                        :custom-label=\"customLabelDepType\"\r\n                        :placeholder=\"$t('submodules.department_types.title')\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        v-model=\"contractorDto.vatCode\"\r\n                        :label=\"$t('column.vat_code')\"\r\n                        :placeholder=\"$t('column.vat_code')\"\r\n                    />\r\n                    <!-- <div class=\"form-check form-check-right\">\r\n                        <input\r\n                            v-if=\"isModeCreate\"\r\n                            v-model=\"isLegal\"\r\n                            class=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id=\"formCheckIsLegal\"\r\n                        />\r\n                        <input\r\n                            v-else\r\n                            :checked=\"isLegal\"\r\n                            disabled\r\n                            class=\"form-check-input\"\r\n                            type=\"checkbox\"\r\n                            id=\"formCheckIsLegal\"\r\n                        />\r\n                        <label\r\n                            class=\"form-check-label font-weight-normal\"\r\n                            for=\"formCheckIsLegal\"\r\n                        >\r\n                            {{ $t('column.is_legal_org') }}\r\n                        </label>\r\n                    </div> -->\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <!-- CONTRACTOR_INFORMATION FORM -->\r\n            <!-- <template v-if=\"isLegal\"> -->\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        name=\"INN\"\r\n                        :rules=\"{required: true, regex: /\\b\\d{9}\\b/}\"\r\n                        v-model=\"contractorDto.inn\"\r\n                        @keyup.enter=\"findContractorByInn\"\r\n                        with-input-append\r\n                        mask=\"#########\"\r\n                        :label=\"$t('column.inn')\"\r\n                        placeholder=\"123456789\"\r\n                        class=\"required\"\r\n                    >\r\n                        <template v-slot:append-slot>\r\n                            <b-button\r\n                                @click=\"findContractorByInn\"\r\n                                variant=\"outline-primary\"\r\n                                id=\"contractorSearchButton\"\r\n                                style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n                            >\r\n                                <i class=\"mdi mdi-account-search\"></i>\r\n                            </b-button>\r\n                            <!-- <b-tooltip\r\n                                    target=\"contractorSearchButton\"\r\n                                    variant=\"primary\"\r\n                                >{{ $t('document.search_contractor') }}</b-tooltip> -->\r\n                        </template>\r\n                    </BaseInputWithValidation>\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <!-- <BaseInputWithValidation\r\n                            rules=\"required\"\r\n                            name=\"contractorDtoFullName\"\r\n                            v-model=\"contractorDto.fullName\"\r\n                            :label=\"$t('column.full_name')\"\r\n                            :placeholder=\"$t('column.full_name')\"\r\n                            class=\"required\"\r\n                        /> -->\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        v-model=\"contractorDto.director\"\r\n                        :label=\"$t('column.director')\"\r\n                        :placeholder=\"$t('column.director')\"\r\n                        class=\"required\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        v-model=\"contractorDto.mobileNumber\"\r\n                        :label=\"$t('column.mobile_number')\"\r\n                        mask=\"+998#########\"\r\n                        placeholder=\"+998#########\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <!-- <BaseInputWithValidation\r\n                            rules=\"required\"\r\n                            name=\"contractorDtoShortName\"\r\n                            v-model=\"contractorDto.shortName\"\r\n                            :label=\"$t('column.short_name')\"\r\n                            :placeholder=\"$t('column.short_name')\"\r\n                            class=\"required\"\r\n                        /> -->\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        v-model=\"contractorDto.accounter\"\r\n                        :label=\"$t('column.accounter')\"\r\n                        :placeholder=\"$t('column.accounter')\"\r\n                        class=\"required\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"contractorDto.addressDto.regionId\"\r\n                        :allowEmpty=\"false\"\r\n                        @select=\"regionSelected\"\r\n                        :options=\"regions.map(e => e.id)\"\r\n                        :label=\"$t('column.region')\"\r\n                        :custom-label=\"customLabelRegion\"\r\n                        :placeholder=\"$t('column.region')\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"contractorDto.addressDto.districtId\"\r\n                        :allowEmpty=\"false\"\r\n                        :options=\"districts.map(e => e.id)\"\r\n                        :label=\"$t('column.district')\"\r\n                        :custom-label=\"customLabelDistrict\"\r\n                        :placeholder=\"$t('column.district')\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        :rules=\"{required: true, regex: /\\b\\d{5}\\b/}\"\r\n                        class=\"required\"\r\n                        v-model=\"contractorDto.oked\"\r\n                        mask=\"#####\"\r\n                        :label=\"$t('column.oked')\"\r\n                        placeholder=\"12345\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        v-model=\"contractorDto.address\"\r\n                        :label=\"$t('column.address')\"\r\n                        :placeholder=\"$t('column.address')\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n\r\n                </b-col>\r\n            </b-row>\r\n            <!-- </template> -->\r\n        </ValidationObserver>\r\n    </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport helperService from \"@/shared/services/helper.service\"\r\n\r\nexport default {\r\n    name: \"CreateOrUpdate\",\r\n    /*\r\n    * COMPONENTS */\r\n    components: {\r\n\r\n    },\r\n    /*\r\n    * DATA */\r\n    data () {\r\n        return {\r\n            types: [],\r\n            departments: [],\r\n            curators: [],\r\n            regions: [],\r\n            districts: [],\r\n            statuses: [],\r\n            editingItem: {},\r\n            isLegal: false,\r\n            contractorDto: {\r\n                addressDto: {}\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * COMPUTED */\r\n    computed: {\r\n        isModeCreate () {\r\n            return this.$route.name === 'CreateDepartment'\r\n        },\r\n        computedObserver () {\r\n            return this.$refs.observer\r\n        }\r\n    },\r\n    /*\r\n    * METHODS */\r\n    methods: {\r\n        async regionSelected ($event, dontResetDistrict = false) {\r\n            if (!dontResetDistrict) {\r\n                this.contractorDto.addressDto.districtId = null\r\n            }\r\n            // GET DISTRICTS\r\n            if ($event)\r\n                await helperService.getGeoLocationsByParentId($event)\r\n                    .then(res => {\r\n                        this.districts = res.data\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n        },\r\n        findContractorByInn () {\r\n            if (this.computedObserver.fields.INN.valid)\r\n                helperService.validateInnFromApi(this.contractorDto.inn)\r\n                    .then(res => {\r\n                        if (res.data) {\r\n                            helperService.findContractorByInn(this.contractorDto.inn)\r\n                                .then(res => {\r\n                                    this.editingItem.shortName = res.data.regOrganisationDto.shortName\r\n                                    this.editingItem.nameUz = res.data.regOrganisationDto.fullName\r\n\r\n                                    this.contractorDto.accounter = res.data.regOrganisationDto.accounter\r\n                                    this.contractorDto.director = res.data.regOrganisationDto.director\r\n                                    this.contractorDto.shortName = res.data.regOrganisationDto.shortName\r\n                                    this.contractorDto.fullName = res.data.regOrganisationDto.fullName\r\n                                    this.contractorDto.addressDto.additional = res.data.regOrganisationDto.address\r\n                                    this.contractorDto.addressDto.districtId = res.data.regOrganisationDto.districtId\r\n                                    this.contractorDto.addressDto.regionId = res.data.regOrganisationDto.regionId\r\n                                    this.regionSelected(this.contractorDto.addressDto.regionId, true)\r\n                                    this.contractorDto.oked = res.data.regOrganisationDto.oked\r\n                                    this.contractorDto.address = res.data.regOrganisationDto.address\r\n                                    this.contractorDto.mobileNumber = res.data.regOrganisationDto.gdTelWork\r\n                                })\r\n                        } else {\r\n                            this.computedObserver.setErrors({ INN: [this.$t('validator.inn')] });\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n\r\n                    })\r\n            else\r\n                this.computedObserver.refs.INN.validate()\r\n        },\r\n        customLabelDepType (opt) {\r\n            let selected = this.types.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                  nameRu: selected.nameRu,\r\n                  nameLt: selected.nameLt,\r\n                  nameUz: selected.nameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelDistrict (opt) {\r\n            let selectedDistrict = this.districts.find(e => e.id == opt);\r\n            if (selectedDistrict) {\r\n                return `${this.getName({\r\n                  nameRu: selectedDistrict.nameRu,\r\n                  nameLt: selectedDistrict.nameLt,\r\n                  nameUz: selectedDistrict.nameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelRegion (opt) {\r\n            let selectedRegion = this.regions.find(e => e.id == opt);\r\n            if (selectedRegion) {\r\n                return `${this.getName({\r\n                  nameRu: selectedRegion.nameRu,\r\n                  nameLt: selectedRegion.nameLt,\r\n                  nameUz: selectedRegion.nameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelCurators (opt) {\r\n            let selected = this.curators.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${\r\n                    this.getName({\r\n                      nameRu: selected.nameRu,\r\n                      nameLt: selected.nameLt,\r\n                      nameUz: selected.nameUz,\r\n                    })\r\n                }`\r\n            }\r\n            return ``;\r\n        },\r\n        treeClosed (veeName) {\r\n            this.computedObserver.refs[veeName].validate();\r\n        },\r\n        normalizer (node) {\r\n            if (!node.children || node.children.length === 0) {\r\n                delete node.children\r\n                return {\r\n                    id: node.id,\r\n                    label: this.getName({\r\n                      nameRu: node.nameRu,\r\n                      nameLt: node.nameLt,\r\n                      nameUz: node.nameUz,\r\n                    }),\r\n                }\r\n            }\r\n            return {\r\n                id: node.id,\r\n                label: this.getName({\r\n                  nameRu: node.nameRu,\r\n                  nameLt: node.nameLt,\r\n                  nameUz: node.nameUz,\r\n                }),\r\n                children: node.children && node.children.length > 0 ? node.children : [],\r\n            }\r\n        },\r\n        customFilter (item, queryText, itemText) {\r\n            const textOne = item.name.toLowerCase()\r\n            const textTwo = item.code.toLowerCase()\r\n            const searchText = queryText.toLowerCase()\r\n\r\n            return textOne.indexOf(searchText) > -1 ||\r\n                textTwo.indexOf(searchText) > -1\r\n        },\r\n        save () {\r\n            this.computedObserver.validate().then(valid => {\r\n                if (valid) {\r\n                    if (this.editingItem.id) {\r\n                        if (this.isLegal && this.contractorDto && this.contractorDto.inn) {\r\n                            this.editingItem.inn = this.contractorDto.inn\r\n                        }\r\n                        let payload = {\r\n                            contractorDto: this.isLegal ? Object.assign({}, this.contractorDto) : {},\r\n                            departmentDto: Object.assign({}, this.editingItem)\r\n                        }\r\n                        helperService.updateDepartment(payload).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    } else {\r\n                        if (this.isLegal && this.contractorDto && this.contractorDto.inn) {\r\n                            this.editingItem.inn = this.contractorDto.inn\r\n                            let payload = {\r\n                                contractorDto: Object.assign({}, this.contractorDto),\r\n                                departmentDto: Object.assign({}, this.editingItem)\r\n                            }\r\n                            helperService.createDepWithLegalInfo(payload).then(res => {\r\n                                this.computedObserver.reset()\r\n                                this.editingItem = Object.assign({}, {});\r\n                                this.$router.go(-1)\r\n                                this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                            })\r\n                        } else {\r\n                            let payload = {\r\n                                departmentDto: Object.assign({}, this.editingItem)\r\n                            }\r\n                            crudAndListsService.create('department', payload).then(res => {\r\n                                this.computedObserver.reset()\r\n                                this.editingItem = Object.assign({}, {});\r\n                                this.$router.go(-1)\r\n                                this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                            })\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        }\r\n    },\r\n    /*\r\n    * CREATED */\r\n    async created () {\r\n        this.var_default_search_payload.itemsPerPage = 500\r\n        if (this.isModeCreate) {\r\n            this.isLegal = true\r\n            await crudAndListsService.getEmptyCustomUrl('department/get/legal-empty', true)\r\n                .then(res => {\r\n                    this.editingItem = Object.assign({}, res.data.departmentDto)\r\n                    this.contractorDto = Object.assign({}, res.data.contractorDto)\r\n                    if (this.$route.params.parentDepId) {\r\n                        this.editingItem.parentId = this.$route.params.parentDepId\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        } else {\r\n            await crudAndListsService.getById('department', this.$route.params.id, true)\r\n                .then(res => {\r\n                    this.editingItem = res.data.departmentDto\r\n                    this.contractorDto = res.data.contractorDto\r\n                    if (this.editingItem.inn) {\r\n                        this.isLegal = true\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n        // GET DEPARTMENTS\r\n        await crudAndListsService.searchList('department', this.var_default_search_payload)\r\n            .then(res => {\r\n                if (res.data.id)\r\n                    this.departments.push(res.data)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET CURATORS\r\n        await helperService.getCuratorsForDepartment()\r\n            .then(res => {\r\n                this.curators = res.data\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET DEPARTMENT TYPES\r\n        await crudAndListsService.searchList('directory/department-type', this.var_default_search_payload)\r\n            .then(res => {\r\n                this.types = res.data.list\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n        // GET STATUSES\r\n        await helperService.getRefByCode('status')\r\n            .then(res => {\r\n                this.statuses = res.data.children\r\n                if (this.isModeCreate) {\r\n                    let activeStatus = this.statuses.find(el => el.code == 'ACTIVE')\r\n                    if (activeStatus) {\r\n                        this.editingItem.statusId = activeStatus.id\r\n                    }\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n        // GET REGIONS\r\n        await helperService.fetchRegions()\r\n            .then(res => {\r\n                this.regions = res.data\r\n                this.regionSelected(this.contractorDto.addressDto.regionId, true)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n    padding-top: 0;\r\n}\r\nul {\r\n    list-style-type: none;\r\n}\r\n</style>"]}]}