{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\commission\\document-tree\\document-tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\commission\\document-tree\\document-tree.vue","mtime":1674799497642},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1675061970665},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQovLyBpbXBvcnQgTXlEb2N1bWVudFNlcnZpY2UgZnJvbSAiLi4vLi4vLi4vc2VydmljZXMvZG9jdW1lbnQvbXlkb2N1bWVudC5zZXJ2aWNlIjsNCmltcG9ydCBWSnN0cmVlIGZyb20gJ3Z1ZS1qc3RyZWUnDQppbXBvcnQgaGVscGVyU2VydmljZSBmcm9tICdAL3NoYXJlZC9zZXJ2aWNlcy9oZWxwZXIuc2VydmljZSc7DQoNCmV4cG9ydCBkZWZhdWx0IHsNCiAgICBwcm9wczogew0KICAgICAgICBkb2NJZDogew0KICAgICAgICAgICAgdHlwZTogU3RyaW5nDQogICAgICAgIH0NCiAgICB9LA0KICAgIGNvbXBvbmVudHM6IHsNCiAgICAgICAgVkpzdHJlZQ0KICAgIH0sDQogICAgbmFtZTogIkRvY3VtZW50VHJlZSIsDQogICAgZGF0YSAoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICBjdXJyZW50RG9jdW1lbnQ6IHt9LA0KICAgICAgICB9DQogICAgfSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIGFzeW5jIGdldERvY3VtZW50VHJlZSAoKSB7DQogICAgICAgICAgICB0aGlzLiRlbWl0KCd0b2dnbGVMb2FkaW5nJywgdHJ1ZSkNCiAgICAgICAgICAgIGhlbHBlclNlcnZpY2UuZ2V0QXBwbGljYXRpb25UcmVlKHRoaXMuZG9jSWQpDQogICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50RG9jdW1lbnQgPSByZXMuZGF0YQ0KICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLmN1cnJlbnREb2N1bWVudC5jaGlsZHJlbiA9IHRoaXMuY3VycmVudERvY3VtZW50LmNoaWxkcmVuLm1hcChmdW5jdGlvbiBmIChvKSB7DQogICAgICAgICAgICAgICAgICAgIC8vICAgICB2bS4kc2V0KG8sICdvcGVuZWQnLCB0cnVlKQ0KICAgICAgICAgICAgICAgICAgICAvLyAgICAgLy8gby5vcGVuZWQgPSB0cnVlDQogICAgICAgICAgICAgICAgICAgIC8vICAgICBpZiAoby5jaGlsZHJlbiAmJiBvLmNoaWxkcmVuLmxlbmd0aCkgew0KICAgICAgICAgICAgICAgICAgICAvLyAgICAgICAgIG8uY2hpbGRyZW4ubWFwKGYpDQogICAgICAgICAgICAgICAgICAgIC8vICAgICB9DQogICAgICAgICAgICAgICAgICAgIC8vICAgICByZXR1cm4gbw0KICAgICAgICAgICAgICAgICAgICAvLyB9KQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICAgICAgLmZpbmFsbHkoKCkgPT4gew0KICAgICAgICAgICAgICAgICAgICB0aGlzLiRlbWl0KCd0b2dnbGVMb2FkaW5nJywgZmFsc2UpDQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIC8qIGF3YWl0IE15RG9jdW1lbnRTZXJ2aWNlLmdldERvY3VtZW50VHJlZSggdGhpcy5kb2NJZCApLnRoZW4oIHJlc3BvbnNlID0+IHsNCiAgICAgICAgICAgICAgdGhpcy5jdXJyZW50RG9jdW1lbnQgPSByZXNwb25zZS5kYXRhDQogICAgICAgICAgICB9ICkuY2F0Y2goIChlKSA9PiB7DQogICAgICAgICAgICAgIHRoaXMuJG15TWFrZVRvYXN0KA0KICAgICAgICAgICAgICAgICAgdGhpcy4kZ2xvYmFsQ3JlYXRlRXJyb3JNZXNzYWdlRnJvbUFycmF5KA0KICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJGdldEFycmF5RnJvbUFycmF5TGlzdCggT2JqZWN0LnZhbHVlcyggZS5yZXNwb25zZS5kYXRhLmVycm9ycyApICkgKSwNCiAgICAgICAgICAgICAgICAgIHRoaXMuJHQoICJhY3Rpb25zLmVycm9yIiApLA0KICAgICAgICAgICAgICAgICAgImRhbmdlciINCiAgICAgICAgICAgICAgKTsNCiAgICAgICAgICAgIH0gKTsgKi8NCiAgICAgICAgfSwNCiAgICAgICAgY3VzdG9tSXRlbUNsaWNrIChvYmosIG1vZGVsLCBldmVudCkgew0KICAgICAgICAgICAgdGhpcy4kc2V0KG1vZGVsLCAnb3BlbmVkJywgIW1vZGVsLm9wZW5lZCkNCiAgICAgICAgICAgIC8vIG1vZGVsLm9wZW5lZCA9ICFtb2RlbC5vcGVuZWQNCiAgICAgICAgfSwNCiAgICAgICAgcmVjdXJzaXZlQ3JlYXRlTm9kZSAobm9kZSwgYXNzaWdubWVudHMgPSBmYWxzZSwgYmF0Y2hlcyA9IGZhbHNlKSB7DQogICAgICAgICAgICBsZXQgY3VycmVudFRyZWVOb2RlID0gew0KICAgICAgICAgICAgICAgIHRleHQ6IGA8aSBjbGFzcz0iZmEgZmEtY2xvY2sgdGV4dC1wcmltYXJ5Ij48L2k+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAke25vZGUucHJvY2Vzc0RhdGV9IDxzcGFuIGNsYXNzPSJ0ZXh0LXByaW1hcnkiPiM8L3NwYW4+IGAsDQogICAgICAgICAgICAgICAgY2hpbGRyZW46IFtdLA0KICAgICAgICAgICAgICAgIG9wZW5lZDogdHJ1ZSwNCiAgICAgICAgICAgIH07DQogICAgICAgICAgICBpZiAoYXNzaWdubWVudHMpIHsNCiAgICAgICAgICAgICAgICBjdXJyZW50VHJlZU5vZGUudGV4dCArPSBgPGk+JHtub2RlLmZyb21Vc2VyfTwvaT4gIDxpDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmYSBmYS1hcnJvdy1yaWdodCB0ZXh0LXN1Y2Nlc3MgbWwtMSBtci0xIj48L2k+IDxzcGFuDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJ0ZXh0LXByaW1hcnkiPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7bm9kZS5tYWlsaW5nUHVycG9zZX0NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+IDxpIGNsYXNzPSJmYSBmYS1hcnJvdy1yaWdodCB0ZXh0LXN1Y2Nlc3MgbWwtMSBtci0xIj48L2k+IDxpPg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7bm9kZS50b1VzZXJ9ICg8c3BhbiBjbGFzcz0idGV4dC1wcmltYXJ5Ij4ke25vZGUucHJvY2Vzc308L3NwYW4+YDsNCiAgICAgICAgICAgICAgICBpZiAobm9kZS5tZXNzYWdlKSB7DQogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRUcmVlTm9kZS50ZXh0ICs9IGAgLSA8c3BhbiBjbGFzcz0idGV4dC1zdWNjZXNzIj4ke25vZGUubWVzc2FnZX08L3NwYW4+YA0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICBjdXJyZW50VHJlZU5vZGUudGV4dCArPSBgKWA7DQogICAgICAgICAgICB9IGVsc2UgaWYgKGJhdGNoZXMpIHsNCiAgICAgICAgICAgICAgICBjdXJyZW50VHJlZU5vZGUudGV4dCArPSBgPGk+JHtub2RlLnVzZXJ9PC9pPiA8aQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmEgZmEtYXJyb3ctcmlnaHQgdGV4dC1zdWNjZXNzIG1sLTEgbXItMSI+PC9pPiA8c3Bhbg0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0idGV4dC1wcmltYXJ5Ij4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAke25vZGUucHJvY2Vzc30NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+YDsNCiAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgY3VycmVudFRyZWVOb2RlLnRleHQgKz0gYDxpPiR7bm9kZS51c2VyfTwvaT4gPGkNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZhIGZhLWFycm93LXJpZ2h0IHRleHQtc3VjY2VzcyBtbC0xIG1yLTEiPjwvaT4gPHNwYW4NCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InRleHQtcHJpbWFyeSI+DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICR7bm9kZS5wcm9jZXNzfQ0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj5gOw0KICAgICAgICAgICAgfQ0KDQoNCiAgICAgICAgICAgIGlmIChub2RlLmFzc2lnbm1lbnRzICYmIG5vZGUuYXNzaWdubWVudHMubGVuZ3RoKSB7DQogICAgICAgICAgICAgICAgbm9kZS5hc3NpZ25tZW50cy5mb3JFYWNoKGVsID0+IHsNCiAgICAgICAgICAgICAgICAgICAgY3VycmVudFRyZWVOb2RlLmNoaWxkcmVuLnB1c2godGhpcy5yZWN1cnNpdmVDcmVhdGVOb2RlKGVsLCB0cnVlKSkNCiAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgfQ0KDQogICAgICAgICAgICBpZiAobm9kZS5iYXRjaGVzICYmIG5vZGUuYmF0Y2hlcy5sZW5ndGgpIHsNCiAgICAgICAgICAgICAgICBub2RlLmJhdGNoZXMuZm9yRWFjaChlbCA9PiB7DQogICAgICAgICAgICAgICAgICAgIGN1cnJlbnRUcmVlTm9kZS5jaGlsZHJlbi5wdXNoKHRoaXMucmVjdXJzaXZlQ3JlYXRlTm9kZShlbCwgZmFsc2UsIHRydWUpKQ0KICAgICAgICAgICAgICAgIH0pDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIHJldHVybiBjdXJyZW50VHJlZU5vZGU7DQogICAgICAgIH0NCiAgICB9LA0KICAgIGFzeW5jIGNyZWF0ZWQgKCkgew0KICAgICAgICBpZiAodGhpcy5kb2NJZCkgew0KICAgICAgICAgICAgYXdhaXQgdGhpcy5nZXREb2N1bWVudFRyZWUoKQ0KICAgICAgICB9DQogICAgfSwNCiAgICBjb21wdXRlZDogew0KICAgICAgICBkb2N1bWVudFRyZWVBcnJheSAoKSB7DQogICAgICAgICAgICAvLyBsZXQgY29ycmVjdEJhdGNoZXNUcmVlID0gW107DQogICAgICAgICAgICAvLyB0aGlzLmN1cnJlbnREb2N1bWVudC5iYXRjaGVzLmZvckVhY2godHJlZUVsZW1lbnQgPT4gew0KICAgICAgICAgICAgLy8gICAgIGNvcnJlY3RCYXRjaGVzVHJlZS5wdXNoKHRoaXMucmVjdXJzaXZlQ3JlYXRlTm9kZSh0cmVlRWxlbWVudCwgZmFsc2UsIHRydWUpKQ0KICAgICAgICAgICAgLy8gfSk7DQoNCiAgICAgICAgICAgIC8vIGxldCBjb3JyZWN0QXNzaWdubWVudHNUcmVlID0gW107DQogICAgICAgICAgICAvLyB0aGlzLmN1cnJlbnREb2N1bWVudC5hc3NpZ25tZW50cy5mb3JFYWNoKHRyZWVFbGVtZW50ID0+IHsNCiAgICAgICAgICAgIC8vICAgICBjb3JyZWN0QXNzaWdubWVudHNUcmVlLnB1c2godGhpcy5yZWN1cnNpdmVDcmVhdGVOb2RlKHRyZWVFbGVtZW50LCB0cnVlKSkNCiAgICAgICAgICAgIC8vIH0pOw0KICAgICAgICAgICAgbGV0IHZtID0gdGhpcw0KICAgICAgICAgICAgbGV0IGNvcHlPZkRhdGEgPSBPYmplY3QuYXNzaWduKHt9LCB0aGlzLmN1cnJlbnREb2N1bWVudCkNCiAgICAgICAgICAgIGlmIChjb3B5T2ZEYXRhLmNoaWxkcmVuKSB7DQogICAgICAgICAgICAgICAgY29weU9mRGF0YS5jaGlsZHJlbiA9IGNvcHlPZkRhdGEuY2hpbGRyZW4ubWFwKGZ1bmN0aW9uIGYgKG8pIHsNCiAgICAgICAgICAgICAgICAgICAgdm0uJHNldChvLCAnb3BlbmVkJywgdHJ1ZSkNCiAgICAgICAgICAgICAgICAgICAgLy8gby5vcGVuZWQgPSB0cnVlDQogICAgICAgICAgICAgICAgICAgIGlmIChvLmNoaWxkcmVuICYmIG8uY2hpbGRyZW4ubGVuZ3RoKSB7DQogICAgICAgICAgICAgICAgICAgICAgICBvLmNoaWxkcmVuLm1hcChmKQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICAgIHJldHVybiBvDQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIHRoaXMuJHNldChjb3B5T2ZEYXRhLCAnb3BlbmVkJywgdHJ1ZSkNCiAgICAgICAgICAgIHJldHVybiBbY29weU9mRGF0YV07DQogICAgICAgIH0sDQogICAgfSwNCiAgICAvKiANCiAgICBXQVRDSCAqLw0KICAgIHdhdGNoOiB7DQogICAgICAgIGRvY0lkOiB7DQogICAgICAgICAgICBoYW5kbGVyICgpIHsNCiAgICAgICAgICAgICAgICB0aGlzLmdldERvY3VtZW50VHJlZSgpDQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9DQo="},{"version":3,"sources":["document-tree.vue"],"names":[],"mappings":";AAwfile":"document-tree.vue","sourceRoot":"src/modules/commission/document-tree","sourcesContent":["<template>\r\n    <b-row>\r\n        <b-col>\r\n            <b-card>\r\n                <div\r\n                    class=\"card-body p-0\"\r\n                    style=\"overflow: auto;\"\r\n                >\r\n                    <h4 class=\"card-title mb-4\"><b>{{ $t( 'submodules.doc.tab_doc_tree' ) }}</b></h4>\r\n                    <!-- <h5 v-if=\"currentDocument && currentDocument.id\">\r\n                        <i class=\"fa fa-clock text-primary\"></i>\r\n                        {{currentDocument.dateOfCreated ? currentDocument.dateOfCreated : ''}} <span class=\"text-primary\">#</span>\r\n                        <i>{{currentDocument.fromEmployee}}</i> (Registered)\r\n                    </h5> -->\r\n                    <v-jstree\r\n                        v-if=\"documentTreeArray[0] && documentTreeArray[0].id\"\r\n                        :data=\"documentTreeArray\"\r\n                        whole-row\r\n                        text-field-name=\"fromEmployee\"\r\n                    >\r\n                        <template slot-scope=\"_\">\r\n                            <div @click.exact=\"customItemClick(_.vm, _.model, $event)\">\r\n                                <p>\r\n                                    <i class=\"fa fa-clock text-primary\"></i>\r\n                                    {{_.model.dateOfCreated ? _.model.dateOfCreated : ''}} <span class=\"text-primary\">#</span>\r\n                                    <i>{{_.model.fromEmployee}}</i> <i class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <span class=\"text-primary\">\r\n                                        {{getName({nameLt: _.model.mailingPurposeNameLt, nameUz: _.model.mailingPurposeNameUz, nameRu: _.model.mailingPurposeNameRu})}}\r\n                                    </span> <i class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <i>\r\n                                        {{_.model.toEmployee}} (<span class=\"text-primary\">{{getName({nameLt: _.model.processNameLt, nameUz: _.model.processNameUz, nameRu: _.model.processNameRu})}}</span>)</i>\r\n                                </p>\r\n\r\n                            </div>\r\n                        </template>\r\n                    </v-jstree>\r\n                </div>\r\n            </b-card>\r\n        </b-col>\r\n    </b-row>\r\n</template>\r\n<script>\r\n// import MyDocumentService from \"../../../services/document/mydocument.service\";\r\nimport VJstree from 'vue-jstree'\r\nimport helperService from '@/shared/services/helper.service';\r\n\r\nexport default {\r\n    props: {\r\n        docId: {\r\n            type: String\r\n        }\r\n    },\r\n    components: {\r\n        VJstree\r\n    },\r\n    name: \"DocumentTree\",\r\n    data () {\r\n        return {\r\n            currentDocument: {},\r\n        }\r\n    },\r\n    methods: {\r\n        async getDocumentTree () {\r\n            this.$emit('toggleLoading', true)\r\n            helperService.getApplicationTree(this.docId)\r\n                .then(res => {\r\n                    this.currentDocument = res.data\r\n                    // this.currentDocument.children = this.currentDocument.children.map(function f (o) {\r\n                    //     vm.$set(o, 'opened', true)\r\n                    //     // o.opened = true\r\n                    //     if (o.children && o.children.length) {\r\n                    //         o.children.map(f)\r\n                    //     }\r\n                    //     return o\r\n                    // })\r\n                })\r\n                .finally(() => {\r\n                    this.$emit('toggleLoading', false)\r\n                })\r\n            /* await MyDocumentService.getDocumentTree( this.docId ).then( response => {\r\n              this.currentDocument = response.data\r\n            } ).catch( (e) => {\r\n              this.$myMakeToast(\r\n                  this.$globalCreateErrorMessageFromArray(\r\n                      this.$getArrayFromArrayList( Object.values( e.response.data.errors ) ) ),\r\n                  this.$t( \"actions.error\" ),\r\n                  \"danger\"\r\n              );\r\n            } ); */\r\n        },\r\n        customItemClick (obj, model, event) {\r\n            this.$set(model, 'opened', !model.opened)\r\n            // model.opened = !model.opened\r\n        },\r\n        recursiveCreateNode (node, assignments = false, batches = false) {\r\n            let currentTreeNode = {\r\n                text: `<i class=\"fa fa-clock text-primary\"></i>\r\n                                                ${node.processDate} <span class=\"text-primary\">#</span> `,\r\n                children: [],\r\n                opened: true,\r\n            };\r\n            if (assignments) {\r\n                currentTreeNode.text += `<i>${node.fromUser}</i>  <i\r\n                                                        class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <span\r\n                                                        class=\"text-primary\">\r\n                                                       ${node.mailingPurpose}\r\n                                                    </span> <i class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <i>\r\n                                                    ${node.toUser} (<span class=\"text-primary\">${node.process}</span>`;\r\n                if (node.message) {\r\n                    currentTreeNode.text += ` - <span class=\"text-success\">${node.message}</span>`\r\n                }\r\n                currentTreeNode.text += `)`;\r\n            } else if (batches) {\r\n                currentTreeNode.text += `<i>${node.user}</i> <i\r\n                                                        class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <span\r\n                                                        class=\"text-primary\">\r\n                                                       ${node.process}\r\n                                                    </span>`;\r\n            } else {\r\n                currentTreeNode.text += `<i>${node.user}</i> <i\r\n                                                        class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <span\r\n                                                        class=\"text-primary\">\r\n                                                        ${node.process}\r\n                                                    </span>`;\r\n            }\r\n\r\n\r\n            if (node.assignments && node.assignments.length) {\r\n                node.assignments.forEach(el => {\r\n                    currentTreeNode.children.push(this.recursiveCreateNode(el, true))\r\n                })\r\n            }\r\n\r\n            if (node.batches && node.batches.length) {\r\n                node.batches.forEach(el => {\r\n                    currentTreeNode.children.push(this.recursiveCreateNode(el, false, true))\r\n                })\r\n            }\r\n\r\n            return currentTreeNode;\r\n        }\r\n    },\r\n    async created () {\r\n        if (this.docId) {\r\n            await this.getDocumentTree()\r\n        }\r\n    },\r\n    computed: {\r\n        documentTreeArray () {\r\n            // let correctBatchesTree = [];\r\n            // this.currentDocument.batches.forEach(treeElement => {\r\n            //     correctBatchesTree.push(this.recursiveCreateNode(treeElement, false, true))\r\n            // });\r\n\r\n            // let correctAssignmentsTree = [];\r\n            // this.currentDocument.assignments.forEach(treeElement => {\r\n            //     correctAssignmentsTree.push(this.recursiveCreateNode(treeElement, true))\r\n            // });\r\n            let vm = this\r\n            let copyOfData = Object.assign({}, this.currentDocument)\r\n            if (copyOfData.children) {\r\n                copyOfData.children = copyOfData.children.map(function f (o) {\r\n                    vm.$set(o, 'opened', true)\r\n                    // o.opened = true\r\n                    if (o.children && o.children.length) {\r\n                        o.children.map(f)\r\n                    }\r\n                    return o\r\n                })\r\n            }\r\n            this.$set(copyOfData, 'opened', true)\r\n            return [copyOfData];\r\n        },\r\n    },\r\n    /* \r\n    WATCH */\r\n    watch: {\r\n        docId: {\r\n            handler () {\r\n                this.getDocumentTree()\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]}]}