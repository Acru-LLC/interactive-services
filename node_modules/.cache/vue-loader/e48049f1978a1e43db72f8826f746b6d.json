{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\components\\base\\BaseTreeselectWithValidation.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\components\\base\\BaseTreeselectWithValidation.vue","mtime":1667352074343},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQovKg0KICogSU1QT1JUIFRSRUVTRUxFQ1QgKi8NCmltcG9ydCBUcmVlc2VsZWN0IGZyb20gIkByaW9waGFlL3Z1ZS10cmVlc2VsZWN0IjsNCmltcG9ydCAiQHJpb3BoYWUvdnVlLXRyZWVzZWxlY3QvZGlzdC92dWUtdHJlZXNlbGVjdC5jc3MiOw0KZXhwb3J0IGRlZmF1bHQgew0KICAgIHByb3BzOiB7DQogICAgICAgIG5vdFJlcXVpcmVkOiB7DQogICAgICAgICAgICB0eXBlOiBCb29sZWFuLA0KICAgICAgICAgICAgZGVmYXVsdDogZmFsc2UsDQogICAgICAgIH0sDQogICAgICAgIGhpZGVFcnJvck1zZzogew0KICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlDQogICAgICAgIH0sDQogICAgICAgIGZvcm1MYWJlbDogew0KICAgICAgICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgICAgICAgZGVmYXVsdDogJycNCiAgICAgICAgfSwNCiAgICAgICAgaW5mb01zZzogew0KICAgICAgICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgICAgICAgZGVmYXVsdDogJycNCiAgICAgICAgfSwNCiAgICAgICAgcnVsZXM6IHsNCiAgICAgICAgICAgIHR5cGU6IFtPYmplY3QsIFN0cmluZ10sDQogICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiB7DQogICAgICAgICAgICB9LA0KICAgICAgICB9LA0KICAgICAgICB2ZWVOYW1lOiB7DQogICAgICAgICAgICB0eXBlOiBTdHJpbmcsDQogICAgICAgICAgICBkZWZhdWx0OiAnJywNCiAgICAgICAgfSwNCiAgICAgICAgLy8gbXVzdCBiZSBpbmNsdWRlZCBpbiBwcm9wcw0KICAgICAgICB2YWx1ZTogew0KICAgICAgICAgICAgdHlwZTogbnVsbCwNCiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlDQogICAgICAgIH0sDQogICAgICAgIGNsYXNzTGlzdDogew0KICAgICAgICAgICAgdHlwZTogU3RyaW5nLA0KICAgICAgICAgICAgZGVmYXVsdDogJycNCiAgICAgICAgfSwNCiAgICAgICAgYWx3YXlzT3Blbjogew0KICAgICAgICAgICAgdHlwZTogQm9vbGVhbiwNCiAgICAgICAgICAgIGRlZmF1bHQ6IGZhbHNlDQogICAgICAgIH0NCiAgICB9LA0KICAgIGNvbXBvbmVudHM6IHsNCiAgICAgICAgVHJlZXNlbGVjdA0KICAgIH0sDQogICAgZGF0YTogKCkgPT4gKHsNCiAgICAgICAgaW5uZXJWYWx1ZTogbnVsbCwNCiAgICB9KSwNCiAgICBtZXRob2RzOiB7DQogICAgICAgIC8vIHZhbGlkYXRlTWFudWFsbHkgKCkgew0KICAgICAgICAvLyAgICAgdGhpcy4kcmVmc1t0aGlzLnZlZU5hbWVdLnZhbGlkYXRlKHRoaXMudmVlTmFtZSkNCiAgICAgICAgLy8gfQ0KICAgIH0sDQogICAgd2F0Y2g6IHsNCiAgICAgICAgLy8gSGFuZGxlcyBpbnRlcm5hbCBtb2RlbCBjaGFuZ2VzLg0KICAgICAgICBpbm5lclZhbHVlIChuZXdWYWwpIHsNCiAgICAgICAgICAgIHRoaXMuJGVtaXQoImlucHV0IiwgbmV3VmFsKTsNCiAgICAgICAgfSwNCiAgICAgICAgLy8gSGFuZGxlcyBleHRlcm5hbCBtb2RlbCBjaGFuZ2VzLg0KICAgICAgICB2YWx1ZSAobmV3VmFsKSB7DQogICAgICAgICAgICB0aGlzLmlubmVyVmFsdWUgPSBuZXdWYWw7DQogICAgICAgIH0sDQogICAgfSwNCiAgICBjcmVhdGVkICgpIHsNCiAgICAgICAgaWYgKHRoaXMudmFsdWUpIHsNCiAgICAgICAgICAgIHRoaXMuaW5uZXJWYWx1ZSA9IHRoaXMudmFsdWU7DQogICAgICAgIH0NCiAgICB9DQp9Ow0K"},{"version":3,"sources":["BaseTreeselectWithValidation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseTreeselectWithValidation.vue","sourceRoot":"src/components/base","sourcesContent":["<template>\r\n    <ValidationProvider\r\n        :mode=\"notRequired ? 'passive' : 'aggressive'\"\r\n        :name=\"veeName\"\r\n        :rules=\"rules\"\r\n        :ref=\"veeName\"\r\n    >\r\n        <template v-slot:default=\"validationContext\">\r\n            <div class=\"base-multiselect-wrapper base-form-component\" :class=\"formLabel !== '__none' ? 'base-form-component-grid-template-columns-25-75' : 'base-form-component-grid-template-columns-100'\">\r\n                <!-- LABEL -->\r\n                <label v-if=\"formLabel !== '__none'\" for=\"base-form-component__label\">{{ formLabel }}</label>\r\n\r\n                <!-- TREESELECT -->\r\n                <treeselect\r\n                    v-model=\"innerValue\"\r\n                    v-bind=\"$attrs\"\r\n                    :always-open=\"alwaysOpen\"\r\n                    v-on=\"$listeners\"\r\n                    class=\"custom-treeselect base-form-component__main-form-element\"\r\n                    :class=\"[!!validationContext.errors.length && !notRequired ? 'invalid' : '', validationContext.valid && !notRequired ? 'valid' : '']\"\r\n                >\r\n                    <template\r\n                        v-for=\"(_, slot) of $scopedSlots\"\r\n                        v-slot:[slot]=\"scope\"\r\n                    >\r\n                        <slot\r\n                            :name=\"slot\"\r\n                            v-bind=\"scope\"\r\n                        />\r\n                    </template>\r\n\r\n                </treeselect>\r\n\r\n                <!-- INVALID FEEDBACK -->\r\n                <b-form-invalid-feedback\r\n                    v-if=\"!hideErrorMsg\"\r\n                    :style=\"validationContext.errors.length > 0 ? {'display': 'block'} : {}\"\r\n                    class=\"base-form-component__invalid-feedback\"\r\n                >\r\n                    {{ validationContext.errors[0] }}\r\n                </b-form-invalid-feedback>\r\n                <!-- HELP TEXT -->\r\n                <b-form-text\r\n                    v-if=\"infoMsg\"\r\n                    class=\"base-form-component__info-msg\"\r\n                >\r\n                    {{ infoMsg }}\r\n                </b-form-text>\r\n            </div>\r\n        </template>\r\n    </ValidationProvider>\r\n</template>\r\n\r\n<script>\r\n/*\r\n * IMPORT TREESELECT */\r\nimport Treeselect from \"@riophae/vue-treeselect\";\r\nimport \"@riophae/vue-treeselect/dist/vue-treeselect.css\";\r\nexport default {\r\n    props: {\r\n        notRequired: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        hideErrorMsg: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        formLabel: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        infoMsg: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        rules: {\r\n            type: [Object, String],\r\n            default: () => {\r\n            },\r\n        },\r\n        veeName: {\r\n            type: String,\r\n            default: '',\r\n        },\r\n        // must be included in props\r\n        value: {\r\n            type: null,\r\n            required: true\r\n        },\r\n        classList: {\r\n            type: String,\r\n            default: ''\r\n        },\r\n        alwaysOpen: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    components: {\r\n        Treeselect\r\n    },\r\n    data: () => ({\r\n        innerValue: null,\r\n    }),\r\n    methods: {\r\n        // validateManually () {\r\n        //     this.$refs[this.veeName].validate(this.veeName)\r\n        // }\r\n    },\r\n    watch: {\r\n        // Handles internal model changes.\r\n        innerValue (newVal) {\r\n            this.$emit(\"input\", newVal);\r\n        },\r\n        // Handles external model changes.\r\n        value (newVal) {\r\n            this.innerValue = newVal;\r\n        },\r\n    },\r\n    created () {\r\n        if (this.value) {\r\n            this.innerValue = this.value;\r\n        }\r\n    }\r\n};\r\n</script>\r\n<style lang=\"scss\">\r\n.base-form-component-grid-template-columns-25-75 {\r\n    grid-template-columns: 25% 75%;\r\n}\r\n.base-form-component-grid-template-columns-100 {\r\n    grid-template-columns: 100%;\r\n}\r\n\r\n</style>\r\n"]}]}