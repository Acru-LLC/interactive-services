{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\letter\\sent\\sent.vue?vue&type=template&id=37159a67&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\letter\\sent\\sent.vue","mtime":1674799498003},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1667355356566},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}