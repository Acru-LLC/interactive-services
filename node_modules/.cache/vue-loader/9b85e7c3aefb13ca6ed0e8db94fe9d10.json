{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\wordTemplates\\templates\\CreateForm.vue?vue&type=style&index=1&id=d59f1712&scoped=true&lang=scss&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\wordTemplates\\templates\\CreateForm.vue","mtime":1676468872141},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1675061971809},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucWxFZGl0IHsNCiAgaGVpZ2h0OiAzMDBweDsNCg0KICAucWwtdG9vbGJhciB7DQoNCiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7DQogIH0NCg0KICAucWwtc25vdyB7DQogICAgYm9yZGVyOiAxcHggc29saWQgI2U1ZWFlZSAhaW1wb3J0YW50Ow0KICB9DQoNCiAgLnFsLWVkaXRvciB7DQoNCiAgICBtaW4taGVpZ2h0OiAzMDBweCAhaW1wb3J0YW50Ow0KICAgIGZvbnQtc2l6ZTogMTdweCAhaW1wb3J0YW50Ow0KICAgIHBhZGRpbmc6IDIwcHggIWltcG9ydGFudDsNCiAgfQ0KfQ0K"},{"version":3,"sources":["CreateForm.vue"],"names":[],"mappings":";AA4SA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"CreateForm.vue","sourceRoot":"src/modules/wordTemplates/templates","sourcesContent":["<template>\r\n  <ValidationObserver\r\n      ref=\"observer\"\r\n      v-slot=\"{}\"\r\n  >\r\n    <div>\r\n      <div>\r\n        <b-card-group style=\"padding: 0 150px 0 150px\">\r\n          <b-card\r\n              style=\"border: 1px solid\"\r\n              border-variant=\"success\"\r\n              :header=\"$t('word_templates.create_template')\"\r\n              header-bg-variant=\"success\"\r\n              header-text-variant=\"white\"\r\n              align=\"center\"\r\n\r\n          >\r\n            <b-card-text>\r\n              <b-row>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                >\r\n                  <BaseMultiselectWithValidation\r\n                      rules=\"required\"\r\n                      class=\"required\"\r\n                      label-on-top\r\n                      v-model=\"editingItem.categoryId\"\r\n                      :options=\"category.map(e => e.id)\"\r\n                      :label=\"$t('word_templates.categories')\"\r\n                      :placeholder=\"$t('word_templates.categories')\"\r\n                      open-direction=\"bottom\"\r\n                      :show-labels=\"false\"\r\n                      :custom-label=\"customLabelCategory\"\r\n                      @search-change=\"fetchCategoryList\"\r\n                  />\r\n                </b-col>\r\n\r\n\r\n              </b-row>\r\n              <b-row>\r\n                <b-col\r\n                    class=\"mt-3\"\r\n                    sm=\"12\"\r\n                    md=\"12\"\r\n                >\r\n                  <quill-editor\r\n                      class=\"qlEdit\"\r\n                      ref=\"myQuillEditor\"\r\n                      v-model=\"editingItem.nameUz\"\r\n                      :options=\"editorOption\"\r\n                      @blur=\"onEditorBlur($event)\"\r\n                      @focus=\"onEditorFocus($event)\"\r\n                      @ready=\"onEditorReady($event)\"\r\n                      @change=\"onEditorChange($event)\"\r\n                  />\r\n                  <div class=\"example\">\r\n                    <quill-editor\r\n                        class=\"editor\"\r\n                        ref=\"myTextEditor\"\r\n                        :value=\"content\"\r\n                        :options=\"editorOption\"\r\n                        @change=\"onEditorChange\"\r\n                        @blur=\"onEditorBlur($event)\"\r\n                        @focus=\"onEditorFocus($event)\"\r\n                        @ready=\"onEditorReady($event)\"\r\n                    />\r\n                    <div class=\"output code\">\r\n                      <code class=\"hljs\" v-html=\"contentCode\"></code>\r\n                    </div>\r\n                    <div class=\"output ql-snow\">\r\n                      <div class=\"ql-editor\" v-html=\"content\"></div>\r\n                    </div>\r\n                  </div>\r\n                </b-col>\r\n              </b-row>\r\n\r\n\r\n            </b-card-text>\r\n          </b-card>\r\n        </b-card-group>\r\n      </div>\r\n    </div>\r\n  </ValidationObserver>\r\n</template>\r\n<script>\r\nimport dedent from 'dedent'\r\nimport hljs from 'highlight.js'\r\nimport debounce from 'lodash/debounce'\r\nimport {quillEditor} from 'vue-quill-editor'\r\n// highlight.js style\r\nimport 'highlight.js/styles/tomorrow.css'\r\n// import theme style\r\nimport 'quill/dist/quill.core.css'\r\nimport 'quill/dist/quill.snow.css'\r\nimport \"quill/dist/quill.core.css\";\r\nimport \"quill/dist/quill.snow.css\";\r\nimport \"quill/dist/quill.bubble.css\";\r\nimport {quillEditor} from \"vue-quill-editor\";\r\nimport Service from \"@/modules/letter/letterService\";\r\n\r\nconst MAIN_API_URL = 'templates'\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\n\r\n\r\nexport default {\r\n  name: \"CreateForm\",\r\n  props: {\r\n    customIsModeCreate: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  /*\r\n  * COMPONENTS */\r\n  components: {\r\n    quillEditor\r\n  },\r\n  /*\r\n  * DATA */\r\n  data() {\r\n    return {\r\n      editorOption: {\r\n        modules: {\r\n          toolbar: [\r\n            ['bold', 'italic', 'underline', 'strike'],\r\n            ['blockquote', 'code-block'],\r\n            [{'header': 1}, {'header': 2}],\r\n            [{'list': 'ordered'}, {'list': 'bullet'}],\r\n            [{'script': 'sub'}, {'script': 'super'}],\r\n            [{'indent': '-1'}, {'indent': '+1'}],\r\n            [{'direction': 'rtl'}],\r\n            [{'size': ['small', false, 'large', 'huge']}],\r\n            [{'header': [1, 2, 3, 4, 5, 6, false]}],\r\n            [{'font': []}],\r\n            [{'color': []}, {'background': []}],\r\n            [{'align': []}],\r\n            ['clean'],\r\n            ['link', 'image', 'video']\r\n          ],\r\n          syntax: {\r\n            highlight: text => hljs.highlightAuto(text).value\r\n          }\r\n        }\r\n      },\r\n      content: dedent`\r\n          <h1 class=\"ql-align-center\"><span class=\"ql-font-serif\" style=\"background-color: rgb(240, 102, 102); color: rgb(255, 255, 255);\"> I am snow example! </span></h1><p><br></p><p><span class=\"ql-font-serif\">W Can a man still be brave if he's afraid? That is the only time a man can be brave. </span></p><p><br></p><p><strong class=\"ql-font-serif ql-size-large\">Courage and folly is </strong><strong class=\"ql-font-serif ql-size-large\" style=\"color: rgb(230, 0, 0);\">always</strong><strong class=\"ql-font-serif ql-size-large\"> just a fine line.</strong></p><p><br></p><p><u class=\"ql-font-serif\">There is only one God, and his name is Death. And there is only one thing we say to Death: \"Not today.\"</u></p><p><br></p><p><em class=\"ql-font-serif\">Fear cuts deeper than swords.</em></p><p><br></p><pre class=\"ql-syntax\" spellcheck=\"false\"><span class=\"hljs-keyword\">const</span> a = <span class=\"hljs-number\">10</span>;\r\n          <span class=\"hljs-keyword\">const</span> editorOption = { <span class=\"hljs-attr\">highlight</span>: <span class=\"hljs-function\"><span class=\"hljs-params\">text</span> =&gt;</span> hljs.highlightAuto(text).value };</pre><p><br></p><p><span class=\"ql-font-serif\">Every flight begins with a fall.</span></p><p><br></p><p><a href=\"https://surmon.me/\" rel=\"noopener noreferrer\" target=\"_blank\" class=\"ql-font-serif ql-size-small\" style=\"color: rgb(230, 0, 0);\"><u>A ruler who hides behind paid executioners soon forgets what death is. </u></a></p><p><br></p><iframe class=\"ql-video ql-align-center\" frameborder=\"0\" allowfullscreen=\"true\" src=\"https://www.youtube.com/embed/QHH3iSeDBLo?showinfo=0\" height=\"238\" width=\"560\"></iframe><p><br></p><p><span class=\"ql-font-serif\">Hear my words, and bear witness to my vow. Night gathers, and now my watch begins. It shall not end until my death. I shall take no wife, hold no lands, father no children. I shall wear no crowns and win no glory. I shall live and die at my post. I am the sword in the darkness. I am the watcher on the walls. I am the fire that burns against the cold, the light that brings the dawn, the horn that wakes the sleepers, the shield that guards the realms of men. I pledge my life and honor to the Nightâ€™s Watch, for this night and all the nights to come.</span></p><p><br></p><p><span class=\"ql-font-serif\">We are born to suffer, to suffer can make us strong.</span></p><p><br></p><p><span class=\"ql-font-serif\">The things we love destroy us every time.</span></p>\r\n        `,\r\n      categoryId: null,\r\n      category: [],\r\n      editingItem: {},\r\n      statuses: []\r\n    }\r\n  },\r\n  /*\r\n  * COMPUTED */\r\n  computed: {\r\n    isModeCreate() {\r\n      return this.customIsModeCreate ? this.customIsModeCreate : this.$route.name === 'CreateTemplates'\r\n    },\r\n    computedObserver() {\r\n      return this.$refs.observer\r\n    }\r\n\r\n  },\r\n  /*\r\n  * METHODS */\r\n  methods: {\r\n    onEditorChange: debounce(function(value) {\r\n      this.content = value.html\r\n    }, 466),\r\n    onEditorBlur(editor) {\r\n      console.log('editor blur!', editor)\r\n    },\r\n    onEditorFocus(editor) {\r\n      console.log('editor focus!', editor)\r\n    },\r\n    onEditorReady(editor) {\r\n      console.log('editor ready!', editor)\r\n    },\r\n    // onEditorBlur() {\r\n    // },\r\n    // onEditorFocus() {\r\n    // },\r\n    // onEditorReady() {\r\n    // },\r\n    // onEditorChange(delta) {\r\n    //   this.editingItem.nameUz = delta.text;\r\n    // },\r\n    customLabelCategory(opt) {\r\n      let selected = this.category.find(e => e.id === opt);\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    fetchCategoryList(keyword = '', callback = null) {\r\n      Service.searchList('template/category', this.var_default_search_payload, null, true)\r\n          .then(res => {\r\n            this.category = res.data.list\r\n            callback();\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    async getTemplatesCategory() {\r\n      await crudAndListsService.searchListWithKeyword(\"template/category\", this.var_default_search_payload)\r\n          .then(res => {\r\n            this.category = res.data.list\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    treeClosed(veeName) {\r\n      this.computedObserver.refs[veeName].validate();\r\n    },\r\n    normalizer(node) {\r\n      if (!node.children || node.children.length === 0) {\r\n        delete node.children\r\n        return {\r\n          id: node.id,\r\n          label: node.name,\r\n        }\r\n      }\r\n      return {\r\n        id: node.id,\r\n        label: node.name,\r\n        children: node.children && node.children.length > 0 ? node.children : [],\r\n      }\r\n    },\r\n    save() {\r\n      this.computedObserver.validate().then(valid => {\r\n        if (valid) {\r\n          if (this.editingItem.id) {\r\n            crudAndListsService.update(MAIN_API_URL, this.editingItem).then(res => {\r\n              this.computedObserver.reset()\r\n              this.editingItem = Object.assign({}, {});\r\n              this.$router.go(-1)\r\n              this.$toast(this.$t('messages.saved_successfully'), {type: 'success'});\r\n            })\r\n          } else {\r\n            crudAndListsService.create(MAIN_API_URL, this.editingItem).then(res => {\r\n              this.computedObserver.reset()\r\n              this.editingItem = Object.assign({}, {});\r\n              this.$router.go(-1)\r\n              this.$toast(this.$t('messages.saved_successfully'), {type: 'success'});\r\n            })\r\n          }\r\n        } else {\r\n          this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n        }\r\n      });\r\n    }\r\n  },\r\n  /*\r\n  * CREATED */\r\n  async created() {\r\n    this.var_default_search_payload.itemsPerPage = 500\r\n    if (this.isModeCreate) {\r\n      await crudAndListsService.getEmpty(MAIN_API_URL)\r\n          .then(res => {\r\n            this.editingItem = res.data\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n\r\n    } else {\r\n      await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, false)\r\n          .then(res => {\r\n            this.editingItem = res.data\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    }\r\n\r\n    await this.getTemplatesCategory();\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n  padding-top: 0;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n}\r\n</style>\r\n\r\n<style scoped lang=\"scss\">\r\n.qlEdit {\r\n  height: 300px;\r\n\r\n  .ql-toolbar {\r\n\r\n    display: none !important;\r\n  }\r\n\r\n  .ql-snow {\r\n    border: 1px solid #e5eaee !important;\r\n  }\r\n\r\n  .ql-editor {\r\n\r\n    min-height: 300px !important;\r\n    font-size: 17px !important;\r\n    padding: 20px !important;\r\n  }\r\n}\r\n</style>"]}]}