{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\create.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\create.vue","mtime":1667352074511},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1667355361315},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5zaWRlYmFyLXBhcnQgew0KICAuYi1zaWRlYmFyIHsNCiAgICB3aWR0aDogNjAwcHg7DQogICAgYmFja2dyb3VuZDogd2hpdGU7DQogIH0NCn0NCg=="},{"version":3,"sources":["create.vue"],"names":[],"mappingslBA;AACA;AACA;AACA;AACA;AACA","file":"create.vue","sourceRoot":"src/modules/projects","sourcesContent":["<script>\r\nimport DatePicker from \"vue2-datepicker\";\r\n\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"@/app.config\";\r\nimport projectService from \"@/shared/services/projectService\";\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\";\r\nimport {required} from \"vuelidate/lib/validators\";\r\nimport {g_label, replaceDate} from \"@/helper\";\r\n/**\r\n * Projects-create component\r\n */\r\n\r\nimport Participants from \"@/components/participants\";\r\nimport Members from \"@/components/members\";\r\nimport i18n from \"@/i18n\";\r\nimport CreateProjectType from \"@/modules/references/modules/project-types/components/addUpdate\";\r\nimport ReferencesService from \"@/shared/services/referencesService\";\r\n\r\nconst MAIN_API_URL_FOR_APPLICATION = 'before-commission/application'\r\nconst MAIN_API_URL = 'project'\r\nexport default {\r\n  page: {\r\n    title: i18n.t(\"actions.add\"),\r\n    meta: [{name: \"description\", content: appConfig.description}],\r\n  },\r\n  components: {\r\n    CreateProjectType,\r\n    DatePicker,\r\n    PageHeader,\r\n    Members,\r\n    Participants\r\n  },\r\n  validations: {\r\n    project: {\r\n      name: {required},\r\n      start: {},\r\n      end: {required}\r\n    },\r\n  },\r\n  methods: {\r\n    viewIlova(uploadPath) {\r\n      if (\r\n          this.getExt(uploadPath) == \"PDF\" ||\r\n          this.getExt(uploadPath) == \"pdf\"\r\n      ) {\r\n        this.ilovaUploadPath = uploadPath;\r\n        this.viewIlovaModal = true;\r\n      }\r\n    },\r\n    async getApplicationById(id) {\r\n      await crudAndListsService.getById(MAIN_API_URL_FOR_APPLICATION, id, false)\r\n          .then(res => {\r\n            this.applicationDto = res.data.ApplicationDto\r\n            if (this.applicationDto.type == 'PHYSICAL') {\r\n              this.project.name = `${this.applicationDto.applicantFirstName ? this.applicationDto.applicantFirstName : ''} ${this.applicationDto.applicantSecondName ? this.applicationDto.applicantSecondName : ''} ${this.applicationDto.applicantMiddleName ? this.applicationDto.applicantMiddleName : ''}`\r\n            } else {\r\n              this.project.name = this.applicationDto.senderFullName\r\n            }\r\n            this.project.end = this.applicationDto.completionTime\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    disableDate(date) {\r\n      const day = new Date(date).getTime();\r\n      const startDay = new Date(replaceDate(this.project.start)).getTime()\r\n\r\n\r\n      return day <= startDay\r\n    },\r\n    getValue(v) {\r\n      this.project.projectTypeId = v;\r\n    },\r\n    deleteProjectType() {\r\n      this.cnf().then((rs) => {\r\n        if (rs.value) {\r\n          ReferencesService.deleteProjectTypes(this.project.projectTypeId.id)\r\n              .then(() => {\r\n                this.deleteSuccess();\r\n                this.getProjectTypes();\r\n                this.$refs.projetTypesRef.reset();\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              });\r\n        }\r\n      });\r\n    },\r\n    searchItem(q) {\r\n      this.getProjectTypes(q);\r\n    },\r\n    getProjectTypes(q = \"\") {\r\n      let payload = {\r\n        params: {\r\n          page: 0,\r\n          itemsPerPage: 20,\r\n        },\r\n        search: q,\r\n      };\r\n      ReferencesService.getListProjectTypes(payload)\r\n          .then((rs) => {\r\n            this.projectTypesList = rs.data.list;\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          });\r\n    },\r\n    okModal(b) {\r\n      b.preventDefault();\r\n      if (!this.$refs.addRef.checkValidity()) {\r\n        ReferencesService.createProjectTypes(this.$refs.addRef.form)\r\n            .then(() => {\r\n              this.getProjectTypes();\r\n              this.successSaved();\r\n              this.isModal = false;\r\n            })\r\n            .catch((err) => {\r\n              // this.catchErr(err);\r\n            });\r\n      } else {\r\n        this.enterInfo();\r\n      }\r\n    },\r\n    addPart() {\r\n      this.isSidebar = true;\r\n      this.$refs.partRef.reset();\r\n    },\r\n    asyncValue(v) {\r\n      this.$set(this.project, \"employeeIds\", v);\r\n    },\r\n    callApi(api, obj, e) {\r\n      api(obj, true)\r\n          .then((rs) => {\r\n            this.loader = true;\r\n            if (this.isForApplication) {\r\n              this.$router.push({name: 'ProjectsMain'})\r\n            }\r\n            this.$emit(\"success\");\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          })\r\n          .finally(() => {\r\n            this.loader = false;\r\n            if (e) {\r\n              e.target.disabled = false;\r\n            }\r\n          });\r\n    },\r\n    setEditedData(id) {\r\n      projectService\r\n          .getById(id)\r\n          .then((rs) => {\r\n            this.project = {...rs.data};\r\n            this.$set(this.project, \"employeeIds\", rs.data.employeesDto);\r\n            this.items[2] = {\r\n              text: this.$t(\"actions.edit\"),\r\n              active: true,\r\n            };\r\n            this.title = this.$t(\"actions.edit\");\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          });\r\n    },\r\n    saveProj(e) {\r\n      if (e) {\r\n        e.preventDefault();\r\n      }\r\n      this.submitted = true;\r\n\r\n      this.$v.$touch();\r\n      if (!this.$v.project.$anyError) {\r\n        // let employeeIds = this.project.employeeIds.map((e) => e.employeeId);\r\n        let projectEmployeeDtos = this.project.employeeIds.map(e => {\r\n          return {\r\n            employeeId: e.employeeId,\r\n            mailingPurposeId: e.mailingPurposeId,\r\n            resolution: e.resolution\r\n          }\r\n        })\r\n        if (e) {\r\n          e.target.disabled = true;\r\n        }\r\n        let payload = {\r\n          ...this.project,\r\n          projectEmployeeDtos: projectEmployeeDtos\r\n        };\r\n        if (this.isForApplication) {\r\n          payload.applicationId = this.$route.params.applicationId\r\n        }\r\n        if (this.$route.query.page == \"edit\") {\r\n          let id = this.$route.query.id;\r\n          if (id) {\r\n            this.callApi(projectService.update, {...payload, id: id}, e);\r\n          }\r\n        } else {\r\n          if (payload.employeeIds) {\r\n            delete payload.employeeIds\r\n          }\r\n          if (this.$route.params.status == \"not_belong\") {\r\n            this.callApi(projectService.createNotBelong, payload, e);\r\n          } else {\r\n            this.callApi(projectService.create, payload, e);\r\n          }\r\n        }\r\n      }\r\n    },\r\n  },\r\n  created() {\r\n    // this.getProjectTypes();\r\n    if (this.$route.query.page == \"edit\") {\r\n      let id = this.$route.query.id;\r\n      if (id) {\r\n        this.setEditedData(id);\r\n      } else {\r\n        this.$router.go(-1);\r\n      }\r\n    } else if (this.isModeCreate) {\r\n      /* crudAndListsService.getEmpty(MAIN_API_URL)\r\n          .then(res => {\r\n              this.editingItem = res.data\r\n          })\r\n          .catch(e => {\r\n              console.log(e)\r\n          }) */\r\n    }\r\n    this.getApplicationById(this.$route.params.applicationId)\r\n  },\r\n  data() {\r\n    return {\r\n      ilovaUploadPath: null,\r\n      viewIlovaModal: false,\r\n      applicationDto: {},\r\n      g_label: g_label,\r\n      projectTypesList: [],\r\n      title: this.$t(\"actions.add\"),\r\n      items: [\r\n        {\r\n          text: this.$t(\"menu\"),\r\n          href: \"/\",\r\n        },\r\n        {\r\n          text: this.$t(\"proj\"),\r\n          href: \"/projects\",\r\n        },\r\n        {\r\n          text: this.$t(\"actions.add\"),\r\n          active: true,\r\n        },\r\n      ],\r\n      // dec: dec,\r\n      daterange: \"\",\r\n      project: {\r\n        name: \"\",\r\n        description: \"\",\r\n        start: \"\",\r\n        end: \"\",\r\n        employeeIds: []\r\n      },\r\n      editingItem: {},\r\n      submitted: false,\r\n      isSidebar: false,\r\n      isModal: false,\r\n      loader: false,\r\n    };\r\n  },\r\n  /*\r\n  COMPUTED */\r\n  computed: {\r\n    isForApplication() {\r\n      return this.$route.name == 'CreateProjectForApplication'\r\n    },\r\n    isModeCreate() {\r\n      return this.$route.name == 'CreateProjectForApplication'\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <base-create-or-update-wrapper\r\n      v-if=\"isForApplication\"\r\n      @save=\"saveProj\"\r\n      has-save-suspend\r\n      :custom-title=\"isModeCreate ? $t('messages.create_project') : $t('actions.update')\"\r\n  >\r\n    <div>\r\n      <PageHeader\r\n          v-if=\"!isForApplication\"\r\n          :title=\"title\"\r\n          :items=\"items\"\r\n      />\r\n\r\n      <!-- APPLICATION_ATTACHED_FILE VIEW MODAL -->\r\n      <b-modal\r\n          scrollable\r\n          v-model=\"viewIlovaModal\"\r\n          size=\"xl\"\r\n          :title=\"$t('actions.view')\"\r\n      >\r\n        <div\r\n            style=\"height: 700px\"\r\n            v-if=\"ilovaUploadPath\"\r\n        >\r\n          <embed\r\n              width=\"100%\"\r\n              height=\"800\"\r\n              :src=\"`${baseUrl}/${ilovaUploadPath}`\"\r\n              type=\"application/pdf\"\r\n          />\r\n        </div>\r\n        <template v-slot:modal-footer>\r\n          <b-button\r\n              variant=\"secondary\"\r\n              @click=\"viewIlovaModal = false\"\r\n          >{{\r\n              $t(\"actions.close\")\r\n            }}\r\n          </b-button>\r\n        </template>\r\n      </b-modal>\r\n\r\n      <b-modal\r\n          :cancel-variant=\"'outline-danger'\"\r\n          :ok-variant=\"'success'\"\r\n          :no-close-on-backdrop=\"true\"\r\n          :ok-title=\"$t('actions.save')\"\r\n          :cancel-title=\"$t('actions.cancel')\"\r\n          @close=\"showModal = false\"\r\n          @cancel=\"showModal = false\"\r\n          @ok=\"okModal\"\r\n          size=\"md\"\r\n          v-model=\"isModal\"\r\n          :title=\"$t('actions.add')\"\r\n      >\r\n        <CreateProjectType ref=\"addRef\"/>\r\n      </b-modal>\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n          <div :class=\"isForApplication ? '' : 'card'\">\r\n            <div :class=\"isForApplication ? '' : 'card-body'\">\r\n              <h4\r\n                  class=\"card-title mb-4\"\r\n                  v-if=\"$route.query.page == 'create'\"\r\n              >\r\n                {{ $t(\"actions.create_project\") }}\r\n              </h4>\r\n              <form>\r\n                <div class=\"form-group row mb-4\">\r\n                  <label\r\n                      for=\"projectname\"\r\n                      class=\"col-form-label col-lg-2\"\r\n                  >{{\r\n                      $t(\"projectName\")\r\n                    }}</label>\r\n                  <div class=\"col-lg-10\">\r\n                    <input\r\n                        :class=\"{\r\n                      'is-invalid': submitted && $v.project.name.$error,\r\n                    }\"\r\n                        v-model=\"$v.project.name.$model\"\r\n                        id=\"projectname\"\r\n                        name=\"projectname\"\r\n                        type=\"text\"\r\n                        class=\"form-control\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- <div class=\"row mb-3\">\r\n                    <label class=\"mt-2 col-lg-2\">{{ $t(\"projectType\") }}</label>\r\n                    <div class=\"col-lg-6 col-sm-12\">\r\n                        <multiselect-customized\r\n                            :submitted=\"submitted\"\r\n                            ref=\"projetTypesRef\"\r\n                            :label=\"g_label('nameRu', 'nameLt')\"\r\n                            :options=\"projectTypesList\"\r\n                            @searchItem=\"searchItem\"\r\n                            @value=\"getValue\"\r\n                        />\r\n                    </div>\r\n                    <div class=\"col-lg-4 col-sm-12\">\r\n                        <b-button-group>\r\n                            <b-button\r\n                                @click=\"isModal = true\"\r\n                                variant=\"primary\"\r\n                            >\r\n                                <i class=\"bx bx-plus\"></i>\r\n                                {{ $t(\"actions.add\") }}\r\n                            </b-button>\r\n                            <b-button\r\n                                @click=\"deleteProjectType\"\r\n                                :disabled=\"!project.projectTypeId\"\r\n                                variant=\"danger\"\r\n                            >\r\n                                <i class=\"bx bx-trash\"></i>\r\n                                {{ $t(\"actions.delete\") }}\r\n                            </b-button>\r\n                        </b-button-group>\r\n                    </div>\r\n                </div> -->\r\n\r\n                <div class=\"form-group row mb-4\">\r\n                  <label\r\n                      for=\"projectdesc\"\r\n                      class=\"col-form-label col-lg-2\"\r\n                  >{{\r\n                      $t(\"dsp\")\r\n                    }}</label>\r\n                  <div class=\"col-lg-10\">\r\n                                        <textarea\r\n                                            v-model=\"project.description\"\r\n                                            id=\"projectdesc\"\r\n                                            class=\"form-control\"\r\n                                            rows=\"5\"\r\n                                        ></textarea>\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- <div class=\"form-group row mb-3\">\r\n                    <label class=\"col-lg-2\">{{ $t(\"column.on_date\") }}</label>\r\n                    <date-picker\r\n                        format=\"DD-MM-YYYY\"\r\n                        value-type=\"format\"\r\n                        class=\"col-lg-4\"\r\n                        v-model=\"$v.project.start.$model\"\r\n                        :first-day-of-week=\"1\"\r\n                        lang=\"en\"\r\n                        :class=\"\r\n    submitted && $v.project.start.$anyError ? 'dateClass' : ''\r\n  \"\r\n                    ></date-picker>\r\n                </div> -->\r\n\r\n                <div class=\"form-group row mb-3\">\r\n                  <label class=\"col-lg-2\">{{ $t(\"column.finishing_date_new\") }}</label>\r\n                  <date-picker\r\n                      v-model=\"$v.project.end.$model\"\r\n                      format=\"DD-MM-YYYY\"\r\n                      :disabled-date=\"disableDate\"\r\n                      value-type=\"format\"\r\n                      class=\"col-lg-4\"\r\n                      :first-day-of-week=\"1\"\r\n                      :disabled=\"_empty(project.start)\"\r\n                      lang=\"en\"\r\n                      :class=\"\r\n                    submitted && $v.project.end.$anyError ? 'dateClass' : ''\r\n                  \"\r\n                  ></date-picker>\r\n                </div>\r\n\r\n                <div class=\"form-group row mb-4\">\r\n                  <label class=\"col-lg-2\">{{\r\n                      $t(\"submodules.employees.working_user_with_project\")\r\n                    }}</label>\r\n                  <div class=\"col-lg-10\">\r\n                    <Participants\r\n                        :submitted=\"submitted\"\r\n                        :members=\"project.employeeIds\"\r\n                        @addPart=\"addPart\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <!-- <div class=\"form-group row mb-4\">\r\n                    <label\r\n                        for=\"projectbudget\"\r\n                        class=\"col-form-label col-lg-2\"\r\n                    >{{\r\n  $t(\"budget\")\r\n}}</label>\r\n                    <div class=\"col-lg-4\">\r\n                        <input\r\n                            v-model=\"project.budget\"\r\n                            id=\"projectbudget\"\r\n                            name=\"projectbudget\"\r\n                            type=\"number\"\r\n                            class=\"form-control\"\r\n                        />\r\n                    </div>\r\n                </div> -->\r\n              </form>\r\n              <div\r\n                  class=\"card card-body card-tabs mt-3\"\r\n                  style=\"min-height: 10em; width: 100%\"\r\n                  v-if=\"applicationDto\"\r\n              >\r\n\r\n                <div class=\"wrapper\">\r\n                  <span CLASS=\"fromcenter\">{{ $t('submodules.doc.application_file') }}</span>\r\n                </div>\r\n\r\n                <tr\r\n                    class=\"mt-3\"\r\n                    v-for=\"(item, index) in applicationDto.allFiles\"\r\n                    :key=\"index + 'FILE'\"\r\n                >\r\n                  <div class=\"\r\n                                                        d-flex\r\n                                                        align-items-center\r\n                                                        bg-light\r\n                                                        p-2\r\n                                                        justify-content-between\r\n                                                      \">\r\n                    <div class=\"d-flex align-items-center\">\r\n                      <a\r\n                          @click=\"viewIlova(item.url)\"\r\n                          :download=\"\r\n                                                            getExt(item.url) == 'PDF' ||\r\n                                                            getExt(item.url) == 'pdf'\r\n                                                              ? false\r\n                                                              : true\r\n                                                          \"\r\n                          :href=\"\r\n                                                            getExt(item.url) == 'PDF' ||\r\n                                                            getExt(item.url) == 'pdf'\r\n                                                              ? `#`\r\n                                                              : `${baseUrl}/${item.url}`\r\n                                                          \"\r\n                      >\r\n                        <BaseFileViewer\r\n                            class=\"my-card-hovered\"\r\n                            :uploadPath=\"item.name\"\r\n                        />\r\n                      </a>\r\n                      <span class=\"ml-2\">\r\n                                                {{ item.name }}\r\n                                            </span>\r\n                    </div>\r\n\r\n                    <!-- <b-button\r\n                        @click=\"removeFile(item)\"\r\n                        class=\"mr-3\"\r\n                        variant=\"light\"\r\n                        size=\"sm\"\r\n                    >\r\n                        <i class=\"fa fa-times\"></i>\r\n                    </b-button> -->\r\n                  </div>\r\n                </tr>\r\n                <div\r\n                    class=\"text-center card mt-3\"\r\n                    v-show=\"!applicationDto.allFiles || applicationDto.allFiles.length <= 0\"\r\n                >\r\n                  <h5\r\n                      style=\"opacity: 0.3\"\r\n                      class=\"p-3\"\r\n                  >\r\n                    {{ $t(\"messages.data_not_found\") }}\r\n                  </h5>\r\n                </div>\r\n              </div>\r\n              <div class=\"row justify-content-end\">\r\n                <div class=\"col-lg-10\">\r\n                  <div class=\"float-left\">\r\n                    <b-overlay\r\n                        :opacity=\"0.1\"\r\n                        :show=\"loader\"\r\n                        rounded=\"sm\"\r\n                    >\r\n                      <b-button\r\n                          v-if=\"!isForApplication\"\r\n                          @click.prevent=\"saveProj\"\r\n                          variant=\"success\"\r\n                      >\r\n                        <i class=\"fa fa-save\"></i>\r\n                        {{ $t(\"actions.save\") }}\r\n                      </b-button>\r\n                    </b-overlay>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Back\r\n              v-if=\"!isForApplication\"\r\n              :to=\"{name: 'ProjectsMain', query: {page: 'list'}}\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <b-sidebar\r\n          backdrop-variant=\"transparent\"\r\n          class=\"sidebar-part\"\r\n          shadow\r\n          backdrop\r\n          sidebar-class=\"p-0\"\r\n          :no-header=\"true\"\r\n          right\r\n          v-model=\"isSidebar\"\r\n      >\r\n        <members\r\n            :notIn=\"false\"\r\n            @asyncValue=\"asyncValue\"\r\n            :async=\"true\"\r\n            @cancel=\"isSidebar = false\"\r\n            ref=\"partRef\"\r\n        />\r\n      </b-sidebar>\r\n    </div>\r\n  </base-create-or-update-wrapper>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n.sidebar-part {\r\n  .b-sidebar {\r\n    width: 600px;\r\n    background: white;\r\n  }\r\n}\r\n</style>"]}]}