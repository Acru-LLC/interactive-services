{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\projects-grid.vue?vue&type=template&id=1c698f85&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\projects-grid.vue","mtime":1674799497685},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1667355356566},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}