{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\chat\\Index.vue?vue&type=style&index=0&id=4260b0dc&scoped=true&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\chat\\Index.vue","mtime":1667352074413},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZW1vamk6aG92ZXIgew0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICBiYWNrZ3JvdW5kOiBibGFjazsNCiAgICBib3JkZXItcmFkaXVzOiA1cHg7DQp9DQo="},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwdA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/modules/chat","sourcesContent":["\r\n<template>\r\n    <Layout>\r\n      <div class=\"col-md-12 text-center\">\r\n        <div class=\"h4 mb-4 d-inline-block\">{{ $t('submodules.chat.title') }}</div>\r\n      </div>\r\n        <!-- <PageHeader :title=\"title\" :items=\"items\" /> -->\r\n        <div>\r\n            <vue-easy-lightbox\r\n                :visible=\"imageView\"\r\n                :imgs=\"`${baseUrl}${uploadPath}`\"\r\n                @hide=\"imageView = false\"\r\n            ></vue-easy-lightbox>\r\n            <b-modal\r\n                v-model=\"fileModal\"\r\n                size=\"md\"\r\n                :no-close-on-backdrop=\"true\"\r\n                hide-header\r\n                hide-footer\r\n                centered\r\n                body-class=\"p-0\"\r\n            >\r\n                <b-overlay\r\n                    :opacity=\"0.1\"\r\n                    :show=\"loaderFile\"\r\n                    rounded=\"sm\"\r\n                >\r\n                    <file-upload\r\n                        ref=\"fileComponent\"\r\n                        v-if=\"file\"\r\n                        @cancel=\"\r\n              () => {\r\n                fileModal = false;\r\n                file = null;\r\n              }\r\n            \"\r\n                        :file=\"file\"\r\n                        @sendFile=\"sendFile\"\r\n                    />\r\n                </b-overlay>\r\n            </b-modal>\r\n        </div>\r\n        <b-form-file\r\n            ref=\"fileRef\"\r\n            style=\"display: none\"\r\n            v-model=\"file\"\r\n        ></b-form-file>\r\n        <!-- THIS UPLOADER IS FOR USER AVATAR -->\r\n        <b-form-file\r\n            ref=\"userAvatarFileRef\"\r\n            style=\"display: none\"\r\n            v-model=\"fileForUserAvatar\"\r\n            @input=\"updateUserAvatar\"\r\n        ></b-form-file>\r\n        <div class=\"d-lg-flex\">\r\n            <div class=\"chat-leftsidebar mr-lg-4\">\r\n                <div class>\r\n                    <div class=\"py-4\">\r\n                        <div class=\"media align-items-center\">\r\n                            <div class=\"align-self-center mr-3\">\r\n                                <!-- <img\r\n                                    :src=\"require('@/assets/images/acru-logo-with-name.svg')\"\r\n                                    class=\"avatar-sm rounded-circle\"\r\n                                    alt\r\n                                /> -->\r\n                                <!-- <div\r\n                                    class=\"d-flex\"\r\n                                    style=\"justify-content: center\"\r\n                                >\r\n                                    <div class=\"position-relative\">\r\n                                        <img\r\n                                            class=\"rounded-circle bg-light avatar-md p-2\"\r\n                                            :src=\"`${imgUrl ? imgUrl : require('@/assets/images/acru-logo-with-name.svg')}`\"\r\n                                        />\r\n                                        <div\r\n                                            @click=\"changeImage\"\r\n                                            class=\"\r\n                                                avatar-edit-pencil\r\n                                                d-flex\r\n                                                align-items-center\r\n                                                justify-content-center\r\n                                                bg-primary\r\n                                            \"\r\n                                        >\r\n                                            <i\r\n                                                class=\"bx bx-pencil text-white\"\r\n                                                style=\"font-size: 1rem;\"\r\n                                            ></i>\r\n                                        </div>\r\n                                    </div>\r\n                                </div> -->\r\n                                <div class=\"avatar-container\">\r\n                                    <b-spinner\r\n                                        v-if=\"userAvatarLoading\"\r\n                                        variant=\"primary\"\r\n                                        label=\"Loading\"\r\n                                    ></b-spinner>\r\n                                    <img\r\n                                        v-else\r\n                                        class=\"rounded-circle bg-light p-2 image\"\r\n                                        :src=\"`${userAvatarUrlFromStorage ? publicPath+userAvatarUrlFromStorage : require('@/assets/images/users/default-avatar.png')}`\"\r\n                                    />\r\n                                    <div class=\"overlay\">\r\n                                        <div\r\n                                            @click=\"userAvatarClicked\"\r\n                                            class=\"\r\n                                                avatar-edit-pencil\r\n                                                d-flex\r\n                                                align-items-center\r\n                                                justify-content-center\r\n                                                bg-primary\r\n                                            \"\r\n                                        >\r\n                                            <i\r\n                                                class=\"mdi mdi-camera-plus-outline text-white\"\r\n                                                style=\"font-size: 2rem;\"\r\n                                            ></i>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"media-body\">\r\n                                <h5 class=\"font-size-15 mt-0 mb-1\">\r\n                                    {{ `${userFullName}` }}\r\n                                </h5>\r\n                                <p class=\"text-muted mb-0\">\r\n                                    <i class=\"mdi mdi-circle text-success align-middle mr-1\"></i>\r\n                                    {{ $t(\"active\") }}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"chat-leftsidebar-nav mt-0\">\r\n                    <b-tabs\r\n                        pills\r\n                        fill\r\n                        content-class=\"my-2\"\r\n                        v-model=\"index\"\r\n                    >\r\n                        <b-tab\r\n                            title=\"Tab 1\"\r\n                            active\r\n                        >\r\n                            <template v-slot:title>\r\n                                <i class=\"bx bx-chat font-size-20 d-sm-none\"></i>\r\n                                <span class=\"d-none d-sm-block\">{{ $t(\"chat.chat\") }}</span>\r\n                            </template>\r\n                            <div class=\"search-box chat-search-box py-2 mb-2\">\r\n                                <div class=\"position-relative\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        v-model=\"searchChat\"\r\n                                        :placeholder=\"$t('actions.filter')\"\r\n                                    />\r\n                                    <i class=\"bx bx-search-alt search-icon\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <Chats\r\n                                ref=\"chatComponent\"\r\n                                :username=\"username\"\r\n                                @chatClick=\"chatUsername\"\r\n                                :ch=\"CHAT\"\r\n                            />\r\n                        </b-tab>\r\n                        <b-tab>\r\n                            <template v-slot:title>\r\n                                <i class=\"bx bx-group font-size-20 d-sm-none\"></i>\r\n                                <span class=\"d-none d-sm-block\">{{ $t(\"chat.groups\") }}</span>\r\n                            </template>\r\n                            <div class=\"search-box chat-search-box py-2 mb-2\">\r\n                                <div class=\"position-relative\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        class=\"form-control\"\r\n                                        v-model=\"searchGroup\"\r\n                                        :placeholder=\"$t('actions.filter')\"\r\n                                    />\r\n                                    <i class=\"bx bx-search-alt search-icon\"></i>\r\n                                </div>\r\n                            </div>\r\n                            <Groups\r\n                                :group=\"CHAT\"\r\n                                :username=\"username\"\r\n                                @groupClick=\"groupUsername\"\r\n                                ref=\"groupComponent\"\r\n                            />\r\n                        </b-tab>\r\n                        <b-tab>\r\n                            <template v-slot:title>\r\n                                <i class=\"bx bx-book-content font-size-20 d-sm-none\"></i>\r\n                                <span class=\"d-none d-sm-block\">{{ $t(\"chat.contacts\") }}</span>\r\n                            </template>\r\n                            <b-card-text>\r\n                                <div class=\"search-box chat-search-box py-2 mb-2\">\r\n                                    <div class=\"position-relative\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            class=\"form-control\"\r\n                                            v-model=\"searchContact\"\r\n                                            :placeholder=\"$t('actions.filter')\"\r\n                                        />\r\n                                        <i class=\"bx bx-search-alt search-icon\"></i>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <Contacts\r\n                                    :username=\"username\"\r\n                                    ref=\"contactComponent\"\r\n                                    @contactUsername=\"contactUsername\"\r\n                                />\r\n                            </b-card-text>\r\n                        </b-tab>\r\n                    </b-tabs>\r\n                </div>\r\n            </div>\r\n            <div v-if=\"mobileChat\">\r\n                <b-sidebar\r\n                    class=\"sidebar-chat\"\r\n                    shadow\r\n                    sidebar-class=\"p-0\"\r\n                    :no-header=\"true\"\r\n                    right\r\n                    v-model=\"isSidebarChat\"\r\n                >\r\n                    <Messages\r\n                        @editGroup=\"editGroup\"\r\n                        @deleteGroup=\"deleteGroup\"\r\n                        @addMembersToGroup=\"addMembersToGroup\"\r\n                        @viewGroupMembers=\"viewGroupMembers\"\r\n                        @contactUsername=\"contactUsername\"\r\n                        @searchMsg=\"searchMsg\"\r\n                        @back=\"isSidebarChat = false\"\r\n                        ref=\"messageRef\"\r\n                        @viewImageFromMessages=\"viewImageFromMessages\"\r\n                        @getMessagesByGroupId=\"getMessagesByGroupId\"\r\n                        @getMessagesByChatId=\"getMessagesByChatId\"\r\n                        @fileUpload=\"fileUpload\"\r\n                        @selectEmoji=\"selectEmoji\"\r\n                        @formSubmit=\"formSubmit\"\r\n                        @deleteMsg=\"deleteMsg\"\r\n                        :currentContact=\"CHAT\"\r\n                        :username=\"username\"\r\n                        :messages=\"messages\"\r\n                        :emojies=\"emojies\"\r\n                        :submitted=\"submitted\"\r\n                        :noMsg=\"noMsg\"\r\n                        :chatType=\"chatType\"\r\n                        :mobileChat=\"mobileChat\"\r\n                    />\r\n                </b-sidebar>\r\n            </div>\r\n\r\n            <Messages\r\n                v-else\r\n                @editGroup=\"editGroup\"\r\n                @deleteGroup=\"deleteGroup\"\r\n                @addMembersToGroup=\"addMembersToGroup\"\r\n                @viewGroupMembers=\"viewGroupMembers\"\r\n                @contactUsername=\"contactUsername\"\r\n                @searchMsg=\"searchMsg\"\r\n                ref=\"messageRef\"\r\n                @fileUpload=\"fileUpload\"\r\n                @viewImageFromMessages=\"viewImageFromMessages\"\r\n                @getMessagesByGroupId=\"getMessagesByGroupId\"\r\n                @getMessagesByChatId=\"getMessagesByChatId\"\r\n                @selectEmoji=\"selectEmoji\"\r\n                @formSubmit=\"formSubmit\"\r\n                @deleteMsg=\"deleteMsg\"\r\n                :currentContact=\"CHAT\"\r\n                :username=\"username\"\r\n                :messages=\"messages\"\r\n                :emojies=\"emojies\"\r\n                :submitted=\"submitted\"\r\n                :noMsg=\"noMsg\"\r\n                :chatType=\"chatType\"\r\n                :mobileChat=\"mobileChat\"\r\n            />\r\n        </div>\r\n        <b-modal\r\n            v-model=\"isEdit\"\r\n            size=\"lg\"\r\n            :no-close-on-backdrop=\"true\"\r\n            hide-header\r\n            hide-footer\r\n            body-class=\"p-0\"\r\n        >\r\n            <Edit\r\n                ref=\"editRef\"\r\n                :emojies=\"emojies\"\r\n                @cancel=\"isEdit = false\"\r\n                @save=\"saveEdit\"\r\n            />\r\n        </b-modal>\r\n\r\n        <!-- GROUP MEMBERS -->\r\n        <b-modal\r\n            v-model=\"groupMembersModal\"\r\n            size=\"lg\"\r\n            hide-footer\r\n            body-class=\"p-0\"\r\n            :no-close-on-backdrop=\"true\"\r\n        >\r\n            <div>\r\n                <div class=\"pl-5 pr-5 pb-2 pt-2\">\r\n                    <div class=\"search-box\">\r\n                        <div class=\"position-relative\">\r\n                            <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                v-model=\"searchGroupMembers\"\r\n                                :placeholder=\"$t('actions.filter')\"\r\n                            />\r\n                            <i class=\"bx bx-search-alt search-icon\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <GroupMembers\r\n                        @setTotalForGroupMember=\"setTotalForGroupMember\"\r\n                        @close=\"groupMembersModal = false\"\r\n                        :searchValue=\"searchGroupMembers\"\r\n                        :group=\"CHAT\"\r\n                        ref=\"groupMemberRef\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <template v-slot:modal-header>\r\n                <div\r\n                    style=\"width: 100%\"\r\n                    class=\"d-flex justify-content-between align-items-center\"\r\n                >\r\n                    <div class=\"d-flex\">\r\n                        <h5 class=\"pre\">{{ CHAT.groupName }}</h5>\r\n                    </div>\r\n                    <div>\r\n                        <b-button\r\n                            variant=\"white\"\r\n                            class=\"btn-label\"\r\n                        >\r\n                            {{ `${$t(\"chat.group_members\")}` }}\r\n                            <b-badge\r\n                                class=\"ml-1\"\r\n                                variant=\"primary\"\r\n                            >{{\r\n                `${totalGroupMember}`\r\n              }}</b-badge>\r\n                        </b-button>\r\n\r\n                        <div class=\"float-right\">\r\n                            <b-button\r\n                                class=\"mr-1\"\r\n                                variant=\"light\"\r\n                                @click=\"addMemberFromModal\"\r\n                            >\r\n                                <i class=\"fa fa-user-plus\"></i>\r\n                            </b-button>\r\n\r\n                            <b-button\r\n                                variant=\"light\"\r\n                                @click=\"groupMembersModal = false\"\r\n                            >\r\n                                <i class=\"fa fa-times\"></i>\r\n                            </b-button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n        </b-modal>\r\n\r\n        <!-- ADD GROUP MEMBERS -->\r\n        <b-modal\r\n            v-model=\"addGroupMembersModal\"\r\n            size=\"lg\"\r\n            hide-footer\r\n            body-class=\"p-0\"\r\n            :no-close-on-backdrop=\"true\"\r\n        >\r\n            <div>\r\n                <div class=\"pl-5 pr-5 pb-2 pt-2\">\r\n                    <div class=\"search-box\">\r\n                        <div class=\"position-relative\">\r\n                            <input\r\n                                type=\"text\"\r\n                                class=\"form-control\"\r\n                                v-model=\"searchGroupMembersAdd\"\r\n                                :placeholder=\"$t('actions.filter')\"\r\n                            />\r\n                            <i class=\"bx bx-search-alt search-icon\"></i>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <AddGroupMembers\r\n                        @close=\"closeModalAddMember\"\r\n                        :searchValue=\"searchGroupMembersAdd\"\r\n                        :group=\"CHAT\"\r\n                        ref=\"addGroupMemberRef\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <template v-slot:modal-header>\r\n                <div style=\"width: 100%\">\r\n                    <b-button\r\n                        class=\"float-right\"\r\n                        variant=\"light\"\r\n                        @click=\"addGroupMembersModal = false\"\r\n                    >\r\n                        <i class=\"fa fa-times\"></i>\r\n                    </b-button>\r\n                    <div class=\"d-flex\">\r\n                        <h5 class=\"pre\">{{ CHAT.groupName }}</h5>\r\n                    </div>\r\n                </div>\r\n            </template>\r\n        </b-modal>\r\n\r\n        <!-- GROUP EDIT -->\r\n\r\n        <b-modal\r\n            v-model=\"editGroupModal\"\r\n            size=\"lg\"\r\n            body-class=\"p-0\"\r\n            :no-close-on-backdrop=\"true\"\r\n        >\r\n            <div>\r\n                <div>\r\n                    <EditGroup\r\n                        @close=\"editGroupModal = false\"\r\n                        :group=\"CHAT\"\r\n                        ref=\"editGroupRef\"\r\n                    />\r\n                </div>\r\n            </div>\r\n            <template v-slot:modal-header>\r\n                <div style=\"width: 100%\">\r\n                    <b-button\r\n                        class=\"float-right\"\r\n                        variant=\"light\"\r\n                        @click=\"editGroupModal = false\"\r\n                    >\r\n                        <i class=\"fa fa-times\"></i>\r\n                    </b-button>\r\n                </div>\r\n            </template>\r\n\r\n            <template v-slot:modal-footer>\r\n                <div style=\"width: 100%\">\r\n                    <b-button\r\n                        size=\"lg\"\r\n                        class=\"float-right\"\r\n                        variant=\"success\"\r\n                        @click=\"saveEditedData\"\r\n                    >\r\n                        <b-overlay\r\n                            :opacity=\"0.1\"\r\n                            :show=\"loaderEdit\"\r\n                            rounded=\"sm\"\r\n                        >\r\n                            <i class=\"fa fa-save\"></i>\r\n                            {{ $t(\"actions.save\") }}\r\n                        </b-overlay>\r\n                    </b-button>\r\n                </div>\r\n            </template>\r\n        </b-modal>\r\n        <!-- end row -->\r\n    </Layout>\r\n</template>\r\n<style scoped>\r\n.emoji:hover {\r\n    cursor: pointer;\r\n    background: black;\r\n    border-radius: 5px;\r\n}\r\n</style>\r\n<script>\r\nimport VueEasyLightbox from \"vue-easy-lightbox\";\r\nimport Layout from \"@/router/layouts/main\";\r\nimport appConfig from \"@/app.config\";\r\n// import PageHeader from \"@/components/page-header\";\r\n\r\nimport { mapActions, mapState } from \"vuex\";\r\n\r\nimport messengerService from \"@/shared/services/messengerService\";\r\nimport { TokenService } from \"@/shared/services/storage.service\"\r\n\r\nimport fileUpload from \"./file-upload\";\r\nimport Chats from \"./chats\";\r\nimport Contacts from \"./contacts\";\r\nimport Groups from \"./groups\";\r\nimport Edit from \"./edit\";\r\nimport Messages from \"./messages\";\r\nimport GroupMembers from \"./groupMembers\";\r\nimport AddGroupMembers from \"./addNewMembersToGroup.vue\";\r\nimport EditGroup from \"./editGroup.vue\";\r\n/**\r\n * Chat Component\r\n */\r\nimport i18n from \"@/i18n\";\r\nexport default {\r\n    watch: {\r\n        innerWidth: {\r\n            handler (v) {\r\n                this.setWindowWidthPrivite(v);\r\n            },\r\n        },\r\n        index (v) {\r\n            if (v == 2) {\r\n                this.$refs.contactComponent.getClickTab({\r\n                    page: 0,\r\n                    itemsPerPage: 10,\r\n                    search: this.searchContact,\r\n                });\r\n            } else if (v == 0) {\r\n                this.$refs.chatComponent.getClickTab({\r\n                    page: 0,\r\n                    itemsPerPage: 10,\r\n                    search: this.searchChat,\r\n                });\r\n            } else if (v == 1) {\r\n                this.$refs.groupComponent.getClickTab({\r\n                    page: 0,\r\n                    itemsPerPage: 10,\r\n                    search: this.searchGroup,\r\n                });\r\n            }\r\n        },\r\n        file: {\r\n            handler (v) {\r\n                if (v) {\r\n                    this.fileModal = true;\r\n                    setTimeout(() => {\r\n                        this.$refs.fileComponent.setNameSize(v.name, v.size);\r\n                    }, 300);\r\n                } else {\r\n                    this.$refs.fileComponent.setNameSize(null, null);\r\n                }\r\n            },\r\n        },\r\n        searchGroup (v) {\r\n            if (this.index == 1) {\r\n                this.$refs.groupComponent.getClickTab({\r\n                    page: 0,\r\n                    itemsPerPage: 10,\r\n                    search: this.searchGroup,\r\n                });\r\n            }\r\n        },\r\n\r\n        searchChat (v) {\r\n            if (this.index == 0) {\r\n                this.$refs.chatComponent.getClickTab({\r\n                    page: 0,\r\n                    itemsPerPage: 10,\r\n                    search: this.searchChat,\r\n                });\r\n            }\r\n        },\r\n        searchContact (v) {\r\n            if (this.index == 2) {\r\n                this.$refs.contactComponent.getClickTab({\r\n                    page: 0,\r\n                    itemsPerPage: 10,\r\n                    search: this.searchContact,\r\n                });\r\n            }\r\n        },\r\n    },\r\n    page: {\r\n        title: i18n.t(\"chat.chat\"),\r\n        meta: [\r\n            {\r\n                name: \"description\",\r\n                content: appConfig.description,\r\n            },\r\n        ],\r\n    },\r\n    components: {\r\n        Layout,\r\n        // PageHeader,\r\n        fileUpload,\r\n        Chats,\r\n        Contacts,\r\n        Groups,\r\n        Edit,\r\n        Messages,\r\n        VueEasyLightbox,\r\n        GroupMembers,\r\n        AddGroupMembers,\r\n        EditGroup,\r\n    },\r\n    data () {\r\n        return {\r\n            publicPath: process.env.BASE_URL,\r\n            localUserAvatarUrl: null,\r\n            userAvatarLoading: false,\r\n            innerWidth: window.innerWidth,\r\n            userFullName: TokenService.getFullName(),\r\n            userId: TokenService.getUserId(),\r\n            baseUrl: process.env.BASE_URL,\r\n            loaderEdit: false,\r\n            editGroupModal: false,\r\n            totalGroupMember: 0,\r\n            searchGroupMembers: \"\",\r\n            groupMembersModal: false,\r\n            pag: { page: 0, itemsPerPage: 10 },\r\n            loaderFile: false,\r\n            chatId: null,\r\n            uploadPath: null,\r\n            imageView: false,\r\n            emojies: [\r\n                \"😀\",\r\n                \"😃\",\r\n                \"😄\",\r\n                \"😁\",\r\n                \"😆\",\r\n                \"😅\",\r\n                \"😂\",\r\n                \"🤣\",\r\n                \"😊\",\r\n                \"😇\",\r\n                \"🙂\",\r\n                \"🙃\",\r\n                \"😉\",\r\n                \"😌\",\r\n                \"😍\",\r\n                \"🥰\",\r\n                \"😘\",\r\n                \"😗\",\r\n                \"😙\",\r\n                \"😚\",\r\n                \"😋\",\r\n                \"😛\",\r\n                \"😝\",\r\n                \"😜\",\r\n                \"🤪\",\r\n                \"🤨\",\r\n                \"🧐\",\r\n                \"🤓\",\r\n                \"😎\",\r\n                \"🤩\",\r\n                \"🥳\",\r\n                \"😏\",\r\n                \"😒\",\r\n                \"😞\",\r\n                \"😔\",\r\n                \"😟\",\r\n                \"😕\",\r\n                \"🙁\",\r\n                \"☹️\",\r\n                \"😣\",\r\n                \"😖\",\r\n                \"😫\",\r\n                \"😩\",\r\n                \"🥺\",\r\n                \"😢\",\r\n                \"😭\",\r\n                \"😤\",\r\n                \"😠\",\r\n                \"😡\",\r\n                \"🤬\",\r\n                \"🤯\",\r\n                \"😳\",\r\n                \"🥵\",\r\n                \"🥶\",\r\n                \"😱\",\r\n                \"😨\",\r\n                \"😰\",\r\n                \"😥\",\r\n                \"😓\",\r\n                \"🤗\",\r\n                \"🤔\",\r\n                \"🤭\",\r\n                \"🤫\",\r\n                \"🤥\",\r\n                \"😶\",\r\n                \"😐\",\r\n                \"😑\",\r\n                \"😬\",\r\n                \"🙄\",\r\n                \"😯\",\r\n                \"😦\",\r\n                \"😧\",\r\n                \"😮\",\r\n                \"😲\",\r\n                \"🥱\",\r\n                \"😴\",\r\n                \"🤤\",\r\n                \"😪\",\r\n                \"😵\",\r\n                \"🤐\",\r\n                \"🥴\",\r\n                \"🤢\",\r\n                \"🤮\",\r\n                \"🤧\",\r\n                \"😷\",\r\n                \"🤕\",\r\n                \"🤑\",\r\n                \"🤠\",\r\n            ],\r\n            isEdit: false,\r\n            searchValue: \"\",\r\n            groupModal: false,\r\n            fileModal: false,\r\n            file: null,\r\n            fileForUserAvatar: null,\r\n\r\n            chatData: [],\r\n            index: 0,\r\n            isSidebarChat: false,\r\n\r\n            noMsg: false,\r\n            CHAT: null,\r\n            loader: false,\r\n            submitted: false,\r\n\r\n            title: this.$t(\"chat.chat\"),\r\n            username: this.$t(\"chat.chat\"),\r\n            items: [\r\n                {\r\n                    text: this.$t(\"menu\"),\r\n                    href: \"/\",\r\n                },\r\n                {\r\n                    text: this.$t(\"chat.chat\"),\r\n                    active: true,\r\n                },\r\n            ],\r\n            chatType: \"chat\",\r\n\r\n            // FORCHATMESSAGES\r\n            page: 0,\r\n\r\n            groupChatId: null,\r\n            searchChat: \"\",\r\n            searchContact: \"\",\r\n            searchGroup: \"\",\r\n            mobileChat: false,\r\n            addGroupMembersModal: false,\r\n            searchGroupMembersAdd: \"\",\r\n        };\r\n    },\r\n    created () {\r\n        window.addEventListener(\"resize\", () => {\r\n            this.innerWidth = window.innerWidth;\r\n        });\r\n        this.setWindowWidthPrivite(this.innerWidth);\r\n    },\r\n    computed: {\r\n        ...mapState(\"messenger\", [\r\n            \"chatListMessages\",\r\n            \"chatTotalMessages\",\r\n            \"groupChatListMessages\",\r\n        ]),\r\n        // ...mapState(\"employee\", [\"user\"]),\r\n        messages () {\r\n            if (this.chatType == \"group\") {\r\n                return this.groupChatListMessages;\r\n            } else {\r\n                return this.chatListMessages;\r\n            }\r\n        },\r\n        userAvatarUrlFromStorage () {\r\n            let triggerForUrl = this.localUserAvatarUrl\r\n            return TokenService.getUserAvatarUrl()\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapActions(\"messenger\", [\r\n            \"getByChatId\",\r\n            \"sendMessage\",\r\n            \"getByGroupChatId\",\r\n            \"sendMessageGroup\",\r\n        ]),\r\n        resetMessagesComponentProps () {\r\n            this.CHAT = null\r\n            this.username = this.$t(\"chat.chat\")\r\n            this.$store.commit('messenger/setListGroupChatMesseges', { list: [], total: 0 })\r\n            this.submitted = false\r\n            this.noMsg = false\r\n        },\r\n        updateUserAvatar () {\r\n            this.userAvatarLoading = true\r\n            messengerService\r\n                .changeUserAvatar(this.fileForUserAvatar, this.userId)\r\n                .then((rs) => {\r\n                    this.userAvatarLoading = false\r\n                    if (rs.data) {\r\n                        this.localUserAvatarUrl = rs.data\r\n                        TokenService.setUserAvatarUrl(rs.data)\r\n                    }\r\n                })\r\n                .catch((e) => {\r\n                    console.log(e)\r\n                    this.userAvatarLoading = false\r\n                })\r\n        },\r\n        userAvatarClicked () {\r\n            this.$refs.userAvatarFileRef.$el.firstChild.click()\r\n        },\r\n        closeModalAddMember () {\r\n            this.addGroupMembersModal = false;\r\n            this.searchGroupMembersAdd = \"\";\r\n            if (this.groupMembersModal && this.$refs.groupMemberRef) {\r\n                this.$refs.groupMemberRef.reset(this.searchGroupMembers);\r\n            }\r\n        },\r\n        addMemberFromModal () {\r\n            this.addMembersToGroup();\r\n        },\r\n        saveEditedData () {\r\n            this.loaderEdit = true;\r\n            let { file, name } = this.$refs.editGroupRef;\r\n            messengerService\r\n                .editGroup(file, name, this.CHAT.id)\r\n                .then((rs) => {\r\n                    if (rs.data) {\r\n                        if (this.index == 1) {\r\n                            this.$refs.groupComponent.getClickTab({\r\n                                page: 0,\r\n                                itemsPerPage: 10,\r\n                                search: this.searchGroup,\r\n                            });\r\n                        }\r\n                        this.editGroupModal = false;\r\n                        this.setUsername(rs.data.groupName);\r\n                    }\r\n                })\r\n                .catch((e) => {\r\n                    // catchErr(e);\r\n                })\r\n                .finally(() => {\r\n                    this.loaderEdit = false;\r\n                });\r\n        },\r\n        editGroup () {\r\n            this.editGroupModal = true;\r\n            setTimeout(() => {\r\n                this.$refs.editGroupRef.setEditedData(\r\n                    this.CHAT.groupName,\r\n                    `${this.baseUrl}/${this.CHAT.uploadPath}`\r\n                );\r\n            }, 300);\r\n        },\r\n        deleteGroup () {\r\n            this.$bvModal.msgBoxConfirm(this.$t('messages.delete_title'), {\r\n                okTitle: this.$t('actions.confirm'),\r\n                cancelTitle: this.$t('actions.cancel')\r\n            })\r\n                .then(value => {\r\n                    if (value) {\r\n                        messengerService\r\n                            .deleteGroup(this.CHAT.id)\r\n                            .then((rs) => {\r\n                                if (this.index == 1) {\r\n                                    this.$refs.groupComponent.getClickTab({\r\n                                        page: 0,\r\n                                        itemsPerPage: 10,\r\n                                        search: this.searchGroup,\r\n                                    });\r\n                                }\r\n                                this.resetMessagesComponentProps()\r\n                            })\r\n                            .catch(e => {\r\n                                console.log(e)\r\n                            })\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    // An error occurred\r\n                })\r\n        },\r\n        addMembersToGroup () {\r\n            this.addGroupMembersModal = true;\r\n            this.searchGroupMembersAdd = \"\";\r\n\r\n            setTimeout(() => {\r\n                this.$refs.addGroupMemberRef.reset(this.searchGroupMembersAdd);\r\n            }, 300);\r\n        },\r\n        setTotalForGroupMember (v) {\r\n            this.totalGroupMember = v.total;\r\n        },\r\n        viewGroupMembers () {\r\n            this.groupMembersModal = true;\r\n            this.searchGroupMembers = \"\";\r\n            setTimeout(() => {\r\n                this.$refs.groupMemberRef.reset(this.searchGroupMembers);\r\n            }, 300);\r\n        },\r\n        //MESSAGE SEARCHING CHAT AND GROUP\r\n        async searchMsg (v) {\r\n            if (this.CHAT.id) {\r\n                const arg = {\r\n                    pag: this.pag,\r\n                    chatId: this.CHAT.id,\r\n                    search: v,\r\n                };\r\n                if (this.chatType == \"group\") {\r\n                    await this.getByGroupChatId(arg);\r\n                } else {\r\n                    await this.getByChatId(arg);\r\n                }\r\n            }\r\n        },\r\n        //END\r\n\r\n        viewImageFromMessages (path) {\r\n            this.imageView = true;\r\n            this.uploadPath = path;\r\n        },\r\n        setWindowWidthPrivite (v) {\r\n            if (v < 992) {\r\n                this.mobileChat = true;\r\n            } else {\r\n                this.mobileChat = false;\r\n            }\r\n        },\r\n        selectEmoji (e) {\r\n            this.$refs.messageRef.form.message = String(\r\n                this.$refs.messageRef.form.message.concat(e)\r\n            );\r\n        },\r\n\r\n        //DELETE MESSAGE\r\n        deleteMsg (id, groupChatId, chatId) {\r\n            const deleteApi = (api, arg) => {\r\n                api(arg)\r\n                    .then(() => console.log('deleted'))\r\n                    .catch((err) => {\r\n                        // catchErr(err)\r\n                    });\r\n            };\r\n            if (this.chatType == \"group\") {\r\n                deleteApi(messengerService.groupChatMessageDelete, {\r\n                    id,\r\n                    groupChatId,\r\n                });\r\n            } else {\r\n                deleteApi(messengerService.chatMessageDelete, { id, chatId });\r\n            }\r\n        },\r\n\r\n        saveEdit ({ message, file }) {\r\n            if (this.chatType == \"group\") {\r\n                if (this.groupChatId) {\r\n                    messengerService\r\n                        .groupChatMessageUpdate({\r\n                            id: this.groupChatId,\r\n                            message: message,\r\n                        })\r\n                        .then((res) => { })\r\n                        .catch((err) => {\r\n                            // catchErr(err);\r\n                        });\r\n                }\r\n            } else {\r\n                messengerService\r\n                    .chatMessageUpdate({\r\n                        id: this.chatId,\r\n                        message: message,\r\n                    })\r\n                    .then((res) => { })\r\n                    .catch((err) => {\r\n                        // catchErr(err);\r\n                    });\r\n            }\r\n        },\r\n        updateMsg ({ id, message, uploadPath, fileName }) {\r\n            if (this.chatType == \"group\") {\r\n                this.isEdit = true;\r\n                this.groupChatId = id;\r\n                setTimeout(() => {\r\n                    this.$refs.editRef.setMsg(message);\r\n                    this.$refs.editRef.setFile(fileName, uploadPath);\r\n                }, 200);\r\n            } else {\r\n                this.isEdit = true;\r\n                this.chatId = id;\r\n                setTimeout(() => {\r\n                    this.$refs.editRef.setMsg(message);\r\n                    this.$refs.editRef.setFile(fileName, uploadPath);\r\n                }, 200);\r\n            }\r\n        },\r\n        finishSendFile (message, id, employeeId, file) {\r\n            this.loaderFile = true;\r\n            const messageRef = this.$refs.messageRef;\r\n            let { toastData, toastStatus } = messageRef;\r\n            if (toastStatus == \"reply\") {\r\n                this.callApi(\r\n                    messengerService.replyChat,\r\n                    {\r\n                        chatId: id,\r\n                        message: message,\r\n                        file: file,\r\n                        id: toastData.id,\r\n                    },\r\n                    () => {\r\n                        this.$refs.fileComponent.reset();\r\n                        this.file = null;\r\n                        this.fileModal = false;\r\n                        this.loaderFile = false;\r\n                        this.handleScroll();\r\n                    }\r\n                );\r\n            } else {\r\n                let data = {\r\n                    chatId: id || employeeId,\r\n                    ownerId: JSON.parse(localStorage.getItem(\"user_id\")),\r\n                    file: file,\r\n                    message: message,\r\n                };\r\n\r\n                messengerService\r\n                    .sendFile(data)\r\n                    .then((rs) => {\r\n                        this.$refs.fileComponent.reset();\r\n                        this.file = null;\r\n                        this.fileModal = false;\r\n                        this.loaderFile = false;\r\n                        this.handleScroll();\r\n                    })\r\n                    .catch((err) => {\r\n                        // catchErr(err);\r\n                    });\r\n            }\r\n        },\r\n\r\n        sendFile (message, file) {\r\n            if (this.chatType == \"chat\") {\r\n                const { id, ownerId, employeeId } = this.CHAT;\r\n                if (ownerId || id) {\r\n                    this.finishSendFile(message, id, employeeId, file);\r\n                } else {\r\n                    this.finishSendFileFromContact(file, message);\r\n                }\r\n            } else {\r\n                this.finishSendFileGroup(message, this.CHAT.id, file);\r\n            }\r\n        },\r\n        finishSendFileFromContact (file, message) {\r\n            messengerService\r\n                .createChat(this.CHAT.employeeId)\r\n                .then(async (rs) => {\r\n                    const { id, employeeId } = rs.data;\r\n                    if (id) {\r\n                        await this.getByChatId({ pag: this.pag, chatId: id });\r\n                        await this.finishSendFile(message, id, employeeId, file);\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    // catchErr(err);\r\n                });\r\n        },\r\n        finishSendFileGroup (message, groupId, file) {\r\n            this.loaderFile = true;\r\n            let data = {\r\n                groupChatId: groupId,\r\n                ownerId: JSON.parse(localStorage.getItem(\"user_id\")),\r\n                file: file,\r\n                message: message,\r\n            };\r\n            messengerService.sendImageGroup(data).then((rs) => {\r\n                this.$refs.fileComponent.reset();\r\n                this.file = null;\r\n                this.fileModal = false;\r\n                this.loaderFile = false;\r\n                this.handleScroll();\r\n            });\r\n        },\r\n        fileUpload () {\r\n            this.$refs.fileRef.$el.firstChild.click();\r\n        },\r\n\r\n        getMessagesByChatId (cmp) {\r\n            if (this.CHAT.id) {\r\n                messengerService\r\n                    .getByChatId({\r\n                        pag: { page: (this.page += 1), itemsPerPage: 10 },\r\n                        chatId: this.CHAT.id,\r\n                    })\r\n                    .then(async ({ data }) => {\r\n                        this.$store.commit(\"messenger/pushItems\", data.list);\r\n                        if (data.list.length > 0) {\r\n                            cmp.scrollTop = 800;\r\n                            this.noMsg = false;\r\n                        } else {\r\n                            this.noMsg = true;\r\n                            this.page + -1;\r\n                        }\r\n                    })\r\n                    .catch((err) => {\r\n                        // catchErr(err);\r\n                    });\r\n                this.handleScroll();\r\n            }\r\n        },\r\n        getMessagesByGroupId (cmp) {\r\n            messengerService\r\n                .getByGroupChatId({\r\n                    pag: { page: (this.page += 1), itemsPerPage: 10 },\r\n                    chatId: this.CHAT.id,\r\n                })\r\n                .then(async ({ data }) => {\r\n                    if (data.list.length > 0) {\r\n                        cmp.scrollTop = 1500;\r\n                        this.$store.commit(\"messenger/pushGroupItems\", data.list);\r\n                        this.noMsg = false;\r\n                    } else {\r\n                        this.noMsg = true;\r\n                        this.page + -1;\r\n                    }\r\n                });\r\n        },\r\n\r\n        /**\r\n         * Get the name of user\r\n         */\r\n        setUsername (name) {\r\n            this.username = name;\r\n        },\r\n        async chatUsername (contact) {\r\n            this.chatType = \"chat\";\r\n            this.noMsg = false;\r\n            this.page = 0;\r\n\r\n            this.CHAT = contact;\r\n            await this.$store.commit(\"messenger/setCurrentChat\", contact);\r\n            await this.setUsername(contact.myName);\r\n            await this.getByChatId({\r\n                pag: { page: 0, itemsPerPage: 10 },\r\n                chatId: contact.id,\r\n            });\r\n            await this.setMobileChat();\r\n        },\r\n        setMobileChat () {\r\n            if (this.mobileChat) {\r\n                this.isSidebarChat = true;\r\n            }\r\n        },\r\n        async groupUsername (group) {\r\n            this.$nextTick(() => {\r\n                this.noMsg = false;\r\n                this.page = 0;\r\n                this.chatType = \"group\";\r\n                this.CHAT = group;\r\n            });\r\n            await this.$store.commit(\"messenger/setCurrentChat\", group);\r\n            await this.setUsername(group.groupName);\r\n            await this.getByGroupChatId({\r\n                pag: { page: 0, itemsPerPage: 10 },\r\n                chatId: group.id,\r\n            });\r\n            await this.setMobileChat();\r\n        },\r\n        async contactUsername (contact) {\r\n            this.$nextTick(() => {\r\n                this.noMsg = false;\r\n                this.CHAT = contact;\r\n                this.chatType = \"chat\";\r\n                this.page = 0;\r\n            });\r\n            await this.$store.commit(\"messenger/setCurrentChat\", contact);\r\n            await this.setUsername(\r\n                ` ${contact.lastName} ${contact.firstName} ${contact.middleName}`\r\n            );\r\n            if (contact.id) {\r\n                await this.getByChatId({\r\n                    pag: { page: 0, itemsPerPage: 10 },\r\n                    chatId: contact.id,\r\n                });\r\n            } else {\r\n                await this.$store.commit(\"messenger/setListChatMesseges\", {\r\n                    total: 0,\r\n                    list: [],\r\n                });\r\n            }\r\n\r\n            await this.setMobileChat();\r\n        },\r\n\r\n        /**\r\n         * Char form Submit\r\n         */\r\n        // eslint-disable-next-line no-unused-vars\r\n        sendMsgGroup (message) {\r\n            this.sendMessageGroup(\r\n                JSON.stringify({\r\n                    message: message,\r\n                    groupChatId: this.CHAT.id,\r\n                    ownerId: JSON.parse(localStorage.getItem(\"user_id\")),\r\n                })\r\n            );\r\n            // this.form.message = \"\";\r\n            this.handleScroll();\r\n        },\r\n        sendMsgApi (msg, chatId) {\r\n            this.sendMessage(\r\n                JSON.stringify({\r\n                    message: msg,\r\n                    chatId: chatId || empId,\r\n                    ownerId: JSON.parse(localStorage.getItem(\"user_id\")),\r\n                })\r\n            );\r\n        },\r\n        async sendMsg (message) {\r\n            if (this.CHAT.ownerId) {\r\n                this.sendMsgApi(message, this.CHAT.id || this.CHAT.employeeId);\r\n            } else {\r\n                if (this.CHAT.id) {\r\n                    await this.sendMsgApi(message, this.CHAT.id || this.CHAT.employeeId);\r\n                } else {\r\n                    messengerService\r\n                        .createChat(this.CHAT.employeeId)\r\n                        .then(async (rs) => {\r\n                            if (rs.data) {\r\n                                await this.getByChatId({\r\n                                    pag: { page: 0, itemsPerPage: 10 },\r\n                                    chatId: rs.data.id,\r\n                                });\r\n                                this.sendMsgApi(message, rs.data.id || rs.data.employeeId);\r\n                                this.isSidebarChat = false;\r\n                            }\r\n                        })\r\n                        .catch((err) => {\r\n                            // catchErr(err);\r\n                        });\r\n                }\r\n            }\r\n            this.handleScroll();\r\n        },\r\n        callApi (api, arg, func = null) {\r\n            const messageRef = this.$refs.messageRef;\r\n            const hideToast = () => {\r\n                if (messageRef) messageRef.replyMsg(null, \"hidden\");\r\n                this.handleScroll();\r\n                if (func) {\r\n                    func();\r\n                }\r\n            };\r\n            api(arg)\r\n                .then(() => hideToast())\r\n                .catch((e) => {\r\n                    // catchErr(e)\r\n                });\r\n        },\r\n        //MESSAGE SEND API\r\n        async formSubmit (e) {\r\n            const messageRef = this.$refs.messageRef;\r\n\r\n            this.submitted = true;\r\n            let { toastData, toastStatus } = messageRef;\r\n\r\n            const message = messageRef.form.message;\r\n            // stop here if form is invalid\r\n            if ((!message || message.trim().length == 0) && toastStatus != 'forward') {\r\n                messageRef.$refs.msgInput.$el.focus()\r\n                return;\r\n            } else {\r\n                let payload = {\r\n                    id: toastData ? toastData.id : null,\r\n                    message: message,\r\n                };\r\n                switch (toastStatus) {\r\n                    case \"edit\":\r\n                        if (this.chatType == \"group\") {\r\n                            this.callApi(messengerService.groupChatMessageUpdate, payload);\r\n                        } else {\r\n                            this.callApi(messengerService.chatMessageUpdate, payload);\r\n                        }\r\n                        break;\r\n\r\n                    case \"forward\":\r\n                        // eslint-disable-next-line no-case-declarations\r\n                        const { id, employeeId } = this.CHAT;\r\n                        if (this.chatType == \"group\") {\r\n                            this.callApi(messengerService.groupChatMessageUpdate, payload);\r\n                        } else {\r\n                            if (id) {\r\n                                this.callApi(messengerService.forwardChat, {\r\n                                    chatId: id,\r\n                                    ...payload,\r\n                                });\r\n                            } else {\r\n                                messengerService\r\n                                    .createChat(employeeId)\r\n                                    .then((rs) => {\r\n                                        this.callApi(messengerService.forwardChat, {\r\n                                            chatId: rs.data.id,\r\n                                            ...payload,\r\n                                        });\r\n                                    })\r\n                                    .catch((err) => {\r\n                                        // catchErr(err);\r\n                                    });\r\n                            }\r\n                        }\r\n                        break;\r\n                    case \"reply\":\r\n                        if (this.chatType == \"group\") {\r\n                            this.callApi(messengerService.groupChatMessageUpdate, payload);\r\n                        } else {\r\n                            if (this.CHAT.id) {\r\n                                this.callApi(messengerService.replyChat, {\r\n                                    chatId: this.CHAT.id,\r\n                                    ...payload,\r\n                                });\r\n                            }\r\n                        }\r\n                        break;\r\n\r\n                    default:\r\n                        if (this.chatType == \"chat\") {\r\n                            await this.sendMsg(message);\r\n                        } else {\r\n                            await this.sendMsgGroup(message);\r\n                        }\r\n                        break;\r\n                    // }\r\n                }\r\n                this.submitted = false;\r\n                messageRef.form.message = \"\";\r\n                if (this.index == 2) {\r\n                    this.index = 0;\r\n                    setTimeout(() => {\r\n                        this.$refs.chatComponent.getClickTab({\r\n                            page: 0,\r\n                            itemsPerPage: 10,\r\n                            search: this.searchChat,\r\n                        });\r\n                        this.CHAT = null;\r\n                        this.username = this.$t(\"chat.chat\");\r\n                    }, 300);\r\n                }\r\n            }\r\n        },\r\n\r\n        handleScroll () {\r\n            const messageRef = this.$refs.messageRef;\r\n            if (messageRef.$refs.current.$el) {\r\n                setTimeout(() => {\r\n                    messageRef.$refs.current.SimpleBar.getScrollElement().scrollTop =\r\n                        messageRef.$refs.current.SimpleBar.getScrollElement().scrollHeight +\r\n                        1500;\r\n                }, 500);\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n::v-deep.sidebar-chat {\r\n    .b-sidebar {\r\n        width: 100vw;\r\n        background: white;\r\n    }\r\n}\r\n::v-deep.avatar-edit-pencil {\r\n    width: 100%;\r\n    height: 100%;\r\n    transition: all 0.5s ease;\r\n    box-shadow: 5px 5px 5px #eee;\r\n    border-radius: 50px;\r\n    border: 3px solid white;\r\n    cursor: pointer;\r\n    /* background: #556ee6; */\r\n}\r\n::v-deep.avatar-container {\r\n    position: relative;\r\n    width: 5rem;\r\n    height: 5rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n::v-deep.image {\r\n    display: block;\r\n    width: 5rem;\r\n    height: 5rem;\r\n}\r\n\r\n::v-deep.overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n    height: 100%;\r\n    width: 100%;\r\n    opacity: 0;\r\n    transition: 0.3s ease;\r\n}\r\n\r\n::v-deep.avatar-container:hover .overlay {\r\n    opacity: 1;\r\n}\r\n\r\n::v-deep.icon {\r\n    color: white;\r\n    font-size: 100px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    -ms-transform: translate(-50%, -50%);\r\n    text-align: center;\r\n}\r\n\r\n::v-deep.fa-user:hover {\r\n    color: #eee;\r\n}\r\n</style>\r\n"]}]}