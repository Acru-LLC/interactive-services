{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\report\\organizitional\\components\\addUpdate.vue?vue&type=style&index=0&id=3171c920&scoped=true&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\report\\organizitional\\components\\addUpdate.vue","mtime":1675054786286},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubXVsdGlzZWxlY3RfX2VsZW1lbnQgPiBzcGFuIHsNCiAgd2hpdGUtc3BhY2U6IGJyZWFrLXNwYWNlczsNCiAgd29yZC13cmFwOiBicmVhay13b3JkOw0KfQ0K"},{"version":3,"sources":["addUpdate.vue"],"names":[],"mappings":";AA6LA;AACA;AACA;AACA","file":"addUpdate.vue","sourceRoot":"src/modules/report/organizitional/components","sourcesContent":["<template>\r\n  <div>\r\n    <BaseInputWithValidation\r\n        @input=\"($event) => (form.nameLt = toLatin($event))\"\r\n        rules=\"required\"\r\n        v-model=\"form.nameUz\"\r\n        :label=\"$t('column.name_uz')\"\r\n        label-on-top\r\n        class=\"required\"\r\n    />\r\n    <BaseInputWithValidation\r\n        @input=\"($event) => (form.nameUz = toCyrill($event))\"\r\n        not-required\r\n        custom-classes=\"mt-3\"\r\n        v-model=\"form.nameLt\"\r\n        :label=\"$t('column.name_lt')\"\r\n        label-on-top\r\n    />\r\n    <BaseInputWithValidation\r\n        not-required\r\n        custom-classes=\"mt-3\"\r\n        v-model=\"form.nameRu\"\r\n        :label=\"$t('column.name_ru')\"\r\n        label-on-top\r\n    />\r\n    <div class=\"mt-3\">\r\n      <label class=\"mb-2\">{{ $t( \"date\" ) }}</label><br>\r\n      <BaseDatePickerWithValidation\r\n          not-required\r\n          disableAfter\r\n          v-model=\"form.date\"\r\n          only-form-element\r\n      ></BaseDatePickerWithValidation>\r\n    </div>\r\n\r\n    <div class=\"mt-3\">\r\n      <label class=\"mb-2\">{{ $t( \"reportTemplates\" ) }}</label>\r\n      <MultiselectCustomized\r\n          :submitted=\"submitted\"\r\n          ref=\"refSelect\"\r\n          :label=\"g_label_Uz('nameRu', 'nameLt', 'nameUz')\"\r\n          :options=\"valueList\"\r\n          @searchItem=\"searchItem\"\r\n          @value=\"getValue\"\r\n      />\r\n    </div>\r\n\r\n\r\n    <div class=\"mt-3\">\r\n      <label class=\"mb-2\">{{ $t( \"dateTypes\" ) }}</label>\r\n      <MultiselectCustomized\r\n          :submitted=\"submitted\"\r\n          ref=\"refSelect\"\r\n          :label=\"g_label_Uz('nameRu', 'nameLt', 'nameUz')\"\r\n          :options=\"list\"\r\n          @searchItem=\"searchItem2\"\r\n          @value=\"getValue2\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"mt-3\" v-if=\"title\">\r\n      <label class=\"mb-2\">{{ $t( \"titleTable\" ) }}</label>\r\n\r\n      <div class=\"border p-2\">\r\n        {{ getName( {nameUz: title.titleUz, NameRu: title.titleRu, nameLt: title.titleLt} ) }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {validationMixin} from \"vuelidate\";\r\nimport {required} from \"vuelidate/lib/validators\";\r\n// import DatePicker from \"vue2-datepicker\";\r\nimport Service from \"../../reportService\";\r\n\r\nimport {g_label_Uz} from \"@/helper\";\r\n\r\nexport default {\r\n  components: {\r\n    // DatePicker,\r\n  },\r\n  validations: {\r\n    form: {\r\n      date: {},\r\n      tableId: {\r\n        required,\r\n      },\r\n      dateTypeId: {\r\n        required\r\n      }\r\n    },\r\n  },\r\n  mixins: [validationMixin],\r\n  methods: {\r\n    getListDateTypesChild() {\r\n      if (this.form.tableId) {\r\n        Service.getListDateTypesChild( this.params2, this.form.tableId.dateTypeId ).then(\r\n            (rs) => {\r\n              this.list = rs.data.list;\r\n            }\r\n        );\r\n      }\r\n    },\r\n    searchItem(q) {\r\n      this.search = q;\r\n      this.getListTable();\r\n    },\r\n    getValue(v) {\r\n      this.title = v\r\n      this.form.tableId = v;\r\n      this.getListDateTypesChild()\r\n    },\r\n\r\n    searchItem2(q) {\r\n      this.search2 = q;\r\n      this.getListDateTypesChild();\r\n    },\r\n    getValue2(v) {\r\n      this.title2 = v\r\n      this.form.dateTypeId = v;\r\n    },\r\n    checkValidity() {\r\n      this.submitted = true;\r\n      this.$v.form.$touch();\r\n      return this.$v.form.$anyError;\r\n    },\r\n    setFormData(item) {\r\n      this.form = {...this.form, ...item};\r\n    },\r\n    getListTable() {\r\n      Service.getOwnTable( this.params )\r\n          .then( (rs) => {\r\n            if (rs.data) {\r\n              this.valueList = rs.data.list;\r\n            }\r\n          } )\r\n          .catch( (e) => {});\r\n    },\r\n  },\r\n  created() {\r\n    this.getListTable();\r\n  },\r\n  computed: {\r\n    params() {\r\n      return {\r\n        params: {\r\n          limit: 20,\r\n          page: 0,\r\n        },\r\n        search: this.search,\r\n      };\r\n    },\r\n    params2() {\r\n      return {\r\n        params: {\r\n          limit: 20,\r\n          page: 0,\r\n        },\r\n        search: this.search2,\r\n      };\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      title: null,\r\n      search2: \"\",\r\n      list: [],\r\n      g_label_Uz: g_label_Uz,\r\n      submitted: false,\r\n      valueList: [],\r\n      search: \"\",\r\n      dateNotAfter: {\r\n        to: new Date(Date.now() - 8640000)\r\n      },\r\n      form: {\r\n        date: \"\",\r\n        tableId: null,\r\n        dateTypeId: null,\r\n        nameUz: \"\",\r\n        nameLt: \"\",\r\n        nameRu: \"\"\r\n      },\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.multiselect__element > span {\r\n  white-space: break-spaces;\r\n  word-wrap: break-word;\r\n}\r\n</style>\r\n"]}]}