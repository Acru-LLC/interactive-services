{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\reestr-contractors\\modules\\natural\\CreateOrUpdate.vue?vue&type=style&index=0&id=497505b8&scoped=true&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\reestr-contractors\\modules\\natural\\CreateOrUpdate.vue","mtime":1667352074518},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouY29sLWZvcm0tbGFiZWwgew0KICAgIHBhZGRpbmctdG9wOiAwOw0KfQ0KDQp1bCB7DQogICAgbGlzdC1zdHlsZS10eXBlOiBub25lOw0KfQ0K"},{"version":3,"sources":["CreateOrUpdate.vue"],"names":[],"mappingsuDA;AACA;AACA;;AAEA;AACA;AACA","file":"CreateOrUpdate.vue","sourceRoot":"src/modules/reestr-contractors/modules/natural","sourcesContent":["<template>\r\n    <base-create-or-update-wrapper\r\n        @save=\"save\"\r\n        has-save-suspend\r\n        :custom-title=\"$t('actions.add_to_reestr')\"\r\n    >\r\n        <ValidationObserver\r\n            ref=\"observer\"\r\n            v-slot=\"{}\"\r\n        >\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.orderNumber\"\r\n                        :label=\"$t('column.order_number')\"\r\n                        :placeholder=\"$t('column.order_number')\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseDatePickerWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        :label=\"$t('column.added_date_to_reestr')\"\r\n                        :placeholder=\"$t('column.added_date_to_reestr')\"\r\n                        disable-after\r\n                        v-model=\"editingItem.reestrAcceptedDate\"\r\n                        lang=\"ru\"\r\n                    ></BaseDatePickerWithValidation>\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.contractorId\"\r\n                        :has-next-page=\"hasNextPageContractors\"\r\n                        @reachedEndOfList=\"contractorReachedEndOfList\"\r\n                        @search-change=\"debounceSearchContractors\"\r\n                        :searchable=\"true\"\r\n                        :allow-empty=\"false\"\r\n                        preserve-search\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingContractors\"\r\n                        :internal-search=\"false\"\r\n                        :options=\"contractors.map(e => e.id)\"\r\n                        :label=\"$t('column.business_entity')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelContractor\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                        with-create-addition\r\n                    >\r\n                        <template v-slot:append-slot>\r\n                            <b-button\r\n                                @click=\"contractorCreateModal = true\"\r\n                                variant=\"outline-primary\"\r\n                                style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n                            >\r\n                                <i class=\"mdi mdi-plus-circle\"></i>\r\n                            </b-button>\r\n                        </template>\r\n                    </BaseMultiselectWithValidation>\r\n                    <BaseModalForCreate\r\n                        v-model=\"contractorCreateModal\"\r\n                        without-list-search\r\n                        use-component-save-fn\r\n                        mainApiUrl=\"contractor\"\r\n                        createFormName=\"CreateFormContractor\"\r\n                        @new-ref-created-without-list-search=\"newRefCreated\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryProductOrServiceTypeId\"\r\n                        @select=\"productTypeSelected\"\r\n                        :options=\"productTypes.map(e => e.id)\"\r\n                        :label=\"$t('column.product_or_service_type')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelProductType\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <!-- $can('republic', 'for reestr') -->\r\n                    <b-row>\r\n                        <b-col :cols=\"$can('republic', 'for reestr') ? 8 : 12\">\r\n                            <BaseMultiselectWithValidation\r\n                                v-if=\"editingItem.isRepublic && !editingItem.contractorId\"\r\n                                rules=\"required\"\r\n                                class=\"required\"\r\n                                disabled\r\n                                :custom-styles=\"$can('republic', 'for reestr') ? `grid-template-columns: 38% 62%;` : ''\"\r\n                                :options=\"regions.map(e => e.regionId)\"\r\n                                :value=\"null\"\r\n                                :label=\"$t('column.region')\"\r\n                                :placeholder=\"$t('messages.please_select_business_entity')\"\r\n                                :custom-label=\"customLabelRegion\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                            <BaseMultiselectWithValidation\r\n                                v-else-if=\"editingItem.isRepublic && !contractorHasParent\"\r\n                                rules=\"required\"\r\n                                class=\"required\"\r\n                                multiple\r\n                                :hide-selected=\"true\"\r\n                                :close-on-select=\"false\"\r\n                                :custom-styles=\"$can('republic', 'for reestr') ? `grid-template-columns: 38% 62%;` : ''\"\r\n                                v-model=\"editingItem.regionIds\"\r\n                                :options=\"regions.map(e => e.regionId)\"\r\n                                @select=\"regionSelected\"\r\n                                :label=\"$t('column.region')\"\r\n                                placeholder=\"\"\r\n                                :custom-label=\"customLabelRegion\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                            <BaseMultiselectWithValidation\r\n                                v-else\r\n                                rules=\"required\"\r\n                                class=\"required\"\r\n                                :custom-styles=\"$can('republic', 'for reestr') ? `grid-template-columns: 38% 62%;` : ''\"\r\n                                v-model=\"editingItem.regionId\"\r\n                                :options=\"regions.map(e => e.regionId)\"\r\n                                @select=\"regionSelected\"\r\n                                :label=\"$t('column.region')\"\r\n                                placeholder=\"\"\r\n                                :custom-label=\"customLabelRegion\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col\r\n                            cols=\"4\"\r\n                            v-if=\"$can('republic', 'for reestr')\"\r\n                        >\r\n                            <div class=\"form-check form-check-right\">\r\n                                <input\r\n                                    v-model=\"editingItem.isRepublic\"\r\n                                    class=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    id=\"formCheckIsLegal\"\r\n                                />\r\n                                <label\r\n                                    class=\"form-check-label font-weight-normal\"\r\n                                    for=\"formCheckIsLegal\"\r\n                                >\r\n                                    {{ $t('column.is_republic') }}\r\n                                </label>\r\n                            </div>\r\n                        </b-col>\r\n                    </b-row>\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryProductOrServiceId\"\r\n                        :options=\"products.map(el => el.id)\"\r\n                        :label=\"$t('submodules.product_or_services.title')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelProduct\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                        :has-next-page=\"hasNextPageProductOrServices\"\r\n                        @reachedEndOfList=\"productOrServicesReachedEndOfList\"\r\n                        @search-change=\"debounceSearchProductOrServices\"\r\n                        :searchable=\"true\"\r\n                        :allow-empty=\"false\"\r\n                        preserve-search\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingProductOrServices\"\r\n                        :internal-search=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <b-row\r\n                v-if=\"isDominant && editingItem.isRepublic && !contractorHasParent\"\r\n                class=\"mb-3\"\r\n            >\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <b-row>\r\n                        <b-col cols=\"8\">\r\n                            <BaseMultiselectWithValidation\r\n                                v-if=\"editingItem.isGroup\"\r\n                                rules=\"required\"\r\n                                class=\"required\"\r\n                                custom-styles=\"grid-template-columns: 38% 62%;\"\r\n                                v-model=\"editingItem.groupOfIndividualsId\"\r\n                                :options=\"groupOfIndividuals.map(e => e.id)\"\r\n                                :label=\"$t('column.group_of_individuals')\"\r\n                                placeholder=\"\"\r\n                                :custom-label=\"customLabelGroupOfIndividuals\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col cols=\"4\">\r\n                            <div class=\"form-check form-check-right\">\r\n                                <input\r\n                                    v-model=\"editingItem.isGroup\"\r\n                                    class=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    id=\"formCheckIsGroup\"\r\n                                />\r\n                                <label\r\n                                    class=\"form-check-label font-weight-normal\"\r\n                                    for=\"formCheckIsGroup\"\r\n                                >\r\n                                    {{ $t('column.is_group') }}\r\n                                </label>\r\n                            </div>\r\n                        </b-col>\r\n                    </b-row>\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n\r\n                </b-col>\r\n            </b-row>\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        v-if=\"!editingItem.isRepublic\"\r\n                        not-required\r\n                        v-model=\"editingItem.districtIds\"\r\n                        multiple\r\n                        :close-on-select=\"false\"\r\n                        :hide-selected=\"true\"\r\n                        :options=\"districts.map(e => e.id)\"\r\n                        :label=\"$t('column.district')\"\r\n                        :custom-label=\"customLabelDistrict\"\r\n                        placeholder=\"\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        v-if=\"isDominant\"\r\n                        not-required\r\n                        v-model=\"editingItem.okedId\"\r\n                        :options=\"okeds.map(e => e.id)\"\r\n                        :label=\"$t('column.oked')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelOked\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                        :has-next-page=\"hasNextPageOked\"\r\n                        @reachedEndOfList=\"okedReachedEndOfList\"\r\n                        @search-change=\"debounceSearchOked\"\r\n                        :searchable=\"true\"\r\n                        preserve-search\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingOked\"\r\n                        :internal-search=\"false\"\r\n                    />\r\n                    <BaseMultiselectWithValidation\r\n                        v-else\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        :allow-empty=\"false\"\r\n                        v-model=\"editingItem.okedId\"\r\n                        :options=\"okeds.map(e => e.id)\"\r\n                        :label=\"$t('column.oked')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelOked\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                        :has-next-page=\"hasNextPageOked\"\r\n                        @reachedEndOfList=\"okedReachedEndOfList\"\r\n                        @search-change=\"debounceSearchOked\"\r\n                        :searchable=\"true\"\r\n                        preserve-search\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingOked\"\r\n                        :internal-search=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <b-row\r\n                v-if=\"isDominant\"\r\n                class=\"mb-3\"\r\n            >\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        not-required\r\n                        v-model=\"editingItem.tnvedId\"\r\n                        :options=\"tnveds.map(e => e.id)\"\r\n                        :label=\"$t('column.tnved_code')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelTnved\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                        :has-next-page=\"hasNextPageTnved\"\r\n                        @reachedEndOfList=\"tnvedReachedEndOfList\"\r\n                        @search-change=\"debounceSearchTnved\"\r\n                        :searchable=\"true\"\r\n                        preserve-search\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingTnved\"\r\n                        :internal-search=\"false\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        not-required\r\n                        v-model=\"editingItem.skpId\"\r\n                        :options=\"skps.map(e => e.id)\"\r\n                        :label=\"$t('column.skp_code')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelSkp\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                        :has-next-page=\"hasNextPageSkp\"\r\n                        @reachedEndOfList=\"skpReachedEndOfList\"\r\n                        @search-change=\"debounceSearchSkp\"\r\n                        :searchable=\"true\"\r\n                        preserve-search\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingSkp\"\r\n                        :internal-search=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        rules=\"required|positive\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.governmentPercentage\"\r\n                        :label=\"$t('column.government_percentage')\"\r\n                        :placeholder=\"$t('column.government_percentage')\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.unitId\"\r\n                        :options=\"units.map(el => el.id)\"\r\n                        :label=\"$t('column.unit')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelUnit\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <ValidationProvider\r\n                        v-if=\"isModeCreate\"\r\n                        name=\"supplementDoc\"\r\n                        rules=\"required\"\r\n                        mode=\"passive\"\r\n                    >\r\n                        <template v-slot:default=\"\">\r\n                            <BaseFileUploaderWithValidation\r\n                                class=\"required\"\r\n                                ref=\"supplementDocUploader\"\r\n                                v-model=\"editingItem.supplementDocs\"\r\n                                data-vv-name=\"supplementDocFile\"\r\n                                data-vv-as=\"SupplementDocFile\"\r\n                                :max-files=\"1\"\r\n                                :label-on-top=\"false\"\r\n                                :label=\"$t('column.ilova')\"\r\n                            ></BaseFileUploaderWithValidation>\r\n                        </template>\r\n                    </ValidationProvider>\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseTextareaWithValidation\r\n                        not-required\r\n                        v-model=\"editingItem.comment\"\r\n                        max-rows=\"8\"\r\n                        :label=\"$t('column.comment')\"\r\n                        :placeholder=\"$t('column.comment')\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <!-- PRICE_APPROVAL_BASIS -->\r\n            <b-row\r\n                v-if=\"isNatural\"\r\n                class=\"mb-3\"\r\n            >\r\n                <b-col cols=\"12\">\r\n                    <h5 class=\"m-0 text-center\">\r\n                        {{ $t('column.price_approval_basis') }}\r\n                    </h5>\r\n                    <hr class=\"my-2\">\r\n                </b-col>\r\n                <b-col\r\n                    v-for=\"(el, index) in editingItem.priceApprovalDtos\"\r\n                    :key=\"`price-approval-dto-${index}`\"\r\n                    cols=\"12\"\r\n                >\r\n                    <b-row class=\"mb-3\">\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <b-row>\r\n                                <b-col\r\n                                    sm=\"12\"\r\n                                    md=\"6\"\r\n                                >\r\n                                    <BaseDatePickerWithValidation\r\n                                        not-required\r\n                                        custom-styles=\"grid-template-columns: 40% 60%;\"\r\n                                        :label=\"$t('column.date')\"\r\n                                        disable-after\r\n                                        v-model=\"el.priceApprovalDate\"\r\n                                        lang=\"ru\"\r\n                                    ></BaseDatePickerWithValidation>\r\n                                </b-col>\r\n                                <b-col\r\n                                    sm=\"12\"\r\n                                    md=\"6\"\r\n                                >\r\n                                    <BaseDatePickerWithValidation\r\n                                        not-required\r\n                                        custom-styles=\"grid-template-columns: 40% 60%;\"\r\n                                        :label=\"$t('column.effective_date_price')\"\r\n                                        disable-after\r\n                                        v-model=\"el.priceEffectiveDate\"\r\n                                        lang=\"ru\"\r\n                                    ></BaseDatePickerWithValidation>\r\n                                </b-col>\r\n                            </b-row>\r\n\r\n                        </b-col>\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <BaseInputWithValidation\r\n                                not-required\r\n                                v-model=\"el.priceApprovalNumber\"\r\n                                :label=\"$t('column.number')\"\r\n                            />\r\n                        </b-col>\r\n                    </b-row>\r\n                    <b-row class=\"mb-3\">\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <ValidationProvider\r\n                                v-if=\"isModeCreate\"\r\n                                name=\"priceApprovalFiles\"\r\n                                rules=\"\"\r\n                                mode=\"passive\"\r\n                            >\r\n                                <template v-slot:default=\"\">\r\n                                    <BaseFileUploaderWithValidation\r\n                                        not-required\r\n                                        v-model=\"el.priceApprovalFiles\"\r\n                                        :max-files=\"5\"\r\n                                        :label-on-top=\"false\"\r\n                                        :label=\"$t('column.file')\"\r\n                                    ></BaseFileUploaderWithValidation>\r\n                                </template>\r\n                            </ValidationProvider>\r\n                        </b-col>\r\n\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <b-row>\r\n                                <b-col\r\n                                    cols=\"12\"\r\n                                    class=\"mb-3\"\r\n                                >\r\n                                    <BaseInputWithValidation\r\n                                        rules=\"positiveNotZero\"\r\n                                        v-model=\"el.currentPriceWithDuty\"\r\n                                        :label=\"$t('column.current_price_with_duty')\"\r\n                                    />\r\n                                </b-col>\r\n                                <b-col\r\n                                    cols=\"12\"\r\n                                    class=\"mb-3\"\r\n                                >\r\n                                    <BaseInputWithValidation\r\n                                        rules=\"positiveNotZero\"\r\n                                        v-model=\"el.currentPriceWithoutDuty\"\r\n                                        :label=\"$t('column.current_price_without_duty')\"\r\n                                    />\r\n                                </b-col>\r\n                                <b-col\r\n                                    sm=\"12\"\r\n                                    md=\"10\"\r\n                                    class=\"mb-3\"\r\n                                >\r\n                                    <BaseTextareaWithValidation\r\n                                        not-required\r\n                                        v-model=\"el.additionalInformation\"\r\n                                        custom-styles=\"grid-template-columns: 30% 70%;\"\r\n                                        :label=\"$t('column.additional_info')\"\r\n                                    />\r\n                                </b-col>\r\n                                <b-col\r\n                                    sm=\"12\"\r\n                                    md=\"2\"\r\n                                    class=\"d-flex align-items-start justify-content-end\"\r\n                                >\r\n                                    <b-btn\r\n                                        v-if=\"index == editingItem.priceApprovalDtos.length - 1\"\r\n                                        variant=\"success\"\r\n                                        class=\"mr-2\"\r\n                                        size=\"sm\"\r\n                                        @click=\"addPriceApprovalDto\"\r\n                                    ><i class=\"mdi mdi-plus\"></i></b-btn>\r\n                                    <b-btn\r\n                                        v-if=\"editingItem.priceApprovalDtos.length > 1\"\r\n                                        variant=\"danger\"\r\n                                        size=\"sm\"\r\n                                        @click=\"editingItem.priceApprovalDtos.splice(index, 1)\"\r\n                                    ><i class=\"mdi mdi-trash-can\"></i></b-btn>\r\n                                </b-col>\r\n                            </b-row>\r\n                        </b-col>\r\n                    </b-row>\r\n                    <hr class=\"my-2\">\r\n                </b-col>\r\n            </b-row>\r\n            <!-- <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <b-row>\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <BaseDatePickerWithValidation\r\n                                not-required\r\n                                custom-styles=\"grid-template-columns: 40% 60%;\"\r\n                                :label=\"$t('column.date')\"\r\n                                disable-after\r\n                                v-model=\"editingItem.priceApprovalDate\"\r\n                                lang=\"ru\"\r\n                            ></BaseDatePickerWithValidation>\r\n                        </b-col>\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <BaseDatePickerWithValidation\r\n                                not-required\r\n                                custom-styles=\"grid-template-columns: 40% 60%;\"\r\n                                :label=\"$t('column.effective_date_price')\"\r\n                                disable-after\r\n                                v-model=\"editingItem.priceEffectiveDate\"\r\n                                lang=\"ru\"\r\n                            ></BaseDatePickerWithValidation>\r\n                        </b-col>\r\n                    </b-row>\r\n\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        v-model=\"editingItem.priceApprovalNumber\"\r\n                        :label=\"$t('column.number')\"\r\n                    />\r\n                </b-col> -->\r\n            <!-- <b-row\r\n                v-if=\"isNatural\"\r\n                class=\"mb-3\"\r\n            >\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <ValidationProvider\r\n                        v-if=\"isModeCreate\"\r\n                        name=\"priceApprovalFiles\"\r\n                        rules=\"\"\r\n                        mode=\"passive\"\r\n                    >\r\n                        <template v-slot:default=\"\">\r\n                            <BaseFileUploaderWithValidation\r\n                                not-required\r\n                                v-model=\"editingItem.priceApprovalFiles\"\r\n                                :max-files=\"5\"\r\n                                :label-on-top=\"false\"\r\n                                :label=\"$t('column.file')\"\r\n                            ></BaseFileUploaderWithValidation>\r\n                        </template>\r\n                    </ValidationProvider>\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <b-row>\r\n                        <b-col\r\n                            cols=\"12\"\r\n                            class=\"mb-3\"\r\n                        >\r\n                            <BaseInputWithValidation\r\n                                rules=\"positiveNotZero\"\r\n                                v-model=\"editingItem.currentPriceWithDuty\"\r\n                                :label=\"$t('column.current_price_with_duty')\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col\r\n                            cols=\"12\"\r\n                            class=\"mb-3\"\r\n                        >\r\n                            <BaseInputWithValidation\r\n                                rules=\"positiveNotZero\"\r\n                                v-model=\"editingItem.currentPriceWithoutDuty\"\r\n                                :label=\"$t('column.current_price_without_duty')\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col\r\n                            cols=\"12\"\r\n                            class=\"mb-3\"\r\n                        >\r\n                            <BaseTextareaWithValidation\r\n                                not-required\r\n                                v-model=\"editingItem.additionalInformation\"\r\n                                :label=\"$t('column.additional_info')\"\r\n                            />\r\n                        </b-col>\r\n                    </b-row>\r\n                </b-col>\r\n                <hr class=\"my-2\">\r\n            </b-row> -->\r\n            <!-- END OF PRICE_APPROVAL_BASIS FORM -->\r\n            <!-- ANNOUNCED_MEDIA_DTO -->\r\n            <b-row\r\n                v-if=\"isNatural\"\r\n                class=\"mb-3\"\r\n            >\r\n                <b-col cols=\"12\">\r\n                    <h5 class=\"m-0 text-center\">\r\n                        {{ $t('column.announced_media') }}\r\n                    </h5>\r\n                    <hr class=\"my-2\">\r\n                </b-col>\r\n\r\n                <b-col\r\n                    v-for=\"(el, index) in editingItem.announcedMediaDtos\"\r\n                    :key=\"`announced-media-${index}`\"\r\n                    cols=\"12\"\r\n                >\r\n                    <b-row class=\"mb-3\">\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <BaseInputWithValidation\r\n                                not-required\r\n                                v-model=\"el.announcedMediaName\"\r\n                                :label=\"$t('column.name')\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <BaseInputWithValidation\r\n                                not-required\r\n                                v-model=\"el.announcedMediaLink\"\r\n                                :label=\"$t('column.link')\"\r\n                            />\r\n                        </b-col>\r\n                    </b-row>\r\n                    <b-row class=\"mb-3\">\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <ValidationProvider\r\n                                v-if=\"isModeCreate\"\r\n                                name=\"annuncedMediaFiles\"\r\n                                rules=\"\"\r\n                                mode=\"passive\"\r\n                            >\r\n                                <template v-slot:default=\"\">\r\n                                    <BaseFileUploaderWithValidation\r\n                                        not-required\r\n                                        v-model=\"el.announcedMediaFiles\"\r\n                                        :max-files=\"10\"\r\n                                        :label-on-top=\"false\"\r\n                                        :label=\"$t('column.files')\"\r\n                                    ></BaseFileUploaderWithValidation>\r\n                                </template>\r\n                            </ValidationProvider>\r\n                        </b-col>\r\n\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"5\"\r\n                        >\r\n                            <BaseDatePickerWithValidation\r\n                                not-required\r\n                                custom-styles=\"grid-template-columns: 30% 70%;\"\r\n                                :label=\"$t('column.date')\"\r\n                                disable-after\r\n                                v-model=\"el.announcedMediaDate\"\r\n                                lang=\"ru\"\r\n                            ></BaseDatePickerWithValidation>\r\n                        </b-col>\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"1\"\r\n                            class=\"d-flex align-items-start justify-content-end\"\r\n                        >\r\n                            <b-btn\r\n                                v-if=\"index == editingItem.announcedMediaDtos.length - 1\"\r\n                                variant=\"success\"\r\n                                class=\"mr-2\"\r\n                                size=\"sm\"\r\n                                @click=\"addAnnouncedMediaDto\"\r\n                            ><i class=\"mdi mdi-plus\"></i></b-btn>\r\n                            <b-btn\r\n                                v-if=\"editingItem.announcedMediaDtos.length > 1\"\r\n                                variant=\"danger\"\r\n                                size=\"sm\"\r\n                                @click=\"editingItem.announcedMediaDtos.splice(index, 1)\"\r\n                            ><i class=\"mdi mdi-trash-can\"></i></b-btn>\r\n                        </b-col>\r\n                    </b-row>\r\n                    <hr class=\"my-2\">\r\n                </b-col>\r\n            </b-row>\r\n            <!-- END OF ANNOUNCED_MEDIA_DTO FORM -->\r\n\r\n            <!-- COMMISSION_APPLICATION_DTO -->\r\n            <b-row class=\"mb-3\">\r\n                <b-col cols=\"12\">\r\n                    <h5 class=\"m-0 text-center\">\r\n                        {{ $t('column.commission_applications') }}\r\n                    </h5>\r\n                    <hr class=\"my-2\">\r\n                </b-col>\r\n\r\n                <b-col\r\n                    v-for=\"(el, index) in editingItem.commissionApplicationDtos\"\r\n                    :key=\"`commission-application-${index}`\"\r\n                    cols=\"12\"\r\n                >\r\n                    <b-row class=\"mb-3\">\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <BaseDatePickerWithValidation\r\n                                not-required\r\n                                :label=\"$t('column.date')\"\r\n                                disable-after\r\n                                v-model=\"el.commencementDate\"\r\n                                lang=\"ru\"\r\n                            ></BaseDatePickerWithValidation>\r\n                        </b-col>\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <BaseInputWithValidation\r\n                                not-required\r\n                                v-model=\"el.commencementNumber\"\r\n                                :label=\"$t('column.number')\"\r\n                            />\r\n                        </b-col>\r\n                    </b-row>\r\n                    <b-row class=\"mb-3\">\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <BaseInputWithValidation\r\n                                not-required\r\n                                v-model=\"el.initiatorName\"\r\n                                :label=\"$t('column.initiator')\"\r\n                            />\r\n                        </b-col>\r\n\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <BaseInputWithValidation\r\n                                not-required\r\n                                v-model=\"el.completionWorkType\"\r\n                                :label=\"$t('column.finishing_type')\"\r\n                            />\r\n                        </b-col>\r\n                    </b-row>\r\n                    <b-row class=\"mb-3\">\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <BaseInputWithValidation\r\n                                rules=\"positiveNotZero\"\r\n                                v-model=\"el.instructionAmount\"\r\n                                :label=\"$t('column.showcase_amount')\"\r\n                            />\r\n                        </b-col>\r\n\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"6\"\r\n                        >\r\n                            <BaseInputWithValidation\r\n                                rules=\"positiveNotZero\"\r\n                                v-model=\"el.residueAmount\"\r\n                                :label=\"$t('column.remainder_amount')\"\r\n                            />\r\n                        </b-col>\r\n                    </b-row>\r\n                    <b-row class=\"mb-3\">\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"5\"\r\n                        >\r\n                            <BaseDatePickerWithValidation\r\n                                not-required\r\n                                :label=\"$t('column.finishing_date')\"\r\n                                custom-styles=\"grid-template-columns: 30% 70%;\"\r\n                                disable-after\r\n                                v-model=\"el.completionWorkDate\"\r\n                                lang=\"ru\"\r\n                            ></BaseDatePickerWithValidation>\r\n                        </b-col>\r\n                        <b-col\r\n                            sm=\"12\"\r\n                            md=\"1\"\r\n                            class=\"d-flex align-items-start justify-content-end\"\r\n                        >\r\n                            <b-btn\r\n                                v-if=\"index == editingItem.commissionApplicationDtos.length - 1\"\r\n                                variant=\"success\"\r\n                                class=\"mr-2\"\r\n                                size=\"sm\"\r\n                                @click=\"addCommissionApplicationDto\"\r\n                            ><i class=\"mdi mdi-plus\"></i></b-btn>\r\n                            <b-btn\r\n                                v-if=\"editingItem.commissionApplicationDtos.length > 1\"\r\n                                variant=\"danger\"\r\n                                size=\"sm\"\r\n                                @click=\"editingItem.commissionApplicationDtos.splice(index, 1)\"\r\n                            ><i class=\"mdi mdi-trash-can\"></i></b-btn>\r\n                        </b-col>\r\n                    </b-row>\r\n                    <hr class=\"my-2\">\r\n                </b-col>\r\n            </b-row>\r\n            <!-- END OF COMMISSION_APPLICATION_DTO FORM -->\r\n        </ValidationObserver>\r\n    </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'reestr/contractor-reestr-documents'\r\nconst APPEND_API_URL_NATURAL = 'estestveniy'\r\nconst APPEND_API_URL_DOMINANT = 'daminiriushiy'\r\nconst OKED_API_URL = 'reestr/info-oked'\r\nconst SKP_API_URL = 'reestr/info-skp'\r\nconst TNVED_API_URL = 'reestr/info-tnved'\r\nconst PRICE_APPROVAL_API_URL = 'reestr/contractor-reestr-documents/get/price-approval'\r\nconst ANNOUNCED_MEDIA_API_URL = 'reestr/contractor-reestr-documents/get/announced-media'\r\nconst COMMISSION_APPLICATION_API_URL = 'reestr/contractor-reestr-documents/get/commission-application'\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport helperService from \"@/shared/services/helper.service\"\r\n\r\nexport default {\r\n    name: \"CreateOrUpdate\",\r\n    /*\r\n    * COMPONENTS */\r\n    components: {},\r\n    /*\r\n    * DATA */\r\n    data () {\r\n        return {\r\n            editingItem: {},\r\n            publicPath: process.env.BASE_URL,\r\n            defaultCommissionApplicationDto: {},\r\n            defaultAnnouncedMediaDto: {},\r\n            defaultPriceApprovalDto: {},\r\n            regions: [],\r\n            districts: [],\r\n            hasNextPageContractors: false,\r\n            hasNextPageProductOrServices: false,\r\n            contractors: [],\r\n            debounce: null,\r\n            isLoadingContractors: false,\r\n            isLoadingProductOrServices: false,\r\n            contractorSearchPayload: {},\r\n            productOrServicesSearchPayload: {},\r\n            productTypes: [],\r\n            products: [],\r\n            units: [],\r\n            // OKED VARIABLES\r\n            okeds: [],\r\n            hasNextPageOked: false,\r\n            isLoadingOked: false,\r\n            okedSearchPayload: {},\r\n            // ----------------\r\n            // SKP VARIABLES\r\n            skps: [],\r\n            hasNextPageSkp: false,\r\n            isLoadingSkp: false,\r\n            skpSearchPayload: {},\r\n            // ----------------\r\n            // TNVED VARIABLES\r\n            tnveds: [],\r\n            hasNextPageTnved: false,\r\n            isLoadingTnved: false,\r\n            tnvedSearchPayload: {},\r\n            // ----------------\r\n            contractorCreateModal: false,\r\n            groupOfIndividuals: []\r\n        }\r\n    },\r\n    /*\r\n    * COMPUTED */\r\n    computed: {\r\n        computedObserver () {\r\n            return this.$refs.observer\r\n        },\r\n        isModeCreate () {\r\n            return this.$route.name === 'CreateNaturalContractorReestr' || this.$route.name === 'CreateDominantContractorReestr'\r\n        },\r\n        isDominant () {\r\n            return this.$route.name === 'CreateDominantContractorReestr' || this.$route.name === 'UpdateDominantContractorReestr'\r\n        },\r\n        isNatural () {\r\n            return this.$route.name === 'CreateNaturalContractorReestr' || this.$route.name === 'UpdateNaturalContractorReestr'\r\n        },\r\n        contractorHasParent () {\r\n            let contractor = this.contractors.find(el => el.id == this.editingItem.contractorId)\r\n            if (contractor) {\r\n                return contractor.parent\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * METHODS */\r\n    methods: {\r\n        save () {\r\n            this.computedObserver.validate().then(async valid => {\r\n                if (valid) {\r\n                    if (this.isDominant && !this.editingItem.okedId && !this.editingItem.skpId) {\r\n                        this.$toast(this.$t('messages.oked_or_skp_is_required'), { type: 'error' });\r\n                        return\r\n                    }\r\n                    if (!this.isDominant || !this.editingItem.isRepublic && this.contractorHasParent) {\r\n                        this.editingItem.isGroup = false\r\n                    }\r\n                    let tmpPriceApprovalFiles = (this.editingItem.priceApprovalFiles && this.editingItem.priceApprovalFiles.length) ? JSON.parse(JSON.stringify(this.editingItem.priceApprovalFiles)) : []\r\n                    let tmpProductOrServices = JSON.parse(JSON.stringify(this.editingItem.directoryProductOrServiceId))\r\n                    let tmpAnnouncedMedia = JSON.parse(JSON.stringify(this.editingItem.announcedMediaDtos))\r\n                    let tmpPriceApprovalDtos = JSON.parse(JSON.stringify(this.editingItem.priceApprovalDtos))\r\n                    let tmpCommissions = JSON.parse(JSON.stringify(this.editingItem.commissionApplicationDtos))\r\n                    if (this.editingItem.id) {\r\n                        let payload = await this.makeAndReturnFormDataForBase64()\r\n                        helperService.updateReestr(MAIN_API_URL, payload, `for-acceptance-${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}/${this.editingItem.id}`, true).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    } else {\r\n                        let payload = await this.makeAndReturnFormDataForBase64()\r\n                        crudAndListsService.create(MAIN_API_URL, payload,\r\n                            `for-acceptance-${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}`, true).then(res => {\r\n                                this.computedObserver.reset()\r\n                                this.editingItem = Object.assign({}, {});\r\n                                this.$router.go(-1)\r\n                                this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                            })\r\n                            .catch(e => {\r\n                                this.editingItem.directoryProductOrServiceId = JSON.parse(JSON.stringify(tmpProductOrServices))\r\n                                this.editingItem.commissionApplicationDtos = JSON.parse(JSON.stringify(tmpCommissions))\r\n                                this.editingItem.announcedMediaDtos = JSON.parse(JSON.stringify(tmpAnnouncedMedia))\r\n                                this.editingItem.priceApprovalDtos = JSON.parse(JSON.stringify(tmpPriceApprovalDtos))\r\n                                this.editingItem.priceApprovalFiles = JSON.parse(JSON.stringify(tmpPriceApprovalFiles))\r\n                            })\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        },\r\n        async setFilesFromServer () {\r\n            // ILOVA\r\n            fetch(this.publicPath + this.editingItem.fileUrl)\r\n                .then((res) => res.blob())\r\n                .then((myBlob) => {\r\n                    myBlob.name = f.name;\r\n                    myBlob.lastModified = new Date();\r\n                    const myFile = new File([myBlob], f.name, {\r\n                        type: myBlob.type,\r\n                    });\r\n\r\n                    let url = this.publicPath + f.url;\r\n                    this.$refs.supplementDocUploader.$refs.dropzone.manuallyAddFile(myFile, url);\r\n                })\r\n                .catch(e => console.log(e));\r\n\r\n            // this.editingItem.objectPhotoList.forEach(f => {\r\n            //     fetch(this.publicPath + f.url)\r\n            //         .then((res) => res.blob())\r\n            //         .then((myBlob) => {\r\n            //             myBlob.name = f.name;\r\n            //             myBlob.lastModified = new Date();\r\n            //             const myFile = new File([myBlob], f.name, {\r\n            //                 type: myBlob.type,\r\n            //             });\r\n\r\n            //             let url = this.publicPath + f.url;\r\n            //             this.$refs.photosUploader.$refs.dropzone.manuallyAddFile(myFile, url);\r\n            //         })\r\n            //         .catch(e => console.log(e));\r\n            // })\r\n        },\r\n        async regionSelected ($event, dontResetDistrict = false) {\r\n            if (!dontResetDistrict) {\r\n                this.editingItem.districtIds = []\r\n            }\r\n            // GET DISTRICTS\r\n            if ($event)\r\n                await helperService.getGeoLocationsByParentId($event)\r\n                    .then(res => {\r\n                        this.districts = res.data\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n        },\r\n        addCommissionApplicationDto () {\r\n            let tmp = Object.assign({}, this.defaultCommissionApplicationDto)\r\n            this.editingItem.commissionApplicationDtos.push(tmp)\r\n        },\r\n        addAnnouncedMediaDto () {\r\n            let tmp = Object.assign({}, this.defaultAnnouncedMediaDto)\r\n            this.editingItem.announcedMediaDtos.push(tmp)\r\n        },\r\n        addPriceApprovalDto () {\r\n            let tmp = Object.assign({}, this.defaultPriceApprovalDto)\r\n            this.editingItem.priceApprovalDtos.push(tmp)\r\n        },\r\n        newRefCreated (formName) {\r\n            if (formName == 'CreateFormContractor') {\r\n                this.fetchContractorsWithKeyword('', true)\r\n            }\r\n        },\r\n        /* makeAndReturnQueryParams () {\r\n            let queryString = `contractorId=${this.editingItem.contractorId}\r\n                         &directoryProductOrServiceTypeId=${this.editingItem.directoryProductOrServiceTypeId}\r\n                         &governmentPercentage=${this.editingItem.governmentPercentage}\r\n                         &orderNumber=${this.editingItem.orderNumber}\r\n                         &reestrAcceptedDate=${this.editingItem.reestrAcceptedDate}`\r\n            this.editingItem.directoryProductOrServiceId.forEach(id => {\r\n                queryString += `&directoryProductOrServiceId=${id}`\r\n            })\r\n            return queryString\r\n        }, */\r\n        getBase64 (file) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n                reader.onload = () => resolve(reader.result);\r\n                reader.onerror = error => reject(error);\r\n            });\r\n        },\r\n        async makeAndReturnFormDataForBase64 () {\r\n            // this.editingItem.supplementDocs = this.editingItem.supplementDocs.map(f => f.file.dataURL)\r\n            let vm = this\r\n            /* if (this.editingItem.priceApprovalFiles && this.editingItem.priceApprovalFiles.length) {\r\n                if (this.editingItem.priceApprovalFiles[0].file.dataURL) {\r\n                    this.editingItem.priceApprovalFiles = this.editingItem.priceApprovalFiles[0].file.dataURL\r\n                } else {\r\n                    let res = await this.getBase64(this.editingItem.priceApprovalFiles[0].file)\r\n                    this.editingItem.priceApprovalFiles = res\r\n                }\r\n            } */\r\n            /* let base64PriceFiles = []\r\n            if (this.editingItem.priceApprovalFiles) {\r\n                this.editingItem.priceApprovalFiles.forEach(async f => {\r\n                    if (f.file.dataURL) {\r\n                        base64PriceFiles.push(f.file.dataURL)\r\n                    } else {\r\n                        let res = await this.getBase64(f.file)\r\n                        base64PriceFiles.push(res)\r\n                    }\r\n                })\r\n            }\r\n            this.editingItem.priceApprovalFiles = base64PriceFiles */\r\n            /* this.editingItem.priceApprovalFiles = this.editingItem.priceApprovalFiles ? this.editingItem.priceApprovalFiles.map(async function (f) {\r\n                let url = null\r\n                if (f.file.dataURL) {\r\n                    url = f.file.dataURL\r\n                } else {\r\n                    let res = await vm.getBase64(f.file)\r\n                    url = res\r\n                }\r\n                return url\r\n            }) : [] */\r\n            this.editingItem.announcedMediaDtos = await this.editingItem.announcedMediaDtos.filter(el => {\r\n                if (el.announcedMediaName) {\r\n                    let base64AnnouncementFiles = []\r\n                    if (el.announcedMediaFiles) {\r\n                        el.announcedMediaFiles.forEach(async f => {\r\n                            if (f.file.dataURL) {\r\n                                base64AnnouncementFiles.push(f.file.dataURL)\r\n                            } else {\r\n                                let res = await this.getBase64(f.file)\r\n                                base64AnnouncementFiles.push(res)\r\n                            }\r\n                        })\r\n                    }\r\n                    el.announcedMediaFiles = base64AnnouncementFiles\r\n                    /* el.announcedMediaFiles = el.announcedMediaFiles ? el.announcedMediaFiles.map(async function (f) {\r\n                        let url = null\r\n                        if (f.file.dataURL) {\r\n                            url = f.file.dataURL\r\n                        } else {\r\n                            let res = await vm.getBase64(f.file)\r\n                            url = res\r\n                        }\r\n                        return url\r\n                    }) : [] */\r\n                    return el\r\n                }\r\n            })\r\n\r\n            this.editingItem.priceApprovalDtos = await this.editingItem.priceApprovalDtos.filter(el => {\r\n                if (el.priceApprovalNumber) {\r\n                    let base64PriceApprovalFiles = []\r\n                    if (el.priceApprovalFiles) {\r\n                        el.priceApprovalFiles.forEach(async f => {\r\n                            if (f.file.dataURL) {\r\n                                base64PriceApprovalFiles.push(f.file.dataURL)\r\n                            } else {\r\n                                let res = await this.getBase64(f.file)\r\n                                base64PriceApprovalFiles.push(res)\r\n                            }\r\n                        })\r\n                    }\r\n                    el.priceApprovalFiles = base64PriceApprovalFiles\r\n                    return el\r\n                }\r\n            })\r\n\r\n            this.editingItem.commissionApplicationDtos = this.editingItem.commissionApplicationDtos.filter(el => {\r\n                if (el.commencementNumber && el.initiatorName) {\r\n                    return el\r\n                }\r\n            })\r\n            // this.editingItem.okedIds = []\r\n            // this.editingItem.directoryProductOrServiceId = this.editingItem.directoryProductOrServiceId.map(el => {\r\n            //     this.editingItem.okedIds.push(el.okedId)\r\n            //     return el.id\r\n            // })\r\n            if (this.editingItem.supplementDocs && this.editingItem.supplementDocs[0].file.dataURL) {\r\n                this.editingItem.file = this.editingItem.supplementDocs[0].file.dataURL\r\n                // delete this.editingItem.supplementDocs\r\n                return this.editingItem\r\n            } else if (this.editingItem.supplementDocs) {\r\n                let res = await this.getBase64(this.editingItem.supplementDocs[0].file)\r\n                this.editingItem.file = res\r\n                // delete this.editingItem.supplementDocs\r\n                return this.editingItem\r\n                /* this.getBase64(this.editingItem.supplementDocs[0].file).then(data => {\r\n                    \r\n                }) */\r\n            } else {\r\n                return this.editingItem\r\n            }\r\n\r\n        },\r\n        customLabelRegion (opt) {\r\n            let selected = this.regions.find(e => e.regionId == (opt.regionId ? opt.regionId : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.regionNameRu,\r\n                    nameLt: selected.regionNameLt,\r\n                    nameUz: selected.regionNameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelDistrict (opt) {\r\n            let selectedDistrict = this.districts.find(e => e.id == opt);\r\n            if (selectedDistrict) {\r\n                return `${this.getName({\r\n                    nameRu: selectedDistrict.nameRu,\r\n                    nameLt: selectedDistrict.nameLt,\r\n                    nameUz: selectedDistrict.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelProduct (opt) {\r\n            let selected = this.products.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelUnit (opt) {\r\n            let selected = this.units.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelGroupOfIndividuals (opt) {\r\n            let selected = this.groupOfIndividuals.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${selected.name}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelProductType (opt) {\r\n            let selected = this.productTypes.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        async productTypeSelected ($event, dontResetDistrict = false) {\r\n            if (!dontResetDistrict) {\r\n                this.products = []\r\n                this.editingItem.directoryProductOrServiceId = null\r\n                this.productOrServicesSearchPayload.page = 1\r\n            }\r\n            if ($event) {\r\n                // GET PRODUCT_OR_SERVICES\r\n                await this.fetchProductOrServices($event)\r\n                // await helperService.getProductsByProdectTypeId($event)\r\n                //     .then(res => {\r\n                //         this.products = res.data\r\n                //     })\r\n                //     .catch(e => {\r\n                //         this.products = []\r\n                //         console.log(e)\r\n                //     })\r\n            }\r\n        },\r\n        contractorReachedEndOfList (e) {\r\n            if (e && !this.isLoadingContractors) {\r\n                this.fetchContractors()\r\n            }\r\n        },\r\n        productOrServicesReachedEndOfList (e) {\r\n            if (e) {\r\n                this.fetchProductOrServices(this.editingItem.directoryProductOrServiceTypeId)\r\n            }\r\n        },\r\n        customLabelContractor (opt) {\r\n            let selected = this.contractors.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${selected.fullName}`\r\n            }\r\n            return ``;\r\n        },\r\n        async debounceSearchProductOrServices (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchProductOrServicesWithKeyword(searchText);\r\n            }, 1000);\r\n        },\r\n        async debounceSearchContractors (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchContractorsWithKeyword(searchText);\r\n            }, 1000);\r\n        },\r\n        fetchProductOrServicesWithKeyword (keyword) {\r\n            this.products = []\r\n            this.productOrServicesSearchPayload.page = 1\r\n            this.productOrServicesSearchPayload.keyword = keyword ? keyword : ''\r\n            this.fetchProductOrServices(this.editingItem.directoryProductOrServiceTypeId)\r\n        },\r\n        // OKED METHODS\r\n        okedReachedEndOfList (e) {\r\n            if (e) {\r\n                this.fetchOkeds()\r\n            }\r\n        },\r\n        async debounceSearchOked (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchOkedsWithKeyword(searchText);\r\n            }, 1000);\r\n        },\r\n        fetchOkedsWithKeyword (keyword) {\r\n            this.okeds = []\r\n            this.okedSearchPayload.page = 1\r\n            this.okedSearchPayload.keyword = keyword ? keyword : ''\r\n            this.fetchOkeds()\r\n        },\r\n        async fetchOkeds () {\r\n            this.isLoadingOked = true\r\n            await crudAndListsService.searchListWithKeyword(OKED_API_URL, this.okedSearchPayload)\r\n                .then(res => {\r\n                    this.okeds.push(...res.data.list)\r\n                    this.hasNextPageOked = res.data.total / this.okedSearchPayload.itemsPerPage > this.okedSearchPayload.page\r\n                    this.okedSearchPayload.page += 1\r\n                    if (!this.isModeCreate && this.editingItem.okedId) {\r\n                        let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                        if (!foundItm && this.editingItem.infoOkedDto) {\r\n                            this.okeds.push(this.editingItem.infoOkedDto)\r\n                        }\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    this.okeds = []\r\n                })\r\n                .finally(() => {\r\n                    this.isLoadingOked = false\r\n                })\r\n        },\r\n        customLabelOked (opt) {\r\n            let selected = this.okeds.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${selected.code} - ${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        // --------------------------\r\n\r\n        // SKP METHODS\r\n        skpReachedEndOfList (e) {\r\n            if (e) {\r\n                this.fetchSkps()\r\n            }\r\n        },\r\n        async debounceSearchSkp (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchSkpsWithKeyword(searchText);\r\n            }, 1000);\r\n        },\r\n        fetchSkpsWithKeyword (keyword) {\r\n            this.skps = []\r\n            this.skpSearchPayload.page = 1\r\n            this.skpSearchPayload.keyword = keyword ? keyword : ''\r\n            this.fetchSkps()\r\n        },\r\n        async fetchSkps () {\r\n            this.isLoadingSkp = true\r\n            await crudAndListsService.searchListWithKeyword(SKP_API_URL, this.skpSearchPayload)\r\n                .then(res => {\r\n                    this.skps.push(...res.data.list)\r\n                    this.hasNextPageSkp = res.data.total / this.skpSearchPayload.itemsPerPage > this.skpSearchPayload.page\r\n                    this.skpSearchPayload.page += 1\r\n                    if (!this.isModeCreate && this.editingItem.skpId) {\r\n                        let foundItm = this.skps.find(el => el.id == this.editingItem.skpId)\r\n                        if (!foundItm && this.editingItem.infoSKPDto) {\r\n                            this.skps.push(this.editingItem.infoSKPDto)\r\n                        }\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    this.skps = []\r\n                })\r\n                .finally(() => {\r\n                    this.isLoadingSkp = false\r\n                })\r\n        },\r\n        customLabelSkp (opt) {\r\n            let selected = this.skps.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${selected.code} - ${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        // --------------------------\r\n\r\n        // TNVED METHODS\r\n        tnvedReachedEndOfList (e) {\r\n            if (e) {\r\n                this.fetchTnveds()\r\n            }\r\n        },\r\n        async debounceSearchTnved (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchTnvedsWithKeyword(searchText);\r\n            }, 1000);\r\n        },\r\n        fetchTnvedsWithKeyword (keyword) {\r\n            this.tnveds = []\r\n            this.tnvedSearchPayload.page = 1\r\n            this.tnvedSearchPayload.keyword = keyword ? keyword : ''\r\n            this.fetchTnveds()\r\n        },\r\n        async fetchTnveds () {\r\n            this.isLoadingTnved = true\r\n            await crudAndListsService.searchListWithKeyword(TNVED_API_URL, this.tnvedSearchPayload)\r\n                .then(res => {\r\n                    this.tnveds.push(...res.data.list)\r\n                    this.hasNextPageTnved = res.data.total / this.tnvedSearchPayload.itemsPerPage > this.tnvedSearchPayload.page\r\n                    this.tnvedSearchPayload.page += 1\r\n                    if (!this.isModeCreate && this.editingItem.tnvedId) {\r\n                        let foundItm = this.tnveds.find(el => el.id == this.editingItem.tnvedId)\r\n                        if (!foundItm && this.editingItem.infoTNVEDDto) {\r\n                            this.tnveds.push(this.editingItem.infoTNVEDDto)\r\n                        }\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    this.tnveds = []\r\n                })\r\n                .finally(() => {\r\n                    this.isLoadingTnved = false\r\n                })\r\n        },\r\n        customLabelTnved (opt) {\r\n            let selected = this.tnveds.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${selected.code} - ${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        // --------------------------\r\n        async fetchProductOrServices (typeId) {\r\n            this.isLoadingProductOrServices = true\r\n            await helperService.getProductOrServicesByTypeId(typeId, this.productOrServicesSearchPayload)\r\n                .then(res => {\r\n                    this.products.push(...res.data.list)\r\n                    this.hasNextPageProductOrServices = res.data.total / this.productOrServicesSearchPayload.itemsPerPage > this.productOrServicesSearchPayload.page\r\n                    this.productOrServicesSearchPayload.page += 1\r\n                    if (!this.isModeCreate && this.editingItem.directoryProductOrServiceId) {\r\n                        let foundItm = this.products.find(el => el.id == this.editingItem.directoryProductOrServiceId)\r\n                        if (!foundItm && this.editingItem.directoryProductOrServiceDto) {\r\n                            this.products.push(this.editingItem.directoryProductOrServiceDto)\r\n                        }\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    this.products = []\r\n                })\r\n                .finally(() => {\r\n                    this.isLoadingProductOrServices = false\r\n                })\r\n        },\r\n        fetchContractorsWithKeyword (keyword, makeFirstSelected = false) {\r\n            this.contractors = []\r\n            this.contractorSearchPayload.page = 1\r\n            this.contractorSearchPayload.keyword = keyword ? keyword : ''\r\n            // this.contractorSearchPayload.sortBy = []\r\n            // this.contractorSearchPayload.sortBy.push('created')\r\n            // this.contractorSearchPayload.sortDesc = []\r\n            // this.contractorSearchPayload.sortDesc.push(false)\r\n            this.fetchContractors(makeFirstSelected)\r\n        },\r\n        async fetchContractors (makeFirstSelected) {\r\n            this.contractorSearchPayload.sortBy = []\r\n            this.contractorSearchPayload.sortBy.push('created')\r\n            this.contractorSearchPayload.sortDesc = []\r\n            this.contractorSearchPayload.sortDesc.push(true)\r\n            this.isLoadingContractors = true\r\n            await crudAndListsService.searchListWithKeyword('contractor', this.contractorSearchPayload, 'by-contractor')\r\n                .then(res => {\r\n                    this.contractors.push(...res.data.list)\r\n                    this.hasNextPageContractors = res.data.total / this.contractorSearchPayload.itemsPerPage > this.contractorSearchPayload.page\r\n                    this.contractorSearchPayload.page += 1\r\n                    if (makeFirstSelected) {\r\n                        this.editingItem.contractorId = this.contractors.length ? this.contractors[0].id : null\r\n                    }\r\n                    if (!this.isModeCreate && this.editingItem.contractorId) {\r\n                        let contractorFound = this.contractors.find(el => el.id == this.editingItem.contractorId)\r\n                        if (!contractorFound && this.editingItem.contractorDto) {\r\n                            this.contractors.push(this.editingItem.contractorDto)\r\n                        }\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    this.contractors = []\r\n                })\r\n                .finally(() => {\r\n                    this.isLoadingContractors = false\r\n                })\r\n        },\r\n    },\r\n    /*\r\n    * CREATED */\r\n    async created () {\r\n        this.contractorSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        this.productOrServicesSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        this.okedSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        this.skpSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        this.tnvedSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        this.var_default_search_payload.itemsPerPage = 500\r\n        if (this.isModeCreate) {\r\n            await crudAndListsService.getEmpty(MAIN_API_URL)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                    crudAndListsService.getEmptyCustomUrl(`${ANNOUNCED_MEDIA_API_URL}/empty`)\r\n                        .then(res => {\r\n                            this.defaultAnnouncedMediaDto = res.data\r\n                            if (!this.editingItem.announcedMediaDtos || !this.editingItem.announcedMediaDtos.length) {\r\n                                this.editingItem.announcedMediaDtos = []\r\n                                let tmp = Object.assign({}, this.defaultAnnouncedMediaDto)\r\n                                this.editingItem.announcedMediaDtos.push(tmp)\r\n                            }\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                        })\r\n\r\n                    crudAndListsService.getEmptyCustomUrl(`${PRICE_APPROVAL_API_URL}/empty`)\r\n                        .then(res => {\r\n                            this.defaultPriceApprovalDto = res.data\r\n                            if (!this.editingItem.priceApprovalDtos || !this.editingItem.priceApprovalDtos.length) {\r\n                                this.editingItem.priceApprovalDtos = []\r\n                                let tmp = Object.assign({}, this.defaultPriceApprovalDto)\r\n                                this.editingItem.priceApprovalDtos.push(tmp)\r\n                            }\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                        })\r\n\r\n                    crudAndListsService.getEmptyCustomUrl(`${COMMISSION_APPLICATION_API_URL}/empty`)\r\n                        .then(res => {\r\n                            this.defaultCommissionApplicationDto = res.data\r\n                            if (!this.editingItem.commissionApplicationDtos || !this.editingItem.commissionApplicationDtos.length) {\r\n                                this.editingItem.commissionApplicationDtos = []\r\n                                let tmp = Object.assign({}, this.defaultCommissionApplicationDto)\r\n                                this.editingItem.commissionApplicationDtos.push(tmp)\r\n                            }\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                        })\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n\r\n        } else {\r\n            await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, true)\r\n                .then(res => {\r\n                    if (res.data.documentStatusCode != 'PENDING') {\r\n                        this.$router.go(-1)\r\n                    }\r\n                    this.editingItem = res.data\r\n                    // this.setFilesFromServer()\r\n\r\n                    if (!this.editingItem.announcedMediaDtos || !this.editingItem.announcedMediaDtos.length) {\r\n                        crudAndListsService.getEmptyCustomUrl(`${ANNOUNCED_MEDIA_API_URL}/empty`)\r\n                            .then(res => {\r\n                                this.defaultAnnouncedMediaDto = res.data\r\n                                if (!this.editingItem.announcedMediaDtos || !this.editingItem.announcedMediaDtos.length) {\r\n                                    this.editingItem.announcedMediaDtos = []\r\n                                    let tmp = Object.assign({}, this.defaultAnnouncedMediaDto)\r\n                                    this.editingItem.announcedMediaDtos.push(tmp)\r\n                                }\r\n                            })\r\n                            .catch(e => {\r\n                                console.log(e)\r\n                            })\r\n                    }\r\n\r\n                    if (!this.editingItem.priceApprovalDtos || !this.editingItem.priceApprovalDtos.length) {\r\n                        crudAndListsService.getEmptyCustomUrl(`${PRICE_APPROVAL_API_URL}/empty`)\r\n                            .then(res => {\r\n                                this.defaultPriceApprovalDto = res.data\r\n                                if (!this.editingItem.priceApprovalDtos || !this.editingItem.priceApprovalDtos.length) {\r\n                                    this.editingItem.priceApprovalDtos = []\r\n                                    let tmp = Object.assign({}, this.defaultPriceApprovalDto)\r\n                                    this.editingItem.priceApprovalDtos.push(tmp)\r\n                                }\r\n                            })\r\n                            .catch(e => {\r\n                                console.log(e)\r\n                            })\r\n                    }\r\n\r\n                    if (!this.editingItem.commissionApplicationDtos || !this.editingItem.commissionApplicationDtos.length) {\r\n                        crudAndListsService.getEmptyCustomUrl(`${COMMISSION_APPLICATION_API_URL}/empty`)\r\n                            .then(res => {\r\n                                this.defaultCommissionApplicationDto = res.data\r\n                                if (!this.editingItem.commissionApplicationDtos || !this.editingItem.commissionApplicationDtos.length) {\r\n                                    this.editingItem.commissionApplicationDtos = []\r\n                                    let tmp = Object.assign({}, this.defaultCommissionApplicationDto)\r\n                                    this.editingItem.commissionApplicationDtos.push(tmp)\r\n                                }\r\n                            })\r\n                            .catch(e => {\r\n                                console.log(e)\r\n                            })\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n        // GET CONTRACTORS\r\n        await this.fetchContractors()\r\n\r\n        // GET OKEDS\r\n        await this.fetchOkeds()\r\n\r\n        if (this.isDominant) {\r\n            // GET SKPS\r\n            await this.fetchSkps()\r\n\r\n            // GET TNVEDS\r\n            await this.fetchTnveds()\r\n\r\n            // GET GROUP_OF_INDIVIDUALS\r\n            crudAndListsService\r\n                .searchList('reestr/group-of-individuals', this.var_default_search_payload)\r\n                .then((res) => {\r\n                    this.groupOfIndividuals = res.data.list;\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n\r\n        // GET REGIONS\r\n        await helperService.fetchRegionsForContractorReestrByCurrentUserId()\r\n            .then(res => {\r\n                this.regions = res.data\r\n                this.regionSelected(this.editingItem.regionId, true)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        if (this.$route.name.includes('Create') || this.$route.name.includes('Update')) {\r\n            // GET PRODUCT_OR_SERVICE_TYPES\r\n            crudAndListsService\r\n                .searchList('directory/product-or-service-types', this.var_default_search_payload, this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : '')\r\n                .then((res) => {\r\n                    this.productTypes = res.data.list;\r\n                    this.productTypeSelected(this.editingItem.directoryProductOrServiceTypeId, true)\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n\r\n        // GET UNITS\r\n        crudAndListsService\r\n            .searchListWithKeyword('directory/units', this.var_default_search_payload)\r\n            .then((res) => {\r\n                this.units = res.data.list;\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n    padding-top: 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n}\r\n</style>"]}]}