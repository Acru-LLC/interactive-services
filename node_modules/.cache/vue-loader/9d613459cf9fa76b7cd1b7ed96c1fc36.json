{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\wordTemplates\\templates\\SeeForm.vue?vue&type=style&index=0&id=0fa375a0&scoped=true&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\wordTemplates\\templates\\SeeForm.vue","mtime":1676607555621},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouY29sLWZvcm0tbGFiZWwgew0KICBwYWRkaW5nLXRvcDogMDsNCn0NCg0KdWwgew0KICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7DQp9DQo="},{"version":3,"sources":["SeeForm.vue"],"names":[],"mappings":";AAiSA;AACA;AACA;;AAEA;AACA;AACA","file":"SeeForm.vue","sourceRoot":"src/modules/wordTemplates/templates","sourcesContent":["<template>\r\n\r\n  <b-card\r\n      class=\"h-100\"\r\n      no-body\r\n  >\r\n    <b-card-body>\r\n      <b-card-title class=\"headline d-flex justify-content-between align-items-center\">\r\n        <b-btn\r\n            variant=\"warning\"\r\n            class=\"text-capitalize\"\r\n            @click=\"goBack\"\r\n        >\r\n          {{ $t('actions.back') }}\r\n        </b-btn>\r\n      </b-card-title>\r\n    </b-card-body>\r\n    <div class=\"no-licence\" style=\"position: relative !important\">\r\n      <froala\r\n          id=\"edit\"\r\n          v-model=\"editingItem.bodyHtml\"\r\n          :tag=\"'textarea'\"\r\n          :config=\"config\"\r\n          ref=\"editorRef\"\r\n      ></froala>\r\n    </div>\r\n  </b-card>\r\n\r\n</template>\r\n<script>\r\nimport 'froala-editor/js/plugins.pkgd.min.js';\r\nimport 'froala-editor/js/third_party/embedly.min';\r\nimport 'froala-editor/js/third_party/font_awesome.min';\r\nimport 'froala-editor/js/third_party/spell_checker.min';\r\nimport 'froala-editor/js/third_party/image_tui.min';\r\nimport 'froala-editor/js/third_party/spell_checker.min';\r\nimport 'froala-editor/css/froala_editor.pkgd.min.css';\r\nimport VueFroala from 'vue-froala-wysiwyg'\r\n\r\nVue.use(VueFroala)\r\nimport \"froala-editor/js/languages/ru\";\r\nimport Service from \"@/modules/letter/letterService\";\r\n\r\nconst MAIN_API_URL = 'templates'\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport i18n from \"@/i18n\";\r\nimport Vue from \"vue\";\r\nimport {bus} from \"@/main\";\r\n\r\n\r\nexport default {\r\n  name: \"CreateForm\",\r\n  props: {\r\n    customIsModeCreate: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  watch: {\r\n    text: {\r\n      handler(v) {\r\n        this.$emit(\"changeText\", v);\r\n      },\r\n    },\r\n  },\r\n  /*\r\n  * COMPONENTS */\r\n  components: {},\r\n  /*\r\n  * DATA */\r\n  data() {\r\n    return {\r\n      text: ``,\r\n      editor: null,\r\n      config: {\r\n        tableStyles: {\r\n          class1: \"No borders\",\r\n        },\r\n        embedlyScriptPath: \"\",\r\n        imageInsertButtons: [\"imageUpload\", \"|\", \"imageByURL\"],\r\n        language: \"ru\",\r\n        events: {\r\n          \"image.beforeUpload\": (files) => {\r\n            let editor = this.$refs.editorRef.getEditor();\r\n            if (files.length > 0) {\r\n              let reader = new FileReader();\r\n              reader.onload = (e) => {\r\n                let result = e.target.result;\r\n                editor.image.insert(result, null, null, editor.image.get());\r\n              };\r\n              reader.readAsDataURL(files[0]);\r\n            }\r\n            editor.popups.hideAll();\r\n            return false;\r\n          },\r\n        },\r\n        documentReady: true,\r\n        fontSize: [\r\n          \"3\",\r\n          \"4\",\r\n          \"6\",\r\n          \"8\",\r\n          \"9\",\r\n          \"10\",\r\n          \"11\",\r\n          \"12\",\r\n          \"14\",\r\n          \"16\",\r\n          \"18\",\r\n          \"22\",\r\n          \"24\",\r\n          \"30\",\r\n          \"36\",\r\n          \"48\",\r\n          \"60\",\r\n          \"72\",\r\n          \"96\",\r\n        ],\r\n        fontFamilyDefaultSelection: \"Times New Roman\",\r\n        // imageUploadRemoteUrls: false,\r\n        toolbarButtons: [\r\n          \"fullscreen\",\r\n          \"bold\",\r\n          \"italic\",\r\n          \"underline\",\r\n          \"strikeThrough\",\r\n          \"subscript\",\r\n          \"superscript\",\r\n          \"textColor\",\r\n          \"backgroundColor\",\r\n          // \"|\",\r\n          \"fontFamily\",\r\n          \"fontSize\",\r\n          // \"color\",\r\n          // \"inlineClass\",\r\n          // \"inlineStyle\",\r\n          // \"paragraphStyle\",\r\n          \"lineHeight\",\r\n          \"|\",\r\n          \"paragraphFormat\",\r\n          \"align\",\r\n          \"formatOL\",\r\n          \"formatUL\",\r\n          \"outdent\",\r\n          \"indent\",\r\n          // \"quote\",\r\n          // \"-\",\r\n          // \"insertLink\",\r\n          \"insertImage\",\r\n          // \"insertVideo\",\r\n          //   \"embedly\",\r\n          //   \"insertFile\",\r\n          \"insertTable\",\r\n          \"html\",\r\n          \"|\",\r\n          //   \"emoticons\",\r\n          //   \"fontAwesome\",\r\n          \"specialCharacters\",\r\n          // \"insertHR\",\r\n          // \"selectAll\",\r\n          // \"clearFormatting\",\r\n          // \"|\",\r\n          //   \"print\",\r\n          //   \"getPDF\",\r\n          //   \"spellChecker\",\r\n          // \"help\",\r\n\r\n          //   \"|\",\r\n          //   \"undo\",\r\n          //   \"redo\",\r\n        ],\r\n        charCounterCount: false,\r\n        tabSpaces: 4,\r\n        height: 600,\r\n        fontSizeUnit: \"pt\",\r\n        placeholderText: \"\",\r\n\r\n        // events: {\r\n        //   initialized: function () {},\r\n        // },\r\n      },\r\n      categoryId: null,\r\n      category: [],\r\n      editingItem: {},\r\n      statuses: []\r\n    }\r\n  },\r\n  /*\r\n  * COMPUTED */\r\n  computed: {\r\n    isModeCreate() {\r\n      return this.customIsModeCreate ? this.customIsModeCreate : this.$route.name === 'CreateTemplates'\r\n    },\r\n    computedObserver() {\r\n      return this.$refs.observer\r\n    },\r\n\r\n  },\r\n\r\n  /*\r\n  * METHODS */\r\n  methods: {\r\n    goBack() {\r\n      this.$router.go(-1)\r\n    },\r\n    setTextContent(v) {\r\n      this.editingItem.bodyHtml = v;\r\n    },\r\n    customLabelCategory(opt) {\r\n      let selected = this.category.find(e => e.id === opt);\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    fetchCategoryList(keyword = '', callback = null) {\r\n      Service.searchList('template/category', this.var_default_search_payload, null, true)\r\n          .then(res => {\r\n            this.category = res.data.list\r\n            callback();\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n\r\n    treeClosed(veeName) {\r\n      this.computedObserver.refs[veeName].validate();\r\n    },\r\n    normalizer(node) {\r\n      if (!node.children || node.children.length === 0) {\r\n        delete node.children\r\n        return {\r\n          id: node.id,\r\n          label: node.name,\r\n        }\r\n      }\r\n      return {\r\n        id: node.id,\r\n        label: node.name,\r\n        children: node.children && node.children.length > 0 ? node.children : [],\r\n      }\r\n    },\r\n    save() {\r\n      this.computedObserver.validate().then(valid => {\r\n        if (valid) {\r\n          if (this.editingItem.id) {\r\n            crudAndListsService.update(MAIN_API_URL, this.editingItem).then(res => {\r\n              this.computedObserver.reset()\r\n              this.editingItem = Object.assign({}, {});\r\n              this.$router.go(-1)\r\n              this.$toast(this.$t('messages.saved_successfully'), {type: 'success'});\r\n            })\r\n          } else {\r\n            crudAndListsService.create(MAIN_API_URL, this.editingItem).then(res => {\r\n              this.computedObserver.reset()\r\n              this.editingItem = Object.assign({}, {});\r\n              this.$router.go(-1)\r\n              this.$toast(this.$t('messages.saved_successfully'), {type: 'success'});\r\n            })\r\n          }\r\n        } else {\r\n          this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n        }\r\n      });\r\n    }\r\n  },\r\n  /*\r\n  * CREATED */\r\n  async created() {\r\n    this.var_default_search_payload.itemsPerPage = 500\r\n\r\n    await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, false)\r\n        .then(res => {\r\n          this.editingItem = res.data\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n  padding-top: 0;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n}\r\n</style>\r\n\r\n\r\n<style lang=\"scss\" scoped>\r\n.example {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .editor {\r\n    height: 30rem;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .output {\r\n    width: 100%;\r\n    height: 20rem;\r\n    margin: 0;\r\n    border: 1px solid #ccc;\r\n    overflow-y: auto;\r\n    resize: vertical;\r\n\r\n    &.code {\r\n      padding: 1rem;\r\n      height: 16rem;\r\n    }\r\n\r\n    &.ql-snow {\r\n      border-top: none;\r\n      height: 24rem;\r\n    }\r\n  }\r\n}\r\n</style>"]}]}