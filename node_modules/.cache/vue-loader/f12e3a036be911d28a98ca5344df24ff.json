{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\components\\base\\BaseTextareaWithValidation.vue?vue&type=style&index=0&id=b4004fb0&lang=scss&scoped=true&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\components\\base\\BaseTextareaWithValidation.vue","mtime":1676521426700},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1675061971809},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoNCjo6di1kZWVwLmJhc2UtZm9ybS1jb21wb25lbnRfX2xhYmVsLW9uLXRvcCB7DQogICYuYmFzZS1mb3JtLWlucHV0LXdpdGgtYXBwZW5kIHsNCiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDI1JSA2NSUgNSUgIWltcG9ydGFudDsNCiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTIwMHB4KSB7DQogICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDI1JSA2MCUgNSUgIWltcG9ydGFudDsNCiAgICB9DQogICAgQG1lZGlhIChtaW4td2lkdGg6IDE0MDBweCkgew0KICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyNSUgNjUlIDUlICFpbXBvcnRhbnQ7DQogICAgfQ0KICB9DQoNCiAgbGFiZWwgew0KICAgIGdyaWQtY29sdW1uOiBzcGFuIDI7DQogIH0NCg0KICAuYmFzZS1mb3JtLWNvbXBvbmVudF9fbWFpbi1mb3JtLWVsZW1lbnQgew0KICAgIGdyaWQtY29sdW1uOiBzcGFuIDI7DQogIH0NCn0NCg0K"},{"version":3,"sources":["BaseTextareaWithValidation.vue"],"names":[],"mappings":";;AAoHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"BaseTextareaWithValidation.vue","sourceRoot":"src/components/base","sourcesContent":["<template>\r\n  <ValidationProvider\r\n      :mode=\"notRequired ? 'passive' : 'aggressive'\"\r\n      :name=\"$attrs.name ? $attrs.name : $attrs.label\"\r\n      :rules=\"rules\"\r\n  >\r\n    <template v-slot:default=\"validationContext\">\r\n      <div\r\n          class=\"base-textarea-wrapper base-form-textarea base-form-component\"\r\n          :class=\"[labelOnTop ? ['base-form-component__label-on-top', ...customClasses] : [...customClasses]]\"\r\n          :style=\"customStyles\"\r\n      >\r\n        <!-- LABEL -->\r\n        <label class=\"base-form-component__label\">{{ $attrs.label }}</label>\r\n\r\n        <b-form-textarea\r\n            v-model=\"innerValue\"\r\n            :state=\"getValidationState(validationContext)\"\r\n            class=\"base-form-component__textarea base-form-component__main-form-element\"\r\n            v-mask=\"mask\"\r\n            v-bind=\"$attrs\"\r\n            v-on=\"$listeners\"\r\n        >\r\n          <template v-for=\"(_, slot) of $slots\" v-slot:[slot]=\"scope\">\r\n            <slot :name=\"slot\" v-bind=\"scope\"/>\r\n          </template>\r\n        </b-form-textarea>\r\n\r\n        <!-- INVALID FEEDBACK -->\r\n        <b-form-invalid-feedback v-if=\"!hideErrorMsg\" class=\"base-form-component__invalid-feedback\">\r\n          {{ validationContext.errors[0] }}\r\n        </b-form-invalid-feedback>\r\n\r\n        <!-- HELP TEXT -->\r\n        <b-form-text v-if=\"infoMsg\" class=\"base-form-component__info-msg\">\r\n          {{ infoMsg }}\r\n        </b-form-text>\r\n      </div>\r\n    </template>\r\n  </ValidationProvider>\r\n</template>\r\n\r\n<script>\r\n\r\nexport default {\r\n  props: {\r\n    customClasses: {\r\n      type: [Object, String],\r\n      default: () => {\r\n      }\r\n    },\r\n    customStyles: {\r\n      type: [Object, String],\r\n      default: () => {\r\n      }\r\n    },\r\n    infoMsg: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    mask: {\r\n      type: String,\r\n      default: ''\r\n    },\r\n    notRequired: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    hideErrorMsg: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    labelOnTop: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    rules: {\r\n      type: [Object, String],\r\n      default: () => {\r\n      }\r\n    },\r\n    // must be included in props\r\n    value: {\r\n      type: null\r\n    }\r\n  },\r\n  data: () => ({\r\n    innerValue: ''\r\n  }),\r\n  methods: {\r\n    getValidationState({dirty, validated, valid = null}) {\r\n      if (this.notRequired)\r\n        return null\r\n      return dirty || validated ? valid : null;\r\n    },\r\n  },\r\n  watch: {\r\n    // Handles internal model changes.\r\n    innerValue(newVal) {\r\n      this.$emit('input', newVal);\r\n    },\r\n    // Handles external model changes.\r\n    value(newVal) {\r\n      this.innerValue = newVal;\r\n    }\r\n  },\r\n  created() {\r\n    if (this.value) {\r\n      this.innerValue = this.value;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n::v-deep.base-form-component__label-on-top {\r\n  &.base-form-input-with-append {\r\n    grid-template-columns: 25% 65% 5% !important;\r\n    @media (min-width: 1200px) {\r\n      grid-template-columns: 25% 60% 5% !important;\r\n    }\r\n    @media (min-width: 1400px) {\r\n      grid-template-columns: 25% 65% 5% !important;\r\n    }\r\n  }\r\n\r\n  label {\r\n    grid-column: span 2;\r\n  }\r\n\r\n  .base-form-component__main-form-element {\r\n    grid-column: span 2;\r\n  }\r\n}\r\n\r\n</style>\r\n"]}]}