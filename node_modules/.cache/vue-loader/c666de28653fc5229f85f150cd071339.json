{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\views\\components\\CreateFormContractor.vue?vue&type=style&index=0&id=0af5d0fc&scoped=true&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\views\\components\\CreateFormContractor.vue","mtime":1667352074591},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1667355356565},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNvbC1mb3JtLWxhYmVsIHsNCiAgcGFkZGluZy10b3A6IDA7DQp9DQoNCnVsIHsNCiAgbGlzdC1zdHlsZS10eXBlOiBub25lOw0KfQ0K"},{"version":3,"sources":["CreateFormContractor.vue"],"names":[],"mappingsfile":"CreateFormContractor.vue","sourceRoot":"src/shared/views/components","sourcesContent":["<template>\r\n  <ValidationObserver\r\n      ref=\"observer\"\r\n      v-slot=\"{}\"\r\n  >\r\n    <b-row class=\"mb-3\">\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            name=\"INN\"\r\n            :rules=\"{required: true, regex: /\\b\\d{9}\\b/}\"\r\n            v-model=\"editingItem.inn\"\r\n            @keyup.enter=\"findContractorByInn\"\r\n            @blur=\"validateInn\"\r\n            with-input-append\r\n            mask=\"#########\"\r\n            :label=\"$t('column.inn')\"\r\n            placeholder=\"123456789\"\r\n            class=\"required\"\r\n        >\r\n          <template v-slot:append-slot>\r\n            <b-button\r\n                @click=\"findContractorByInn\"\r\n                variant=\"outline-primary\"\r\n                id=\"contractorSearchButton\"\r\n                style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n            >\r\n              <i class=\"mdi mdi-account-search\"></i>\r\n            </b-button>\r\n            <!-- <b-tooltip\r\n                        target=\"contractorSearchButton\"\r\n                        variant=\"primary\"\r\n                    >{{ $t('document.search_contractor') }}</b-tooltip> -->\r\n          </template>\r\n        </BaseInputWithValidation>\r\n      </b-col>\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <!-- PARENT -->\r\n        <BaseMultiselectWithValidation\r\n            not-required\r\n            v-model=\"editingItem.parentId\"\r\n            :has-next-page=\"hasNextPageContractors\"\r\n            @reachedEndOfList=\"contractorReachedEndOfList\"\r\n            @search-change=\"debounceSearchContractors\"\r\n            :searchable=\"true\"\r\n            preserve-search\r\n            :clear-on-select=\"false\"\r\n            :loading=\"isLoadingContractors\"\r\n            :internal-search=\"false\"\r\n            :options=\"contractors.map(e => e.id)\"\r\n            :label=\"$t('column.superior_parent')\"\r\n            :placeholder=\"$t('column.contractor')\"\r\n            :custom-label=\"customLabelContractor\"\r\n            open-direction=\"bottom\"\r\n            :max-height=\"600\"\r\n            :show-labels=\"false\"\r\n            with-create-addition\r\n        >\r\n          <template v-slot:append-slot>\r\n            <b-button\r\n                @click=\"contractorCreateModal = true\"\r\n                variant=\"outline-primary\"\r\n                style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n            >\r\n              <i class=\"mdi mdi-plus-circle\"></i>\r\n            </b-button>\r\n          </template>\r\n        </BaseMultiselectWithValidation>\r\n        <BaseModalForCreate\r\n            v-model=\"contractorCreateModal\"\r\n            without-list-search\r\n            use-component-save-fn\r\n            mainApiUrl=\"contractor\"\r\n            createFormName=\"CreateFormContractor\"\r\n            @new-ref-created-without-list-search=\"newRefCreated\"\r\n        />\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row class=\"mb-3\">\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            rules=\"required\"\r\n            v-model=\"editingItem.fullName\"\r\n            :label=\"$t('column.full_name')\"\r\n            :placeholder=\"$t('column.full_name')\"\r\n            class=\"required\"\r\n        />\r\n      </b-col>\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            rules=\"required\"\r\n            v-model=\"editingItem.shortname\"\r\n            :label=\"$t('column.short_name')\"\r\n            :placeholder=\"$t('column.short_name')\"\r\n            class=\"required\"\r\n        />\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row class=\"mb-3\">\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            rules=\"required\"\r\n            v-model=\"editingItem.director\"\r\n            :label=\"$t('column.director')\"\r\n            :placeholder=\"$t('column.director')\"\r\n            class=\"required\"\r\n        />\r\n      </b-col>\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            not-required\r\n            v-model=\"editingItem.accounter\"\r\n            :label=\"$t('column.accounter')\"\r\n            :placeholder=\"$t('column.accounter')\"\r\n        />\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row class=\"mb-3\">\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            :rules=\"{required: false, regex: /\\b\\d{5}\\b/}\"\r\n            class=\"\"\r\n            v-model=\"editingItem.oked\"\r\n            mask=\"#####\"\r\n            :label=\"$t('column.oked')\"\r\n            placeholder=\"12345\"\r\n        />\r\n      </b-col>\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            not-required\r\n            v-model=\"editingItem.vatCode\"\r\n            :label=\"$t('column.vat_code')\"\r\n            :placeholder=\"$t('column.vat_code')\"\r\n        />\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row class=\"mb-3\">\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseMultiselectWithValidation\r\n            rules=\"required\"\r\n            class=\"required\"\r\n            v-model=\"editingItem.addressDto.regionId\"\r\n            @select=\"regionSelected\"\r\n            :options=\"regions.map(e => e.id)\"\r\n            :label=\"$t('column.region')\"\r\n            :custom-label=\"customLabelRegion\"\r\n            :placeholder=\"$t('column.region')\"\r\n            open-direction=\"bottom\"\r\n            :max-height=\"600\"\r\n            :show-labels=\"false\"\r\n        />\r\n      </b-col>\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseMultiselectWithValidation\r\n            rules=\"required\"\r\n            class=\"required\"\r\n            v-model=\"editingItem.addressDto.districtId\"\r\n            :options=\"districts.map(e => e.id)\"\r\n            :label=\"$t('column.district')\"\r\n            :custom-label=\"customLabelDistrict\"\r\n            :placeholder=\"$t('column.district')\"\r\n            open-direction=\"bottom\"\r\n            :max-height=\"600\"\r\n            :show-labels=\"false\"\r\n        />\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row class=\"mb-3\">\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            not-required\r\n            v-model=\"editingItem.address\"\r\n            :label=\"$t('column.address')\"\r\n            :placeholder=\"$t('column.address')\"\r\n        />\r\n\r\n      </b-col>\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            not-required\r\n            v-model=\"editingItem.mobileNumber\"\r\n            :label=\"$t('column.mobile_number')\"\r\n            mask=\"+998#########\"\r\n            placeholder=\"+998#########\"\r\n        />\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row class=\"mb-3\">\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseMultiselectWithValidation\r\n            not-required\r\n            v-model=\"editingItem.formOfOwnershipId\"\r\n            :options=\"formOfOwnerships.map(e => e.id)\"\r\n            :label=\"$t('submodules.form_of_ownership.title')\"\r\n            :custom-label=\"customLabelFormOfOwnership\"\r\n            placeholder=\"\"\r\n            open-direction=\"bottom\"\r\n            :max-height=\"600\"\r\n            :show-labels=\"false\"\r\n        />\r\n      </b-col>\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            not-required\r\n            v-model=\"editingItem.faxNumber\"\r\n            :label=\"$t('column.fax_number')\"\r\n            :placeholder=\"$t('column.fax_number')\"\r\n        />\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row class=\"mb-3\">\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            not-required\r\n            v-model=\"editingItem.phoneNumber\"\r\n            :label=\"$t('column.phone_number')\"\r\n            mask=\"+998#########\"\r\n            placeholder=\"+998#########\"\r\n        />\r\n      </b-col>\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <BaseInputWithValidation\r\n            rules=\"email\"\r\n            v-model=\"editingItem.email\"\r\n            :label=\"$t('column.mail')\"\r\n            :placeholder=\"$t('column.mail')\"\r\n        />\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row class=\"mb-3\">\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <!-- STATUS -->\r\n        <BaseSelectWithValidation\r\n            v-model=\"editingItem.statusId\"\r\n            class=\"required\"\r\n            rules=\"required\"\r\n            :label=\"$t('column.status')\"\r\n            value-field=\"id\"\r\n        >\r\n          <template #first>\r\n            <b-form-select-option\r\n                :value=\"null\"\r\n                disabled\r\n            >{{ $t('column.status') }}\r\n            </b-form-select-option>\r\n            <b-form-select-option\r\n                v-for=\"(status, index) in statuses\"\r\n                :key=\"`${status}-${index}`\"\r\n                :value=\"status.id\"\r\n            >{{\r\n                getName({\r\n                  nameRu: status.nameRu,\r\n                  nameLt: status.nameLt,\r\n                  nameUz: status.nameUz,\r\n                })\r\n              }}\r\n            </b-form-select-option>\r\n          </template>\r\n        </BaseSelectWithValidation>\r\n      </b-col>\r\n      <b-col\r\n          sm=\"12\"\r\n          md=\"6\"\r\n      >\r\n        <div class=\"form-check form-check-right\">\r\n          <input\r\n              v-model=\"editingItem.canRegister\"\r\n              class=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"formCheckIsLegal\"\r\n          />\r\n          <!-- <input\r\n                  v-else\r\n                  :checked=\"isLegal\"\r\n                  disabled\r\n                  class=\"form-check-input\"\r\n                  type=\"checkbox\"\r\n                  id=\"formCheckIsLegal\"\r\n              /> -->\r\n          <label\r\n              class=\"form-check-label font-weight-normal\"\r\n              for=\"formCheckIsLegal\"\r\n          >\r\n            {{ $t('column.can_login') }}\r\n          </label>\r\n        </div>\r\n      </b-col>\r\n    </b-row>\r\n\r\n    <b-row class=\"mb-3\">\r\n      <b-col cols=\"12\">\r\n        <h5 class=\"m-0 text-center\">\r\n          {{ $t('column.founders') }}\r\n        </h5>\r\n        <hr class=\"my-2\">\r\n        <b-table\r\n            :items=\"computedFoundersDtos\"\r\n            :fields=\"foundersFields\"\r\n            sticky-header=\"400px\"\r\n            bordered\r\n            small\r\n            hover\r\n            show-empty\r\n            striped\r\n        >\r\n          <!-- NUMBER OF ITEM -->\r\n          <template #cell(index)=\"data\">\r\n            {{\r\n              data.index + 1\r\n            }}\r\n          </template>\r\n\r\n          <!-- FOUNDER_SHARE_SUM -->\r\n          <template #cell(founderShareSum)=\"data\">\r\n            {{ data.item.founderShareSum | toCurrency }}\r\n          </template>\r\n\r\n          <!-- TYPE -->\r\n          <template #cell(type)=\"data\">\r\n            <b-badge\r\n                :variant=\"data.item.isLegal ? 'primary' : 'success'\"\r\n                class=\"font-weight-bold\"\r\n                style=\"font-size: .7rem;\"\r\n            >{{ data.item.isLegal ? $t('column.legal_entity') : $t('column.individual') }}\r\n            </b-badge>\r\n          </template>\r\n\r\n          <!-- EMPTY SLOT -->\r\n          <template #empty=\"\">\r\n            <h4 class=\"text-center\">{{ $t('messages.data_not_found') }}</h4>\r\n          </template>\r\n        </b-table>\r\n      </b-col>\r\n    </b-row>\r\n  </ValidationObserver>\r\n</template>\r\n<script>\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport helperService from \"@/shared/services/helper.service\"\r\n\r\nconst MAIN_API_URL = 'contractor'\r\nexport default {\r\n  name: \"CreateFormContractor\",\r\n  /*\r\n  * PROPS */\r\n  props: {\r\n    customIsModeCreate: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  /*\r\n  * COMPONENTS */\r\n  components: {},\r\n  /*\r\n  * DATA */\r\n  data() {\r\n    return {\r\n      foundersFields: [\r\n        {\r\n          label: \"#\",\r\n          thClass: \"text-center\",\r\n          tdClass: \"text-center\",\r\n          sortable: false,\r\n          key: \"index\",\r\n        },\r\n        {\r\n          key: 'fullName',\r\n          label: this.$t('column.name'),\r\n        },\r\n        {\r\n          key: 'inn',\r\n          label: this.$t('column.inn'),\r\n        },\r\n        {\r\n          key: 'pnfl',\r\n          label: this.$t('column.personal_number'),\r\n        },\r\n        {\r\n          key: 'type',\r\n          label: this.$t('column.type'),\r\n        },\r\n        {\r\n          key: 'founderSharePercent',\r\n          label: this.$t('column.share_percentage'),\r\n        },\r\n        {\r\n          key: 'founderShareSum',\r\n          label: this.$t('column.share_sum'),\r\n        },\r\n      ],\r\n      originalDto: {\r\n        addressDto: {},\r\n        foundersDtos: []\r\n      },\r\n      originalInn: null,\r\n      // CONTRACTOR SELECT_AND_CREATE VARS\r\n      hasNextPageContractors: false,\r\n      contractors: [],\r\n      debounce: null,\r\n      isLoadingContractors: false,\r\n      contractorCreateModal: false,\r\n      contractorSearchPayload: {},\r\n      // ---------------------------------\r\n      formOfOwnerships: [],\r\n      regions: [],\r\n      districts: [],\r\n      statuses: [],\r\n      editingItem: {\r\n        addressDto: {},\r\n        foundersDtos: []\r\n      },\r\n      defaultFounder: {\r\n        founderName: null,\r\n        percentage: null\r\n      }\r\n    }\r\n  },\r\n  /*\r\n  * COMPUTED */\r\n  computed: {\r\n    isModeCreate() {\r\n      return this.customIsModeCreate ? this.customIsModeCreate : this.$route.name === 'CreateContractor'\r\n    },\r\n    computedObserver() {\r\n      return this.$refs.observer\r\n    },\r\n    computedFoundersDtos(){\r\n      if (this.editingItem.regContractorDto?.founders?.length > 0) {\r\n        return this.editingItem.regContractorDto.founders.map((founder, index) => {\r\n          if (founder.founderIndividual) {\r\n            return {\r\n              index: index,\r\n              fullName: `${founder.founderIndividual.lastName} ${founder.founderIndividual.firstName} ${founder.founderIndividual.middleName}`,\r\n              inn: founder.founderIndividual.tin ?? null,\r\n              pnfl: founder.founderIndividual.pinfl ?? null,\r\n              type: null,\r\n              isLegal: false,\r\n              founderSharePercent: founder.founderIndividual?.founderSharePercent ?? null,\r\n              founderShareSum: founder.founderIndividual?.founderShareSum ?? null,\r\n            }\r\n          }\r\n          if (founder.founderLegal) {\r\n            return {\r\n              index: index,\r\n              fullName: founder.founderLegal?.name ?? null,\r\n              inn: founder.founderLegal?.tin ?? null,\r\n              pnfl: null,\r\n              type: null,\r\n              isLegal: true,\r\n              founderSharePercent: founder.founderLegal?.founderSharePercent ?? null,\r\n              founderShareSum: founder.founderLegal?.founderShareSum ?? null,\r\n            }\r\n          }\r\n        })\r\n      }\r\n      return this.editingItem.foundersDtos\r\n    }\r\n  },\r\n  /*\r\n  * METHODS */\r\n  methods: {\r\n    // CONTRACTOR SELECT_AND_CREATE METHODS\r\n    contractorReachedEndOfList(e) {\r\n      if (e && !this.isLoadingContractors) {\r\n        this.fetchContractors()\r\n      }\r\n    },\r\n    async debounceSearchContractors(searchText) {\r\n      clearTimeout(this.debounce);\r\n      this.debounce = setTimeout(async () => {\r\n        await this.fetchContractorsWithKeyword(searchText);\r\n      }, 1000);\r\n    },\r\n    customLabelContractor(opt) {\r\n      let selected = this.contractors.find(e => e.id == opt);\r\n      if (selected) {\r\n        return `${selected.fullName}`\r\n      }\r\n      return ``;\r\n    },\r\n    fetchContractorsWithKeyword(keyword, makeFirstSelected = false) {\r\n      this.contractors = []\r\n      this.contractorSearchPayload.page = 1\r\n      this.contractorSearchPayload.keyword = keyword ? keyword : ''\r\n      this.fetchContractors(makeFirstSelected)\r\n    },\r\n    async fetchContractors(makeFirstSelected) {\r\n      this.contractorSearchPayload.sortBy = []\r\n      this.contractorSearchPayload.sortBy.push('created')\r\n      this.contractorSearchPayload.sortDesc = []\r\n      this.contractorSearchPayload.sortDesc.push(true)\r\n      this.isLoadingContractors = true\r\n      await crudAndListsService.searchListWithKeyword('contractor', this.contractorSearchPayload, 'by-contractor', !this.customIsModeCreate)\r\n          .then(res => {\r\n            this.contractors.push(...res.data.list)\r\n            this.hasNextPageContractors = res.data.total / this.contractorSearchPayload.itemsPerPage > this.contractorSearchPayload.page\r\n            this.contractorSearchPayload.page += 1\r\n            if (makeFirstSelected) {\r\n              this.editingItem.parentId = this.contractors.length ? this.contractors[0].id : null\r\n            }\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n            this.contractors = []\r\n          })\r\n          .finally(() => {\r\n            this.isLoadingContractors = false\r\n          })\r\n    },\r\n    newRefCreated(formName) {\r\n      if (formName == 'CreateFormContractor') {\r\n        this.fetchContractorsWithKeyword('', true)\r\n      }\r\n    },\r\n    // ------------------------------------\r\n    addFounderDto() {\r\n      let tmp = Object.assign({}, this.defaultFounder)\r\n      this.editingItem.foundersDtos.push(tmp)\r\n    },\r\n    setDefaultActiveStatus() {\r\n      let activeStatus = this.statuses.find(el => el.code == 'ACTIVE')\r\n      if (activeStatus) {\r\n        this.editingItem.statusId = activeStatus.id\r\n      }\r\n    },\r\n    async regionSelected($event, dontResetDistrict = false) {\r\n      if (!dontResetDistrict) {\r\n        this.editingItem.addressDto.districtId = null\r\n      }\r\n      // GET DISTRICTS\r\n      if ($event)\r\n        await helperService.getGeoLocationsByParentId($event)\r\n            .then(res => {\r\n              this.districts = res.data\r\n            })\r\n            .catch(e => {\r\n              console.log(e)\r\n            })\r\n    },\r\n    async validateInn() {\r\n      let res = await helperService.validateInnFromApi(this.editingItem.inn)\r\n      if (!res.data) {\r\n        this.computedObserver.setErrors({INN: [this.$t('validator.inn')]});\r\n      }\r\n      return res.data\r\n      /*  helperService.validateInnFromApi(this.editingItem.inn)\r\n           .then(res => {\r\n               if (!res.data) {\r\n                   this.computedObserver.setErrors({ INN: [this.$t('validator.inn')] });\r\n               }\r\n           }) */\r\n    },\r\n    setFoundersFromSoliq(foundersFromSoliq = []) {\r\n      let foundersDtos = foundersFromSoliq.filter(el => {\r\n        let founderDto = {\r\n          contractorId: null,\r\n          founderAddressId: null,\r\n          founderContactId: null,\r\n          founderIndividualId: null,\r\n          founderLegalId: null,\r\n          founderSharePercent: el.founderIndividual ? el.founderIndividual.founderSharePercent : el.founderLegal ? el.founderLegal.founderSharePercent : null,\r\n          founderShareSum: el.founderIndividual ? el.founderIndividual.founderShareSum : el.founderLegal ? el.founderLegal.founderShareSum : null,\r\n          fullName: el.founderLegal ? el.founderLegal.name : el.founderIndividual ? `${el.founderIndividual.firstName} ${el.founderIndividual.lastName} ${el.founderIndividual.middleName ? el.founderIndividual.middleName : ''}` : null,\r\n          id: null,\r\n          inn: el.founderLegal ? el.founderLegal.tin : el.founderIndividual ? el.founderIndividual.tin : null,\r\n          isLegal: el.founderLegal ? true : el.founderIndividual ? false : null,\r\n          pnfl: el.founderIndividual ? el.founderIndividual.pinfl : null,\r\n        }\r\n        if (founderDto.inn) {\r\n          return founderDto\r\n        }\r\n      })\r\n      this.$set(this.editingItem, 'foundersDtos', foundersDtos);\r\n    },\r\n    findContractorByInn() {\r\n      if (this.computedObserver.fields.INN.valid)\r\n        helperService.validateInnFromApi(this.editingItem.inn, true)\r\n            .then(res => {\r\n              if (res.data) {\r\n                if (this.editingItem.inn != this.originalInn) {\r\n                  helperService.getContractorInfoByInnForCreate(this.editingItem.inn, true)\r\n                      .then(res => {\r\n                        this.editingItem = Object.assign({}, res.data)\r\n                        this.setDefaultActiveStatus()\r\n                        // FETCH DISTRICTS\r\n                        this.regionSelected(this.editingItem.addressDto.regionId, true)\r\n\r\n                        // CHECK AND SET FOUNDERS FROM SOLIQ\r\n                        if (res.data.regContractorDto && res.data.regContractorDto.founders) {\r\n                          this.setFoundersFromSoliq(res.data.regContractorDto.founders)\r\n                        } else {\r\n                          this.setFoundersFromSoliq()\r\n                        }\r\n                      })\r\n                      .catch(e => {\r\n                        // this.computedObserver.setErrors({ INN: [this.$t('validator.inn_exist')] });\r\n                      })\r\n                } else {\r\n                  helperService.getContractorInfoByInnForUpdate(this.editingItem.inn, true)\r\n                      .then(res => {\r\n                        this.editingItem = Object.assign({}, res.data)\r\n                        this.$set(this.editingItem, 'addressDto', this.originalDto.addressDto)\r\n                        this.$set(this.editingItem, 'mobileNumber', this.originalDto.mobileNumber)\r\n                        this.$set(this.editingItem, 'email', this.originalDto.email)\r\n                        this.$set(this.editingItem, 'canRegister', this.originalDto.canRegister)\r\n\r\n                        this.setDefaultActiveStatus()\r\n\r\n                        // FETCH DISTRICTS\r\n                        this.regionSelected(this.editingItem.addressDto.regionId, true)\r\n\r\n                        // CHECK AND SET FOUNDERS FROM SOLIQ\r\n                        if (res.data.regContractorDto && res.data.regContractorDto.founders) {\r\n                          this.setFoundersFromSoliq(res.data.regContractorDto.founders)\r\n                        } else {\r\n                          this.setFoundersFromSoliq()\r\n                        }\r\n                      })\r\n                      .catch(e => {\r\n                        // this.computedObserver.setErrors({ INN: [this.$t('validator.inn_exist')] });\r\n                      })\r\n                }\r\n              } else {\r\n                this.computedObserver.setErrors({INN: [this.$t('validator.inn')]});\r\n              }\r\n            })\r\n            .catch(e => {\r\n              console.log(e)\r\n\r\n            })\r\n      /* else\r\n          this.computedObserver.refs.INN.validate() */\r\n    },\r\n    customLabelDistrict(opt) {\r\n      let selectedDistrict = this.districts.find(e => e.id == opt);\r\n      if (selectedDistrict) {\r\n        return `${this.getName({\r\n          nameRu: selectedDistrict.nameRu,\r\n          nameLt: selectedDistrict.nameLt,\r\n          nameUz: selectedDistrict.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    customLabelRegion(opt) {\r\n      let selectedRegion = this.regions.find(e => e.id == opt);\r\n      if (selectedRegion) {\r\n        return `${this.getName({\r\n          nameRu: selectedRegion.nameRu,\r\n          nameLt: selectedRegion.nameLt,\r\n          nameUz: selectedRegion.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    customLabelFormOfOwnership(opt) {\r\n      let selected = this.formOfOwnerships.find(e => e.id == opt);\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    async save() {\r\n      let isInnValid = await this.validateInn()\r\n      if (!isInnValid) {\r\n        return\r\n      }\r\n      this.computedObserver.validate().then(valid => {\r\n        if (valid) {\r\n          if (this.editingItem.foundersDtos) {\r\n            this.editingItem.foundersDtos = this.editingItem.foundersDtos.filter(el => {\r\n              return el.founderName && el.founderName.toString().trim().length && el.percentage\r\n            })\r\n          }\r\n          if (!this.isModeCreate) {\r\n            this.editingItem.id = this.$route.params.id.toString()\r\n            crudAndListsService.update(MAIN_API_URL, this.editingItem, null, true).then(res => {\r\n              this.computedObserver.reset()\r\n              this.editingItem = Object.assign({}, {addressDto: {}});\r\n              // this.$router.go(-1)\r\n              this.$toast(this.$t('messages.saved_successfully'), {type: 'success'});\r\n              this.$emit('saved', res.data)\r\n            })\r\n          } else {\r\n            crudAndListsService.create(MAIN_API_URL, this.editingItem, null, true).then(res => {\r\n              this.computedObserver.reset()\r\n              this.editingItem = Object.assign({}, {addressDto: {}});\r\n              this.$toast(this.$t('messages.saved_successfully'), {type: 'success'});\r\n              this.$emit('saved', res.data)\r\n            })\r\n          }\r\n        } else {\r\n          this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n        }\r\n      });\r\n    }\r\n  },\r\n  /*\r\n  * CREATED */\r\n  async created() {\r\n    // FOR CONTRACTOR SELECT_AND_ADD\r\n    this.contractorSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n    this.fetchContractors()\r\n    // -----------------------------\r\n    this.var_default_search_payload.itemsPerPage = 500\r\n    if (this.isModeCreate) {\r\n      crudAndListsService.getEmpty(MAIN_API_URL, null, true)\r\n          .then(res => {\r\n            this.editingItem = Object.assign({}, res.data)\r\n            /* if (!this.editingItem.foundersDtos || !this.editingItem.foundersDtos.length) {\r\n                this.editingItem.foundersDtos = []\r\n                let tmpFounder = Object.assign({}, this.defaultFounder)\r\n                this.editingItem.foundersDtos.push(tmpFounder)\r\n            } */\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    } else {\r\n      await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, true)\r\n          .then(res => {\r\n            this.editingItem = Object.assign({}, res.data)\r\n            this.originalInn = this.editingItem.inn\r\n            this.originalDto = JSON.parse(JSON.stringify(res.data))\r\n            /* if (!this.editingItem.foundersDtos || !this.editingItem.foundersDtos.length) {\r\n                this.editingItem.foundersDtos = []\r\n                let tmpFounder = Object.assign({}, this.defaultFounder)\r\n                this.editingItem.foundersDtos.push(tmpFounder)\r\n            } */\r\n            if (this.editingItem.parentId) {\r\n              let parentIdx = this.contractors.findIndex(el => el.id == this.editingItem.parentId)\r\n              if (parentIdx < 0) {\r\n                this.contractors.push(this.editingItem.parent)\r\n              }\r\n            }\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    }\r\n\r\n    // GET STATUSES\r\n    helperService.getRefByCode('status', true)\r\n        .then(res => {\r\n          this.statuses = res.data.children\r\n          if (this.isModeCreate) {\r\n            this.setDefaultActiveStatus()\r\n          }\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n\r\n    // GET REGIONS\r\n    helperService.fetchRegions(true)\r\n        .then(res => {\r\n          this.regions = res.data\r\n          this.regionSelected(this.editingItem.addressDto.regionId, true)\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n\r\n    // GET FORM_OF_OWNERSHIP\r\n    crudAndListsService\r\n        .searchList('directory/form-of-ownerships', this.var_default_search_payload, null, true)\r\n        .then((res) => {\r\n          this.formOfOwnerships = res.data.list;\r\n        })\r\n        .catch(e => {\r\n          console.log(e)\r\n        })\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n  padding-top: 0;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n}\r\n</style>"]}]}