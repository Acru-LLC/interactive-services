{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\letter\\income\\beforeCommission.vue?vue&type=style&index=0&id=6032b7a8&lang=css&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\letter\\income\\beforeCommission.vue","mtime":1675054786269},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouc3RpY2t5SGVhZCB7DQogIG1hcmdpbjogMHB4ICFpbXBvcnRhbnQ7DQogIHBhZGRpbmc6IDE1cHggIWltcG9ydGFudDsNCiAgYm9yZGVyLXJhZGl1czogMHB4Ow0KICBwb3NpdGlvbjogZml4ZWQ7DQogIHRvcDogNzBweDsNCiAgbGVmdDogMDsNCiAgcmlnaHQ6IDA7DQogIGJhY2tncm91bmQ6IHdoaXRlOw0KICB6LWluZGV4OiA0Ow0KICB3aWR0aDogMTAwJTsNCn0NCg=="},{"version":3,"sources":["beforeCommission.vue"],"names":[],"mappings":";AA6mBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"beforeCommission.vue","sourceRoot":"src/modules/letter/income","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <div\r\n          id=\"myHeader\"\r\n          class=\"card card-body stickyHead\"\r\n      >\r\n        <div class=\"d-flex\">\r\n          <div style=\"width: 58%\">\r\n            <h5\r\n                v-if=\"numPages\"\r\n                class=\"float-right m-0\"\r\n            >\r\n              {{ currentPage }} / {{ numPages }}\r\n            </h5>\r\n          </div>\r\n          <div style=\"width: 43%\">\r\n            <div class=\"float-right d-flex align-items-center\">\r\n              <b-button-group>\r\n                <b-button\r\n                    class=\"float-right\"\r\n                    variant=\"primary\"\r\n                    @click=\"signData\"\r\n                >\r\n                  <b-overlay\r\n                      :opacity=\"0.1\"\r\n                      :show=\"loaderQrCode\"\r\n                      rounded=\"sm\"\r\n                  >\r\n                    <i class=\"fa fa-qrcode mr-1\"></i>\r\n                    {{ $t(\"actions.qrcode\") }}\r\n                  </b-overlay>\r\n                </b-button>\r\n                <b-button\r\n                    class=\"float-right mr-2\"\r\n                    variant=\"success\"\r\n                    @click=\"save\"\r\n                >\r\n                  <i class=\"fa fa-save\"></i>\r\n                  {{ $t(\"actions.save\") }}\r\n                </b-button>\r\n              </b-button-group>\r\n\r\n              <b-button\r\n                  :to=\"{name: 'LetterIncome'}\"\r\n                  class=\"float-right mr-2\"\r\n                  variant=\"primary\"\r\n              >\r\n                <i class=\"fa fa-arrow-left\"></i>\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-5\">\r\n        <b-row>\r\n          <b-col cols=\"12\">\r\n            <div class=\"d-flex justify-content-center\">\r\n              <b-overlay\r\n                  :opacity=\"1\"\r\n                  :show=\"loaderPdf\"\r\n                  rounded=\"lg\"\r\n                  variant=\"white\"\r\n              >\r\n                <div\r\n                    id=\"pdfId\"\r\n                    style=\"\r\n                    width: 270mm !important;\r\n                    min-height: 210mm;\r\n                    position: relative;\r\n                  \"\r\n                >\r\n                  <VueDragResize\r\n                      v-if=\"imgUrl && qrCodePage == currentPage\"\r\n                      :h=\"110\"\r\n                      :isActive=\"true\"\r\n                      :isResizable=\"false\"\r\n                      :parent=\"true\"\r\n                      :parentLimitation=\"true\"\r\n                      :w=\"110\"\r\n                      :x=\"x\"\r\n                      :y=\"y\"\r\n                      style=\"z-index: 3\"\r\n                      v-on:dragging=\"resize\"\r\n                      v-on:resizing=\"resize\"\r\n                  >\r\n                    <img\r\n                        :src=\"`${\r\n                        imgUrl\r\n                          ? `data:image/png;base64, ${imgUrl}`\r\n                          : require('@/assets/img.png')\r\n                      }`\"\r\n                        @mouseenter=\"mouseEnter\"\r\n                        @mouseleave=\"mouseLeave\"\r\n                        @mousemove=\"mousemove\"\r\n                    />\r\n                  </VueDragResize>\r\n\r\n                  <pdf\r\n                      v-if=\"src\"\r\n                      ref=\"myPdfComponent\"\r\n                      :page=\"currentPage\"\r\n                      :src=\"src\"\r\n                      @num-pages=\"numPages = $event\"\r\n                  />\r\n                </div>\r\n              </b-overlay>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n        <b-row>\r\n          <b-col cols=\"12\">\r\n            <div class=\"d-flex mt-4 justify-content-center\">\r\n              <div\r\n                  class=\"d-flex mt-4\"\r\n                  style=\"overflow: auto; max-width: 90%\"\r\n              >\r\n                <div\r\n                    v-for=\"page in numPages\"\r\n                    :key=\"page + 'page'\"\r\n                    class=\"ml-3 mb-4\"\r\n                >\r\n                  <div\r\n                      :class=\" currentPage == page ? 'my-card-hovered-pdf-active' : '' \"\r\n                      class=\"my-card-hovered-pdf\"\r\n                      @click.prevent=\"setCurrentPage(page)\"\r\n                  >\r\n                    <div style=\"width: 200px;!important;position:relative\">\r\n                      <div\r\n                          v-if=\"imgUrl && qrCodePage == page\"\r\n                          :style=\"{\r\n                          top: `${y / 5.1}px`,\r\n                          left: `${x / 5.08}px`,\r\n                        }\"\r\n                          style=\"position: absolute; z-index: 999\"\r\n                      >\r\n                        <img\r\n                            v-if=\"imgUrl\"\r\n                            :height=\"20\"\r\n                            :src=\"`${\r\n                            imgUrl\r\n                              ? `data:image/png;base64, ${imgUrl}`\r\n                              : require('@/assets/img.png')\r\n                          }`\"\r\n                            :width=\"20\"\r\n                        />\r\n                      </div>\r\n\r\n                      <pdf\r\n                          v-if=\"src\"\r\n                          :page=\"page\"\r\n                          :src=\"src\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <b-modal\r\n        v-model=\"letter.modal\"\r\n        :title=\"`${$t('forSignature')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <BaseMultiselectWithValidation\r\n          v-if=\"this.currentDoc.letterType === 'LETTER_FINISH'\"\r\n          v-model=\"employee.id\"\r\n          :custom-label=\"customLabelEmployeeList\"\r\n          :label=\"$t('column.employee')\"\r\n          :max-height=\"600\"\r\n          :options=\"employee.list.map(e => e.id)\"\r\n          :show-labels=\"false\"\r\n          class=\"required\"\r\n          label-on-top\r\n          open-direction=\"bottom\"\r\n          placeholder=\"\"\r\n          rules=\"required\"\r\n          @search-change=\"fetchEmployeeList\"\r\n      />\r\n\r\n      <BaseMultiselectWithValidation\r\n          v-if=\"this.currentDoc.letterType === 'LETTER_NOT_BELONG'\"\r\n          v-model=\"commissionType.id\"\r\n          :custom-label=\"customLabelCommissionTypeList\"\r\n          :label=\"$t('submodules.commission.special_commission_type.title')\"\r\n          :max-height=\"600\"\r\n          :options=\"commissionType.list.map(e => e.id)\"\r\n          :show-labels=\"false\"\r\n          class=\"required\"\r\n          label-on-top\r\n          open-direction=\"bottom\"\r\n          placeholder=\"\"\r\n          rules=\"required\"\r\n          @search-change=\"fetchCommissionTypeList\"\r\n      />\r\n\r\n      <b-form-textarea\r\n          v-model=\"letter.comment\"\r\n          :placeholder=\"$t('submodules.doc.summary')\"\r\n          class=\"mt-3\"\r\n          rows=\"5\"\r\n      ></b-form-textarea>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"success\"\r\n            @click=\"openSignatureModalForLetterReject\"\r\n        >\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"letter.loader\"\r\n              rounded=\"sm\"\r\n          >\r\n            {{ $t(\"actions.continue\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n\r\n    <b-modal\r\n        v-model=\"signatureModal\"\r\n        :title=\"`${$t('submodules.reports.make_sign')}`\"\r\n        hide-footer\r\n        scrollable\r\n        size=\"lg\"\r\n    >\r\n      <b-overlay\r\n          :opacity=\"0.1\"\r\n          :show=\"loaderSign\"\r\n          rounded=\"sm\"\r\n      >\r\n        <SignKeys\r\n            :dataToSign=\"currentDoc\"\r\n            @sign=\"signSuccess\"\r\n        />\r\n      </b-overlay>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import Layout from \"@/router/layouts/main\";\r\n\r\nimport {showMsgError} from \"@/helper\";\r\nimport pdf from \"vue-pdf\";\r\nimport Service from \"../letterService\";\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport SignKeys from \"../SignKeys.vue\";\r\nimport VueDragResize from \"vue-drag-resize\";\r\nimport {mapState} from \"vuex\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      letter: {\r\n        modal: false,\r\n        loader: false,\r\n        comment: '',\r\n      },\r\n      currentPage: 1,\r\n      employee: {\r\n        list: [],\r\n        id: null\r\n      },\r\n      commissionType: {\r\n        list: [],\r\n        id: null\r\n      },\r\n      pageCount: 0,\r\n      src: null,\r\n      imgUrl: null,\r\n      width: 110,\r\n      height: 110,\r\n      x: 200,\r\n      y: 300,\r\n      numPages: undefined,\r\n      pageYOffset: 0,\r\n      loaderQrCode: false,\r\n      qrCodePage: null,\r\n      loaderPdf: false,\r\n      currentDoc: {},\r\n      signatureModal: false,\r\n      deleteQrPosition: false,\r\n      loaderSign: false,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState('auth', ['UserInfo']),\r\n    ...mapState('auth', 'currentApplicationItem')\r\n  },\r\n  components: {\r\n    VueDragResize,\r\n    SignKeys,\r\n    pdf,\r\n  },\r\n  created() {\r\n    this.getByIdLetter();\r\n    document.addEventListener(\"keyup\", this.keyUpEvents);\r\n  },\r\n  methods: {\r\n    openSignatureModalForLetterReject() {\r\n      if (this.letter.comment) {\r\n        this.signatureModal = true;\r\n      } else {\r\n        this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n      }\r\n    },\r\n    customLabelEmployeeList(opt) {\r\n      let selected = this.employee.list.find(e => e.id === opt);\r\n      if (selected) {\r\n        return selected.fullName;\r\n      }\r\n      return ``;\r\n    },\r\n    customLabelCommissionTypeList(opt) {\r\n      let selected = this.commissionType.list.find(e => e.id === opt);\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    fetchEmployeeList(keyword = '', callback = null) {\r\n      console.log(keyword);\r\n      if (!keyword && this.employee.list.length) {\r\n        if (callback) {\r\n          if (callback && typeof callback === 'function') {\r\n            return callback(this.employee.list)\r\n          }\r\n        }\r\n        return this.employee.list;\r\n      }\r\n      crudAndListsService.searchListWithKeyword('/employee',\r\n          {...this.var_default_search_payload, keyword: keyword}, 'inner', true)\r\n          .then(res => {\r\n            this.employee.list = res.data.list\r\n            if (callback && typeof callback === 'function') {\r\n              return callback(res.data)\r\n            }\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    fetchCommissionTypeList(keyword = '', callback = null) {\r\n      Service.searchList('directory/commission/commission-type', this.var_default_search_payload, null, true)\r\n          .then(res => {\r\n            this.commissionType.list = res.data.list\r\n            callback();\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    convertToPdf(selectedItem, forSign = false) {\r\n      return new Promise((res, rej) => {\r\n        let config = {\r\n          url: `${selectedItem.url}`,\r\n          outputtype: \".pdf\",\r\n          forSign: forSign,\r\n          key: selectedItem.key,\r\n        };\r\n        Service.convertToPdfByApi(config)\r\n            .then((rs) => {\r\n              if (rs.data.uploadPath) {\r\n                /* this.$nextTick(() => {\r\n                    let loadingTask = pdf.createLoadingTask(\r\n                        `${this.baseUrl}/${rs.data.uploadPath}`\r\n                    );\r\n                    this.src = loadingTask;\r\n                }); */\r\n                res(rs.data.uploadPath);\r\n              } else {\r\n                res(false);\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              // this.catchErr(e);\r\n              rej(e);\r\n            });\r\n      });\r\n    },\r\n    mouseEnter() {\r\n      this.deleteQrPosition = true;\r\n    },\r\n    mouseLeave() {\r\n      this.deleteQrPosition = false;\r\n    },\r\n    mousemove() {\r\n      this.deleteQrPosition = true;\r\n    },\r\n    async signSuccess(data) {\r\n      this.loaderSign = true;\r\n      let payload = {\r\n        signedContent: data.content,\r\n        inn: data.inn,\r\n        pnfl: data.pnfl\r\n      };\r\n      switch (this.currentDoc.letterType) {\r\n        case 'COMPROMISE_DECISION':\r\n          Service.makeSignedBeforeCommission(payload, this.$route.params.id, this.letter.comment,\r\n              this.x, this.y, this.currentPage - 1)\r\n              .then(async () => {\r\n                this.$router.push({name: 'CommissionProjects'});\r\n                showMsgSuccess(this.$t(\"successDocSigned\"));\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              })\r\n              .finally(() => {\r\n                this.loaderSign = false;\r\n              });\r\n          break;\r\n        case 'PRESCRIPTION_COMMISSION':\r\n          Service.makeSignedToClosed(payload, this.$route.params.id, this.letter.comment,\r\n              this.x, this.y, this.currentPage - 1)\r\n              .then(async () => {\r\n                this.$router.push({name: 'CommissionProjects'});\r\n                showMsgSuccess(this.$t(\"successDocSigned\"));\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              })\r\n              .finally(() => {\r\n                this.loaderSign = false;\r\n              });\r\n          break;\r\n        case 'LETTER_FINISH':\r\n          Service.makeSignedFinishLetter(this.$route.params.id, this.employee.id, this.letter.comment, payload,\r\n              this.x, this.y, this.currentPage - 1)\r\n              .then(async () => {\r\n                this.$router.push({name: 'CommissionProjects'});\r\n                showMsgSuccess(this.$t(\"successDocSigned\"));\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              })\r\n              .finally(() => {\r\n                this.loaderSign = false;\r\n              });\r\n          break;\r\n        case 'LETTER_NOT_BELONG':\r\n          Service.signDoc(payload, this.$route.params.id,\r\n              this.x, this.y, this.currentPage - 1, this.commissionType.id, this.letter.comment)\r\n              .then(async () => {\r\n                this.$router.push({name: 'CommissionProjects'});\r\n                showMsgSuccess(this.$t(\"successDocSigned\"));\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              })\r\n              .finally(() => {\r\n                this.loaderSign = false;\r\n              });\r\n          break;\r\n        default:\r\n          showMsgError(this.$t(\"qrcodeNotFound\"));\r\n          break;\r\n      }\r\n    },\r\n    getByIdLetter() {\r\n      Service.getByIdLetter(this.$route.params.id2)\r\n          .then((rs) => {\r\n            this.currentDoc = rs.data;\r\n            this.loaderPdf = true;\r\n            if (!this.currentDoc) {\r\n              return false;\r\n            }\r\n            if (!this.currentDoc.fileType) {\r\n              this.currentDoc.fileType = this.getExt(this.currentDoc.url);\r\n            }\r\n            switch (this.currentDoc.letterType) {\r\n              case 'LETTER_FINISH':\r\n                this.fetchEmployeeList();\r\n              break;\r\n            }\r\n            if (this.currentDoc.fileType.toLowerCase() !== 'pdf') {\r\n              this.convertToPdf(rs.data).then((uploadPath) => {\r\n                if (!uploadPath) {\r\n                  setTimeout(() => {\r\n                    this.convertToPdf(rs.data)\r\n                        .then((uploadPath2) => {\r\n                          this.nextTick(uploadPath2);\r\n                          this.loaderPdf = false;\r\n                        })\r\n                        .catch((e) => {\r\n                          this.loaderPdf = false;\r\n                        });\r\n                  }, 4000);\r\n                } else {\r\n                  this.nextTick(uploadPath);\r\n                  this.loaderPdf = false;\r\n                }\r\n              });\r\n            } else {\r\n              this.nextTick('/' + this.currentDoc.url);\r\n              this.loaderPdf = false;\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n    },\r\n    nextTick(uploadPath) {\r\n      this.src = pdf.createLoadingTask(\r\n          `${this.baseUrl}/${uploadPath}`\r\n      );\r\n    },\r\n    keyUpEvents(evt) {\r\n      if (\r\n          evt.keyCode == 46 &&\r\n          this.currentPage == this.qrCodePage &&\r\n          this.deleteQrPosition\r\n      ) {\r\n        this.imgUrl = null;\r\n        this.qrCodePage = null;\r\n        this.deleteQrPosition = false;\r\n      } else if (\r\n          evt.keyCode == 39 &&\r\n          this.currentPage != this.numPages &&\r\n          this.src\r\n      ) {\r\n        this.currentPage++;\r\n      } else if (evt.keyCode == 37 && this.currentPage > 1 && this.src) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    setCurrentPage(page) {\r\n      this.currentPage = page;\r\n    },\r\n    resize(newRect) {\r\n      this.width = newRect.width;\r\n      this.height = newRect.height;\r\n      this.y = newRect.top;\r\n      this.x = newRect.left;\r\n    },\r\n    getPdf() {\r\n      return new Promise((res, rej) => {\r\n        this.convertToPdf();\r\n        Service.getDocPdf(this.$route.params.id)\r\n            .then((rs) => {\r\n              let pdfBase64 = rs.data;\r\n              this.$nextTick(() => {\r\n                this.src = pdf.createLoadingTask(\r\n                    `data:application/pdf;base64, ${pdfBase64}`\r\n                );\r\n              });\r\n              res(rs.data);\r\n            })\r\n            .catch((e) => {\r\n              rej(e);\r\n            })\r\n            .finally(() => {\r\n              setTimeout(() => {\r\n                this.loaderPdf = false;\r\n              }, 500);\r\n            });\r\n      });\r\n    },\r\n    signData() {\r\n      if (this.src) {\r\n        if (this.qrCodePage && this.imgUrl) {\r\n          showMsgError(this.$t(\"qrcodeWaring\"));\r\n        } else {\r\n          this.loaderQrCode = true;\r\n          Service.letterQRCODESendToRais(this.currentDoc.id)\r\n              .then((rs) => {\r\n                if (rs.data) {\r\n                  this.qrCodePage = this.currentPage;\r\n                  this.imgUrl = rs.data;\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              })\r\n              .finally(() => {\r\n                this.loaderQrCode = false;\r\n              });\r\n        }\r\n      } else {\r\n        showMsgError(this.$t(\"docNotUploaded\"));\r\n      }\r\n    },\r\n    save() {\r\n      if (!this.qrCodePage || !this.imgUrl || !this.src) {\r\n        return showMsgError(this.$t(\"qrcodeNotFound\"));\r\n      }\r\n      switch (this.currentDoc.letterType) {\r\n        case 'COMPROMISE_DECISION':\r\n          this.letter.modal = true;\r\n          break;\r\n        case 'PRESCRIPTION_COMMISSION':\r\n          this.letter.modal = true;\r\n          break;\r\n        case 'LETTER_FINISH':\r\n          this.letter.modal = true;\r\n          break;\r\n        case 'LETTER_NOT_BELONG':\r\n          this.fetchCommissionTypeList();\r\n          this.letter.modal = true;\r\n          break;\r\n        default:\r\n          showMsgError(this.$t(\"qrcodeNotFound\"));\r\n          break;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.stickyHead {\r\n  margin: 0px !important;\r\n  padding: 15px !important;\r\n  border-radius: 0px;\r\n  position: fixed;\r\n  top: 70px;\r\n  left: 0;\r\n  right: 0;\r\n  background: white;\r\n  z-index: 4;\r\n  width: 100%;\r\n}\r\n</style>"]}]}