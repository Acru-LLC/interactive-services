{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\tasks.vue?vue&type=style&index=0&id=97b6884c&lang=scss&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\projects\\tasks.vue","mtime":1674799497710},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1667355376309},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1675061970775},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1667355363746},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1675061971809},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQouc2Qgew0KICAuYi1zaWRlYmFyIHsNCiAgICB3aWR0aDogNzAwcHggIWltcG9ydGFudDsNCiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTsNCiAgfQ0KfQ0KLmNvbiB7DQogIG1heC13aWR0aDogMTYwcmVtOw0KICB3aWR0aDogMTAwJTsNCiAgaGVpZ2h0OiA3MHZoOw0KICBtYXJnaW46IDAgYXV0bzsNCiAgb3ZlcmZsb3c6IGF1dG87DQp9DQouY2FyZHMtZHJvcC1wcmV2aWV3IHsNCiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0MCwgMjQwLCAyNDcsIDEpICFpbXBvcnRhbnQ7DQogIGJvcmRlcjogMXB4IGRhc2hlZCAjYWJjICFpbXBvcnRhbnQ7DQogIG1hcmdpbjogMHB4IDVweCA1cHggNXB4ICFpbXBvcnRhbnQ7DQp9DQoNCi5ib3ggew0KICB3aWR0aDogMjJyZW07DQogIGZsZXg6IDAgMCBhdXRvOw0KICBtYXJnaW4tcmlnaHQ6IDEwcHg7DQogIC8vIG1heC1oZWlnaHQ6IDY2dmg7DQp9DQoNCi8vICNzdHlsZS0yOjotd2Via2l0LXNjcm9sbGJhci10cmFjayB7DQovLyAgIGJveC1zaGFkb3c6IGluc2V0IDAgMCA2cHggcmdiYSgwLCAwLCAwLCAwLjMpOw0KLy8gICBib3JkZXItcmFkaXVzOiAxMHB4Ow0KLy8gICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1Ow0KLy8gfQ0KDQovLyAjc3R5bGUtMjo6LXdlYmtpdC1zY3JvbGxiYXIgew0KLy8gICB3aWR0aDogMTJweDsNCi8vICAgaGVpZ2h0OiAxNHB4Ow0KLy8gICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1Ow0KLy8gfQ0KDQovLyAjc3R5bGUtMjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIgew0KLy8gICBib3JkZXItcmFkaXVzOiAxMHB4Ow0KLy8gICBib3gtc2hhZG93OiBpbnNldCAwIDAgNXB4IHJnYmEoMCwgMCwgMCwgMC4zKTsNCi8vICAgYmFja2dyb3VuZC1jb2xvcjogIzU1NmVlNjsNCi8vIH0NCg=="},{"version":3,"sources":["tasks.vue"],"names":[],"mappings":";AAmdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"tasks.vue","sourceRoot":"src/modules/projects","sourcesContent":["<script>\r\nimport PageHeader from \"./page-header\";\r\nimport appConfig from \"@/app.config\";\r\nimport Board from \"./board\";\r\n\r\nimport projectService from \"@/shared/services/projectService\";\r\nimport { required } from \"vuelidate/lib/validators\";\r\n/**\r\n * Kanban-board component\r\n */\r\nimport ProjEmployees from \"./proj-employes\";\r\nimport { Container, Draggable } from \"vue-smooth-dnd\";\r\nimport colors from \"@/components/colors\";\r\nimport CardInfo from \"./card-info\";\r\nimport BoardMobile from \"./boards-mobile\";\r\nimport i18n from \"@/i18n\";\r\nexport default {\r\n  watch: {\r\n    widthWindow: {\r\n      handler(v) {\r\n        this.setWindowWidthPrivate(v);\r\n      },\r\n    },\r\n  },\r\n  validations: {\r\n    b: {\r\n      name: { required },\r\n    },\r\n  },\r\n  page: {\r\n    title: i18n.t('tasks_list'),\r\n    meta: [\r\n      {\r\n        name: \"description\",\r\n        content: appConfig.description,\r\n      },\r\n    ],\r\n  },\r\n  components: {\r\n    colors,\r\n    PageHeader,\r\n    Board,\r\n    Draggable,\r\n    ProjEmployees,\r\n    Container,\r\n    CardInfo,\r\n    BoardMobile,\r\n  },\r\n  data() {\r\n    return {\r\n      upperDropPlaceholderOptions: {\r\n        className: \"cards-drop-preview\",\r\n        animationDuration: \"150\",\r\n        showOnTop: true,\r\n      },\r\n      project: {},\r\n      isModal: false,\r\n      componentKey: 0,\r\n      isAddBoard: false,\r\n      title: this.$t(\"tasks_list\"),\r\n      submitted: false,\r\n      items: [\r\n        {\r\n          text: this.$t(\"menu\"),\r\n          href: \"/\",\r\n        },\r\n        {\r\n          text: this.$t(\"proj\"),\r\n          href: \"/projects\",\r\n        },\r\n        {\r\n          text: this.$t(\"tasks_list\"),\r\n          active: true,\r\n        },\r\n      ],\r\n      boards: [],\r\n      b: {\r\n        name: \"\",\r\n      },\r\n      bId: null,\r\n      drag: false,\r\n      taskCard: {},\r\n      removedCardBoard: null,\r\n      dropRes: null,\r\n      selectedColor: \"\",\r\n      isCard: false,\r\n      mobileBoard: false,\r\n      mobilesm: false,\r\n    };\r\n  },\r\n  methods: {\r\n    setWindowWidthPrivate(v) {\r\n      if (v < 992) {\r\n        this.mobileBoard = true;\r\n      } else {\r\n        this.mobileBoard = false;\r\n      }\r\n      if (v < 420) {\r\n        this.mobilesm = true;\r\n      } else {\r\n        this.mobilesm = false;\r\n      }\r\n    },\r\n    clickCardTask(card) {\r\n      this.isCard = true;\r\n      setTimeout(() => {\r\n        this.$refs.cardInfoRef.setCardInfoData(card);\r\n        this.$refs.cardInfoRef.reset();\r\n      }, 200);\r\n    },\r\n    selectColor(v) {\r\n      this.selectedColor = v;\r\n    },\r\n    setProj(proj) {\r\n      this.project = proj;\r\n    },\r\n    getChildPayload(index) {\r\n      return this.boards[index];\r\n    },\r\n\r\n    onDrop(e) {\r\n      let payload = {\r\n        indexBefore: 0,\r\n        indexAfter: 0,\r\n        projectTaskId: e.payload.id,\r\n      };\r\n      if (e.addedIndex != null) {\r\n        let currentIndex = e.addedIndex;\r\n        let afterItem = this.boards[currentIndex + 1];\r\n        let beforeItem = this.boards[currentIndex - 1];\r\n        if (beforeItem) {\r\n          this.$set(payload, \"indexBefore\", beforeItem.id);\r\n        }\r\n        if (afterItem) {\r\n          this.$set(payload, \"indexAfter\", afterItem.id);\r\n        }\r\n        projectService\r\n          .changeIndex(payload)\r\n          .then(async (rs) => {\r\n            this.boards = await this.applyDrag(this.boards, e);\r\n            this.boards.forEach((e) => {\r\n              this.$refs[`${e.id}-boardRef`][0].forceRerender();\r\n            });\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          });\r\n      }\r\n    },\r\n    toggleModal({ task, board }) {\r\n      this.taskCard = task;\r\n      this.bId = board.id;\r\n      this.isModal = true;\r\n      projectService\r\n        .listCardEmployees(task.id)\r\n        .then((rs) => {\r\n          if (rs.data[0] != null) {\r\n            this.$refs.projEmpRef.setSelected(rs.data);\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          // this.catchErr(err);\r\n        });\r\n    },\r\n\r\n    addBoard() {\r\n      this.isAddBoard = true;\r\n      this.b.name = \"\";\r\n      this.bId = null;\r\n    },\r\n    editBoard(b) {\r\n      this.isAddBoard = true;\r\n      this.b.name = b.name;\r\n      this.b.color = b.color;\r\n      this.bId = b.id;\r\n    },\r\n    resetBoard() {\r\n      this.listBoards();\r\n      this.isAddBoard = false;\r\n      this.b.name = \"\";\r\n    },\r\n    createBoard(b) {\r\n      b.preventDefault();\r\n      this.$v.$touch();\r\n      this.submitted = true;\r\n      if (!this.$v.b.$anyError) {\r\n        let id = this.$route.query.id;\r\n        if (this.bId) {\r\n          projectService\r\n            .updateBoard(this.bId, {\r\n              name: this.b.name,\r\n              color: this.selectedColor,\r\n            })\r\n            .then((rs) => {\r\n              this.resetBoard();\r\n              this.successEdited();\r\n            })\r\n            .catch((err) => {\r\n              // this.catchErr(err);\r\n            });\r\n        } else {\r\n          if (id) {\r\n            projectService\r\n              .createBoard(id, { name: this.b.name, color: this.selectedColor })\r\n              .then((rs) => {\r\n                this.successSaved();\r\n                this.resetBoard();\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              });\r\n          } else {\r\n            this.$router.go(-1);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    listBoards() {\r\n      let id = this.$route.query.id;\r\n      if (id) {\r\n        projectService\r\n          .listBoards(id, { page: 0, itemsPerPage: 10 })\r\n          .then((rs) => {\r\n            this.boards = rs.data;\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          });\r\n      } else {\r\n        this.$router.go(-1);\r\n      }\r\n    },\r\n    setTaskCard(data) {\r\n      this.boards.forEach((element) => {\r\n        if (element.id == data.boardId) {\r\n          this.$set(element, \"projectTaskCardsDto\", data.list);\r\n        }\r\n      });\r\n    },\r\n    loadMoreTaskCard({ boardId, list }) {\r\n      this.boards.forEach((el) => {\r\n        if (el.id == boardId) {\r\n          let value = el.projectTaskCardsDto.concat(list);\r\n          this.$set(el, \"projectTaskCardsDto\", value);\r\n        }\r\n      });\r\n    },\r\n    cancelB() {\r\n      this.isAddBoard = false;\r\n      this.b.name = \"\";\r\n    },\r\n    recalculate(id) {\r\n      if (this.$refs[`${id}-boardRef`][0]) {\r\n        this.$refs[`${id}-boardRef`][0].recalculate();\r\n      }\r\n    },\r\n    save(members) {\r\n      if (this.taskCard.id && members.length > 0) {\r\n        projectService\r\n          .updateTaskCard(this.taskCard.id, \"\", null, members)\r\n          .then((rs) => {\r\n            if (this.mobileBoard) {\r\n              this.$refs.mobileBoardRef.refresh();\r\n              this.isModal = false;\r\n              this.successEdited();\r\n              return;\r\n            }\r\n            this.$refs[`${this.bId}-boardRef`][0].listTasks(this.bId);\r\n            this.isModal = false;\r\n            this.successEdited();\r\n          })\r\n          .catch((err) => {\r\n            this.isModal = false;\r\n            // this.catchErr(err);\r\n          });\r\n      } else {\r\n        this.enterInfo();\r\n      }\r\n    },\r\n    setSourceId(b, d) {\r\n      this.removedCardBoard = b;\r\n      this.dropRes = d;\r\n    },\r\n    removeByIndex() {\r\n      if (this.removedCardBoard && this.dropRes) {\r\n        this.boards.forEach((e) => {\r\n          if (this.removedCardBoard.id === e.id) {\r\n            let foundIndex = e.projectTaskCardsDto.findIndex(\r\n              (d) => d.id == this.dropRes.payload().id\r\n            );\r\n            e.projectTaskCardsDto.splice(foundIndex, 1);\r\n          }\r\n        });\r\n      }\r\n    },\r\n    pushByIndex(bId, dropRes) {\r\n      this.boards.forEach((e) => {\r\n        if (e.id === bId) {\r\n          this.$set(\r\n            e,\r\n            \"projectTaskCardsDto\",\r\n            this.applyDragCard(e.projectTaskCardsDto, dropRes)\r\n          );\r\n        }\r\n      });\r\n    },\r\n    //FOR DRAG DROP COMONENT\r\n    applyDrag(arr, dragResult) {\r\n      const { removedIndex, addedIndex, payload } = dragResult;\r\n      if (removedIndex === null && addedIndex === null) return arr;\r\n\r\n      const result = [...arr];\r\n      let itemToAdd = payload;\r\n\r\n      if (removedIndex !== null) {\r\n        itemToAdd = result.splice(removedIndex, 1)[0];\r\n      }\r\n\r\n      if (addedIndex !== null) {\r\n        result.splice(addedIndex, 0, itemToAdd);\r\n      }\r\n\r\n      return result;\r\n    },\r\n\r\n    applyDragCard(arr, dragResult) {\r\n      const { removedIndex, addedIndex, payload } = dragResult;\r\n      if (removedIndex === null && addedIndex === null) return arr;\r\n\r\n      const result = [...arr];\r\n      let itemToAdd = payload();\r\n\r\n      if (removedIndex !== null) {\r\n        itemToAdd = result.splice(removedIndex, 1)[0];\r\n      }\r\n\r\n      if (addedIndex !== null) {\r\n        result.splice(addedIndex, 0, itemToAdd);\r\n      }\r\n\r\n      return result;\r\n    },\r\n  },\r\n  async created() {\r\n    await this.listBoards();\r\n    window.addEventListener(\"resize\", () => {\r\n      this.innerWidth = window.innerWidth;\r\n    });\r\n    this.setWindowWidthPrivate(this.widthWindow);\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <PageHeader\r\n      :mobile=\"mobilesm\"\r\n      @setProj=\"setProj\"\r\n      @addBoard=\"addBoard\"\r\n      :title=\"title\"\r\n      :items=\"items\"\r\n    />\r\n    <b-sidebar\r\n      backdrop-variant=\"dark\"\r\n      backdrop\r\n      class=\"sd\"\r\n      shadow\r\n      sidebar-class=\"p-0\"\r\n      :no-header=\"true\"\r\n      right\r\n      v-model=\"isModal\"\r\n    >\r\n      <div v-if=\"isModal\">\r\n        <proj-employees\r\n          @save=\"save\"\r\n          @cancel=\"isModal = false\"\r\n          ref=\"projEmpRef\"\r\n        />\r\n      </div>\r\n    </b-sidebar>\r\n    <!-- card info  -->\r\n    <b-sidebar\r\n      backdrop-variant=\"dark\"\r\n      backdrop\r\n      class=\"sd\"\r\n      shadow\r\n      sidebar-class=\"p-0\"\r\n      :no-header=\"true\"\r\n      right\r\n      v-model=\"isCard\"\r\n    >\r\n      <CardInfo :isCard=\"isCard\" ref=\"cardInfoRef\" />\r\n    </b-sidebar>\r\n    <!-- card info end -->\r\n    <div v-if=\"mobileBoard\">\r\n      <BoardMobile\r\n        ref=\"mobileBoardRef\"\r\n        @setTaskCard=\"setTaskCard\"\r\n        @toggleModal=\"toggleModal\"\r\n        @loadMoreTaskCard=\"loadMoreTaskCard\"\r\n        @clickCardTask=\"clickCardTask\"\r\n        :list=\"boards\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"con\" id=\"style-2\" v-else>\r\n      <Container\r\n        drag-class=\"card-ghost\"\r\n        drop-class=\"card-ghost-drop\"\r\n        :get-child-payload=\"getChildPayload\"\r\n        drag-handle-selector=\".column-drag-handle\"\r\n        :drop-placeholder=\"upperDropPlaceholderOptions\"\r\n        orientation=\"horizontal\"\r\n        @drop=\"onDrop\"\r\n      >\r\n        <Draggable\r\n          v-for=\"(item, index) in boards\"\r\n          :key=\"item.id + 'DRAGGABLEITEM'\"\r\n        >\r\n          <Board\r\n            @clickCardTask=\"clickCardTask\"\r\n            :proj=\"project\"\r\n            @setSourceId=\"setSourceId\"\r\n            @removeByIndex=\"removeByIndex\"\r\n            @pushByIndex=\"pushByIndex\"\r\n            :indexB=\"index\"\r\n            @toggleModal=\"toggleModal\"\r\n            :ref=\"`${item.id}-boardRef`\"\r\n            class=\"box\"\r\n            @editBoard=\"editBoard\"\r\n            @successDelete=\"listBoards\"\r\n            @loadMoreTaskCard=\"loadMoreTaskCard\"\r\n            @setTaskCard=\"setTaskCard\"\r\n            :board=\"item\"\r\n          />\r\n        </Draggable>\r\n      </Container>\r\n    </div>\r\n    <b-modal\r\n      v-model=\"isAddBoard\"\r\n      size=\"md\"\r\n      :no-close-on-backdrop=\"true\"\r\n      @cancel=\"cancelB\"\r\n      @ok=\"createBoard\"\r\n      :ok-variant=\"'success'\"\r\n      :cancel-variant=\"'outline-danger'\"\r\n      :ok-title=\"$t('actions.save')\"\r\n      :cancel-title=\"$t('actions.cancel')\"\r\n      hide-header\r\n      body-class=\"p-0\"\r\n    >\r\n      <div class=\"p-4\">\r\n        <b-form-input\r\n          size=\"lg\"\r\n          :class=\"{ 'is-invalid': submitted && $v.b.name.$error }\"\r\n          :placeholder=\"$t('column.name')\"\r\n          v-model=\"b.name\"\r\n          class=\"mb-2\"\r\n        ></b-form-input>\r\n        <colors :propColor=\"b.color\" @selectColor=\"selectColor\" />\r\n      </div>\r\n    </b-modal>\r\n    <!-- end row -->\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n.sd {\r\n  .b-sidebar {\r\n    width: 700px !important;\r\n    background: white;\r\n  }\r\n}\r\n.con {\r\n  max-width: 160rem;\r\n  width: 100%;\r\n  height: 70vh;\r\n  margin: 0 auto;\r\n  overflow: auto;\r\n}\r\n.cards-drop-preview {\r\n  background-color: rgb(240, 240, 247, 1) !important;\r\n  border: 1px dashed #abc !important;\r\n  margin: 0px 5px 5px 5px !important;\r\n}\r\n\r\n.box {\r\n  width: 22rem;\r\n  flex: 0 0 auto;\r\n  margin-right: 10px;\r\n  // max-height: 66vh;\r\n}\r\n\r\n// #style-2::-webkit-scrollbar-track {\r\n//   box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\r\n//   border-radius: 10px;\r\n//   background-color: #f5f5f5;\r\n// }\r\n\r\n// #style-2::-webkit-scrollbar {\r\n//   width: 12px;\r\n//   height: 14px;\r\n//   background-color: #f5f5f5;\r\n// }\r\n\r\n// #style-2::-webkit-scrollbar-thumb {\r\n//   border-radius: 10px;\r\n//   box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.3);\r\n//   background-color: #556ee6;\r\n// }\r\n</style>\r\n"]}]}