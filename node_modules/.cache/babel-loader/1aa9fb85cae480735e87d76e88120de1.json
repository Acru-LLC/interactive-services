{"remainingRequest":"D:\\ACRU\\my-fairtech\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ACRU\\my-fairtech\\node_modules\\babel-loader\\lib\\index.js!D:\\ACRU\\my-fairtech\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ACRU\\my-fairtech\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ACRU\\my-fairtech\\src\\shared\\views\\components\\commission\\document\\FromToEmployees.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\ACRU\\my-fairtech\\src\\shared\\views\\components\\commission\\document\\FromToEmployees.vue","mtime":1719222285909},{"path":"D:\\ACRU\\my-fairtech\\babel.config.js","mtime":1719222278287},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719222280288},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1719222284617},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\babel-loader\\lib\\index.js","mtime":1719222279696},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719222280288},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\vue-loader\\lib\\index.js","mtime":1719222284893}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiRDovQUNSVS9teS1mYWlydGVjaC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vcmVnZW5lcmF0b3JSdW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L0FDUlUvbXktZmFpcnRlY2gvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnB1c2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7Ci8qDQoqIFlPVSBNVVNUIFNFTkQge3sgTUFJTl9BUElfVVJMIH19IFRPIENSVURfU0VSVklDRSAqLwppbXBvcnQgY3J1ZEFuZExpc3RzU2VydmljZSBmcm9tICJAL3NoYXJlZC9zZXJ2aWNlcy9jcnVkX2FuZF9saXN0LnNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0Zyb21Ub0VtcGxveWVlcycsCiAgLyogDQogIERBVEEgKi8KICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWFpbGluZ1B1cnBvc2VNb2RhbDogZmFsc2UsCiAgICAgIG1haWxpbmdQdXJwb3NlczogW10sCiAgICAgIHByb2Nlc3NNb2RhbDogZmFsc2UsCiAgICAgIHByb2Nlc3NlczogW10sCiAgICAgIGVtcGxveWVlczogW10sCiAgICAgIGFzc2lnbm1lbnQ6IFt7CiAgICAgICAgaWQ6IG51bGwsCiAgICAgICAgZW1wbG95ZWVJZDogbnVsbCwKICAgICAgICB0b0VtcGxveWVlczogW3t9XQogICAgICB9XSwKICAgICAgZmlsdGVyZWRGcm9tRW1wbG95ZWVzOiBbXQogICAgfTsKICB9LAogIC8qIA0KICBNRVRIT0RTICovCiAgbWV0aG9kczogewogICAgaXNQcm9qZWN0T3duZXJDaGFuZ2VkOiBmdW5jdGlvbiBpc1Byb2plY3RPd25lckNoYW5nZWQoZSwgaW5kZXgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKICAgICAgdmFyIHRvSW5kZXggPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IG51bGw7CiAgICAgIHRoaXMuYXNzaWdubWVudCA9IHRoaXMuYXNzaWdubWVudC5tYXAoZnVuY3Rpb24gKGEsIGkpIHsKICAgICAgICBfdGhpcy4kc2V0KGEsICd0b0VtcGxveWVlcycsIGEudG9FbXBsb3llZXMubWFwKGZ1bmN0aW9uIChlbXAsIGlkeCkgewogICAgICAgICAgaWYgKGluZGV4ID09IGkgJiYgdG9JbmRleCA9PSBpZHgpIHsKICAgICAgICAgICAgX3RoaXMuJHNldChlbXAsICdpc1Byb2plY3RPd25lcicsIGUpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXMuJHNldChlbXAsICdpc1Byb2plY3RPd25lcicsIGZhbHNlKTsKICAgICAgICAgIH0KICAgICAgICAgIHJldHVybiBlbXA7CiAgICAgICAgfSkpOwogICAgICAgIHJldHVybiBhOwogICAgICB9KTsKICAgIH0sCiAgICBlbXBsb3llZVNlbGVjdGVkOiBmdW5jdGlvbiBlbXBsb3llZVNlbGVjdGVkKCkgewogICAgICAvLyB0aGlzLiRlbWl0KCdlbXBsb3llZVNlbGVjdGVkJykKICAgIH0sCiAgICBhZGRNZW1iZXJFbXBsb3llZTogZnVuY3Rpb24gYWRkTWVtYmVyRW1wbG95ZWUobWVtYmVySW5kZXgpIHsKICAgICAgdGhpcy5hc3NpZ25tZW50W21lbWJlckluZGV4XS50b0VtcGxveWVlcy5wdXNoKHt9KTsKICAgIH0sCiAgICBhZGRNZW1iZXI6IGZ1bmN0aW9uIGFkZE1lbWJlcigpIHsKICAgICAgdGhpcy5hc3NpZ25tZW50LnB1c2goewogICAgICAgIGlkOiB0aGlzLmFzc2lnbm1lbnQubGVuZ3RoICsgMSwKICAgICAgICBlbXBsb3llZUlkOiBudWxsLAogICAgICAgIHRvRW1wbG95ZWVzOiBbe31dCiAgICAgIH0pOwogICAgICB0aGlzLmlzUHJvamVjdE93bmVyQ2hhbmdlZChmYWxzZSk7CiAgICB9LAogICAgZGVsZXRlTWVtYmVyOiBmdW5jdGlvbiBkZWxldGVNZW1iZXIoaW5kZXgpIHsKICAgICAgaWYgKGluZGV4ICE9PSAwKSB7CiAgICAgICAgdGhpcy5hc3NpZ25tZW50LnNwbGljZShpbmRleCwgMSk7CiAgICAgIH0KICAgIH0sCiAgICBjdXN0b21MYWJlbE1haWxpbmdQdXJwb3NlOiBmdW5jdGlvbiBjdXN0b21MYWJlbE1haWxpbmdQdXJwb3NlKG9wdCkgewogICAgICB2YXIgc2VsZWN0ZWQgPSB0aGlzLm1haWxpbmdQdXJwb3Nlcy5maW5kKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIGUuaWQgPT0gb3B0OwogICAgICB9KTsKICAgICAgaWYgKHNlbGVjdGVkKSB7CiAgICAgICAgcmV0dXJuICIiLmNvbmNhdCh0aGlzLmdldE5hbWUoewogICAgICAgICAgbmFtZVJ1OiBzZWxlY3RlZC5uYW1lUnUsCiAgICAgICAgICBuYW1lTHQ6IHNlbGVjdGVkLm5hbWVMdCwKICAgICAgICAgIG5hbWVVejogc2VsZWN0ZWQubmFtZVV6CiAgICAgICAgfSkpOwogICAgICB9CiAgICAgIHJldHVybiAiIjsKICAgIH0sCiAgICBjdXN0b21MYWJlbFByb2Nlc3M6IGZ1bmN0aW9uIGN1c3RvbUxhYmVsUHJvY2VzcyhvcHQpIHsKICAgICAgdmFyIHNlbGVjdGVkID0gdGhpcy5wcm9jZXNzZXMuZmluZChmdW5jdGlvbiAoZSkgewogICAgICAgIHJldHVybiBlLmlkID09IG9wdDsKICAgICAgfSk7CiAgICAgIGlmIChzZWxlY3RlZCkgewogICAgICAgIHJldHVybiAiIi5jb25jYXQodGhpcy5nZXROYW1lKHsKICAgICAgICAgIG5hbWVSdTogc2VsZWN0ZWQubmFtZVJ1LAogICAgICAgICAgbmFtZUx0OiBzZWxlY3RlZC5uYW1lTHQsCiAgICAgICAgICBuYW1lVXo6IHNlbGVjdGVkLm5hbWVVegogICAgICAgIH0pKTsKICAgICAgfQogICAgICByZXR1cm4gIiI7CiAgICB9LAogICAgY3VzdG9tTGFiZWxFbXBsb3llZXM6IGZ1bmN0aW9uIGN1c3RvbUxhYmVsRW1wbG95ZWVzKG9wdCkgewogICAgICB2YXIgc2VsZWN0ZWQgPSB0aGlzLmVtcGxveWVlcy5maW5kKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgcmV0dXJuIGUuaWQgPT0gb3B0LmlkOwogICAgICB9KTsKICAgICAgaWYgKHNlbGVjdGVkKSB7CiAgICAgICAgcmV0dXJuICIiLmNvbmNhdChzZWxlY3RlZC5lbXBsb3llZUZ1bGxOYW1lLCAiICgiKS5jb25jYXQodGhpcy5nZXROYW1lKHsKICAgICAgICAgIG5hbWVVejogc2VsZWN0ZWQuZGVwYXJ0bWVudFBhcmVudE5hbWVVeiwKICAgICAgICAgIG5hbWVMdDogc2VsZWN0ZWQuZGVwYXJ0bWVudFBhcmVudE5hbWVMdCwKICAgICAgICAgIG5hbWVSdTogc2VsZWN0ZWQuZGVwYXJ0bWVudFBhcmVudE5hbWVSdQogICAgICAgIH0pLCAiKSIpOwogICAgICB9CiAgICAgIHJldHVybiAiIjsKICAgIH0KICB9LAogIC8qIA0KICBXQVRDSCAqLwogIHdhdGNoOiB7CiAgICBhc3NpZ25tZW50OiB7CiAgICAgIGRlZXA6IHRydWUsCiAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIobmV3VmFsLCBvbGRWYWwpIHsKICAgICAgICB2YXIgX3RoaXMyID0gdGhpczsKICAgICAgICB0aGlzLiRlbWl0KCdhc3NpZ25tZW50Q2hhbmdlZCcpOwogICAgICAgIHRoaXMuZmlsdGVyZWRGcm9tRW1wbG95ZWVzID0gW107CiAgICAgICAgbmV3VmFsLmZvckVhY2goZnVuY3Rpb24gKG1lbWJlcikgewogICAgICAgICAgaWYgKG1lbWJlci50b0VtcGxveWVlcyAmJiBtZW1iZXIudG9FbXBsb3llZXMubGVuZ3RoKSB7CiAgICAgICAgICAgIG1lbWJlci50b0VtcGxveWVlcy5mb3JFYWNoKGZ1bmN0aW9uICh0b0VtcCkgewogICAgICAgICAgICAgIGlmICh0b0VtcC50b0VtcGxveWVlKSB7CiAgICAgICAgICAgICAgICB2YXIgZm91bmRJZHggPSBfdGhpczIuZmlsdGVyZWRGcm9tRW1wbG95ZWVzLmZpbmRJbmRleChmdW5jdGlvbiAoZWwpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGVsLmVtcGxveWVlSWQgPT0gdG9FbXAudG9FbXBsb3llZS5lbXBsb3llZUlkOwogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBpZiAoZm91bmRJZHggPCAwICYmIHRvRW1wLnRvRW1wbG95ZWUuZW1wbG95ZWVJZCkgewogICAgICAgICAgICAgICAgICB2YXIgaW5kZXhJbkFzc2lnbm1lbnQgPSBuZXdWYWwuZmluZEluZGV4KGZ1bmN0aW9uIChvKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKG8uZnJvbUVtcGxveWVlICYmIG8uZnJvbUVtcGxveWVlLmVtcGxveWVlSWQpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBvLmZyb21FbXBsb3llZS5lbXBsb3llZUlkID09IHRvRW1wLnRvRW1wbG95ZWUuZW1wbG95ZWVJZDsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGlmIChpbmRleEluQXNzaWdubWVudCA8IDApIHsKICAgICAgICAgICAgICAgICAgICBfdGhpczIuZmlsdGVyZWRGcm9tRW1wbG95ZWVzLnB1c2godG9FbXAudG9FbXBsb3llZSk7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGlkeEluRnJvbUVtcHMgPSBfdGhpczIuZmlsdGVyZWRGcm9tRW1wbG95ZWVzLmZpbmRJbmRleChmdW5jdGlvbiAoZkVtcCkgewogICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZFbXAuZW1wbG95ZWVJZCA9PSB0b0VtcC50b0VtcGxveWVlLmVtcGxveWVlSWQ7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgaWYgKGlkeEluRnJvbUVtcHMgPiAtMSkgewogICAgICAgICAgICAgICAgICAgICAgX3RoaXMyLmZpbHRlcmVkRnJvbUVtcGxveWVlcy5zcGxpY2UoaWR4SW5Gcm9tRW1wcywgMSk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGZvdW5kSWR4ID4gLTEpIHsKICAgICAgICAgICAgICAgICAgLyogbGV0IGluZGV4SW5Bc3NpZ25tZW50ID0gbmV3VmFsLmZpbmRJbmRleChvID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICBpZiAoby5mcm9tRW1wbG95ZWUgJiYgby5mcm9tRW1wbG95ZWUuZW1wbG95ZWVJZCkgew0KICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gby5mcm9tRW1wbG95ZWUuZW1wbG95ZWVJZCA9PSB0b0VtcC50b0VtcGxveWVlLmVtcGxveWVlSWQNCiAgICAgICAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2UNCiAgICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgICAgaWYgKGluZGV4SW5Bc3NpZ25tZW50ID4gLTEpIHsNCiAgICAgICAgICAgICAgICAgICAgICB0aGlzLmZpbHRlcmVkRnJvbUVtcGxveWVlcy5zcGxpY2UoZm91bmRJZHgsIDEpDQogICAgICAgICAgICAgICAgICB9ICovCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sCiAgLyogDQogIENSRUFURUQgKi8KICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzMyA9IHRoaXM7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZSgpLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfdGhpczMudmFyX2RlZmF1bHRfc2VhcmNoX3BheWxvYWQuaXRlbXNQZXJQYWdlID0gNTAwOwogICAgICAgICAgICAvLyBGRVRDSCBVU0VSUyBXSVRIIEVNUExPWUVFUwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGNydWRBbmRMaXN0c1NlcnZpY2Uuc2VhcmNoTGlzdFdpdGhLZXl3b3JkKCd1c2VyJywgX3RoaXMzLnZhcl9kZWZhdWx0X3NlYXJjaF9wYXlsb2FkLCAnaW5uZXInLCB0cnVlKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICBfdGhpczMuZW1wbG95ZWVzID0gcmVzLmRhdGEubGlzdDsKICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA1OwogICAgICAgICAgICByZXR1cm4gY3J1ZEFuZExpc3RzU2VydmljZS5zZWFyY2hMaXN0KCdiZWZvcmUtY29tbWlzc2lvbi9kaXJlY3RvcnkvbWFpbGluZy1wdXJwb3NlJywgX3RoaXMzLnZhcl9kZWZhdWx0X3NlYXJjaF9wYXlsb2FkLCBudWxsLCB0cnVlKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICBfdGhpczMubWFpbGluZ1B1cnBvc2VzID0gcmVzLmRhdGEubGlzdDsKICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgfSk7CiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSkoKTsKICB9Cn07"},null]}