{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\services\\auth.service.js","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\services\\auth.service.js","mtime":1675054786291},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1675061970665},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1667355397815}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["ApiService","TokenService","REG_MAIN_API_URL","USER_MAIN_API_URL","AuthenticationError","errorCode","message","name","constructor","Error","AuthService","signup","payload","post","confirmPhone","user","inn","verifyCode","username","confirmMail","token","sendVerifyCodeToMail","sendVerifyCode","withLoader","payloadTemp","JSON","parse","stringify","phoneNumber","replaceAll","checkNoUsername","get","isOrgRegistered","tin","pinfl","uid","isYur","position","toString","getKeyForLoginSign","employeeTin","login","password","response","saveToken","data","setUserAvatarUrl","uploadPath","saveRefreshToken","setUserInfo","id","employeeId","settings","userSettings","employeeFullName","employeeFirstName","employeeLastName","employeeMiddleName","setUserId","setIsOuter","isOuter","setHeader","status","loginEsp","signedData","TIN","PNFL","INN","requestData","method","url","config","customRequest","detail","refreshToken","getRefreshToken","grant_type","refresh_token","auth","process","env","VUE_APP_CLIENT_ID","VUE_APP_CLIENT_SECRET","access_token","logout","removeToken","removeUserAvatarUrl","removeRefreshToken","removeSidebar","removeHeader","removeUserInfo","removeUserId","removeIsOuter","unmount401Interceptor"],"sources":["C:/ACRU PROJECT/Fair Tech/acru-frontend/src/shared/services/auth.service.js"],"sourcesContent":["import ApiService from './api.service'\r\nimport { TokenService } from './storage.service'\r\n\r\nconst REG_MAIN_API_URL = 'registration'\r\nconst USER_MAIN_API_URL = 'user'\r\n\r\nclass AuthenticationError extends Error {\r\n    constructor(errorCode, message) {\r\n        super(message)\r\n        this.name = this.constructor.name\r\n        this.message = message\r\n        this.errorCode = errorCode\r\n    }\r\n}\r\n\r\nconst AuthService = {\r\n    signup (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/finish`, payload)\r\n    },\r\n\r\n    confirmPhone (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/confirmation/phone-confirmed?uid=${payload.user.inn}&token=${payload.verifyCode}&username=${payload.user.username}`)\r\n    },\r\n\r\n    confirmMail (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/confirmation/mail-confirmed?uid=${payload.inn}&token=${payload.token}&username=${payload.username}`)\r\n    },\r\n\r\n    sendVerifyCodeToMail (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/send/confirmation/code/to-confirmation`, payload)\r\n    },\r\n\r\n    sendVerifyCode (payload, withLoader = false) {\r\n        let payloadTemp = JSON.parse(JSON.stringify(payload))\r\n        payloadTemp.user.phoneNumber = payloadTemp.user.phoneNumber.replaceAll('-', '')\r\n        payloadTemp.user.phoneNumber = payloadTemp.user.phoneNumber.replaceAll('+', '')\r\n        return ApiService.post(`${REG_MAIN_API_URL}/send/confirmation/code/to-confirmation?uid=${payloadTemp.user.inn}`, payloadTemp, withLoader)\r\n        /*return new Promise(function(resolve) {\r\n            setTimeout(resolve, 1000);\r\n        });*/\r\n    },\r\n\r\n    checkNoUsername (username) {\r\n        return ApiService.get(`${USER_MAIN_API_URL}/check/no-username?username=${username}`)\r\n    },\r\n\r\n    isOrgRegistered (tin, pinfl, uid, isYur, position) {\r\n        return ApiService.get(`${REG_MAIN_API_URL}/check-inn?tin=${tin}&pinfl=${pinfl}&uid=${uid}&isYur=${isYur.toString()}&position=${position}`)\r\n    },\r\n\r\n    getKeyForLoginSign (inn, employeeTin, pinfl) {\r\n        return ApiService.get(`key-for-login-sign?INN=${inn}&TIN=${employeeTin}&PNFL=${pinfl}`)\r\n    },\r\n    /**\r\n     * Login the user and store the access token to TokenService.\r\n     *\r\n     * @returns access_token\r\n     * @throws AuthenticationError\r\n     **/\r\n    login: async function (username, password) {\r\n        try {\r\n            const response = await ApiService.post('auth-payload', { username: username, password: password }, true)\r\n            TokenService.saveToken(response.data.token)\r\n            TokenService.setUserAvatarUrl(response.data.uploadPath)\r\n            TokenService.saveRefreshToken(response.data.token);\r\n            TokenService.setUserInfo({\r\n                id: response.data.id,\r\n                username: response.data.username,\r\n                employeeId: response.data.employeeId,\r\n                settings: response.data.userSettings,\r\n                employeeFullName: response.data.employeeFirstName + ' ' + response.data.employeeLastName + ' ' + (response.data.employeeMiddleName ? response.data.employeeMiddleName : '')\r\n            })\r\n            TokenService.setUserId(response.data.id);\r\n            TokenService.setIsOuter(response.data.isOuter);\r\n            ApiService.setHeader();\r\n            // ApiService.mount401Interceptor();\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new AuthenticationError(error.response.status, error.response.data.message)\r\n        }\r\n    },\r\n    loginEsp: async function (signedData, TIN, PNFL, INN) {\r\n        const requestData = {\r\n            method: 'post',\r\n            url: '/auth-payload',\r\n            data: {\r\n                signedData: signedData,\r\n                TIN: TIN,\r\n                INN: INN,\r\n                tin: TIN,\r\n                PNFL: PNFL\r\n            },\r\n            config: {\r\n                withLoader: true\r\n            }\r\n        };\r\n\r\n        try {\r\n            const response = await ApiService.customRequest(requestData)\r\n            TokenService.saveToken(response.data.token)\r\n            TokenService.setUserAvatarUrl(response.data.uploadPath)\r\n            TokenService.saveRefreshToken(response.data.token);\r\n            TokenService.setUserInfo({\r\n                id: response.data.id,\r\n                username: response.data.username,\r\n                employeeId: response.data.employeeId,\r\n                settings: response.data.userSettings,\r\n                employeeFullName: response.data.employeeFirstName + ' ' + response.data.employeeLastName + ' ' + (response.data.employeeMiddleName ? response.data.employeeMiddleName : '')\r\n            })\r\n            TokenService.setUserId(response.data.id);\r\n            TokenService.setIsOuter(response.data.isOuter);\r\n            ApiService.setHeader();\r\n            // ApiService.mount401Interceptor();\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new AuthenticationError(error.response.status, error.response.data.detail)\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Refresh the access token.\r\n     **/\r\n    refreshToken: async function () {\r\n        const refreshToken = TokenService.getRefreshToken()\r\n\r\n        const requestData = {\r\n            method: 'post',\r\n            url: \"/o/token/\",\r\n            data: {\r\n                grant_type: 'refresh_token',\r\n                refresh_token: refreshToken\r\n            },\r\n            auth: {\r\n                username: process.env.VUE_APP_CLIENT_ID,\r\n                password: process.env.VUE_APP_CLIENT_SECRET\r\n            },\r\n            config: {\r\n                withLoader: true\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await ApiService.customRequest(requestData)\r\n\r\n            TokenService.saveToken(response.data.access_token)\r\n            TokenService.setUserAvatarUrl(response.data.uploadPath)\r\n            TokenService.saveRefreshToken(response.data.refresh_token)\r\n            // Update the header in ApiService\r\n            ApiService.setHeader()\r\n\r\n            return response.data.access_token\r\n        } catch (error) {\r\n            throw new AuthenticationError(error.response.status, error.response.data.detail)\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Logout the current user by removing the token from storage.\r\n     *\r\n     * Will also remove `Authorization Bearer <token>` header from future requests.\r\n     **/\r\n    logout () {\r\n        // Remove the token and remove Authorization header from Api Service as well\r\n        TokenService.removeToken();\r\n        TokenService.removeUserAvatarUrl();\r\n        // TokenService.removeLocale();\r\n        TokenService.removeRefreshToken();\r\n        TokenService.removeSidebar();\r\n        //TokenService.removeMenuMinimize();\r\n        ApiService.removeHeader();\r\n        TokenService.removeUserInfo();\r\n        TokenService.removeUserId();\r\n        TokenService.removeIsOuter();\r\n\r\n        ApiService.unmount401Interceptor()\r\n    }\r\n}\r\n\r\nexport default AuthService\r\n\r\nexport { AuthService, AuthenticationError }\r\n"],"mappings":"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"}]}