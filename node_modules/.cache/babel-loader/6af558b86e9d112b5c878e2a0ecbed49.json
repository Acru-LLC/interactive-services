{"remainingRequest":"D:\\ACRU\\my-fairtech\\node_modules\\thread-loader\\dist\\cjs.js!D:\\ACRU\\my-fairtech\\node_modules\\babel-loader\\lib\\index.js!D:\\ACRU\\my-fairtech\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!D:\\ACRU\\my-fairtech\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\ACRU\\my-fairtech\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\ACRU\\my-fairtech\\src\\modules\\fair-price\\Main.vue?vue&type=template&id=867b611e&scoped=true","dependencies":[{"path":"D:\\ACRU\\my-fairtech\\src\\modules\\fair-price\\Main.vue","mtime":1719222285801},{"path":"D:\\ACRU\\my-fairtech\\babel.config.js","mtime":1719222278287},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719222280288},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719222280288},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1719222284617},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\babel-loader\\lib\\index.js","mtime":1719222279696},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1719222284894},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719222280288},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\vue-loader\\lib\\index.js","mtime":1719222284893}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmxpbmsuanMiOwp2YXIgcmVuZGVyID0gZnVuY3Rpb24gcmVuZGVyKCkgewogIHZhciBfdm0kcmV0dXJuU2VhcmNoLCBfdm0kcmV0dXJuU2VhcmNoMiwgX3ZtJHJldHVyblNlYXJjaDMsIF92bSRyZXR1cm5TZWFyY2g0LCBfdm0kcmV0dXJuU2VhcmNoNSwgX3ZtJHJldHVyblNlYXJjaDYsIF92bSRyZXR1cm5TZWFyY2g3LCBfdm0kcmV0dXJuU2VhcmNoOCwgX3ZtJHJldHVyblNlYXJjaDksIF92bSRyZXR1cm5TZWFyY2gxMCwgX3ZtJHJldHVyblNlYXJjaDExLCBfdm0kcmV0dXJuU2VhcmNoMTIsIF92bSRyZXR1cm5TZWFyY2gxMywgX3ZtJHJldHVyblNlYXJjaDE0LCBfdm0kcmV0dXJuU2VhcmNoMTUsIF92bSRyZXR1cm5TZWFyY2gxNiwgX3ZtJHJldHVyblNlYXJjaDE3LCBfdm0kcmV0dXJuU2VhcmNoMTgsIF92bSRyZXR1cm5TZWFyY2gxOSwgX3ZtJHJldHVyblNlYXJjaDIwLCBfdm0kcmV0dXJuU2VhcmNoMjEsIF92bSRyZXR1cm5TZWFyY2gyMiwgX3ZtJHJldHVyblNlYXJjaDIzLCBfdm0kcmV0dXJuU2VhcmNoMjQsIF92bSRyZXR1cm5TZWFyY2gyNSwgX3ZtJHJldHVyblNlYXJjaDI2LCBfdm0kcmV0dXJuU2VhcmNoMjcsIF92bSRyZXR1cm5TZWFyY2gyOCwgX3ZtJHJldHVyblNlYXJjaDI5LCBfdm0kcmV0dXJuU2VhcmNoMzAsIF92bSRyZXR1cm5TZWFyY2gzMSwgX3ZtJHJldHVyblNlYXJjaDMyLCBfdm0kcmV0dXJuU2VhcmNoMzMsIF92bSRyZXR1cm5TZWFyY2gzNCwgX3ZtJHJldHVyblNlYXJjaDM1LCBfdm0kcmV0dXJuU2VhcmNoMzYsIF92bSRyZXR1cm5TZWFyY2gzNywgX3ZtJHJldHVyblNlYXJjaDM4LCBfdm0kcmV0dXJuU2VhcmNoMzksIF92bSRyZXR1cm5TZWFyY2g0MCwgX3ZtJHJldHVyblNlYXJjaDQxLCBfdm0kcmV0dXJuU2VhcmNoNDIsIF92bSRyZXR1cm5TZWFyY2g0MywgX3ZtJHJldHVyblNlYXJjaDQ0LCBfdm0kcmV0dXJuU2VhcmNoNDUsIF92bSRyZXR1cm5TZWFyY2g0NiwgX3ZtJHJldHVyblNlYXJjaDQ3LCBfdm0kcmV0dXJuU2VhcmNoNDgsIF92bSRyZXR1cm5TZWFyY2g0OSwgX3ZtJHJldHVyblNlYXJjaDUwLCBfdm0kcmV0dXJuU2VhcmNoNTEsIF92bSRyZXR1cm5TZWFyY2g1MiwgX3ZtJHJldHVyblNlYXJjaDUzLCBfdm0kcmV0dXJuU2VhcmNoNTQsIF92bSRyZXR1cm5TZWFyY2g1NSwgX3ZtJHJldHVyblNlYXJjaDU2LCBfdm0kcmV0dXJuU2VhcmNoNTcsIF92bSRyZXR1cm5TZWFyY2g1OCwgX3ZtJHJldHVyblNlYXJjaDU5LCBfdm0kcmV0dXJuU2VhcmNoNjAsIF92bSRyZXR1cm5TZWFyY2g2MSwgX3ZtJHJldHVyblNlYXJjaDYyLCBfdm0kcmV0dXJuU2VhcmNoNjMsIF92bSRyZXR1cm5TZWFyY2g2NCwgX3ZtJHJldHVyblNlYXJjaDY1LCBfdm0kcmV0dXJuU2VhcmNoNjYsIF92bSRyZXR1cm5TZWFyY2g2NywgX3ZtJHJldHVyblNlYXJjaDY4LCBfdm0kcmV0dXJuU2VhcmNoNzIsIF92bSRyZXR1cm5TZWFyY2g3NiwgX3ZtJHJldHVyblNlYXJjaDc3LCBfdm0kcmV0dXJuU2VhcmNoNzgsIF92bSRyZXR1cm5TZWFyY2g3OSwgX3ZtJHJldHVyblNlYXJjaDgwLCBfdm0kcmV0dXJuU2VhcmNoODEsIF92bSRyZXR1cm5TZWFyY2g4MiwgX3ZtJHJldHVyblNlYXJjaDgzLCBfdm0kcmV0dXJuU2VhcmNoODQsIF92bSRyZXR1cm5TZWFyY2g4NSwgX3ZtJHJldHVyblNlYXJjaDg2LCBfdm0kcmV0dXJuU2VhcmNoODcsIF92bSRyZXR1cm5TZWFyY2g5MSwgX3ZtJHJldHVyblNlYXJjaDk1LCBfdm0kcmV0dXJuU2VhcmNoOTYsIF92bSRyZXR1cm5TZWFyY2g5NywgX3ZtJHJldHVyblNlYXJjaDk4LCBfdm0kcmV0dXJuU2VhcmNoOTksIF92bSRyZXR1cm5TZWFyY2gxMDAsIF92bSRyZXR1cm5TZWFyY2gxMDEsIF92bSRyZXR1cm5TZWFyY2gxMDIsIF92bSRyZXR1cm5TZWFyY2gxMDMsIF92bSRyZXR1cm5TZWFyY2gxMDQsIF92bSRyZXR1cm5TZWFyY2gxMDUsIF92bSRyZXR1cm5TZWFyY2gxMDYsIF92bSRkZXRhaWxJbmZvLCBfdm0kZGV0YWlsSW5mbzIsIF92bSRkZXRhaWxJbmZvMywgX3ZtJGRldGFpbEluZm80LCBfdm0kZGV0YWlsSW5mbzUsIF92bSRkZXRhaWxJbmZvNiwgX3ZtJHJldHVyblNlYXJjaDEwNywgX3ZtJHJldHVyblNlYXJjaDEwOCwgX3ZtJHJldHVyblNlYXJjaDEwOSwgX3ZtJHJldHVyblNlYXJjaDExMCwgX3ZtJHJldHVyblNlYXJjaDExMSwgX3ZtJHJldHVyblNlYXJjaDExMiwgX3ZtJHJldHVyblNlYXJjaDExMywgX3ZtJHJldHVyblNlYXJjaDExNCwgX3ZtJHJldHVyblNlYXJjaDExNSwgX3ZtJHJldHVyblNlYXJjaDExNiwgX3ZtJHJldHVyblNlYXJjaDExNywgX3ZtJHJldHVyblNlYXJjaDExOCwgX3ZtJHJldHVyblNlYXJjaDExOSwgX3ZtJHJldHVyblNlYXJjaDEyMCwgX3ZtJHJldHVyblNlYXJjaDEyMSwgX3ZtJHJldHVyblNlYXJjaDEyMiwgX3ZtJHJldHVyblNlYXJjaDEyMywgX3ZtJHJldHVyblNlYXJjaDEyNCwgX3ZtJHJldHVyblNlYXJjaDEyNSwgX3ZtJHJldHVyblNlYXJjaDEyNiwgX3ZtJHJldHVyblNlYXJjaDEyNywgX3ZtJHJldHVyblNlYXJjaDEyOCwgX3ZtJHJldHVyblNlYXJjaDEyOSwgX3ZtJHJldHVyblNlYXJjaDEzMCwgX3ZtJHJldHVyblNlYXJjaDEzMSwgX3ZtJHJldHVyblNlYXJjaDEzMiwgX3ZtJHJldHVyblNlYXJjaDEzMywgX3ZtJHJldHVyblNlYXJjaDEzNCwgX3ZtJHJldHVyblNlYXJjaDEzNSwgX3ZtJHJldHVyblNlYXJjaDEzNiwgX3ZtJHJldHVyblNlYXJjaDEzNywgX3ZtJHJldHVyblNlYXJjaDEzOCwgX3ZtJHJldHVyblNlYXJjaDEzOSwgX3ZtJHJldHVyblNlYXJjaDE0MCwgX3ZtJHJldHVyblNlYXJjaDE0MSwgX3ZtJHJldHVyblNlYXJjaDE0MiwgX3ZtJHJldHVyblNlYXJjaDE0MywgX3ZtJHJldHVyblNlYXJjaDE0NCwgX3ZtJHJldHVyblNlYXJjaDE0NSwgX3ZtJHJldHVyblNlYXJjaDE0NiwgX3ZtJHJldHVyblNlYXJjaDE0NywgX3ZtJHJldHVyblNlYXJjaDE0OCwgX3ZtJHJldHVyblNlYXJjaDE0OSwgX3ZtJHJldHVyblNlYXJjaDE1MCwgX3ZtJHJldHVyblNlYXJjaDE1MSwgX3ZtJHJldHVyblNlYXJjaDE1MiwgX3ZtJHJldHVyblNlYXJjaDE1MywgX3ZtJHJldHVyblNlYXJjaDE1NCwgX3ZtJHJldHVyblNlYXJjaDE1NSwgX3ZtJHJldHVyblNlYXJjaDE1NiwgX3ZtJHJldHVyblNlYXJjaDE1NywgX3ZtJHJldHVyblNlYXJjaDE1OCwgX3ZtJHJldHVyblNlYXJjaDE1OSwgX3ZtJHJldHVyblNlYXJjaDE2MCwgX3ZtJHJldHVyblNlYXJjaDE2MTsKICB2YXIgX3ZtID0gdGhpcywKICAgIF9jID0gX3ZtLl9zZWxmLl9jLAogICAgX3NldHVwID0gX3ZtLl9zZWxmLl9zZXR1cFByb3h5OwogIHJldHVybiBfYygnZGl2JywgW19jKCdkaXYnLCBbX2MoJ2ItbW9kYWwnLCB7CiAgICBhdHRyczogewogICAgICAiaWQiOiAiYWRkRmlsZXMiLAogICAgICAiY2VudGVyZWQiOiAiIiwKICAgICAgInNpemUiOiAibGciLAogICAgICAidGl0bGUiOiBfdm0uJHQoJ2FjdGlvbnMucHJvZHVjdF9pbmZvJykKICAgIH0sCiAgICBzY29wZWRTbG90czogX3ZtLl91KFt7CiAgICAgIGtleTogIm1vZGFsLWZvb3RlciIsCiAgICAgIGZuOiBmdW5jdGlvbiBmbigpIHsKICAgICAgICByZXR1cm4gW19jKCdiLWJ1dHRvbicsIHsKICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgICJiYWNrZ3JvdW5kLWNvbG9yIjogIiMyYjY3NWIiLAogICAgICAgICAgICAiY29sb3IiOiAid2hpdGUiLAogICAgICAgICAgICAicGFkZGluZyI6ICIzcHggMjVweCIsCiAgICAgICAgICAgICJib3JkZXIiOiAibm9uZSIsCiAgICAgICAgICAgICJmb250LXNpemUiOiAiMTRweCIKICAgICAgICAgIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgICAgICBfdm0uaW5mb3JtYXRpb25Nb2RhbCA9IGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgW192bS5fdigiIE9LICIpXSldOwogICAgICB9LAogICAgICBwcm94eTogdHJ1ZQogICAgfV0pLAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5pbmZvcm1hdGlvbk1vZGFsLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLmluZm9ybWF0aW9uTW9kYWwgPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJpbmZvcm1hdGlvbk1vZGFsIgogICAgfQogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ2Itcm93JywgW19jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAicHgtMyBtYi00IiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIiwKICAgICAgIm1kIjogIjQiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiM4Mzk2OTAiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdhY3Rpb25zLnByb2R1Y3RfdHlwZScpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiCiAgfSwgW19jKCdiJywgewogICAgc3RhdGljQ2xhc3M6ICJkZXRhaWxUZXh0IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMjQ2MjU2IgogICAgfQogIH0sIFtfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgPyBfYygnc3BhbicsIFtfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKCgoX3ZtJHJldHVyblNlYXJjaCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2ggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaCA9IF92bSRyZXR1cm5TZWFyY2guYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2ggPSBfdm0kcmV0dXJuU2VhcmNoLm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoID0gX3ZtJHJldHVyblNlYXJjaC5wcmljZVByb2R1Y3REdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2ggPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2guY29kZSkgPT0gJ0ZPT0RTJyA/IF92bS4kdCgncHJvZHVjdFByaWNlLmN1c3RvbVByb2R1Y3QnKSA6IF92bS4kdCgncHJvZHVjdFByaWNlLm90aGVyUHJvZHVjdCcpKSldKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyA/IF9jKCdzcGFuJywgW19jKCdzcGFuJywgW192bS5fdihfdm0uX3MoKChfdm0kcmV0dXJuU2VhcmNoMiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gyID0gX3ZtJHJldHVyblNlYXJjaDIuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMiA9IF92bSRyZXR1cm5TZWFyY2gyLm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDIgPSBfdm0kcmV0dXJuU2VhcmNoMi5wcmljZVByb2R1Y3REdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMi5jb2RlKSA9PSAnRk9PRFMnID8gX3ZtLiR0KCdwcm9kdWN0UHJpY2UuY3VzdG9tUHJvZHVjdCcpIDogX3ZtLiR0KCdwcm9kdWN0UHJpY2Uub3RoZXJQcm9kdWN0JykpKV0pXSkgOiBfdm0uX2UoKV0pXSldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LTMgbWItNCIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIsCiAgICAgICJtZCI6ICI0IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjODM5NjkwIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdF9pbmZvLm5hbWUnKSkpXSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIgogIH0sIFtfYygnYicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGV0YWlsVGV4dCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzI0NjI1NiIKICAgIH0KICB9LCBbX3ZtLmluZm9Nb2RhbFZhbHVlID09ICdtYXgnID8gX2MoJ3NwYW4nLCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0TmFtZSh7CiAgICBuYW1lTHQ6IChfdm0kcmV0dXJuU2VhcmNoMyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzID0gX3ZtJHJldHVyblNlYXJjaDMuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMyA9IF92bSRyZXR1cm5TZWFyY2gzLm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDMgPSBfdm0kcmV0dXJuU2VhcmNoMy5wcmljZVByb2R1Y3REdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDMubmFtZUx0ID8gKF92bSRyZXR1cm5TZWFyY2g0ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQgPSBfdm0kcmV0dXJuU2VhcmNoNC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0ID0gX3ZtJHJldHVyblNlYXJjaDQubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNCA9IF92bSRyZXR1cm5TZWFyY2g0LnByaWNlUHJvZHVjdER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g0Lm5hbWVMdCA6ICcnLAogICAgbmFtZVV6OiAoX3ZtJHJldHVyblNlYXJjaDUgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNSA9IF92bSRyZXR1cm5TZWFyY2g1LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDUgPSBfdm0kcmV0dXJuU2VhcmNoNS5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1ID0gX3ZtJHJldHVyblNlYXJjaDUucHJpY2VQcm9kdWN0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g1Lm5hbWVVeiA/IChfdm0kcmV0dXJuU2VhcmNoNiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2ID0gX3ZtJHJldHVyblNlYXJjaDYuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNiA9IF92bSRyZXR1cm5TZWFyY2g2Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDYgPSBfdm0kcmV0dXJuU2VhcmNoNi5wcmljZVByb2R1Y3REdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoNi5uYW1lVXogOiAnJywKICAgIG5hbWVSdTogKF92bSRyZXR1cm5TZWFyY2g3ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDcgPSBfdm0kcmV0dXJuU2VhcmNoNy5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g3ID0gX3ZtJHJldHVyblNlYXJjaDcubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNyA9IF92bSRyZXR1cm5TZWFyY2g3LnByaWNlUHJvZHVjdER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDcgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNy5uYW1lUlUgPyAoX3ZtJHJldHVyblNlYXJjaDggPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOCA9IF92bSRyZXR1cm5TZWFyY2g4LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDggPSBfdm0kcmV0dXJuU2VhcmNoOC5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4ID0gX3ZtJHJldHVyblNlYXJjaDgucHJpY2VQcm9kdWN0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDgubmFtZVJVIDogJycKICB9KSkgKyAiICIpXSkgOiBfdm0uX2UoKSwgX3ZtLmluZm9Nb2RhbFZhbHVlID09ICdtaW4nID8gX2MoJ3NwYW4nLCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0TmFtZSh7CiAgICBuYW1lTHQ6IChfdm0kcmV0dXJuU2VhcmNoOSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g5ID0gX3ZtJHJldHVyblNlYXJjaDkuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoOSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoOSA9IF92bSRyZXR1cm5TZWFyY2g5Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDkgPSBfdm0kcmV0dXJuU2VhcmNoOS5wcmljZVByb2R1Y3REdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g5ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDkubmFtZUx0ID8gKF92bSRyZXR1cm5TZWFyY2gxMCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTAgPSBfdm0kcmV0dXJuU2VhcmNoMTAuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEwID0gX3ZtJHJldHVyblNlYXJjaDEwLm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMCA9IF92bSRyZXR1cm5TZWFyY2gxMC5wcmljZVByb2R1Y3REdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDEwLm5hbWVMdCA6ICcnLAogICAgbmFtZVV6OiAoX3ZtJHJldHVyblNlYXJjaDExID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMSA9IF92bSRyZXR1cm5TZWFyY2gxMS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTEgPSBfdm0kcmV0dXJuU2VhcmNoMTEubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExID0gX3ZtJHJldHVyblNlYXJjaDExLnByaWNlUHJvZHVjdER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDExLm5hbWVVeiA/IChfdm0kcmV0dXJuU2VhcmNoMTIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEyID0gX3ZtJHJldHVyblNlYXJjaDEyLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMiA9IF92bSRyZXR1cm5TZWFyY2gxMi5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTIgPSBfdm0kcmV0dXJuU2VhcmNoMTIucHJpY2VQcm9kdWN0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxMi5uYW1lVXogOiAnJywKICAgIG5hbWVSdTogKF92bSRyZXR1cm5TZWFyY2gxMyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTMgPSBfdm0kcmV0dXJuU2VhcmNoMTMuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEzID0gX3ZtJHJldHVyblNlYXJjaDEzLm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMyA9IF92bSRyZXR1cm5TZWFyY2gxMy5wcmljZVByb2R1Y3REdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMy5uYW1lUnUgPyAoX3ZtJHJldHVyblNlYXJjaDE0ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNCA9IF92bSRyZXR1cm5TZWFyY2gxNC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTQgPSBfdm0kcmV0dXJuU2VhcmNoMTQubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE0ID0gX3ZtJHJldHVyblNlYXJjaDE0LnByaWNlUHJvZHVjdER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTQubmFtZVJ1IDogJycKICB9KSkgKyAiICIpXSkgOiBfdm0uX2UoKV0pXSldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LTMgbWItNCIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIsCiAgICAgICJtZCI6ICI0IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjODM5NjkwIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgnYWN0aW9ucy5wcm9kdWN0X3ByaWNlJykpKV0pLCBfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIKICB9LCBbX2MoJ2InLCB7CiAgICBzdGF0aWNDbGFzczogImRldGFpbFRleHQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyNDYyNTYiCiAgICB9CiAgfSwgW192bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWF4JyA/IF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2gxNSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTUgPSBfdm0kcmV0dXJuU2VhcmNoMTUuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE1ID0gX3ZtJHJldHVyblNlYXJjaDE1Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE1Lm1heFByaWNlID8gX3ZtLmZvcm1hdE51bWJlcigoX3ZtJHJldHVyblNlYXJjaDE2ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNiA9IF92bSRyZXR1cm5TZWFyY2gxNi5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTYgPSBfdm0kcmV0dXJuU2VhcmNoMTYubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxNi5tYXhQcmljZSkgOiAnJykgKyAiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc29tJykpKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyA/IF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2gxNyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTcgPSBfdm0kcmV0dXJuU2VhcmNoMTcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE3ID0gX3ZtJHJldHVyblNlYXJjaDE3Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE3ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE3Lm1pblByaWNlID8gX3ZtLmZvcm1hdE51bWJlcigoX3ZtJHJldHVyblNlYXJjaDE4ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxOCA9IF92bSRyZXR1cm5TZWFyY2gxOC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxOCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTggPSBfdm0kcmV0dXJuU2VhcmNoMTgubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTggPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxOC5taW5QcmljZSkgOiAnJykgKyAiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc29tJykpKV0pIDogX3ZtLl9lKCldKV0pXSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC0zIG1iLTQiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiLAogICAgICAibWQiOiAiNCIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzgzOTY5MCIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2FjdGl2aXR5LnJhdGVJbmZvLm1vbm9wb2x5LmZvb2RzLmxhc3REYXRlMScpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiCiAgfSwgW19jKCdiJywgewogICAgc3RhdGljQ2xhc3M6ICJkZXRhaWxUZXh0IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMjQ2MjU2IgogICAgfQogIH0sIFtfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMTkgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE5ID0gX3ZtJHJldHVyblNlYXJjaDE5LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxOSA9IF92bSRyZXR1cm5TZWFyY2gxOS5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxOSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxOS5kYXRlID8gKF92bSRyZXR1cm5TZWFyY2gyMCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyMCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjAgPSBfdm0kcmV0dXJuU2VhcmNoMjAuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDIwID0gX3ZtJHJldHVyblNlYXJjaDIwLm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDIwID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMjAuZGF0ZSA6ICcnKSldKSA6IF92bS5fZSgpLCBfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21pbicgPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMjEgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDIxID0gX3ZtJHJldHVyblNlYXJjaDIxLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDIxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyMSA9IF92bSRyZXR1cm5TZWFyY2gyMS5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyMSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gyMS5kYXRlID8gKF92bSRyZXR1cm5TZWFyY2gyMiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjIgPSBfdm0kcmV0dXJuU2VhcmNoMjIuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDIyID0gX3ZtJHJldHVyblNlYXJjaDIyLm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDIyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMjIuZGF0ZSA6ICcnKSldKSA6IF92bS5fZSgpXSldKV0pXSksIF9jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAicHgtMyBtYi00IiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIiwKICAgICAgIm1kIjogIjQiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiM4Mzk2OTAiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdhY3Rpdml0eS5yYXRlSW5mby5jb250cm9sLnBsYWNlTmFtZScpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiCiAgfSwgW19jKCdiJywgewogICAgc3RhdGljQ2xhc3M6ICJkZXRhaWxUZXh0IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMjQ2MjU2IgogICAgfQogIH0sIFtfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgPyBfYygnc3BhbicsIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5nZXROYW1lKHsKICAgIG5hbWVMdDogKF92bSRyZXR1cm5TZWFyY2gyMyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjMgPSBfdm0kcmV0dXJuU2VhcmNoMjMuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDIzID0gX3ZtJHJldHVyblNlYXJjaDIzLm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDIzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyMyA9IF92bSRyZXR1cm5TZWFyY2gyMy5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjMgPSBfdm0kcmV0dXJuU2VhcmNoMjMucmVnaW9uRHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjMgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMjMubmFtZUx0ID8gKF92bSRyZXR1cm5TZWFyY2gyNCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjQgPSBfdm0kcmV0dXJuU2VhcmNoMjQuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDI0ID0gX3ZtJHJldHVyblNlYXJjaDI0Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDI0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gyNCA9IF92bSRyZXR1cm5TZWFyY2gyNC5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjQgPSBfdm0kcmV0dXJuU2VhcmNoMjQucmVnaW9uRHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gyNC5uYW1lTHQgOiAnJywKICAgIG5hbWVVejogKF92bSRyZXR1cm5TZWFyY2gyNSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjUgPSBfdm0kcmV0dXJuU2VhcmNoMjUuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDI1ID0gX3ZtJHJldHVyblNlYXJjaDI1Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDI1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyNSA9IF92bSRyZXR1cm5TZWFyY2gyNS5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjUgPSBfdm0kcmV0dXJuU2VhcmNoMjUucmVnaW9uRHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjUgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMjUubmFtZVV6ID8gKF92bSRyZXR1cm5TZWFyY2gyNiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjYgPSBfdm0kcmV0dXJuU2VhcmNoMjYuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDI2ID0gX3ZtJHJldHVyblNlYXJjaDI2Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDI2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gyNiA9IF92bSRyZXR1cm5TZWFyY2gyNi5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjYgPSBfdm0kcmV0dXJuU2VhcmNoMjYucmVnaW9uRHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gyNi5uYW1lVXogOiAnJywKICAgIG5hbWVSdTogKF92bSRyZXR1cm5TZWFyY2gyNyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjcgPSBfdm0kcmV0dXJuU2VhcmNoMjcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDI3ID0gX3ZtJHJldHVyblNlYXJjaDI3Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDI3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyNyA9IF92bSRyZXR1cm5TZWFyY2gyNy5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjcgPSBfdm0kcmV0dXJuU2VhcmNoMjcucmVnaW9uRHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjcgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMjcubmFtZVJVID8gKF92bSRyZXR1cm5TZWFyY2gyOCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyOCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMjggPSBfdm0kcmV0dXJuU2VhcmNoMjguYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMjggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDI4ID0gX3ZtJHJldHVyblNlYXJjaDI4Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDI4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gyOCA9IF92bSRyZXR1cm5TZWFyY2gyOC5wcmljZVByb2R1Y3REdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gyOCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDI4Lm5hbWVSVSA6ICcnCiAgfSkpICsgIiAiKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyA/IF9jKCdzcGFuJywgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLmdldE5hbWUoewogICAgbmFtZUx0OiAoX3ZtJHJldHVyblNlYXJjaDI5ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDI5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyOSA9IF92bSRyZXR1cm5TZWFyY2gyOS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyOSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMjkgPSBfdm0kcmV0dXJuU2VhcmNoMjkubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMjkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDI5ID0gX3ZtJHJldHVyblNlYXJjaDI5Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDI5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gyOSA9IF92bSRyZXR1cm5TZWFyY2gyOS5yZWdpb25EdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gyOSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gyOS5uYW1lTHQgPyAoX3ZtJHJldHVyblNlYXJjaDMwID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDMwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzMCA9IF92bSRyZXR1cm5TZWFyY2gzMC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzMCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMzAgPSBfdm0kcmV0dXJuU2VhcmNoMzAubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDMwID0gX3ZtJHJldHVyblNlYXJjaDMwLm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDMwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzMCA9IF92bSRyZXR1cm5TZWFyY2gzMC5yZWdpb25EdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzMCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDMwLm5hbWVMdCA6ICcnLAogICAgbmFtZVV6OiAoX3ZtJHJldHVyblNlYXJjaDMxID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDMxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzMSA9IF92bSRyZXR1cm5TZWFyY2gzMS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzMSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMzEgPSBfdm0kcmV0dXJuU2VhcmNoMzEubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDMxID0gX3ZtJHJldHVyblNlYXJjaDMxLm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDMxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzMSA9IF92bSRyZXR1cm5TZWFyY2gzMS5yZWdpb25EdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzMSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gzMS5uYW1lVXogPyAoX3ZtJHJldHVyblNlYXJjaDMyID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDMyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzMiA9IF92bSRyZXR1cm5TZWFyY2gzMi5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMzIgPSBfdm0kcmV0dXJuU2VhcmNoMzIubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDMyID0gX3ZtJHJldHVyblNlYXJjaDMyLm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDMyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzMiA9IF92bSRyZXR1cm5TZWFyY2gzMi5yZWdpb25EdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDMyLm5hbWVVeiA6ICcnLAogICAgbmFtZVJ1OiAoX3ZtJHJldHVyblNlYXJjaDMzID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDMzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzMyA9IF92bSRyZXR1cm5TZWFyY2gzMy5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMzMgPSBfdm0kcmV0dXJuU2VhcmNoMzMubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDMzID0gX3ZtJHJldHVyblNlYXJjaDMzLm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDMzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzMyA9IF92bSRyZXR1cm5TZWFyY2gzMy5yZWdpb25EdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzMyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gzMy5uYW1lUnUgPyAoX3ZtJHJldHVyblNlYXJjaDM0ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDM0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzNCA9IF92bSRyZXR1cm5TZWFyY2gzNC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMzQgPSBfdm0kcmV0dXJuU2VhcmNoMzQubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDM0ID0gX3ZtJHJldHVyblNlYXJjaDM0Lm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDM0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzNCA9IF92bSRyZXR1cm5TZWFyY2gzNC5yZWdpb25EdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDM0Lm5hbWVSdSA6ICcnCiAgfSkpICsgIiAiKV0pIDogX3ZtLl9lKCldKV0pXSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC0zIG1iLTQiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiLAogICAgICAibWQiOiAiNCIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzgzOTY5MCIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2NvbHVtbi5zYXZkb09iaicpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiCiAgfSwgW19jKCdiJywgewogICAgc3RhdGljQ2xhc3M6ICJkZXRhaWxUZXh0IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMjQ2MjU2IgogICAgfQogIH0sIFtfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMzUgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDM1ID0gX3ZtJHJldHVyblNlYXJjaDM1LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDM1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzNSA9IF92bSRyZXR1cm5TZWFyY2gzNS5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMzUgPSBfdm0kcmV0dXJuU2VhcmNoMzUubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzUgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMzUubWFya2V0TmFtZSA/IChfdm0kcmV0dXJuU2VhcmNoMzYgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDM2ID0gX3ZtJHJldHVyblNlYXJjaDM2LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDM2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzNiA9IF92bSRyZXR1cm5TZWFyY2gzNi5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMzYgPSBfdm0kcmV0dXJuU2VhcmNoMzYubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gzNi5tYXJrZXROYW1lIDogJycpKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyA/IF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2gzNyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMzcgPSBfdm0kcmV0dXJuU2VhcmNoMzcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDM3ID0gX3ZtJHJldHVyblNlYXJjaDM3Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDM3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzNyA9IF92bSRyZXR1cm5TZWFyY2gzNy5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzNyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gzNy5tYXJrZXROYW1lID8gKF92bSRyZXR1cm5TZWFyY2gzOCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzOCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMzggPSBfdm0kcmV0dXJuU2VhcmNoMzguYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMzggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDM4ID0gX3ZtJHJldHVyblNlYXJjaDM4Lm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDM4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gzOCA9IF92bSRyZXR1cm5TZWFyY2gzOC5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gzOCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDM4Lm1hcmtldE5hbWUgOiAnJykpXSkgOiBfdm0uX2UoKV0pXSldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LTMgbWItNCIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIsCiAgICAgICJtZCI6ICI0IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjODM5NjkwIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgnYWN0aW9ucy5tYXJrZXRfcGxhY2UnKSkpXSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIgogIH0sIFtfYygnYicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGV0YWlsVGV4dCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzI0NjI1NiIKICAgIH0KICB9LCBbX3ZtLmluZm9Nb2RhbFZhbHVlID09ICdtYXgnID8gX2MoJ3NwYW4nLCBbX3ZtLl92KF92bS5fcygoX3ZtJHJldHVyblNlYXJjaDM5ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDM5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gzOSA9IF92bSRyZXR1cm5TZWFyY2gzOS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gzOSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMzkgPSBfdm0kcmV0dXJuU2VhcmNoMzkubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMzkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDM5ID0gX3ZtJHJldHVyblNlYXJjaDM5Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDM5ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDM5LmFkZHJlc3MgPyAoX3ZtJHJldHVyblNlYXJjaDQwID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0MCA9IF92bSRyZXR1cm5TZWFyY2g0MC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0MCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNDAgPSBfdm0kcmV0dXJuU2VhcmNoNDAubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQwID0gX3ZtJHJldHVyblNlYXJjaDQwLm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQwID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoNDAuYWRkcmVzcyA6ICcnKSldKSA6IF92bS5fZSgpLCBfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21pbicgPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoNDEgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDQxID0gX3ZtJHJldHVyblNlYXJjaDQxLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g0MSA9IF92bSRyZXR1cm5TZWFyY2g0MS5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0MSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNDEgPSBfdm0kcmV0dXJuU2VhcmNoNDEubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDEgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNDEuYWRkcmVzcyA/IChfdm0kcmV0dXJuU2VhcmNoNDIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQyID0gX3ZtJHJldHVyblNlYXJjaDQyLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0MiA9IF92bSRyZXR1cm5TZWFyY2g0Mi5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0MiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNDIgPSBfdm0kcmV0dXJuU2VhcmNoNDIubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g0Mi5hZGRyZXNzIDogJycpKV0pIDogX3ZtLl9lKCldKV0pXSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC0zIG1iLTQiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiLAogICAgICAibWQiOiAiNCIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzgzOTY5MCIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2FjdGlvbnMubWFya2V0X2xvY2F0aW9uJykpKV0pLCBfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIKICB9LCBbX2MoJ2InLCB7CiAgICBzdGF0aWNDbGFzczogImRldGFpbFRleHQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyNDYyNTYiCiAgICB9CiAgfSwgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQgYWxpZ24taXRlbXMtY2VudGVyIgogIH0sIFtfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgJiYgKChfdm0kcmV0dXJuU2VhcmNoNDMgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDQzID0gX3ZtJHJldHVyblNlYXJjaDQzLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g0MyA9IF92bSRyZXR1cm5TZWFyY2g0My5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0MyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNDMgPSBfdm0kcmV0dXJuU2VhcmNoNDMubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDMgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNDMubGFuZyB8fCAoX3ZtJHJldHVyblNlYXJjaDQ0ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQ0ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g0NCA9IF92bSRyZXR1cm5TZWFyY2g0NC5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0NCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNDQgPSBfdm0kcmV0dXJuU2VhcmNoNDQubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDQgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDQ0ID0gX3ZtJHJldHVyblNlYXJjaDQ0Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQ0ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDQ0LmxpbmspID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJ3aWR0aCI6ICI3MCUiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIsCiAgICAgICJmb250LXNpemUiOiAiMTNweCIsCiAgICAgICJib3JkZXIiOiAiMnB4IHNvbGlkICMyYjY3NWIiLAogICAgICAicGFkZGluZyI6ICI1cHgiLAogICAgICAiYm9yZGVyLXJhZGl1cyI6ICI1cHgiCiAgICB9CiAgfSwgW192bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWF4JyA/IF9jKCdzcGFuJywgW192bS5fdigiICIgKyBfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2g0NSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0NSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNDUgPSBfdm0kcmV0dXJuU2VhcmNoNDUuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDQ1ID0gX3ZtJHJldHVyblNlYXJjaDQ1Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQ1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g0NSA9IF92bSRyZXR1cm5TZWFyY2g0NS5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0NSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g0NS5sYW5nID8gKChfdm0kcmV0dXJuU2VhcmNoNDYgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQ2ID0gX3ZtJHJldHVyblNlYXJjaDQ2LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQ2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0NiA9IF92bSRyZXR1cm5TZWFyY2g0Ni5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0NiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNDYgPSBfdm0kcmV0dXJuU2VhcmNoNDYubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g0Ni5sYW5nKSArICcgLCAnICsgKChfdm0kcmV0dXJuU2VhcmNoNDcgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDcgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQ3ID0gX3ZtJHJldHVyblNlYXJjaDQ3LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQ3ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0NyA9IF92bSRyZXR1cm5TZWFyY2g0Ny5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0NyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNDcgPSBfdm0kcmV0dXJuU2VhcmNoNDcubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g0Ny5sYXQpIDogKF92bSRyZXR1cm5TZWFyY2g0OCA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0OCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNDggPSBfdm0kcmV0dXJuU2VhcmNoNDguYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNDggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDQ4ID0gX3ZtJHJldHVyblNlYXJjaDQ4Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDQ4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g0OCA9IF92bSRyZXR1cm5TZWFyY2g0OC5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g0OCAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g0OC5saW5rID8gKChfdm0kcmV0dXJuU2VhcmNoNDkgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDkgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDQ5ID0gX3ZtJHJldHVyblNlYXJjaDQ5LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDQ5ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g0OSA9IF92bSRyZXR1cm5TZWFyY2g0OS5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g0OSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNDkgPSBfdm0kcmV0dXJuU2VhcmNoNDkubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNDkgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g0OS5saW5rLnNsaWNlKDAsIDE3KSkgKyAnLi4uJyA6ICcnKSArICIgIildKSA6IF92bS5fZSgpXSldKSA6IF92bS5fZSgpLCBfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21pbicgJiYgKChfdm0kcmV0dXJuU2VhcmNoNTAgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTAgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDUwID0gX3ZtJHJldHVyblNlYXJjaDUwLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDUwICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1MCA9IF92bSRyZXR1cm5TZWFyY2g1MC5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1MCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTAgPSBfdm0kcmV0dXJuU2VhcmNoNTAubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTAgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNTAubGFuZyB8fCAoX3ZtJHJldHVyblNlYXJjaDUxID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDUxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1MSA9IF92bSRyZXR1cm5TZWFyY2g1MS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1MSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTEgPSBfdm0kcmV0dXJuU2VhcmNoNTEubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDUxID0gX3ZtJHJldHVyblNlYXJjaDUxLm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDUxICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDUxLmxpbmspID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJ3aWR0aCI6ICI3MCUiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIsCiAgICAgICJmb250LXNpemUiOiAiMTNweCIsCiAgICAgICJib3JkZXIiOiAiMnB4IHNvbGlkICMyYjY3NWIiLAogICAgICAicGFkZGluZyI6ICI1cHgiLAogICAgICAiYm9yZGVyLXJhZGl1cyI6ICI1cHgiCiAgICB9CiAgfSwgW192bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyA/IF9jKCdzcGFuJywgW192bS5fdigiICIgKyBfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2g1MiA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1MiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTIgPSBfdm0kcmV0dXJuU2VhcmNoNTIuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTIgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDUyID0gX3ZtJHJldHVyblNlYXJjaDUyLm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDUyICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1MiA9IF92bSRyZXR1cm5TZWFyY2g1Mi5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1MiAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g1Mi5sYW5nID8gKChfdm0kcmV0dXJuU2VhcmNoNTMgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTMgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDUzID0gX3ZtJHJldHVyblNlYXJjaDUzLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDUzID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g1MyA9IF92bSRyZXR1cm5TZWFyY2g1My5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g1MyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNTMgPSBfdm0kcmV0dXJuU2VhcmNoNTMubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g1My5sYW5nKSArICcgLCAnICsgKChfdm0kcmV0dXJuU2VhcmNoNTQgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDU0ID0gX3ZtJHJldHVyblNlYXJjaDU0LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDU0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g1NCA9IF92bSRyZXR1cm5TZWFyY2g1NC5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g1NCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNTQgPSBfdm0kcmV0dXJuU2VhcmNoNTQubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g1NC5sYXQpIDogKF92bSRyZXR1cm5TZWFyY2g1NSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1NSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTUgPSBfdm0kcmV0dXJuU2VhcmNoNTUuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDU1ID0gX3ZtJHJldHVyblNlYXJjaDU1Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDU1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1NSA9IF92bSRyZXR1cm5TZWFyY2g1NS5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1NSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g1NS5saW5rID8gKChfdm0kcmV0dXJuU2VhcmNoNTYgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDU2ID0gX3ZtJHJldHVyblNlYXJjaDU2LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDU2ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g1NiA9IF92bSRyZXR1cm5TZWFyY2g1Ni5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g1NiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNTYgPSBfdm0kcmV0dXJuU2VhcmNoNTYubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNTYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g1Ni5saW5rLnNsaWNlKDAsIDE3KSkgKyAnLi4uJyA6ICcnKSArICIgIildKSA6IF92bS5fZSgpXSldKSA6IF92bS5fZSgpLCBfdm0uaW5mb01vZGFsVmFsdWUgPT0gJ21heCcgJiYgKChfdm0kcmV0dXJuU2VhcmNoNTcgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDU3ID0gX3ZtJHJldHVyblNlYXJjaDU3LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDU3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1NyA9IF92bSRyZXR1cm5TZWFyY2g1Ny5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1NyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTcgPSBfdm0kcmV0dXJuU2VhcmNoNTcubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTcgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNTcubGF0IHx8IChfdm0kcmV0dXJuU2VhcmNoNTggPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDU4ID0gX3ZtJHJldHVyblNlYXJjaDU4LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDU4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1OCA9IF92bSRyZXR1cm5TZWFyY2g1OC5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1OCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTggPSBfdm0kcmV0dXJuU2VhcmNoNTgubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTggIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNTgubGluaykgPyBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJweC0yIgogIH0sIFsoX3ZtJHJldHVyblNlYXJjaDU5ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDU5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g1OSA9IF92bSRyZXR1cm5TZWFyY2g1OS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g1OSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNTkgPSBfdm0kcmV0dXJuU2VhcmNoNTkubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNTkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDU5ID0gX3ZtJHJldHVyblNlYXJjaDU5Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDU5ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDU5LmxhdCA/IF9jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcz9xPSIuY29uY2F0KChfdm0kcmV0dXJuU2VhcmNoNjAgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDYwID0gX3ZtJHJldHVyblNlYXJjaDYwLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2MCA9IF92bSRyZXR1cm5TZWFyY2g2MC5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2MCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjAgPSBfdm0kcmV0dXJuU2VhcmNoNjAubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjAgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g2MC5sYXQsICIsIikuY29uY2F0KChfdm0kcmV0dXJuU2VhcmNoNjEgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjEgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDYxID0gX3ZtJHJldHVyblNlYXJjaDYxLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYxID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2MSA9IF92bSRyZXR1cm5TZWFyY2g2MS5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2MSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjEgPSBfdm0kcmV0dXJuU2VhcmNoNjEubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g2MS5sYW5nLCAiJmxsPSIpLmNvbmNhdCgoX3ZtJHJldHVyblNlYXJjaDYyID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2MiA9IF92bSRyZXR1cm5TZWFyY2g2Mi5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2MiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjIgPSBfdm0kcmV0dXJuU2VhcmNoNjIubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDYyID0gX3ZtJHJldHVyblNlYXJjaDYyLm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoNjIubGF0LCAiLCIpLmNvbmNhdCgoX3ZtJHJldHVyblNlYXJjaDYzID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYzID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2MyA9IF92bSRyZXR1cm5TZWFyY2g2My5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2MyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjMgPSBfdm0kcmV0dXJuU2VhcmNoNjMubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjMgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDYzID0gX3ZtJHJldHVyblNlYXJjaDYzLm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDYzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoNjMubGFuZywgIiZ6PTE2IiksCiAgICAgICJ0YXJnZXQiOiAiX2JsYW5rIgogICAgfQogIH0sIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL2xpbmsucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSkgOiAoX3ZtJHJldHVyblNlYXJjaDY0ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDY0ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g2NCA9IF92bSRyZXR1cm5TZWFyY2g2NC5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2NCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNjQgPSBfdm0kcmV0dXJuU2VhcmNoNjQubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNjQgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDY0ID0gX3ZtJHJldHVyblNlYXJjaDY0Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDY0ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDY0LmxpbmsgPyBfYygnYScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogKF92bSRyZXR1cm5TZWFyY2g2NSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2NSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjUgPSBfdm0kcmV0dXJuU2VhcmNoNjUuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjUgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDY1ID0gX3ZtJHJldHVyblNlYXJjaDY1Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDY1ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2NSA9IF92bSRyZXR1cm5TZWFyY2g2NS5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2NSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDY1LmxpbmssCiAgICAgICJ0YXJnZXQiOiAiX2JsYW5rIgogICAgfQogIH0sIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL2xpbmsucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSkgOiBfYygnYScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogIiMiCiAgICB9CiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvbGluay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWF4JyAmJiAoKF92bSRyZXR1cm5TZWFyY2g2NiA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2NiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNjYgPSBfdm0kcmV0dXJuU2VhcmNoNjYuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNjYgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDY2ID0gX3ZtJHJldHVyblNlYXJjaDY2Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDY2ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g2NiA9IF92bSRyZXR1cm5TZWFyY2g2Ni5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2NiAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g2Ni5sYXQgfHwgKF92bSRyZXR1cm5TZWFyY2g2NyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2NyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNjcgPSBfdm0kcmV0dXJuU2VhcmNoNjcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNjcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDY3ID0gX3ZtJHJldHVyblNlYXJjaDY3Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDY3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g2NyA9IF92bSRyZXR1cm5TZWFyY2g2Ny5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2NyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g2Ny5saW5rKSA/IF9jKCdkaXYnLCBbX2MoJ2xhYmVsJywgewogICAgc3RhdGljQ2xhc3M6ICJkcm9wZG93biIKICB9LCBbX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGQtYnV0dG9uIgogIH0sIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL3NoYXJlLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pLCBfYygnaW5wdXQnLCB7CiAgICBzdGF0aWNDbGFzczogImRkLWlucHV0IiwKICAgIGF0dHJzOiB7CiAgICAgICJ0eXBlIjogImNoZWNrYm94IiwKICAgICAgImlkIjogInRlc3QiCiAgICB9CiAgfSksIF9jKCd1bCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGQtbWVudSIKICB9LCBbKF92bSRyZXR1cm5TZWFyY2g2OCA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2OCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNjggPSBfdm0kcmV0dXJuU2VhcmNoNjguYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNjggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDY4ID0gX3ZtJHJldHVyblNlYXJjaDY4Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDY4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g2OCA9IF92bSRyZXR1cm5TZWFyY2g2OC5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g2OCAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g2OC5sYXQgPyBfYygnbGknLCB7CiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICB2YXIgX3ZtJHJldHVyblNlYXJjaDY5LCBfdm0kcmV0dXJuU2VhcmNoNzA7CiAgICAgICAgcmV0dXJuIF92bS5zZW5kVG9UZWxlZ3JhbUxhdExhbmcoKF92bSRyZXR1cm5TZWFyY2g2OSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2OSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNjkgPSBfdm0kcmV0dXJuU2VhcmNoNjkuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNjkgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDY5ID0gX3ZtJHJldHVyblNlYXJjaDY5Lm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDY5ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g2OSA9IF92bSRyZXR1cm5TZWFyY2g2OS5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g2OSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDY5LmxhdCwgKF92bSRyZXR1cm5TZWFyY2g3MCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3MCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzAgPSBfdm0kcmV0dXJuU2VhcmNoNzAuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDcwID0gX3ZtJHJldHVyblNlYXJjaDcwLm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDcwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3MCA9IF92bSRyZXR1cm5TZWFyY2g3MC5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3MCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDcwLmxhdCk7CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ2knLCB7CiAgICBzdGF0aWNDbGFzczogIm1kaSBtZGktc2VuZCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzAzOWJlNSIKICAgIH0KICB9KSwgX3ZtLl92KCIgVGVsZWdyYW0gIildKSA6IF9jKCdsaScsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHZhciBfdm0kcmV0dXJuU2VhcmNoNzE7CiAgICAgICAgcmV0dXJuIF92bS5zZW5kVG9UZWxlZ3JhbUxpbmsoKF92bSRyZXR1cm5TZWFyY2g3MSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3MSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzEgPSBfdm0kcmV0dXJuU2VhcmNoNzEuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzEgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDcxID0gX3ZtJHJldHVyblNlYXJjaDcxLm1heE1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDcxID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3MSA9IF92bSRyZXR1cm5TZWFyY2g3MS5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3MSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDcxLmxpbmspOwogICAgICB9CiAgICB9CiAgfSwgW19jKCdpJywgewogICAgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLXNlbmQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMwMzliZTUiCiAgICB9CiAgfSksIF92bS5fdigiIFRlbGVncmFtICIpXSksIChfdm0kcmV0dXJuU2VhcmNoNzIgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzIgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDcyID0gX3ZtJHJldHVyblNlYXJjaDcyLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDcyICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g3MiA9IF92bSRyZXR1cm5TZWFyY2g3Mi5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3MiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNzIgPSBfdm0kcmV0dXJuU2VhcmNoNzIubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzIgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNzIubGF0ID8gX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgdmFyIF92bSRyZXR1cm5TZWFyY2g3MywgX3ZtJHJldHVyblNlYXJjaDc0OwogICAgICAgIHJldHVybiBfdm0uY29weUxhdExhbmdMaW5rKChfdm0kcmV0dXJuU2VhcmNoNzMgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzMgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDczID0gX3ZtJHJldHVyblNlYXJjaDczLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDczID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3MyA9IF92bSRyZXR1cm5TZWFyY2g3My5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3MyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzMgPSBfdm0kcmV0dXJuU2VhcmNoNzMubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g3My5sYXQsIChfdm0kcmV0dXJuU2VhcmNoNzQgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDc0ID0gX3ZtJHJldHVyblNlYXJjaDc0LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDc0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3NCA9IF92bSRyZXR1cm5TZWFyY2g3NC5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3NCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzQgPSBfdm0kcmV0dXJuU2VhcmNoNzQubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g3NC5sYW5nKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1jb250ZW50LWNvcHkiCiAgfSksIF92bS5fdigiIE51c3hhbGFzaCAiKV0pIDogX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgdmFyIF92bSRyZXR1cm5TZWFyY2g3NTsKICAgICAgICByZXR1cm4gX3ZtLmNvcHlMaW5rKChfdm0kcmV0dXJuU2VhcmNoNzUgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzUgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDc1ID0gX3ZtJHJldHVyblNlYXJjaDc1LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDc1ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3NSA9IF92bSRyZXR1cm5TZWFyY2g3NS5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3NSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzUgPSBfdm0kcmV0dXJuU2VhcmNoNzUubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g3NS5saW5rKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1jb250ZW50LWNvcHkiCiAgfSksIF92bS5fdigiIE51c3hhbGFzaCAiKV0pXSldKV0pIDogX3ZtLl9lKCksIF92bS5pbmZvTW9kYWxWYWx1ZSA9PSAnbWluJyAmJiAoKF92bSRyZXR1cm5TZWFyY2g3NiA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3NiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNzYgPSBfdm0kcmV0dXJuU2VhcmNoNzYuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzYgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDc2ID0gX3ZtJHJldHVyblNlYXJjaDc2Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDc2ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g3NiA9IF92bSRyZXR1cm5TZWFyY2g3Ni5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3NiAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g3Ni5sYXQgfHwgKF92bSRyZXR1cm5TZWFyY2g3NyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3NyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNzcgPSBfdm0kcmV0dXJuU2VhcmNoNzcuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDc3ID0gX3ZtJHJldHVyblNlYXJjaDc3Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDc3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g3NyA9IF92bSRyZXR1cm5TZWFyY2g3Ny5tYXJrZXREdG8pICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3NyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g3Ny5saW5rKSA/IF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LTIiCiAgfSwgWyhfdm0kcmV0dXJuU2VhcmNoNzggPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDc4ID0gX3ZtJHJldHVyblNlYXJjaDc4LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDc4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g3OCA9IF92bSRyZXR1cm5TZWFyY2g3OC5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g3OCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoNzggPSBfdm0kcmV0dXJuU2VhcmNoNzgubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoNzggIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoNzgubGF0ID8gX2MoJ2EnLCB7CiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzP3E9Ii5jb25jYXQoKF92bSRyZXR1cm5TZWFyY2g3OSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3OSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoNzkgPSBfdm0kcmV0dXJuU2VhcmNoNzkuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoNzkgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDc5ID0gX3ZtJHJldHVyblNlYXJjaDc5Lm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDc5ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g3OSA9IF92bSRyZXR1cm5TZWFyY2g3OS5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g3OSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDc5LmxhdCwgIiwiKS5jb25jYXQoKF92bSRyZXR1cm5TZWFyY2g4MCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4MCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODAgPSBfdm0kcmV0dXJuU2VhcmNoODAuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDgwID0gX3ZtJHJldHVyblNlYXJjaDgwLm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDgwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4MCA9IF92bSRyZXR1cm5TZWFyY2g4MC5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4MCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDgwLmxhbmcsICImbGw9IikuY29uY2F0KChfdm0kcmV0dXJuU2VhcmNoODEgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODEgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDgxID0gX3ZtJHJldHVyblNlYXJjaDgxLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDgxID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4MSA9IF92bSRyZXR1cm5TZWFyY2g4MS5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4MSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODEgPSBfdm0kcmV0dXJuU2VhcmNoODEubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g4MS5sYXQsICIsIikuY29uY2F0KChfdm0kcmV0dXJuU2VhcmNoODIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDgyID0gX3ZtJHJldHVyblNlYXJjaDgyLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDgyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4MiA9IF92bSRyZXR1cm5TZWFyY2g4Mi5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4MiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODIgPSBfdm0kcmV0dXJuU2VhcmNoODIubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g4Mi5sYW5nLCAiJno9MTYiKSwKICAgICAgInRhcmdldCI6ICJfYmxhbmsiCiAgICB9CiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvbGluay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSA6IChfdm0kcmV0dXJuU2VhcmNoODMgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoODMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDgzID0gX3ZtJHJldHVyblNlYXJjaDgzLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDgzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g4MyA9IF92bSRyZXR1cm5TZWFyY2g4My5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g4MyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoODMgPSBfdm0kcmV0dXJuU2VhcmNoODMubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoODMgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoODMubGluayA/IF9jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAoX3ZtJHJldHVyblNlYXJjaDg0ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4NCA9IF92bSRyZXR1cm5TZWFyY2g4NC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4NCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODQgPSBfdm0kcmV0dXJuU2VhcmNoODQubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDg0ID0gX3ZtJHJldHVyblNlYXJjaDg0Lm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoODQubGluaywKICAgICAgInRhcmdldCI6ICJfYmxhbmsiCiAgICB9CiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvbGluay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSA6IF9jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiIyIKICAgIH0KICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9saW5rLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pXSkgOiBfdm0uX2UoKSwgX3ZtLmluZm9Nb2RhbFZhbHVlID09ICdtaW4nICYmICgoX3ZtJHJldHVyblNlYXJjaDg1ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g4NSA9IF92bSRyZXR1cm5TZWFyY2g4NS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g4NSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoODUgPSBfdm0kcmV0dXJuU2VhcmNoODUubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoODUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDg1ID0gX3ZtJHJldHVyblNlYXJjaDg1Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg1ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDg1LmxhdCB8fCAoX3ZtJHJldHVyblNlYXJjaDg2ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg2ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g4NiA9IF92bSRyZXR1cm5TZWFyY2g4Ni5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g4NiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoODYgPSBfdm0kcmV0dXJuU2VhcmNoODYubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoODYgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDg2ID0gX3ZtJHJldHVyblNlYXJjaDg2Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg2ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDg2LmxpbmspID8gX2MoJ2RpdicsIFtfYygnbGFiZWwnLCB7CiAgICBzdGF0aWNDbGFzczogImRyb3Bkb3duIgogIH0sIFtfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJkZC1idXR0b24iCiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvc2hhcmUucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSksIF9jKCdpbnB1dCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGQtaW5wdXQiLAogICAgYXR0cnM6IHsKICAgICAgInR5cGUiOiAiY2hlY2tib3giLAogICAgICAiaWQiOiAidGVzdCIKICAgIH0KICB9KSwgX2MoJ3VsJywgewogICAgc3RhdGljQ2xhc3M6ICJkZC1tZW51IgogIH0sIFsoX3ZtJHJldHVyblNlYXJjaDg3ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g4NyA9IF92bSRyZXR1cm5TZWFyY2g4Ny5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g4NyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoODcgPSBfdm0kcmV0dXJuU2VhcmNoODcubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoODcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDg3ID0gX3ZtJHJldHVyblNlYXJjaDg3Lm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDg3ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDg3LmxhdCA/IF9jKCdsaScsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHZhciBfdm0kcmV0dXJuU2VhcmNoODgsIF92bSRyZXR1cm5TZWFyY2g4OTsKICAgICAgICByZXR1cm4gX3ZtLnNlbmRUb1RlbGVncmFtTGF0TGFuZygoX3ZtJHJldHVyblNlYXJjaDg4ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4OCA9IF92bSRyZXR1cm5TZWFyY2g4OC5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4OCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODggPSBfdm0kcmV0dXJuU2VhcmNoODgubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDg4ID0gX3ZtJHJldHVyblNlYXJjaDg4Lm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg4ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoODgubGF0LCAoX3ZtJHJldHVyblNlYXJjaDg5ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg5ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g4OSA9IF92bSRyZXR1cm5TZWFyY2g4OS5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g4OSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoODkgPSBfdm0kcmV0dXJuU2VhcmNoODkubWluTWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoODkgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDg5ID0gX3ZtJHJldHVyblNlYXJjaDg5Lm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDg5ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoODkubGFuZyk7CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ2knLCB7CiAgICBzdGF0aWNDbGFzczogIm1kaSBtZGktc2VuZCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzAzOWJlNSIKICAgIH0KICB9KSwgX3ZtLl92KCIgVGVsZWdyYW0gIildKSA6IF9jKCdsaScsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHZhciBfdm0kcmV0dXJuU2VhcmNoOTA7CiAgICAgICAgcmV0dXJuIF92bS5zZW5kVG9UZWxlZ3JhbUxpbmsoKF92bSRyZXR1cm5TZWFyY2g5MCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5MCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOTAgPSBfdm0kcmV0dXJuU2VhcmNoOTAuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDkwID0gX3ZtJHJldHVyblNlYXJjaDkwLm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDkwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g5MCA9IF92bSRyZXR1cm5TZWFyY2g5MC5tYXJrZXREdG8pID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5MCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDkwLmxpbmspOwogICAgICB9CiAgICB9CiAgfSwgW19jKCdpJywgewogICAgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLXNlbmQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMwMzliZTUiCiAgICB9CiAgfSksIF92bS5fdigiIFRlbGVncmFtICIpXSksIChfdm0kcmV0dXJuU2VhcmNoOTEgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoOTEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDkxID0gX3ZtJHJldHVyblNlYXJjaDkxLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDkxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2g5MSA9IF92bSRyZXR1cm5TZWFyY2g5MS5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g5MSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoOTEgPSBfdm0kcmV0dXJuU2VhcmNoOTEubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoOTEgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoOTEubGF0ID8gX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgdmFyIF92bSRyZXR1cm5TZWFyY2g5MiwgX3ZtJHJldHVyblNlYXJjaDkzOwogICAgICAgIHJldHVybiBfdm0uY29weUxhdExhbmdMaW5rKChfdm0kcmV0dXJuU2VhcmNoOTIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDkyID0gX3ZtJHJldHVyblNlYXJjaDkyLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDkyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g5MiA9IF92bSRyZXR1cm5TZWFyY2g5Mi5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5MiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOTIgPSBfdm0kcmV0dXJuU2VhcmNoOTIubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g5Mi5sYXQsIChfdm0kcmV0dXJuU2VhcmNoOTMgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTMgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDkzID0gX3ZtJHJldHVyblNlYXJjaDkzLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDkzID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g5MyA9IF92bSRyZXR1cm5TZWFyY2g5My5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5MyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOTMgPSBfdm0kcmV0dXJuU2VhcmNoOTMubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g5My5sYW5nKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1jb250ZW50LWNvcHkiCiAgfSksIF92bS5fdigiIE51c3hhbGFzaCAiKV0pIDogX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgdmFyIF92bSRyZXR1cm5TZWFyY2g5NDsKICAgICAgICByZXR1cm4gX3ZtLmNvcHlMaW5rKChfdm0kcmV0dXJuU2VhcmNoOTQgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDk0ID0gX3ZtJHJldHVyblNlYXJjaDk0LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDk0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2g5NCA9IF92bSRyZXR1cm5TZWFyY2g5NC5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5NCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoOTQgPSBfdm0kcmV0dXJuU2VhcmNoOTQubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2g5NC5saW5rKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1jb250ZW50LWNvcHkiCiAgfSksIF92bS5fdigiIE51c3hhbGFzaCAiKV0pXSldKV0pIDogX3ZtLl9lKCldKV0pXSldKV0pXSwgMSldLCAxKV0sIDEpXSwgMSksIF92bS5sb2FkaW5nID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICAgInotaW5kZXgiOiAiMTEiLAogICAgICAicG9zaXRpb24iOiAic3RpY2t5IiwKICAgICAgInRvcCI6ICI1MCUiCiAgICB9CiAgfSwgW19jKCdiLW92ZXJsYXknLCB7CiAgICBhdHRyczogewogICAgICAic2hvdyI6IF92bS5sb2FkaW5nLAogICAgICAib3BhY2l0eSI6ICIwLjkiCiAgICB9CiAgfSldLCAxKSA6IF92bS5fZSgpLCBfYygnYi1jb250YWluZXInLCB7CiAgICBkaXJlY3RpdmVzOiBbewogICAgICBuYW1lOiAic2hvdyIsCiAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICB2YWx1ZTogIV92bS5hbGxJbmZvcm1hdGlvbiwKICAgICAgZXhwcmVzc2lvbjogIiFhbGxJbmZvcm1hdGlvbiIKICAgIH1dLAogICAgc3RhdGljQ2xhc3M6ICJweC1tZC01IHB4LTIgbXQtNSBtYi1tZC0wIG1iLTQiLAogICAgYXR0cnM6IHsKICAgICAgImZsdWlkIjogIjEwMCUiCiAgICB9CiAgfSwgW19jKCdiLXJvdycsIFtfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ2Itcm93JywgW19jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMyIsCiAgICAgICJsZyI6ICIxIgogICAgfQogIH0sIFtfYygnaW1nJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAibWF4LXdpZHRoIjogIjgwcHgiCiAgICB9LAogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9mYWlyUHJpY2UxLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogImQtbGctbm9uZSBkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlciBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiOSIsCiAgICAgICJsZyI6ICIxIgogICAgfQogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLmZhaXJUZWNoJykpKV0pXSksIF9jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIiwKICAgICAgImxnIjogIjExIgogICAgfQogIH0sIFtfYygnZGl2JywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0xIGQtbGctYmxvY2sgZC1ub25lIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLmZhaXJUZWNoJykpKV0pLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJkLWxnLWZsZXggZC1ibG9jayIKICB9LCBbX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAicHItbGctMyIKICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTEiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIxM3B4IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnRleHQxJykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UudGV4dDInKSkgKyAiICIpLCBfYygnYnInKSwgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS50ZXh0MycpKSArICIgIildKV0pLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJwbC1sZy0zIgogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMSIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZGVyIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1lYXN1cmUnKSkpXSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0xIgogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnRleHQ0JykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UudGV4dDUnKSkgKyAiICIpXSldKV0pXSldKV0sIDEpXSwgMSksIF9jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1zdGFydCBteS1sZy0zIG1iLTQgbXQtMyBwbC0wIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdiLWJ0bicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICJib3JkZXItcmFkaXVzIjogIjVweCIsCiAgICAgICJwYWRkaW5nIjogIjNweCAxNXB4IiwKICAgICAgIm1hcmdpbi1yaWdodCI6ICIxMHB4IgogICAgfSwKICAgIHN0eWxlOiBfdm0udGFiUHJvZHVjdCA9PSAnY3VzdG9tUHJvZHVjdCcgPyAnYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgIzI0NjI1NiwgIzFBOEY3OSk7IGNvbG9yOndoaXRlICFpbXBvcnRhbnQ7JyA6ICdiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsgY29sb3I6IzJiNjc1YiAhaW1wb3J0YW50OyBib3JkZXI6MXB4IHNvbGlkICMyYjY3NWI7JywKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0uZm9vZHNQcmljZSgpOwogICAgICB9CiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UuY3VzdG9tUHJvZHVjdCcpKSArICIgIildKV0sIDEpLCBfYygnZGl2JywgW19jKCdiLWJ0bicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICJib3JkZXItcmFkaXVzIjogIjVweCIsCiAgICAgICJwYWRkaW5nIjogIjNweCAyMHB4IiwKICAgICAgIm1hcmdpbi1sZWZ0IjogIjEwcHgiCiAgICB9LAogICAgc3R5bGU6IF92bS50YWJQcm9kdWN0ID09ICdvdGhlclByb2R1Y3QnID8gJ2JhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20sICMyNDYyNTYsICMxQThGNzkpOyBjb2xvcjp3aGl0ZSAhaW1wb3J0YW50OycgOiAnYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7IGNvbG9yOiMyYjY3NWIgIWltcG9ydGFudDsgYm9yZGVyOjFweCBzb2xpZCAjMmI2NzViOycsCiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLm90aGVyUHJpY2UoKTsKICAgICAgfQogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm90aGVyUHJvZHVjdCcpKSArICIgIildKV0sIDEpXSksIF9jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1sZy1ibG9jayBkLW5vbmUiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1jZW50ZXIiCiAgfSwgW192bS5fbChfdm0ucHJvZHVjdERhdGEuc2xpY2UoMCwgOCksIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgcmV0dXJuIF9jKCdiLWNvbCcsIHsKICAgICAga2V5OiBpbmRleCwKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0zIgogICAgfSwgW2l0ZW0uaWQgIT0gNTYgJiYgaXRlbS5pZCAhPSA1NyAmJiBpdGVtLmlkICE9IDU4ID8gX2MoJ2RpdicsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICAgIm1heC13aWR0aCI6ICIxNzBweCIsCiAgICAgICAgImN1cnNvciI6ICJwb2ludGVyIiwKICAgICAgICAiYm9yZGVyIjogIjFweCBzb2xpZCByZ2IoNDMsIDEwMywgOTEsIDAuMikiLAogICAgICAgICJib3JkZXItcmFkaXVzIjogIjNweCIsCiAgICAgICAgImJveC1zaGFkb3ciOiAicmdiKDIwMSwgMjE5LCAyMTUpIDJweCA0cHggOHB4IDBweCIKICAgICAgfSwKICAgICAgb246IHsKICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfdm0uc2hvd0RldGFpbEluZm8oaXRlbS5pZCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICI1cHggNXB4IDJweCA1cHgiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW2l0ZW0ucGhvdG9TdmcgJiYgaXRlbS5waG90b1N2Zy51cGxvYWRQYXRoID8gX2MoJ2ltZycsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICAgIm1heC13aWR0aCI6ICI1NXB4IgogICAgICB9LAogICAgICBhdHRyczogewogICAgICAgICJzcmMiOiAiIi5jb25jYXQoX3ZtLnJvdXRlTmFtZSwgIi8iKS5jb25jYXQoaXRlbS5waG90b1N2Zy51cGxvYWRQYXRoKSwKICAgICAgICAiYWx0IjogIiIKICAgICAgfQogICAgfSkgOiBfYygnaW1nJywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICAgICAibWF4LXdpZHRoIjogIjU1cHgiCiAgICAgIH0sCiAgICAgIGF0dHJzOiB7CiAgICAgICAgInNyYyI6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9kZWZhdWx0LnN2ZyIpLAogICAgICAgICJhbHQiOiAiIgogICAgICB9CiAgICB9KV0pLCBfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogInRleHQtY2VudGVyIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiaGVpZ2h0IjogIjMwcHgiLAogICAgICAgICJkaXNwbGF5IjogImZsZXgiLAogICAgICAgICJqdXN0aWZ5LWNvbnRlbnQiOiAiY2VudGVyIiwKICAgICAgICAiYWxpZ24taXRlbXMiOiAiY2VudGVyIiwKICAgICAgICAiY29sb3IiOiAiIzJiNjc1YiIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiZm9udC1zaXplIjogIjE1cHgiLAogICAgICAgICJsaW5lLWhlaWdodCI6ICIxIgogICAgICB9CiAgICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0TmFtZSh7CiAgICAgIG5hbWVMdDogaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm5hbWVMdCwKICAgICAgbmFtZVV6OiBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubmFtZVV6LAogICAgICBuYW1lUnU6IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5uYW1lUnUKICAgIH0pKSArICIgIildKV0pLCBfYygnZGl2JywgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1hcm91bmQgYWxpZ24taXRlbXMtY2VudGVyIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICIwcHgiCiAgICAgIH0KICAgIH0sIFtfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjEycHgiLAogICAgICAgICJjb2xvciI6ICIjMjQ2MjU2IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAibGlnaHRlciIsCiAgICAgICAgImxpbmUtaGVpZ2h0IjogIjEuNCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAic3RhcnQiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1pblN1bTInKSkgKyAiICIpLCBfYygnYnInKSwgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zdW0nKSkpXSksIF9jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICJjb2xvciI6ICIjMjQ3MTAwIiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoaXRlbSAhPT0gbnVsbCAmJiBpdGVtICE9PSB2b2lkIDAgJiYgaXRlbS5taW5TdW0gPyBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubWluU3VtIDogJycpKSldKV0pLCBfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYXJvdW5kIGFsaWduLWl0ZW1zLWNlbnRlciIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiMHB4IgogICAgICB9CiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIxMnB4IiwKICAgICAgICAiY29sb3IiOiAiIzI0NjI1NiIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImxpZ2h0ZXIiLAogICAgICAgICJsaW5lLWhlaWdodCI6ICIxLjQiLAogICAgICAgICJ0ZXh0LWFsaWduIjogInN0YXJ0IgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5tYXhTdW0yJykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc3VtJykpKV0pLCBfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiY29sb3IiOiAiI0FGMDAwMCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKGl0ZW0gIT09IG51bGwgJiYgaXRlbSAhPT0gdm9pZCAwICYmIGl0ZW0ubWF4U3VtID8gaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm1heFN1bSA6ICcnKSkpXSldKSwgX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWFyb3VuZCBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJwYWRkaW5nIjogIjBweCIsCiAgICAgICAgImJvcmRlciI6ICIxcHggc29saWQgIzI0NjI1NiIsCiAgICAgICAgImJvcmRlci1yYWRpdXMiOiAiM3B4IiwKICAgICAgICAibWFyZ2luIjogIjRweCA0cHgiCiAgICAgIH0KICAgIH0sIFtfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjEycHgiLAogICAgICAgICJjb2xvciI6ICIjMjQ2MjU2IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAibGlnaHRlciIsCiAgICAgICAgImxpbmUtaGVpZ2h0IjogIjEuNCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAic3RhcnQiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1pZGRsZVN1bTEnKSkgKyAiICIpLCBfYygnYnInKSwgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zdW0nKSkpXSksIF9jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICJjb2xvciI6ICIjRDRCNTEzIiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoaXRlbSAhPT0gbnVsbCAmJiBpdGVtICE9PSB2b2lkIDAgJiYgaXRlbS5taWRkbGVTdW0gPyBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubWlkZGxlU3VtIDogJycpKSldKV0pXSldKSA6IF92bS5fZSgpXSk7CiAgfSksIF92bS5fbChfdm0udGFiUHJvZHVjdCA9PSAnb3RoZXJQcm9kdWN0JyAmJiBfdm0ucHJvZHVjdERhdGEubGVuZ3RoID09IDEgPyA3IDogX3ZtLnRhYlByb2R1Y3QgPT0gJ290aGVyUHJvZHVjdCcgJiYgX3ZtLnByb2R1Y3REYXRhLmxlbmd0aCA9PSAyID8gNiA6IF92bS50YWJQcm9kdWN0ID09ICdvdGhlclByb2R1Y3QnICYmIF92bS5wcm9kdWN0RGF0YS5sZW5ndGggPT0gMyA/IDUgOiBfdm0udGFiUHJvZHVjdCA9PSAnb3RoZXJQcm9kdWN0JyAmJiBfdm0ucHJvZHVjdERhdGEubGVuZ3RoID09IDQgPyA0IDogX3ZtLnRhYlByb2R1Y3QgPT0gJ290aGVyUHJvZHVjdCcgJiYgX3ZtLnByb2R1Y3REYXRhLmxlbmd0aCA9PSA1ID8gMyA6IF92bS50YWJQcm9kdWN0ID09ICdvdGhlclByb2R1Y3QnICYmIF92bS5wcm9kdWN0RGF0YS5sZW5ndGggPT0gNiA/IDIgOiBfdm0udGFiUHJvZHVjdCA9PSAnb3RoZXJQcm9kdWN0JyAmJiBfdm0ucHJvZHVjdERhdGEubGVuZ3RoID09IDcgPyAxIDogMCwgZnVuY3Rpb24gKGkpIHsKICAgIHJldHVybiBfYygnYi1jb2wnLCB7CiAgICAgIGtleTogaSwKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0zIHRleHQtY2VudGVyIgogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJtYXgtd2lkdGgiOiAiMTcwcHgiCiAgICAgIH0KICAgIH0pXSk7CiAgfSldLCAyKSwgX2MoJ2Itcm93JywgewogICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlciIKICB9LCBbX3ZtLl9sKF92bS5wcm9kdWN0RGF0YS5zbGljZSg4LCAxNiksIGZ1bmN0aW9uIChpdGVtLCBpbmRleCkgewogICAgcmV0dXJuIF9jKCdiLWNvbCcsIHsKICAgICAga2V5OiBpbmRleCwKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0zIgogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJtYXgtd2lkdGgiOiAiMTcwcHgiLAogICAgICAgICJjdXJzb3IiOiAicG9pbnRlciIsCiAgICAgICAgImJvcmRlciI6ICIxcHggc29saWQgcmdiKDQzLCAxMDMsIDkxLCAwLjIpIiwKICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICIzcHgiLAogICAgICAgICJib3gtc2hhZG93IjogInJnYigyMDEsIDIxOSwgMjE1KSAycHggNHB4IDhweCAwcHgiCiAgICAgIH0sCiAgICAgIG9uOiB7CiAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gX3ZtLnNob3dEZXRhaWxJbmZvKGl0ZW0uaWQpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiNXB4IDVweCAycHggNXB4IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtpdGVtLnBob3RvU3ZnICYmIGl0ZW0ucGhvdG9TdmcudXBsb2FkUGF0aCA/IF9jKCdpbWcnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJtYXgtd2lkdGgiOiAiNTVweCIKICAgICAgfSwKICAgICAgYXR0cnM6IHsKICAgICAgICAic3JjIjogIiIuY29uY2F0KF92bS5yb3V0ZU5hbWUsICIvIikuY29uY2F0KGl0ZW0ucGhvdG9TdmcudXBsb2FkUGF0aCksCiAgICAgICAgImFsdCI6ICIiCiAgICAgIH0KICAgIH0pIDogX2MoJ2ltZycsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICAgIm1heC13aWR0aCI6ICI1NXB4IgogICAgICB9LAogICAgICBhdHRyczogewogICAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9kZWZhdWx0LnN2ZyIpLAogICAgICAgICJhbHQiOiAiIgogICAgICB9CiAgICB9KV0pLCBfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogInRleHQtY2VudGVyIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiaGVpZ2h0IjogIjMwcHgiLAogICAgICAgICJkaXNwbGF5IjogImZsZXgiLAogICAgICAgICJqdXN0aWZ5LWNvbnRlbnQiOiAiY2VudGVyIiwKICAgICAgICAiYWxpZ24taXRlbXMiOiAiY2VudGVyIiwKICAgICAgICAiY29sb3IiOiAiIzJiNjc1YiIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiZm9udC1zaXplIjogIjE1cHgiLAogICAgICAgICJsaW5lLWhlaWdodCI6ICIxIgogICAgICB9CiAgICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0TmFtZSh7CiAgICAgIG5hbWVMdDogaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm5hbWVMdCwKICAgICAgbmFtZVV6OiBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubmFtZVV6LAogICAgICBuYW1lUnU6IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5uYW1lUnUKICAgIH0pKSArICIgIildKV0pLCBfYygnZGl2JywgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1hcm91bmQgYWxpZ24taXRlbXMtY2VudGVyIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICIwcHgiCiAgICAgIH0KICAgIH0sIFtfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjEycHgiLAogICAgICAgICJjb2xvciI6ICIjMjQ2MjU2IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAibGlnaHRlciIsCiAgICAgICAgImxpbmUtaGVpZ2h0IjogIjEuNCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5taW5TdW0yJykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc3VtJykpKV0pLCBfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiY29sb3IiOiAiIzI0NzEwMCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKGl0ZW0gIT09IG51bGwgJiYgaXRlbSAhPT0gdm9pZCAwICYmIGl0ZW0ubWluU3VtID8gaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm1pblN1bSA6ICcnKSkpXSldKSwgX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWFyb3VuZCBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJwYWRkaW5nIjogIjBweCIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTJweCIsCiAgICAgICAgImNvbG9yIjogIiMyNDYyNTYiLAogICAgICAgICJmb250LXdlaWdodCI6ICJsaWdodGVyIiwKICAgICAgICAibGluZS1oZWlnaHQiOiAiMS40IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1heFN1bTInKSkgKyAiICIpLCBfYygnYnInKSwgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zdW0nKSkpXSksIF9jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICJjb2xvciI6ICIjQUYwMDAwIiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoaXRlbSAhPT0gbnVsbCAmJiBpdGVtICE9PSB2b2lkIDAgJiYgaXRlbS5tYXhTdW0gPyBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubWF4U3VtIDogJycpKSldKV0pLCBfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYXJvdW5kIGFsaWduLWl0ZW1zLWNlbnRlciIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiMHB4IiwKICAgICAgICAiYm9yZGVyIjogIjFweCBzb2xpZCAjMjQ2MjU2IiwKICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICIzcHgiLAogICAgICAgICJtYXJnaW4iOiAiNHB4IDRweCIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTJweCIsCiAgICAgICAgImNvbG9yIjogIiMyNDYyNTYiLAogICAgICAgICJmb250LXdlaWdodCI6ICJsaWdodGVyIiwKICAgICAgICAibGluZS1oZWlnaHQiOiAiMS40IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1pZGRsZVN1bTEnKSkgKyAiICIpLCBfYygnYnInKSwgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zdW0nKSkpXSksIF9jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICJjb2xvciI6ICIjRDRCNTEzIiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoaXRlbSAhPT0gbnVsbCAmJiBpdGVtICE9PSB2b2lkIDAgJiYgaXRlbS5taWRkbGVTdW0gPyBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubWlkZGxlU3VtIDogJycpKSldKV0pXSldKV0pOwogIH0pLCBfdm0uX2woX3ZtLnRhYlByb2R1Y3QgIT0gJ290aGVyUHJvZHVjdCcgJiYgX3ZtLnByb2R1Y3REYXRhLmxlbmd0aCA9PSA5ID8gNyA6IF92bS50YWJQcm9kdWN0ICE9ICdvdGhlclByb2R1Y3QnICYmIF92bS5wcm9kdWN0RGF0YS5sZW5ndGggPT0gMTAgPyA2IDogX3ZtLnRhYlByb2R1Y3QgIT0gJ290aGVyUHJvZHVjdCcgJiYgX3ZtLnByb2R1Y3REYXRhLmxlbmd0aCA9PSAxMSA/IDUgOiBfdm0udGFiUHJvZHVjdCAhPSAnb3RoZXJQcm9kdWN0JyAmJiBfdm0ucHJvZHVjdERhdGEubGVuZ3RoID09IDEyID8gNCA6IF92bS50YWJQcm9kdWN0ICE9ICdvdGhlclByb2R1Y3QnICYmIF92bS5wcm9kdWN0RGF0YS5sZW5ndGggPT0gMTMgPyAzIDogX3ZtLnRhYlByb2R1Y3QgIT0gJ290aGVyUHJvZHVjdCcgJiYgX3ZtLnByb2R1Y3REYXRhLmxlbmd0aCA9PSAxNCA/IDIgOiBfdm0udGFiUHJvZHVjdCAhPSAnb3RoZXJQcm9kdWN0JyAmJiBfdm0ucHJvZHVjdERhdGEubGVuZ3RoID09IDE1ID8gMSA6IDAsIGZ1bmN0aW9uIChpKSB7CiAgICByZXR1cm4gX2MoJ2ItY29sJywgewogICAgICBrZXk6IGksCiAgICAgIHN0YXRpY0NsYXNzOiAibWItMyB0ZXh0LWNlbnRlciIKICAgIH0sIFtfYygnZGl2JywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICAgICAibWF4LXdpZHRoIjogIjE3MHB4IgogICAgICB9CiAgICB9KV0pOwogIH0pXSwgMiksIF9jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1jZW50ZXIiCiAgfSwgW192bS5fbChfdm0ucHJvZHVjdERhdGEuc2xpY2UoMTYpLCBmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgIHJldHVybiBfYygnYi1jb2wnLCB7CiAgICAgIGtleTogaW5kZXgsCiAgICAgIHN0YXRpY0NsYXNzOiAibWItMyB0ZXh0LWNlbnRlciIKICAgIH0sIFtfYygnZGl2JywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICAgICAibWF4LXdpZHRoIjogIjE3MHB4IiwKICAgICAgICAiY3Vyc29yIjogInBvaW50ZXIiLAogICAgICAgICJib3JkZXIiOiAiMXB4IHNvbGlkIHJnYig0MywgMTAzLCA5MSwgMC4yKSIsCiAgICAgICAgImJvcmRlci1yYWRpdXMiOiAiM3B4IiwKICAgICAgICAiYm94LXNoYWRvdyI6ICJyZ2IoMjAxLCAyMTksIDIxNSkgMnB4IDRweCA4cHggMHB4IgogICAgICB9LAogICAgICBvbjogewogICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgcmV0dXJuIF92bS5zaG93RGV0YWlsSW5mbyhpdGVtLmlkKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIFtfYygnZGl2JywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJwYWRkaW5nIjogIjVweCA1cHggMnB4IDVweCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbaXRlbS5waG90b1N2ZyAmJiBpdGVtLnBob3RvU3ZnLnVwbG9hZFBhdGggPyBfYygnaW1nJywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICAgICAibWF4LXdpZHRoIjogIjU1cHgiCiAgICAgIH0sCiAgICAgIGF0dHJzOiB7CiAgICAgICAgInNyYyI6ICIiLmNvbmNhdChfdm0ucm91dGVOYW1lLCAiLyIpLmNvbmNhdChpdGVtLnBob3RvU3ZnLnVwbG9hZFBhdGgpLAogICAgICAgICJhbHQiOiAiIgogICAgICB9CiAgICB9KSA6IF9jKCdpbWcnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJtYXgtd2lkdGgiOiAiNTVweCIKICAgICAgfSwKICAgICAgYXR0cnM6IHsKICAgICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvZGVmYXVsdC5zdmciKSwKICAgICAgICAiYWx0IjogIiIKICAgICAgfQogICAgfSldKSwgX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImhlaWdodCI6ICIzMHB4IiwKICAgICAgICAiZGlzcGxheSI6ICJmbGV4IiwKICAgICAgICAianVzdGlmeS1jb250ZW50IjogImNlbnRlciIsCiAgICAgICAgImFsaWduLWl0ZW1zIjogImNlbnRlciIsCiAgICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICAgIH0KICAgIH0sIFtfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICAgImZvbnQtc2l6ZSI6ICIxNXB4IiwKICAgICAgICAibGluZS1oZWlnaHQiOiAiMSIKICAgICAgfQogICAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLmdldE5hbWUoewogICAgICBuYW1lTHQ6IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5uYW1lTHQsCiAgICAgIG5hbWVVejogaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm5hbWVVeiwKICAgICAgbmFtZVJ1OiBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubmFtZVJ1CiAgICB9KSkgKyAiICIpXSldKSwgX2MoJ2RpdicsIFtfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYXJvdW5kIGFsaWduLWl0ZW1zLWNlbnRlciIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiMHB4IgogICAgICB9CiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIxMnB4IiwKICAgICAgICAiY29sb3IiOiAiIzI0NjI1NiIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImxpZ2h0ZXIiLAogICAgICAgICJsaW5lLWhlaWdodCI6ICIxLjQiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWluU3VtMicpKSArICIgIiksIF9jKCdicicpLCBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnN1bScpKSldKSwgX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICAgImNvbG9yIjogIiMyNDcxMDAiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcihpdGVtICE9PSBudWxsICYmIGl0ZW0gIT09IHZvaWQgMCAmJiBpdGVtLm1pblN1bSA/IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5taW5TdW0gOiAnJykpKV0pXSksIF9jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1hcm91bmQgYWxpZ24taXRlbXMtY2VudGVyIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICIwcHgiCiAgICAgIH0KICAgIH0sIFtfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjEycHgiLAogICAgICAgICJjb2xvciI6ICIjMjQ2MjU2IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAibGlnaHRlciIsCiAgICAgICAgImxpbmUtaGVpZ2h0IjogIjEuNCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5tYXhTdW0yJykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc3VtJykpKV0pLCBfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiY29sb3IiOiAiI0FGMDAwMCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKGl0ZW0gIT09IG51bGwgJiYgaXRlbSAhPT0gdm9pZCAwICYmIGl0ZW0ubWF4U3VtID8gaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm1heFN1bSA6ICcnKSkpXSldKSwgX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWFyb3VuZCBhbGlnbi1pdGVtcy1jZW50ZXIiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJwYWRkaW5nIjogIjBweCIsCiAgICAgICAgImJvcmRlciI6ICIxcHggc29saWQgIzI0NjI1NiIsCiAgICAgICAgImJvcmRlci1yYWRpdXMiOiAiM3B4IiwKICAgICAgICAibWFyZ2luIjogIjRweCA0cHgiCiAgICAgIH0KICAgIH0sIFtfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjEycHgiLAogICAgICAgICJjb2xvciI6ICIjMjQ2MjU2IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAibGlnaHRlciIsCiAgICAgICAgImxpbmUtaGVpZ2h0IjogIjEuNCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5taWRkbGVTdW0xJykpICsgIiAiKSwgX2MoJ2JyJyksIF92bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc3VtJykpKV0pLCBfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiY29sb3IiOiAiI0Q0QjUxMyIsCiAgICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgICB9CiAgICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKGl0ZW0gIT09IG51bGwgJiYgaXRlbSAhPT0gdm9pZCAwICYmIGl0ZW0ubWlkZGxlU3VtID8gaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm1pZGRsZVN1bSA6ICcnKSkpXSldKV0pXSldKTsKICB9KSwgX3ZtLl9sKDQsIGZ1bmN0aW9uIChpKSB7CiAgICByZXR1cm4gX2MoJ2ItY29sJywgewogICAgICBrZXk6IGksCiAgICAgIHN0YXRpY0NsYXNzOiAibWItMyB0ZXh0LWNlbnRlciIKICAgIH0sIFtfYygnZGl2JywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJ3aWR0aCI6ICIxMDAlIiwKICAgICAgICAibWF4LXdpZHRoIjogIjE3MHB4IgogICAgICB9CiAgICB9KV0pOwogIH0pXSwgMildLCAxKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJkLWxnLW5vbmUgZC1ibG9jayIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ2Itcm93JywgewogICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWNlbnRlciIKICB9LCBfdm0uX2woX3ZtLnByb2R1Y3REYXRhLCBmdW5jdGlvbiAoaXRlbSwgaW5kZXgpIHsKICAgIHJldHVybiBfYygnYi1jb2wnLCB7CiAgICAgIGtleTogaW5kZXgsCiAgICAgIHN0YXRpY0NsYXNzOiAibWItNCBweC00IiwKICAgICAgYXR0cnM6IHsKICAgICAgICAiY29scyI6ICIxMiIKICAgICAgfQogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJjdXJzb3IiOiAicG9pbnRlciIsCiAgICAgICAgImJvcmRlciI6ICIxcHggc29saWQgcmdiKDQzLCAxMDMsIDkxLCAwLjIpIiwKICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICI1cHgiCiAgICAgIH0sCiAgICAgIG9uOiB7CiAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gX3ZtLnNob3dEZXRhaWxJbmZvKGl0ZW0uaWQpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiNXB4IDVweCAycHggNXB4IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtpdGVtLnBob3RvU3ZnICYmIGl0ZW0ucGhvdG9TdmcudXBsb2FkUGF0aCA/IF9jKCdpbWcnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAgICJtYXgtd2lkdGgiOiAiODBweCIKICAgICAgfSwKICAgICAgYXR0cnM6IHsKICAgICAgICAic3JjIjogIiIuY29uY2F0KF92bS5yb3V0ZU5hbWUsICIvIikuY29uY2F0KGl0ZW0ucGhvdG9TdmcudXBsb2FkUGF0aCksCiAgICAgICAgImFsdCI6ICIiCiAgICAgIH0KICAgIH0pIDogX2MoJ2ltZycsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICAgIm1heC13aWR0aCI6ICI4MHB4IgogICAgICB9LAogICAgICBhdHRyczogewogICAgICAgICJzcmMiOiByZXF1aXJlKCIuLi8uLi9hc3NldHMvZGVmYXVsdC5zdmciKSwKICAgICAgICAiYWx0IjogIiIKICAgICAgfQogICAgfSldKSwgX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciBtYi0yIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiaGVpZ2h0IjogIjMwcHgiLAogICAgICAgICJkaXNwbGF5IjogImZsZXgiLAogICAgICAgICJqdXN0aWZ5LWNvbnRlbnQiOiAiY2VudGVyIiwKICAgICAgICAiYWxpZ24taXRlbXMiOiAiY2VudGVyIiwKICAgICAgICAiY29sb3IiOiAiIzJiNjc1YiIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgICAiZm9udC1zaXplIjogIjIwcHgiLAogICAgICAgICJsaW5lLWhlaWdodCI6ICIxIgogICAgICB9CiAgICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0TmFtZSh7CiAgICAgIG5hbWVMdDogaXRlbSA9PT0gbnVsbCB8fCBpdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBpdGVtLm5hbWVMdCwKICAgICAgbmFtZVV6OiBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubmFtZVV6LAogICAgICBuYW1lUnU6IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5uYW1lUnUKICAgIH0pKSArICIgIildKV0pLCBfYygnZGl2JywgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1hcm91bmQgYWxpZ24taXRlbXMtY2VudGVyIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICIwcHgiCiAgICAgIH0KICAgIH0sIFtfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAgICJjb2xvciI6ICIjMjQ2MjU2IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAibGlnaHRlciIsCiAgICAgICAgImxpbmUtaGVpZ2h0IjogIjEuNCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAic3RhcnQiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1pblN1bTInKSkgKyAiICIpLCBfYygnYnInKSwgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zdW0nKSkpXSksIF9jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMjBweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICJjb2xvciI6ICIjMjQ3MTAwIiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoaXRlbSAhPT0gbnVsbCAmJiBpdGVtICE9PSB2b2lkIDAgJiYgaXRlbS5taW5TdW0gPyBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubWluU3VtIDogJycpKSldKV0pLCBfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYXJvdW5kIGFsaWduLWl0ZW1zLWNlbnRlciBteS0yIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAicGFkZGluZyI6ICIwcHgiCiAgICAgIH0KICAgIH0sIFtfYygncCcsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJtYi0wIiwKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAgICJjb2xvciI6ICIjMjQ2MjU2IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAibGlnaHRlciIsCiAgICAgICAgImxpbmUtaGVpZ2h0IjogIjEuNCIsCiAgICAgICAgInRleHQtYWxpZ24iOiAic3RhcnQiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLm1heFN1bTInKSkgKyAiICIpLCBfYygnYnInKSwgX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zdW0nKSkpXSksIF9jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMjBweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAgICJjb2xvciI6ICIjQUYwMDAwIiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoaXRlbSAhPT0gbnVsbCAmJiBpdGVtICE9PSB2b2lkIDAgJiYgaXRlbS5tYXhTdW0gPyBpdGVtID09PSBudWxsIHx8IGl0ZW0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGl0ZW0ubWF4U3VtIDogJycpKSldKV0pLCBfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYXJvdW5kIGFsaWduLWl0ZW1zLWNlbnRlciIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgInBhZGRpbmciOiAiMHB4IiwKICAgICAgICAiYm9yZGVyIjogIjFweCBzb2xpZCAjMjQ2MjU2IiwKICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICIzcHgiLAogICAgICAgICJtYXJnaW4iOiAiOHB4IDhweCIKICAgICAgfQogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJmb250LXNpemUiOiAiMTZweCIsCiAgICAgICAgImNvbG9yIjogIiMyNDYyNTYiLAogICAgICAgICJmb250LXdlaWdodCI6ICJsaWdodGVyIiwKICAgICAgICAibGluZS1oZWlnaHQiOiAiMS40IiwKICAgICAgICAidGV4dC1hbGlnbiI6ICJzdGFydCIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWlkZGxlU3VtMScpKSArICIgIiksIF9jKCdicicpLCBfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnN1bScpKSldKSwgX2MoJ3AnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImZvbnQtc2l6ZSI6ICIyMHB4IiwKICAgICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICAgImNvbG9yIjogIiNENEI1MTMiLAogICAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIKICAgICAgfQogICAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcihpdGVtICE9PSBudWxsICYmIGl0ZW0gIT09IHZvaWQgMCAmJiBpdGVtLm1pZGRsZVN1bSA/IGl0ZW0gPT09IG51bGwgfHwgaXRlbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogaXRlbS5taWRkbGVTdW0gOiAnJykpKV0pXSldKV0pXSk7CiAgfSksIDEpXSwgMSksIF9jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMiBtdC0zIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygnYi1idXR0b24nLCB7CiAgICBzdGF0aWNDbGFzczogImJ0biBidG4td2FybmluZyIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiYmFja2dyb3VuZCI6ICIjZjFiNDRjIiwKICAgICAgInBhZGRpbmciOiAiNXB4IDIwcHgiCiAgICB9LAogICAgYXR0cnM6IHsKICAgICAgInNpemUiOiAibWQiCiAgICB9LAogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS4kcm91dGVyLmdvKC0xKTsKICAgICAgfQogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgiYWN0aW9ucy5iYWNrIikpICsgIiAiKV0pXSwgMSldLCAxKV0sIDEpLCBfYygnYi1jb250YWluZXInLCB7CiAgICBkaXJlY3RpdmVzOiBbewogICAgICBuYW1lOiAic2hvdyIsCiAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICB2YWx1ZTogX3ZtLmFsbEluZm9ybWF0aW9uLAogICAgICBleHByZXNzaW9uOiAiYWxsSW5mb3JtYXRpb24iCiAgICB9XSwKICAgIHN0YXRpY0NsYXNzOiAicHgtbWQtNSBweC0yIG10LTUgbWItbWQtMCBtYi00IiwKICAgIGF0dHJzOiB7CiAgICAgICJmbHVpZCI6ICIxMDAlIgogICAgfQogIH0sIFtfdm0uZGV0YWlsSW5mbyA/IF9jKCdiLXJvdycsIFtfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ2RpdicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIgogICAgfQogIH0sIFtfdm0udGFiUHJvZHVjdCA9PSAnY3VzdG9tUHJvZHVjdCcgPyBfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxOHB4IiwKICAgICAgInRleHQtdHJhbnNmb3JtIjogInVwcGVyY2FzZSIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5jdXN0b21Qcm9kdWN0JykpKV0pIDogX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJmb250LXNpemUiOiAiMThweCIsCiAgICAgICJ0ZXh0LXRyYW5zZm9ybSI6ICJ1cHBlcmNhc2UiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uub3RoZXJQcm9kdWN0JykpKV0pXSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJteS00IHBsLTAiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1iZXR3ZWVuIGFsaWduLWl0ZW1zLXN0YXJ0IgogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LTMiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiLAogICAgICAibGciOiAiNCIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygnZGl2JywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIndpZHRoIjogIjEwMCUiLAogICAgICAibWF4LXdpZHRoIjogIjQ0MHB4IiwKICAgICAgImhlaWdodCI6ICIyNjBweCIsCiAgICAgICJkaXNwbGF5IjogImZsZXgiLAogICAgICAianVzdGlmeS1jb250ZW50IjogImNlbnRlciIsCiAgICAgICJhbGlnbi1pdGVtcyI6ICJjZW50ZXIiLAogICAgICAiYm9yZGVyIjogIjFweCBzb2xpZCByZ2IoNDMsIDEwMywgOTEsIDAuMSkiLAogICAgICAiYm94LXNoYWRvdyI6ICJyZ2IoMjAxLCAyMTksIDIxNSkgMnB4IDRweCA4cHggMHB4IiwKICAgICAgImJvcmRlci1yYWRpdXMiOiAiMTBweCIsCiAgICAgICJwYWRkaW5nIjogIjVweCA1cHgiLAogICAgICAidGV4dC1hbGlnbiI6ICJjZW50ZXIiCiAgICB9CiAgfSwgW192bS5kZXRhaWxJbmZvLnBob3RvUG5nICYmIF92bS5kZXRhaWxJbmZvLnBob3RvUG5nLnVwbG9hZFBhdGggPyBfYygnaW1nJywgewogICAgc3RhdGljQ2xhc3M6ICJkLWxnLWJsb2NrIGQtbm9uZSIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiYm9yZGVyLXJhZGl1cyI6ICI3cHgiCiAgICB9LAogICAgYXR0cnM6IHsKICAgICAgInNyYyI6ICIiLmNvbmNhdChfdm0ucm91dGVOYW1lLCAiLyIpLmNvbmNhdChfdm0uZGV0YWlsSW5mby5waG90b1BuZy51cGxvYWRQYXRoKSwKICAgICAgIndpZHRoIjogIjQxNSIsCiAgICAgICJoZWlnaHQiOiAiMjQwIiwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSkgOiBfdm0uX2UoKSwgX3ZtLmRldGFpbEluZm8ucGhvdG9QbmcgJiYgX3ZtLmRldGFpbEluZm8ucGhvdG9QbmcudXBsb2FkUGF0aCA/IF9jKCdpbWcnLCB7CiAgICBzdGF0aWNDbGFzczogImQtbGctbm9uZSBkLWJsb2NrIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJib3JkZXItcmFkaXVzIjogIjdweCIKICAgIH0sCiAgICBhdHRyczogewogICAgICAic3JjIjogIiIuY29uY2F0KF92bS5yb3V0ZU5hbWUsICIvIikuY29uY2F0KF92bS5kZXRhaWxJbmZvLnBob3RvUG5nLnVwbG9hZFBhdGgpLAogICAgICAid2lkdGgiOiAiMzQwIiwKICAgICAgImhlaWdodCI6ICIyMzAiLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KSA6IF9jKCdpbWcnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiYm9yZGVyLXJhZGl1cyI6ICIxMHB4IgogICAgfSwKICAgIGF0dHJzOiB7CiAgICAgICJ3aWR0aCI6ICIxNzAiLAogICAgICAic3JjIjogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2RlZmF1bHQuc3ZnIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQgYWxpZ24taXRlbXMtY2VudGVyIG15LTMiCiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvTWFyay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIG1sLTIgc2l0ZUNvbG9yIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMjBweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2NvbHVtbi5zYXZkb1Rhcm1vcScpKSldKV0pLCBfYygnYi1yb3cnLCBbX3ZtLnRhYlByb2R1Y3QgPT0gJ2N1c3RvbVByb2R1Y3QnID8gX2MoJ2ItY29sJywgewogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdCYXNlVHJlZXNlbGVjdFdpdGhWYWxpZGF0aW9uJywgewogICAgcmVmOiAicGFyZW50RGVwMSIsCiAgICBzdGF0aWNDbGFzczogInJlcXVpcmVkIiwKICAgIGF0dHJzOiB7CiAgICAgICJkaXNhYmxlLWJyYW5jaC1ub2RlcyI6IHRydWUsCiAgICAgICJzZWFyY2hhYmxlIjogdHJ1ZSwKICAgICAgImNsZWFyYWJsZSI6IHRydWUsCiAgICAgICJvcGVuLWRpcmVjdGlvbiI6ICJib3R0b20iLAogICAgICAidmVlLW5hbWUiOiAicGFyZW50RGVwVmVlTmFtZSIsCiAgICAgICJydWxlcyI6ICJyZXF1aXJlZCIsCiAgICAgICJwbGFjZWhvbGRlciI6IF92bS4kdCgnJyksCiAgICAgICJvbmx5LWZvcm0tZWxlbWVudCI6ICIiLAogICAgICAiZm9ybS1sYWJlbCI6ICJfX25vbmUiLAogICAgICAib3B0aW9ucyI6IF92bS5jb2xsZWN0U2F2ZG8sCiAgICAgICJkZWZhdWx0LWV4cGFuZC1sZXZlbCI6IDEsCiAgICAgICJub3JtYWxpemVyIjogX3ZtLm5vcm1hbGl6ZXIxLAogICAgICAibmFtZSI6ICJwYXJlbnREZXAxIiwKICAgICAgImN1c3RvbS1zdHlsZXMiOiAid2lkdGg6IDkwJTsgYm9yZGVyOiAxcHggc29saWQgIzJiNjc1YjsiCiAgICB9LAogICAgb246IHsKICAgICAgImNsb3NlIjogZnVuY3Rpb24gY2xvc2UoJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS50cmVlQ2xvc2VkKCdwYXJlbnREZXBWZWVOYW1lJyk7CiAgICAgIH0KICAgIH0sCiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLm1hcmtldElkLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLm1hcmtldElkID0gJCR2OwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAibWFya2V0SWQiCiAgICB9CiAgfSldLCAxKSA6IF92bS5fZSgpLCBfdm0udGFiUHJvZHVjdCA9PSAnb3RoZXJQcm9kdWN0JyAmJiAoX3ZtLnByb2R1Y3RDaGlsZElkID09IDYxIHx8IF92bS5wcm9kdWN0Q2hpbGRJZCA9PSAxMjMgfHwgX3ZtLnByb2R1Y3RDaGlsZElkID09IDEyNSkgPyBfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ0Jhc2VUcmVlc2VsZWN0V2l0aFZhbGlkYXRpb24nLCB7CiAgICByZWY6ICJwYXJlbnREZXAxIiwKICAgIHN0YXRpY0NsYXNzOiAicmVxdWlyZWQiLAogICAgYXR0cnM6IHsKICAgICAgImRpc2FibGUtYnJhbmNoLW5vZGVzIjogdHJ1ZSwKICAgICAgInNlYXJjaGFibGUiOiB0cnVlLAogICAgICAiY2xlYXJhYmxlIjogdHJ1ZSwKICAgICAgIm9wZW4tZGlyZWN0aW9uIjogImJvdHRvbSIsCiAgICAgICJ2ZWUtbmFtZSI6ICJwYXJlbnREZXBWZWVOYW1lIiwKICAgICAgInJ1bGVzIjogInJlcXVpcmVkIiwKICAgICAgInBsYWNlaG9sZGVyIjogX3ZtLiR0KCcnKSwKICAgICAgIm9ubHktZm9ybS1lbGVtZW50IjogIiIsCiAgICAgICJmb3JtLWxhYmVsIjogIl9fbm9uZSIsCiAgICAgICJvcHRpb25zIjogX3ZtLmNvbGxlY3RTYXZkb0dheiwKICAgICAgImRlZmF1bHQtZXhwYW5kLWxldmVsIjogMSwKICAgICAgIm5vcm1hbGl6ZXIiOiBfdm0ubm9ybWFsaXplcjEsCiAgICAgICJuYW1lIjogInBhcmVudERlcDEiLAogICAgICAiY3VzdG9tLXN0eWxlcyI6ICJ3aWR0aDogOTAlOyBib3JkZXI6IDFweCBzb2xpZCAjMmI2NzViOyIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xvc2UiOiBmdW5jdGlvbiBjbG9zZSgkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLnRyZWVDbG9zZWQoJ3BhcmVudERlcFZlZU5hbWUnKTsKICAgICAgfQogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0ubWFya2V0SWQsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0ubWFya2V0SWQgPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJtYXJrZXRJZCIKICAgIH0KICB9KV0sIDEpIDogX3ZtLl9lKCksIF92bS50YWJQcm9kdWN0ID09ICdvdGhlclByb2R1Y3QnICYmIChfdm0ucHJvZHVjdENoaWxkSWQgPT0gNjAgfHwgX3ZtLnByb2R1Y3RDaGlsZElkID09IDE0OCB8fCBfdm0ucHJvZHVjdENoaWxkSWQgPT0gMTMxIHx8IF92bS5wcm9kdWN0Q2hpbGRJZCA9PSAxMjkgfHwgX3ZtLnByb2R1Y3RDaGlsZElkID09IDEyNykgPyBfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ0Jhc2VUcmVlc2VsZWN0V2l0aFZhbGlkYXRpb24nLCB7CiAgICByZWY6ICJwYXJlbnREZXAxIiwKICAgIHN0YXRpY0NsYXNzOiAicmVxdWlyZWQiLAogICAgYXR0cnM6IHsKICAgICAgImRpc2FibGUtYnJhbmNoLW5vZGVzIjogdHJ1ZSwKICAgICAgInNlYXJjaGFibGUiOiB0cnVlLAogICAgICAiY2xlYXJhYmxlIjogdHJ1ZSwKICAgICAgIm9wZW4tZGlyZWN0aW9uIjogImJvdHRvbSIsCiAgICAgICJ2ZWUtbmFtZSI6ICJwYXJlbnREZXBWZWVOYW1lIiwKICAgICAgInJ1bGVzIjogInJlcXVpcmVkIiwKICAgICAgInBsYWNlaG9sZGVyIjogX3ZtLiR0KCcnKSwKICAgICAgIm9ubHktZm9ybS1lbGVtZW50IjogIiIsCiAgICAgICJmb3JtLWxhYmVsIjogIl9fbm9uZSIsCiAgICAgICJvcHRpb25zIjogX3ZtLmNvbGxlY3RTYXZkb0JlbnppbiwKICAgICAgImRlZmF1bHQtZXhwYW5kLWxldmVsIjogMSwKICAgICAgIm5vcm1hbGl6ZXIiOiBfdm0ubm9ybWFsaXplcjEsCiAgICAgICJuYW1lIjogInBhcmVudERlcDEiLAogICAgICAiY3VzdG9tLXN0eWxlcyI6ICJ3aWR0aDogOTAlOyBib3JkZXI6IDFweCBzb2xpZCAjMmI2NzViOyIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xvc2UiOiBmdW5jdGlvbiBjbG9zZSgkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLnRyZWVDbG9zZWQoJ3BhcmVudERlcFZlZU5hbWUnKTsKICAgICAgfQogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0ubWFya2V0SWQsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0ubWFya2V0SWQgPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJtYXJrZXRJZCIKICAgIH0KICB9KV0sIDEpIDogX3ZtLl9lKCksIF92bS50YWJQcm9kdWN0ID09ICdvdGhlclByb2R1Y3QnICYmIChfdm0ucHJvZHVjdENoaWxkSWQgPT0gNTYgfHwgX3ZtLnByb2R1Y3RDaGlsZElkID09IDU3IHx8IF92bS5wcm9kdWN0Q2hpbGRJZCA9PSA1OCkgPyBfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ0Jhc2VUcmVlc2VsZWN0V2l0aFZhbGlkYXRpb24nLCB7CiAgICByZWY6ICJwYXJlbnREZXAxIiwKICAgIHN0YXRpY0NsYXNzOiAicmVxdWlyZWQiLAogICAgYXR0cnM6IHsKICAgICAgImRpc2FibGUtYnJhbmNoLW5vZGVzIjogdHJ1ZSwKICAgICAgInNlYXJjaGFibGUiOiB0cnVlLAogICAgICAiY2xlYXJhYmxlIjogdHJ1ZSwKICAgICAgIm9wZW4tZGlyZWN0aW9uIjogImJvdHRvbSIsCiAgICAgICJ2ZWUtbmFtZSI6ICJwYXJlbnREZXBWZWVOYW1lIiwKICAgICAgInJ1bGVzIjogInJlcXVpcmVkIiwKICAgICAgInBsYWNlaG9sZGVyIjogX3ZtLiR0KCcnKSwKICAgICAgIm9ubHktZm9ybS1lbGVtZW50IjogIiIsCiAgICAgICJmb3JtLWxhYmVsIjogIl9fbm9uZSIsCiAgICAgICJvcHRpb25zIjogX3ZtLmNvbGxlY3RTYXZkb1BheHRhLAogICAgICAiZGVmYXVsdC1leHBhbmQtbGV2ZWwiOiAxLAogICAgICAibm9ybWFsaXplciI6IF92bS5ub3JtYWxpemVyMSwKICAgICAgIm5hbWUiOiAicGFyZW50RGVwMSIsCiAgICAgICJjdXN0b20tc3R5bGVzIjogIndpZHRoOiA5MCU7IGJvcmRlcjogMXB4IHNvbGlkICMyYjY3NWI7IgogICAgfSwKICAgIG9uOiB7CiAgICAgICJjbG9zZSI6IGZ1bmN0aW9uIGNsb3NlKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0udHJlZUNsb3NlZCgncGFyZW50RGVwVmVlTmFtZScpOwogICAgICB9CiAgICB9LAogICAgbW9kZWw6IHsKICAgICAgdmFsdWU6IF92bS5tYXJrZXRJZCwKICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCQkdikgewogICAgICAgIF92bS5tYXJrZXRJZCA9ICQkdjsKICAgICAgfSwKICAgICAgZXhwcmVzc2lvbjogIm1hcmtldElkIgogICAgfQogIH0pXSwgMSkgOiBfdm0uX2UoKV0sIDEpLCBfdm0udGFiUHJvZHVjdCA9PSAnY3VzdG9tUHJvZHVjdCcgJiYgX3ZtLm1hcmtldElkID8gX2MoJ2Itcm93JywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIm1hcmdpbi10b3AiOiAiMjZweCIKICAgIH0KICB9LCBbX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC1sZy0yIHB4LTEgdGV4dC1tZC1sZWZ0IHRleHQtY2VudGVyIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjQiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWlkZGxlU3VtJykpKV0pLCBfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjMjg5MjAyIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoKF92bSRyZXR1cm5TZWFyY2g5NSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g5NSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoOTUgPSBfdm0kcmV0dXJuU2VhcmNoOTUubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDk1ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDk1Lm1pZGRsZVN1bSA/IChfdm0kcmV0dXJuU2VhcmNoOTYgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDk2ID0gX3ZtJHJldHVyblNlYXJjaDk2Lm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5NiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDk2Lm1pZGRsZVN1bSA6IF92bS4kdCgncHJvZHVjdFByaWNlLm5vdEZvdW5kJykpKSArICIgIiksIChfdm0kcmV0dXJuU2VhcmNoOTcgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoOTcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDk3ID0gX3ZtJHJldHVyblNlYXJjaDk3Lm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g5NyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2g5Ny5taWRkbGVTdW0gPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnNvbScpKSldKSA6IF92bS5fZSgpXSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC1sZy0yIHB4LTEgdGV4dC1tZC1sZWZ0IHRleHQtY2VudGVyIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjQiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWF4U3VtJykpKV0pLCBfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjRDNBQjFEIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoKF92bSRyZXR1cm5TZWFyY2g5OCA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2g5OCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoOTggPSBfdm0kcmV0dXJuU2VhcmNoOTgubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDk4ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDk4Lm1heFN1bSA/IChfdm0kcmV0dXJuU2VhcmNoOTkgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoOTkgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDk5ID0gX3ZtJHJldHVyblNlYXJjaDk5Lm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2g5OSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDk5Lm1heFN1bSA6IF92bS4kdCgncHJvZHVjdFByaWNlLm5vdEZvdW5kJykpKSArICIgIiksIChfdm0kcmV0dXJuU2VhcmNoMTAwID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEwMCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTAwID0gX3ZtJHJldHVyblNlYXJjaDEwMC5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTAwICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEwMC5tYXhTdW0gPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnNvbScpKSldKSA6IF92bS5fZSgpXSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC1sZy0yIHB4LTEgdGV4dC1tZC1sZWZ0IHRleHQtY2VudGVyIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjQiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWluU3VtJykpKV0pLCBfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjMmI2NzViIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoKF92bSRyZXR1cm5TZWFyY2gxMDEgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTAxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMDEgPSBfdm0kcmV0dXJuU2VhcmNoMTAxLm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMDEgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTAxLm1pblN1bSA/IChfdm0kcmV0dXJuU2VhcmNoMTAyID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEwMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTAyID0gX3ZtJHJldHVyblNlYXJjaDEwMi5tYXJrZXQxKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTAyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTAyLm1pblN1bSA6IF92bS4kdCgncHJvZHVjdFByaWNlLm5vdEZvdW5kJykpKSArICIgIiksIChfdm0kcmV0dXJuU2VhcmNoMTAzID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEwMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTAzID0gX3ZtJHJldHVyblNlYXJjaDEwMy5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTAzICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEwMy5taW5TdW0gPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnNvbScpKSldKSA6IF92bS5fZSgpXSldKV0sIDEpIDogX3ZtLnRhYlByb2R1Y3QgPT0gJ290aGVyUHJvZHVjdCcgJiYgX3ZtLm1hcmtldElkID8gX2MoJ2Itcm93JywgewogICAgc3RhdGljQ2xhc3M6ICJtdC00IgogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LWxnLTIgbXktbGctMCBteS0zIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIiwKICAgICAgImxnIjogIjYiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc3VtMScpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IiwKICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAiY29sb3IiOiAiIzJiNjc1YiIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKChfdm0kcmV0dXJuU2VhcmNoMTA0ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEwNCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTA0ID0gX3ZtJHJldHVyblNlYXJjaDEwNC5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTA0ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEwNC5tYXhTdW0gPyAoX3ZtJHJldHVyblNlYXJjaDEwNSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMDUgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEwNSA9IF92bSRyZXR1cm5TZWFyY2gxMDUubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEwNSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDEwNS5tYXhTdW0gOiBfdm0uJHQoJ3Byb2R1Y3RQcmljZS5ub3RGb3VuZCcpKSkgKyAiICIpLCAoX3ZtJHJldHVyblNlYXJjaDEwNiA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMDYgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEwNiA9IF92bSRyZXR1cm5TZWFyY2gxMDYubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEwNiAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMDYubWF4U3VtID8gX2MoJ3NwYW4nLCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zb20nKSkpXSkgOiBfdm0uX2UoKV0pXSldLCAxKSA6IF92bS5fZSgpXSwgMSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC0zIG10LWxnLTAgbXQtNCIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIsCiAgICAgICJsZyI6ICI0IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdkaXYnLCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjI0cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjMmI2NzViIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5nZXROYW1lKHsKICAgIG5hbWVMdDogKF92bSRkZXRhaWxJbmZvID0gX3ZtLmRldGFpbEluZm8pID09PSBudWxsIHx8IF92bSRkZXRhaWxJbmZvID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kZGV0YWlsSW5mby5uYW1lTHQsCiAgICBuYW1lVXo6IChfdm0kZGV0YWlsSW5mbzIgPSBfdm0uZGV0YWlsSW5mbykgPT09IG51bGwgfHwgX3ZtJGRldGFpbEluZm8yID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kZGV0YWlsSW5mbzIubmFtZVV6LAogICAgbmFtZVJ1OiAoX3ZtJGRldGFpbEluZm8zID0gX3ZtLmRldGFpbEluZm8pID09PSBudWxsIHx8IF92bSRkZXRhaWxJbmZvMyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJGRldGFpbEluZm8zLm5hbWVSdQogIH0pKSArICIgIiArIF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5uYXJ4bGFyaScpKSldKV0pLCBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJtdC0zIgogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNHB4IiwKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiOHB4IgogICAgfQogIH0sIFtfdm0uX3YoItCl0YPQtNGD0LQg0LHRg9C50LjRh9CwIildKSwgX2MoJ3NlbGVjdCcsIHsKICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgdmFsdWU6IF92bS5yZWdpb25Tb2F0bywKICAgICAgZXhwcmVzc2lvbjogInJlZ2lvblNvYXRvIgogICAgfV0sCiAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCBmb3JtLWNvbnRyb2wtbWQgZC1sZy1ibG9jayBkLW5vbmUiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIndpZHRoIjogIjkwJSIsCiAgICAgICJib3JkZXIiOiAiMXB4IHNvbGlkICMyYjY3NWIiCiAgICB9LAogICAgb246IHsKICAgICAgImNoYW5nZSI6IGZ1bmN0aW9uIGNoYW5nZSgkZXZlbnQpIHsKICAgICAgICB2YXIgJCRzZWxlY3RlZFZhbCA9IEFycmF5LnByb3RvdHlwZS5maWx0ZXIuY2FsbCgkZXZlbnQudGFyZ2V0Lm9wdGlvbnMsIGZ1bmN0aW9uIChvKSB7CiAgICAgICAgICByZXR1cm4gby5zZWxlY3RlZDsKICAgICAgICB9KS5tYXAoZnVuY3Rpb24gKG8pIHsKICAgICAgICAgIHZhciB2YWwgPSAiX3ZhbHVlIiBpbiBvID8gby5fdmFsdWUgOiBvLnZhbHVlOwogICAgICAgICAgcmV0dXJuIHZhbDsKICAgICAgICB9KTsKICAgICAgICBfdm0ucmVnaW9uU29hdG8gPSAkZXZlbnQudGFyZ2V0Lm11bHRpcGxlID8gJCRzZWxlY3RlZFZhbCA6ICQkc2VsZWN0ZWRWYWxbMF07CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNyIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3JhaXMuZGVwYXJ0bWVudC5yZXB1YmxpYycpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzAzIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24uYW5kaWpvbicpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzA2IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24uYnV4b3JvJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MDgiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5qaXp6YXgnKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTcxMiIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLm5hdm9pJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MTQiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5uYW1hbmdhbicpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzE4IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24uc2FtYXJxYW5kJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MjQiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5zaXJkYXJ5bycpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzIyIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24uc3VyeGFuZGFyeW8nKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTczMCIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLmZhcmdvbmEnKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTcyNyIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLnRvc2hrZW50VicpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzI2IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24udG9zaGtlbnRTaCcpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzEwIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24ucWFzaHFhZGFyeW8nKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTczMyIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLnhvcmF6bScpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzM1IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24ucW9yYXFhbHBvcScpKSldKV0pLCBfYygnc2VsZWN0JywgewogICAgZGlyZWN0aXZlczogW3sKICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICB2YWx1ZTogX3ZtLnJlZ2lvblNvYXRvLAogICAgICBleHByZXNzaW9uOiAicmVnaW9uU29hdG8iCiAgICB9XSwKICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sIGZvcm0tY29udHJvbC1tZCBkLWxnLW5vbmUgZC1ibG9jayIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAid2lkdGgiOiAiMTAwJSIsCiAgICAgICJib3JkZXIiOiAiMXB4IHNvbGlkICMyYjY3NWIiCiAgICB9LAogICAgb246IHsKICAgICAgImNoYW5nZSI6IGZ1bmN0aW9uIGNoYW5nZSgkZXZlbnQpIHsKICAgICAgICB2YXIgJCRzZWxlY3RlZFZhbCA9IEFycmF5LnByb3RvdHlwZS5maWx0ZXIuY2FsbCgkZXZlbnQudGFyZ2V0Lm9wdGlvbnMsIGZ1bmN0aW9uIChvKSB7CiAgICAgICAgICByZXR1cm4gby5zZWxlY3RlZDsKICAgICAgICB9KS5tYXAoZnVuY3Rpb24gKG8pIHsKICAgICAgICAgIHZhciB2YWwgPSAiX3ZhbHVlIiBpbiBvID8gby5fdmFsdWUgOiBvLnZhbHVlOwogICAgICAgICAgcmV0dXJuIHZhbDsKICAgICAgICB9KTsKICAgICAgICBfdm0ucmVnaW9uU29hdG8gPSAkZXZlbnQudGFyZ2V0Lm11bHRpcGxlID8gJCRzZWxlY3RlZFZhbCA6ICQkc2VsZWN0ZWRWYWxbMF07CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNyIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3JhaXMuZGVwYXJ0bWVudC5yZXB1YmxpYycpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzAzIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24uYW5kaWpvbicpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzA2IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24uYnV4b3JvJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MDgiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5qaXp6YXgnKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTcxMiIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLm5hdm9pJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MTQiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5uYW1hbmdhbicpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzE4IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24uc2FtYXJxYW5kJykpKV0pLCBfYygnb3B0aW9uJywgewogICAgYXR0cnM6IHsKICAgICAgInZhbHVlIjogIjE3MjQiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLiR0KCdyYWlzLnJlZ2lvbi5zaXJkYXJ5bycpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzIyIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24uc3VyeGFuZGFyeW8nKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTczMCIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLmZhcmdvbmEnKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTcyNyIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLnRvc2hrZW50VicpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzI2IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24udG9zaGtlbnRTaCcpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzEwIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24ucWFzaHFhZGFyeW8nKSkpXSksIF9jKCdvcHRpb24nLCB7CiAgICBhdHRyczogewogICAgICAidmFsdWUiOiAiMTczMyIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uJHQoJ3JhaXMucmVnaW9uLnhvcmF6bScpKSldKSwgX2MoJ29wdGlvbicsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ2YWx1ZSI6ICIxNzM1IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS4kdCgncmFpcy5yZWdpb24ucW9yYXFhbHBvcScpKSldKV0pXSksIF92bS5jaGlsZGVyQnlJRCAmJiBfdm0uY2hpbGRlckJ5SUQubGVuZ3RoID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibXQtNCBkLWxnLWJsb2NrIGQtbm9uZSIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAibWFyZ2luLWJvdHRvbSI6ICI3MHB4IgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdigi0JzQsNKz0YHRg9C70L7RgiDRgtGD0YDQuCDQsdGD0LnQuNGH0LAiKV0pXSksIF9jKCdCYXNlVHJlZXNlbGVjdFdpdGhWYWxpZGF0aW9uJywgewogICAgcmVmOiAicGFyZW50RGVwIiwKICAgIHN0YXRpY0NsYXNzOiAicmVxdWlyZWQiLAogICAgYXR0cnM6IHsKICAgICAgInNlYXJjaGFibGUiOiB0cnVlLAogICAgICAiY2xlYXJhYmxlIjogdHJ1ZSwKICAgICAgIm9wZW4tZGlyZWN0aW9uIjogImJvdHRvbSIsCiAgICAgICJ2ZWUtbmFtZSI6ICJwYXJlbnREZXBWZWVOYW1lIiwKICAgICAgInJ1bGVzIjogInJlcXVpcmVkIiwKICAgICAgInBsYWNlaG9sZGVyIjogX3ZtLiR0KCcnKSwKICAgICAgIm9ubHktZm9ybS1lbGVtZW50IjogIiIsCiAgICAgICJmb3JtLWxhYmVsIjogIl9fbm9uZSIsCiAgICAgICJvcHRpb25zIjogX3ZtLmNoaWxkZXJCeUlELAogICAgICAiZGVmYXVsdC1leHBhbmQtbGV2ZWwiOiAxLAogICAgICAibm9ybWFsaXplciI6IF92bS5ub3JtYWxpemVyLAogICAgICAibmFtZSI6ICJwYXJlbnREZXAiLAogICAgICAiY3VzdG9tLXN0eWxlcyI6ICJ3aWR0aDogOTAlOyBib3JkZXI6IDFweCBzb2xpZCAjMmI2NzViOyIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xvc2UiOiBmdW5jdGlvbiBjbG9zZSgkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLnRyZWVDbG9zZWQoJ3BhcmVudERlcFZlZU5hbWUnKTsKICAgICAgfQogICAgfSwKICAgIG1vZGVsOiB7CiAgICAgIHZhbHVlOiBfdm0ucHJvZHVjdENoaWxkSWQsCiAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygkJHYpIHsKICAgICAgICBfdm0ucHJvZHVjdENoaWxkSWQgPSAkJHY7CiAgICAgIH0sCiAgICAgIGV4cHJlc3Npb246ICJwcm9kdWN0Q2hpbGRJZCIKICAgIH0KICB9KSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1ub25lIGFzaWRlIgogIH0sIFtfYygndWwnLCB7CiAgICBzdGF0aWNDbGFzczogImxpc3QiCiAgfSwgW19jKCdsaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibGlzdC1pdGVtIgogIH0sIFtfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJkcm9wIGQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtYmV0d2VlbiBhbGlnbi1pdGVtcy1jZW50ZXIiCiAgfSwgW19jKCdkaXYnLCB7CiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLmdldEJ5Q2hpbGQoX3ZtLmRldGFpbEluZm8uaWQpOwogICAgICB9CiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLmdldE5hbWUoewogICAgbmFtZUx0OiAoX3ZtJGRldGFpbEluZm80ID0gX3ZtLmRldGFpbEluZm8pID09PSBudWxsIHx8IF92bSRkZXRhaWxJbmZvNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJGRldGFpbEluZm80Lm5hbWVMdCwKICAgIG5hbWVVejogKF92bSRkZXRhaWxJbmZvNSA9IF92bS5kZXRhaWxJbmZvKSA9PT0gbnVsbCB8fCBfdm0kZGV0YWlsSW5mbzUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRkZXRhaWxJbmZvNS5uYW1lVXosCiAgICBuYW1lUnU6IChfdm0kZGV0YWlsSW5mbzYgPSBfdm0uZGV0YWlsSW5mbykgPT09IG51bGwgfHwgX3ZtJGRldGFpbEluZm82ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kZGV0YWlsSW5mbzYubmFtZVJ1CiAgfSkpKV0pLCBfdm0uY2hpbGRlckJ5SUQuY2hpbGRyZW4gJiYgX3ZtLmNoaWxkZXJCeUlELmNoaWxkcmVuLmxlbmd0aCA/IF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogInRleHQtZW5kIiwKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0ub3BlblByb2R1Y3RUeXBlMSgpOwogICAgICB9CiAgICB9CiAgfSwgW192bS5kcm9wZG93bk9wZW4xID8gX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJ3aWR0aCI6ICI5IiwKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL3VwLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KSA6IF92bS5fZSgpLCAhX3ZtLmRyb3Bkb3duT3BlbjEgPyBfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL2Rvd24ucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pIDogX3ZtLl9lKCldKSA6IF92bS5fZSgpXSksIF9jKCd1bCcsIHsKICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgcmF3TmFtZTogInYtc2hvdyIsCiAgICAgIHZhbHVlOiBfdm0uZHJvcGRvd25PcGVuMSwKICAgICAgZXhwcmVzc2lvbjogImRyb3Bkb3duT3BlbjEiCiAgICB9XSwKICAgIHN0YXRpY0NsYXNzOiAiZHJvcGxpc3QiCiAgfSwgW19jKCdsaScsIF92bS5fbChfdm0uY2hpbGRlckJ5SUQuY2hpbGRyZW4sIGZ1bmN0aW9uICh2bSwgaW5kZXgpIHsKICAgIHJldHVybiBfYygnZGl2JywgewogICAgICBrZXk6IGluZGV4LAogICAgICBzdGF0aWNDbGFzczogImRyb3AiCiAgICB9LCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LWJldHdlZW4gYWxpZ24taXRlbXMtY2VudGVyIgogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIG9uOiB7CiAgICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgICByZXR1cm4gX3ZtLmdldEJ5Q2hpbGQodm0uaWQpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoX3ZtLmdldE5hbWUoewogICAgICBuYW1lTHQ6IHZtID09PSBudWxsIHx8IHZtID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2bS5uYW1lTHQsCiAgICAgIG5hbWVVejogdm0gPT09IG51bGwgfHwgdm0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZtLm5hbWVVeiwKICAgICAgbmFtZVJ1OiB2bSA9PT0gbnVsbCB8fCB2bSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdm0ubmFtZVJ1CiAgICB9KSkpXSksIHZtLmNoaWxkcmVuICYmIHZtLmNoaWxkcmVuLmxlbmd0aCA/IF9jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAidGV4dC1lbmQiLAogICAgICBvbjogewogICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgcmV0dXJuIF92bS5vcGVuUHJvZHVjdFR5cGUodm0uaWQpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgW192bS5kcm9wZG93bk9wZW4yID8gX2MoJ2ltZycsIHsKICAgICAgYXR0cnM6IHsKICAgICAgICAid2lkdGgiOiAiOSIsCiAgICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL3VwLnBuZyIpLAogICAgICAgICJhbHQiOiAiIgogICAgICB9CiAgICB9KSA6IF92bS5fZSgpLCAhX3ZtLmRyb3Bkb3duT3BlbjIgPyBfYygnaW1nJywgewogICAgICBhdHRyczogewogICAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9kb3duLnBuZyIpLAogICAgICAgICJhbHQiOiAiIgogICAgICB9CiAgICB9KSA6IF92bS5fZSgpXSkgOiBfdm0uX2UoKV0pLCBfYygndWwnLCB7CiAgICAgIGRpcmVjdGl2ZXM6IFt7CiAgICAgICAgbmFtZTogInNob3ciLAogICAgICAgIHJhd05hbWU6ICJ2LXNob3ciLAogICAgICAgIHZhbHVlOiBfdm0uZHJvcGRvd25PcGVuMiwKICAgICAgICBleHByZXNzaW9uOiAiZHJvcGRvd25PcGVuMiIKICAgICAgfV0sCiAgICAgIHN0YXRpY0NsYXNzOiAiZHJvcGxpc3QiCiAgICB9LCBbX2MoJ2xpJywgX3ZtLl9sKHZtLmNoaWxkcmVuLCBmdW5jdGlvbiAoZG0sIGluZGV4MSkgewogICAgICByZXR1cm4gX2MoJ2RpdicsIHsKICAgICAgICBrZXk6IGluZGV4MSwKICAgICAgICBzdGF0aWNDbGFzczogImRyb3AiCiAgICAgIH0sIFtfYygnZGl2JywgewogICAgICAgIG9uOiB7CiAgICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgICAgcmV0dXJuIF92bS5nZXRCeUNoaWxkKGRtLmlkKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5nZXROYW1lKHsKICAgICAgICBuYW1lTHQ6IGRtID09PSBudWxsIHx8IGRtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkbS5uYW1lTHQsCiAgICAgICAgbmFtZVV6OiBkbSA9PT0gbnVsbCB8fCBkbSA9PT0gdm9pZCAwID8gdm9pZCAwIDogZG0ubmFtZVV6LAogICAgICAgIG5hbWVSdTogZG0gPT09IG51bGwgfHwgZG0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IGRtLm5hbWVSdQogICAgICB9KSkpXSldKTsKICAgIH0pLCAwKV0pXSk7CiAgfSksIDApXSldKV0pXSldLCAxKSA6IF92bS5fZSgpLCBfdm0uY2hpbGRlckJ5SUQgJiYgX3ZtLmNoaWxkZXJCeUlELmxlbmd0aCA/IF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LTQgZC1sZy1ub25lIGQtYmxvY2siLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiMTVweCIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNHB4IiwKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiOHB4IgogICAgfQogIH0sIFtfdm0uX3YoItCc0LDSs9GB0YPQu9C+0YIg0YLRg9GA0Lgg0LHRg9C50LjRh9CwIildKV0pLCBfYygnQmFzZVRyZWVzZWxlY3RXaXRoVmFsaWRhdGlvbicsIHsKICAgIHJlZjogInBhcmVudERlcCIsCiAgICBzdGF0aWNDbGFzczogInJlcXVpcmVkIiwKICAgIGF0dHJzOiB7CiAgICAgICJzZWFyY2hhYmxlIjogdHJ1ZSwKICAgICAgImNsZWFyYWJsZSI6IHRydWUsCiAgICAgICJvcGVuLWRpcmVjdGlvbiI6ICJib3R0b20iLAogICAgICAidmVlLW5hbWUiOiAicGFyZW50RGVwVmVlTmFtZSIsCiAgICAgICJydWxlcyI6ICJyZXF1aXJlZCIsCiAgICAgICJwbGFjZWhvbGRlciI6IF92bS4kdCgnJyksCiAgICAgICJvbmx5LWZvcm0tZWxlbWVudCI6ICIiLAogICAgICAiZm9ybS1sYWJlbCI6ICJfX25vbmUiLAogICAgICAib3B0aW9ucyI6IF92bS5jaGlsZGVyQnlJRCwKICAgICAgImRlZmF1bHQtZXhwYW5kLWxldmVsIjogMSwKICAgICAgIm5vcm1hbGl6ZXIiOiBfdm0ubm9ybWFsaXplciwKICAgICAgIm5hbWUiOiAicGFyZW50RGVwIiwKICAgICAgImN1c3RvbS1zdHlsZXMiOiAid2lkdGg6IDkwJTsgYm9yZGVyOiAxcHggc29saWQgIzJiNjc1YjsiCiAgICB9LAogICAgb246IHsKICAgICAgImNsb3NlIjogZnVuY3Rpb24gY2xvc2UoJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS50cmVlQ2xvc2VkKCdwYXJlbnREZXBWZWVOYW1lJyk7CiAgICAgIH0KICAgIH0sCiAgICBtb2RlbDogewogICAgICB2YWx1ZTogX3ZtLnByb2R1Y3RDaGlsZElkLAogICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soJCR2KSB7CiAgICAgICAgX3ZtLnByb2R1Y3RDaGlsZElkID0gJCR2OwogICAgICB9LAogICAgICBleHByZXNzaW9uOiAicHJvZHVjdENoaWxkSWQiCiAgICB9CiAgfSldLCAxKSA6IF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImJlc3RBY3J1IgogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICJ3aGl0ZSIKICAgIH0KICB9LCBbX3ZtLl92KCJhY3J1IGRldmVsb3BlcnMgYXJlIGJlc3QiKV0pXSksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQgYWxpZ24taXRlbXMtY2VudGVyIG15LTMiCiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvTWFyay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIG1sLTIgc2l0ZUNvbG9yIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMjBweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2NvbHVtbi5zZWxlY3RJanJvJykpKV0pXSksIF92bS5yZXR1cm5TZWFyY2gubWFya2V0MSAmJiBfdm0ubWFya2V0SWQgPyBfYygnYi1yb3cnLCBbX2MoJ2ItY29sJywgewogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdhY3Rpdml0eS5yYXRlSW5mby5tb25vcG9seS5mb29kcy5sYXN0RGF0ZTEnKSkpXSksIF9jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IiwKICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAiY29sb3IiOiAiIzJiNjc1YiIKICAgIH0KICB9LCBbKF92bSRyZXR1cm5TZWFyY2gxMDcgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTA3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMDcgPSBfdm0kcmV0dXJuU2VhcmNoMTA3Lm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMDcgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTA3Lmxhc3REYXRlID8gX2MoJ3NwYW4nLCBbX3ZtLl92KCIgIiArIF92bS5fcygoX3ZtJHJldHVyblNlYXJjaDEwOCA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMDggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEwOCA9IF92bSRyZXR1cm5TZWFyY2gxMDgubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEwOCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDEwOC5sYXN0RGF0ZSkgKyAiICIpXSkgOiBfYygnc3BhbicsIFtfYygnYicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICJ3aGl0ZSIKICAgIH0KICB9LCBbX3ZtLl92KCIuIildKV0pXSldKV0sIDEpIDogX3ZtLl9lKCksIF92bS5yZXR1cm5TZWFyY2gubWFya2V0MSAmJiBfdm0ubWFya2V0SWQgPyBfYygnYi1yb3cnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LTIiCiAgfSwgW19jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNHB4IiwKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiOHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgnY29sdW1uLnNhdmRvT2JqMicpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjMmI2NzViIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5nZXROYW1lKHsKICAgIG5hbWVMdDogKF92bSRyZXR1cm5TZWFyY2gxMDkgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTA5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMDkgPSBfdm0kcmV0dXJuU2VhcmNoMTA5Lm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMDkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEwOSA9IF92bSRyZXR1cm5TZWFyY2gxMDkubWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTA5ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEwOS5wcmljZU1hcmtldFR5cGVEdG8ubmFtZUx0ID8gKF92bSRyZXR1cm5TZWFyY2gxMTAgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTEwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMTAgPSBfdm0kcmV0dXJuU2VhcmNoMTEwLm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMTAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDExMCA9IF92bSRyZXR1cm5TZWFyY2gxMTAubWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTEwID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTEwLnByaWNlTWFya2V0VHlwZUR0by5uYW1lTHQgOiAnJywKICAgIG5hbWVVejogKF92bSRyZXR1cm5TZWFyY2gxMTEgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTExICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMTEgPSBfdm0kcmV0dXJuU2VhcmNoMTExLm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExMSA9IF92bSRyZXR1cm5TZWFyY2gxMTEubWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTExICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDExMS5wcmljZU1hcmtldFR5cGVEdG8ubmFtZVV6ID8gKF92bSRyZXR1cm5TZWFyY2gxMTIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTEyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMTIgPSBfdm0kcmV0dXJuU2VhcmNoMTEyLm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMTIgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDExMiA9IF92bSRyZXR1cm5TZWFyY2gxMTIubWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTEyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTEyLnByaWNlTWFya2V0VHlwZUR0by5uYW1lVXogOiAnJywKICAgIG5hbWVSdTogKF92bSRyZXR1cm5TZWFyY2gxMTMgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTEzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMTMgPSBfdm0kcmV0dXJuU2VhcmNoMTEzLm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExMyA9IF92bSRyZXR1cm5TZWFyY2gxMTMubWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTEzICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDExMy5wcmljZU1hcmtldFR5cGVEdG8ubmFtZVJ1ID8gKF92bSRyZXR1cm5TZWFyY2gxMTQgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTE0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMTQgPSBfdm0kcmV0dXJuU2VhcmNoMTE0Lm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMTQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDExNCA9IF92bSRyZXR1cm5TZWFyY2gxMTQubWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTE0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTE0LnByaWNlTWFya2V0VHlwZUR0by5uYW1lUnUgOiAnJwogIH0pKSArICIgIildKV0pXSwgMSkgOiBfdm0uX2UoKSwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxICYmIF92bS5tYXJrZXRJZCA/IF9jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAibXQtMyBkLWxnLW5vbmUgZC1ibG9jayIKICB9LCBbX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC1sZy0yIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxNHB4IiwKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiOHB4IgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncmVwb3J0aW5nLm1haW4uZm9ybTEubmFtZTUnKSkpXSksIF9jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIxNnB4IiwKICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAiY29sb3IiOiAiIzJiNjc1YiIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcygoX3ZtJHJldHVyblNlYXJjaDExNSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExNSA9IF92bSRyZXR1cm5TZWFyY2gxMTUubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTE1ID0gX3ZtJHJldHVyblNlYXJjaDExNS5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTUgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTE1LmFkZHJlc3MgPyAoX3ZtJHJldHVyblNlYXJjaDExNiA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMTYgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDExNiA9IF92bSRyZXR1cm5TZWFyY2gxMTYubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDExNiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTE2ID0gX3ZtJHJldHVyblNlYXJjaDExNi5tYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMTYgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxMTYuYWRkcmVzcyA6ICcnKSArICIgIildKV0pXSwgMSkgOiBfdm0uX2UoKSwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxICYmIF92bS5tYXJrZXRJZCA/IF9jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAibXQtMyBkLWxnLW5vbmUgZC1ibG9jayIKICB9LCBbX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJweC1sZy0yIG15LWxnLTAgbXktMyIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbKF92bSRyZXR1cm5TZWFyY2gxMTcgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTE3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMTcgPSBfdm0kcmV0dXJuU2VhcmNoMTE3Lm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTcgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExNyA9IF92bSRyZXR1cm5TZWFyY2gxMTcubWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTE3ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDExNy5sYW5nIHx8IF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGluayA/IF9jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdjb2x1bW4ubG9jYXRpb24xJykpKV0pIDogX3ZtLl9lKCksIF9jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImQtZmxleCBqdXN0aWZ5LWNvbnRlbnQtc3RhcnQgYWxpZ24taXRlbXMtY2VudGVyIgogIH0sIFsoX3ZtJHJldHVyblNlYXJjaDExOCA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExOCA9IF92bSRyZXR1cm5TZWFyY2gxMTgubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDExOCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTE4ID0gX3ZtJHJldHVyblNlYXJjaDExOC5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTggIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTE4LmxhbmcgfHwgKF92bSRyZXR1cm5TZWFyY2gxMTkgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTE5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMTkgPSBfdm0kcmV0dXJuU2VhcmNoMTE5Lm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMTkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDExOSA9IF92bSRyZXR1cm5TZWFyY2gxMTkubWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTE5ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDExOS5saW5rID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJ3aWR0aCI6ICI3MCUiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJ0ZXh0LWFsaWduIjogImNlbnRlciIsCiAgICAgICJmb250LXNpemUiOiAiMTNweCIsCiAgICAgICJib3JkZXIiOiAiMnB4IHNvbGlkICMyYjY3NWIiLAogICAgICAicGFkZGluZyI6ICI1cHgiLAogICAgICAiYm9yZGVyLXJhZGl1cyI6ICI1cHgiCiAgICB9CiAgfSwgW19jKCdzcGFuJywgW192bS5fdigiICIgKyBfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2gxMjAgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTIwICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMjAgPSBfdm0kcmV0dXJuU2VhcmNoMTIwLm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMjAgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEyMCA9IF92bSRyZXR1cm5TZWFyY2gxMjAubWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTIwICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEyMC5sYW5nID8gKChfdm0kcmV0dXJuU2VhcmNoMTIxID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyMSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTIxID0gX3ZtJHJldHVyblNlYXJjaDEyMS5tYXJrZXQxKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTIxID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMjEgPSBfdm0kcmV0dXJuU2VhcmNoMTIxLm1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyMSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDEyMS5sYW5nKSArICcgLCAnICsgKChfdm0kcmV0dXJuU2VhcmNoMTIyID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTIyID0gX3ZtJHJldHVyblNlYXJjaDEyMi5tYXJrZXQxKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTIyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMjIgPSBfdm0kcmV0dXJuU2VhcmNoMTIyLm1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyMiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDEyMi5sYXQpIDogKF92bSRyZXR1cm5TZWFyY2gxMjMgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTIzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMjMgPSBfdm0kcmV0dXJuU2VhcmNoMTIzLm1hcmtldDEpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMjMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEyMyA9IF92bSRyZXR1cm5TZWFyY2gxMjMubWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTIzICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEyMy5saW5rID8gKChfdm0kcmV0dXJuU2VhcmNoMTI0ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTI0ID0gX3ZtJHJldHVyblNlYXJjaDEyNC5tYXJrZXQxKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTI0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMjQgPSBfdm0kcmV0dXJuU2VhcmNoMTI0Lm1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDEyNC5saW5rLnNsaWNlKDAsIDM1KSkgKyAnLi4uJyA6ICcnKSArICIgIildKV0pXSkgOiBfdm0uX2UoKSwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYXQgfHwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5saW5rID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAicHgtMiIKICB9LCBbX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYXQgPyBfYygnYScsIHsKICAgIGF0dHJzOiB7CiAgICAgICJocmVmIjogImh0dHBzOi8vbWFwcy5nb29nbGUuY29tL21hcHM/cT0iLmNvbmNhdChfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCwgIiwiKS5jb25jYXQoX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYW5nLCAiJmxsPSIpLmNvbmNhdChfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCwgIiwiKS5jb25jYXQoX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYW5nLCAiJno9MTYiKSwKICAgICAgInRhcmdldCI6ICJfYmxhbmsiCiAgICB9CiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvbGluay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSA6IF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGluayA/IF9jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAoX3ZtJHJldHVyblNlYXJjaDEyNSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMjUgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEyNSA9IF92bSRyZXR1cm5TZWFyY2gxMjUubWFya2V0MSkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyNSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTI1ID0gX3ZtJHJldHVyblNlYXJjaDEyNS5tYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMjUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxMjUubGluaywKICAgICAgInRhcmdldCI6ICJfYmxhbmsiCiAgICB9CiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvbGluay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSA6IF9jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiIyIKICAgIH0KICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9saW5rLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pXSkgOiBfdm0uX2UoKSwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYXQgfHwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5saW5rID8gX2MoJ2RpdicsIFtfYygnbGFiZWwnLCB7CiAgICBzdGF0aWNDbGFzczogImRyb3Bkb3duIgogIH0sIFtfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJkZC1idXR0b24iCiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvc2hhcmUucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSksIF9jKCdpbnB1dCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZGQtaW5wdXQiLAogICAgYXR0cnM6IHsKICAgICAgInR5cGUiOiAiY2hlY2tib3giLAogICAgICAiaWQiOiAidGVzdCIKICAgIH0KICB9KSwgX2MoJ3VsJywgewogICAgc3RhdGljQ2xhc3M6ICJkZC1tZW51IgogIH0sIFtfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCA/IF9jKCdsaScsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0uc2VuZFRvVGVsZWdyYW1MYXRMYW5nKF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0LCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhbmcpOwogICAgICB9CiAgICB9CiAgfSwgW19jKCdpJywgewogICAgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLXNlbmQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMwMzliZTUiCiAgICB9CiAgfSksIF92bS5fdigiIFRlbGVncmFtICIpXSkgOiBfYygnbGknLCB7CiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLnNlbmRUb1RlbGVncmFtTGluayhfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxpbmspOwogICAgICB9CiAgICB9CiAgfSwgW19jKCdpJywgewogICAgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLXNlbmQiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMwMzliZTUiCiAgICB9CiAgfSksIF92bS5fdigiIFRlbGVncmFtICIpXSksIF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0ID8gX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS5jb3B5TGF0TGFuZ0xpbmsoX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYXQsIF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGFuZyk7CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ2knLCB7CiAgICBzdGF0aWNDbGFzczogIm1kaSBtZGktY29udGVudC1jb3B5IgogIH0pLCBfdm0uX3YoIiBOdXN4YWxhc2ggIildKSA6IF9jKCdsaScsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0uY29weUxpbmsoX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5saW5rKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1jb250ZW50LWNvcHkiCiAgfSksIF92bS5fdigiIE51c3hhbGFzaCAiKV0pXSldKV0pIDogX3ZtLl9lKCldKV0pXSwgMSkgOiBfdm0uX2UoKV0sIDEpXSksIF9jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAicHgtMyBtdC1sZy0wIG10LTQiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiLAogICAgICAibGciOiAiNCIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJtdC0yIgogIH0sIFtfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgganVzdGlmeS1jb250ZW50LXN0YXJ0IGFsaWduLWl0ZW1zLWNlbnRlciBtdC0xIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJtYXJnaW4tYm90dG9tIjogIjIwcHgiCiAgICB9CiAgfSwgW19jKCdpbWcnLCB7CiAgICBhdHRyczogewogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvTWFyay5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSksIF9jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIG1sLTIgc2l0ZUNvbG9yIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMjBweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2NvbHVtbi5tYWluRGF0YScpKSldKV0pLCAoX3ZtJHJldHVyblNlYXJjaDEyNiA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMjYgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEyNiA9IF92bSRyZXR1cm5TZWFyY2gxMjYuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTI2ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEyNi5tYXhNYXJrZXQgfHwgKF92bSRyZXR1cm5TZWFyY2gxMjcgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTI3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMjcgPSBfdm0kcmV0dXJuU2VhcmNoMTI3LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEyNyAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMjcubWluTWFya2V0ID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAibXQtMiIKICB9LCBbX2MoJ2RpdicsIFtfYygnYi1yb3cnLCB7CiAgICBzdGF0aWNDbGFzczogImQtZmxleCIKICB9LCBbX2MoJ2ItY29sJywgewogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiNiIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5taW5TdW0nKSkpXSldKSwgX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTlweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLmZvcm1hdE51bWJlcigoX3ZtJHJldHVyblNlYXJjaDEyOCA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMjggIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEyOCA9IF92bSRyZXR1cm5TZWFyY2gxMjguYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTI4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMjggPSBfdm0kcmV0dXJuU2VhcmNoMTI4Lm1pbk1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEyOCAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMjgubWluUHJpY2UgPyAoX3ZtJHJldHVyblNlYXJjaDEyOSA9IF92bS5yZXR1cm5TZWFyY2gpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMjkgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEyOSA9IF92bSRyZXR1cm5TZWFyY2gxMjkuYWxsKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTI5ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMjkgPSBfdm0kcmV0dXJuU2VhcmNoMTI5Lm1pbk1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEyOSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDEyOS5taW5QcmljZSA6IF92bS4kdCgncHJvZHVjdFByaWNlLm5vdEZvdW5kJykpKSArICIgIiksIChfdm0kcmV0dXJuU2VhcmNoMTMwID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzMCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTMwID0gX3ZtJHJldHVyblNlYXJjaDEzMC5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzAgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEzMCA9IF92bSRyZXR1cm5TZWFyY2gxMzAubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMwICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEzMC5taW5QcmljZSA/IF9jKCdzcGFuJywgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uuc29tJykpKV0pIDogX3ZtLl9lKCldKV0pLCBfYygnZGl2JywgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtdC0xIiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxM3B4IiwKICAgICAgIm1hcmdpbi1ib3R0b20iOiAiOHB4IgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMTMxID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzMSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTMxID0gX3ZtJHJldHVyblNlYXJjaDEzMS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzEgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEzMSA9IF92bSRyZXR1cm5TZWFyY2gxMzEubWluTWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMxICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEzMS5kYXRlID8gKF92bSRyZXR1cm5TZWFyY2gxMzIgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTMyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMzIgPSBfdm0kcmV0dXJuU2VhcmNoMTMyLmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEzMiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTMyID0gX3ZtJHJldHVyblNlYXJjaDEzMi5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMzIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxMzIuZGF0ZSA6ICcnKSArICIgIiArIF92bS5fcyhfdm0uJHQoJ2Zvb3RlclRpdGxlJykpICsgIiAiKV0pXSldKSwgX2MoJ2ItY29sJywgewogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiNSIKICAgIH0KICB9LCBbX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibWItMCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2NvbHVtbi5zYXZkb09iajEnKSkpXSldKSwgX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImNvbG9yIjogIiMyYjY3NWIiCiAgICB9CiAgfSwgW192bS5fdigiICIgKyBfdm0uX3MoKF92bSRyZXR1cm5TZWFyY2gxMzMgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMzICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMzMgPSBfdm0kcmV0dXJuU2VhcmNoMTMzLmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzMyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTMzID0gX3ZtJHJldHVyblNlYXJjaDEzMy5taW5NYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEzMyA9IF92bSRyZXR1cm5TZWFyY2gxMzMubWFya2V0RHRvKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTMzICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEzMy5tYXJrZXROYW1lID8gKF92bSRyZXR1cm5TZWFyY2gxMzQgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTM0ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMzQgPSBfdm0kcmV0dXJuU2VhcmNoMTM0LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEzNCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTM0ID0gX3ZtJHJldHVyblNlYXJjaDEzNC5taW5NYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMzQgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDEzNCA9IF92bSRyZXR1cm5TZWFyY2gxMzQubWFya2V0RHRvKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTM0ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTM0Lm1hcmtldE5hbWUgOiAnJykgKyAiICIpXSldKV0pLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAidGV4dC1hbGlnbiI6ICJlbmQiLAogICAgICAibWFyZ2luLXRvcCI6ICIxNXB4IgogICAgfSwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ2RpdicsIFtfYygnaW1nJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImN1cnNvciI6ICJwb2ludGVyIgogICAgfSwKICAgIGF0dHJzOiB7CiAgICAgICJ3aWR0aCI6ICIzNSIsCiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9zaG93RGV0YWlsLmdpZiIpLAogICAgICAiYWx0IjogIllvdXIgR0lGIgogICAgfSwKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0ub3BlbkludG9EYXRhKCdtaW4nKTsKICAgICAgfQogICAgfQogIH0pXSldKV0pXSwgMSldLCAxKV0pIDogX3ZtLl9lKCksIChfdm0kcmV0dXJuU2VhcmNoMTM1ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzNSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTM1ID0gX3ZtJHJldHVyblNlYXJjaDEzNS5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzUgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTM1Lm1heE1hcmtldCB8fCAoX3ZtJHJldHVyblNlYXJjaDEzNiA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzYgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEzNiA9IF92bSRyZXR1cm5TZWFyY2gxMzYuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTM2ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDEzNi5taW5NYXJrZXQgPyBfYygnZGl2JywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIm1hcmdpbiI6ICIxM3B4IDAiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ2Itcm93JywgewogICAgc3RhdGljQ2xhc3M6ICJkLWZsZXgiCiAgfSwgW19jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjYiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE1cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWF4U3VtJykpKV0pXSksIF9jKCdkaXYnLCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjE5cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjMmI2NzViIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKF92bS5mb3JtYXROdW1iZXIoKF92bSRyZXR1cm5TZWFyY2gxMzcgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTM3ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMzcgPSBfdm0kcmV0dXJuU2VhcmNoMTM3LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzNyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTM3ID0gX3ZtJHJldHVyblNlYXJjaDEzNy5tYXhNYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzcgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTM3Lm1heFByaWNlID8gKF92bSRyZXR1cm5TZWFyY2gxMzggPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTM4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxMzggPSBfdm0kcmV0dXJuU2VhcmNoMTM4LmFsbCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDEzOCA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTM4ID0gX3ZtJHJldHVyblNlYXJjaDEzOC5tYXhNYXJrZXQpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxMzggPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxMzgubWF4UHJpY2UgOiBfdm0uJHQoJ3Byb2R1Y3RQcmljZS5ub3RGb3VuZCcpKSkgKyAiICIpLCAoX3ZtJHJldHVyblNlYXJjaDEzOSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxMzkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDEzOSA9IF92bSRyZXR1cm5TZWFyY2gxMzkuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTM5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxMzkgPSBfdm0kcmV0dXJuU2VhcmNoMTM5Lm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDEzOSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxMzkubWF4UHJpY2UgPyBfYygnc3BhbicsIFtfdm0uX3YoX3ZtLl9zKF92bS4kdCgncHJvZHVjdFByaWNlLnNvbScpKSldKSA6IF92bS5fZSgpXSldKSwgX2MoJ2RpdicsIFtfYygncCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibXQtMSIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTNweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcygoX3ZtJHJldHVyblNlYXJjaDE0MCA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNDAgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE0MCA9IF92bSRyZXR1cm5TZWFyY2gxNDAuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQwICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNDAgPSBfdm0kcmV0dXJuU2VhcmNoMTQwLm1heE1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE0MCAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNDAuZGF0ZSA/IChfdm0kcmV0dXJuU2VhcmNoMTQxID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE0MSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTQxID0gX3ZtJHJldHVyblNlYXJjaDE0MS5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNDEgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE0MSA9IF92bSRyZXR1cm5TZWFyY2gxNDEubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTQxID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTQxLmRhdGUgOiAnJykgKyAiICIgKyBfdm0uX3MoX3ZtLiR0KCdmb290ZXJUaXRsZScpKSArICIgIildKV0pXSksIF9jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjUiCiAgICB9CiAgfSwgW19jKCdkaXYnLCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNDbGFzczogIm1iLTAiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE1cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdjb2x1bW4uc2F2ZG9PYmoxJykpKV0pXSksIF9jKCdkaXYnLCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjE1cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjMmI2NzViIgogICAgfQogIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMTQyID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE0MiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTQyID0gX3ZtJHJldHVyblNlYXJjaDE0Mi5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNDIgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE0MiA9IF92bSRyZXR1cm5TZWFyY2gxNDIubWF4TWFya2V0KSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQyICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNDIgPSBfdm0kcmV0dXJuU2VhcmNoMTQyLm1hcmtldER0bykgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE0MiAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNDIubWFya2V0TmFtZSA/IChfdm0kcmV0dXJuU2VhcmNoMTQzID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE0MyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTQzID0gX3ZtJHJldHVyblNlYXJjaDE0My5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNDMgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE0MyA9IF92bSRyZXR1cm5TZWFyY2gxNDMubWF4TWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTQzID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNDMgPSBfdm0kcmV0dXJuU2VhcmNoMTQzLm1hcmtldER0bykgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE0MyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDE0My5tYXJrZXROYW1lIDogJycpICsgIiAiKV0pXSldKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgInRleHQtYWxpZ24iOiAiZW5kIiwKICAgICAgIm1hcmdpbi10b3AiOiAiMTVweCIKICAgIH0sCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxIgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdkaXYnLCBbX2MoJ2ltZycsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJjdXJzb3IiOiAicG9pbnRlciIKICAgIH0sCiAgICBhdHRyczogewogICAgICAid2lkdGgiOiAiMzUiLAogICAgICAic3JjIjogcmVxdWlyZSgiQC9hc3NldHMvc2hvd0RldGFpbC5naWYiKSwKICAgICAgImFsdCI6ICJZb3VyIEdJRiIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLm9wZW5JbnRvRGF0YSgnbWF4Jyk7CiAgICAgIH0KICAgIH0KICB9KV0pXSldKV0sIDEpXSwgMSldKSA6IF92bS5fZSgpLCAoX3ZtJHJldHVyblNlYXJjaDE0NCA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNDQgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE0NCA9IF92bSRyZXR1cm5TZWFyY2gxNDQuYWxsKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQ0ICE9PSB2b2lkIDAgJiYgX3ZtJHJldHVyblNlYXJjaDE0NC5tYXhNYXJrZXQgfHwgKF92bSRyZXR1cm5TZWFyY2gxNDUgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQ1ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNDUgPSBfdm0kcmV0dXJuU2VhcmNoMTQ1LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE0NSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNDUubWluTWFya2V0ID8gX2MoJ2RpdicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJtYXJnaW4tYm90dG9tIjogIjQ1cHgiCiAgICB9CiAgfSwgW19jKCdiLXJvdycsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IgogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBhdHRyczogewogICAgICAiY29scyI6ICI2IgogICAgfQogIH0sIFtfYygncCcsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJmb250LXNpemUiOiAiMTlweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgImNvbG9yIjogIiMyODkyMDIiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2UubWlkZGxlU3VtJykpICsgIiAiKV0pXSksIF9jKCdiLWNvbCcsIHsKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjYiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi0wIG1yLWxnLTMiLAogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImZvbnQtc2l6ZSI6ICIyMHB4IiwKICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiLAogICAgICAiY29sb3IiOiAiIzI4OTIwMiIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uZm9ybWF0TnVtYmVyKChfdm0kcmV0dXJuU2VhcmNoMTQ2ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE0NiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTQ2ID0gX3ZtJHJldHVyblNlYXJjaDE0Ni5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNDYgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQ2Lm1pZGRsZVN1bSA/IChfdm0kcmV0dXJuU2VhcmNoMTQ3ID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE0NyA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTQ3ID0gX3ZtJHJldHVyblNlYXJjaDE0Ny5hbGwpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNDcgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF92bSRyZXR1cm5TZWFyY2gxNDcubWlkZGxlU3VtIDogX3ZtLiR0KCdwcm9kdWN0UHJpY2Uubm90Rm91bmQnKSkpICsgIiAiKSwgKF92bSRyZXR1cm5TZWFyY2gxNDggPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQ4ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNDggPSBfdm0kcmV0dXJuU2VhcmNoMTQ4LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE0OCAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNDgubWlkZGxlU3VtID8gX2MoJ3NwYW4nLCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5zb20nKSkpXSkgOiBfdm0uX2UoKV0pXSldLCAxKV0sIDEpIDogX3ZtLl9lKCksICEoKF92bSRyZXR1cm5TZWFyY2gxNDkgPSBfdm0ucmV0dXJuU2VhcmNoKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTQ5ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNDkgPSBfdm0kcmV0dXJuU2VhcmNoMTQ5LmFsbCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE0OSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNDkubWF4TWFya2V0KSAmJiAhKChfdm0kcmV0dXJuU2VhcmNoMTUwID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1MCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTUwID0gX3ZtJHJldHVyblNlYXJjaDE1MC5hbGwpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNTAgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTUwLm1pbk1hcmtldCkgPyBfYygnYi1yb3cnLCB7CiAgICBzdGF0aWNDbGFzczogIm15LTUgcHktNSIKICB9LCBbX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJtYi01IiwKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJtYXJnaW4tdG9wIjogIjI1cHgiCiAgICB9LAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIndoaXRlIgogICAgfQogIH0sIFtfdm0uX3YoIi4iKV0pXSldLCAxKSA6IF92bS5fZSgpLCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEgJiYgX3ZtLm1hcmtldElkID8gX2MoJ2Itcm93JywgewogICAgc3RhdGljQ2xhc3M6ICJtdC0zIGQtbGctYmxvY2sgZC1ub25lIgogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LWxnLTIiLAogICAgYXR0cnM6IHsKICAgICAgImNvbHMiOiAiMTIiCiAgICB9CiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE0cHgiLAogICAgICAibWFyZ2luLWJvdHRvbSI6ICI4cHgiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdyZXBvcnRpbmcubWFpbi5mb3JtMS5uYW1lNScpKSldKSwgX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiZm9udC1zaXplIjogIjE2cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJjb2xvciI6ICIjMmI2NzViIgogICAgfQogIH0sIFtfdm0uX3YoX3ZtLl9zKChfdm0kcmV0dXJuU2VhcmNoMTUxID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1MSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTUxID0gX3ZtJHJldHVyblNlYXJjaDE1MS5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTUxICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNTEgPSBfdm0kcmV0dXJuU2VhcmNoMTUxLm1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1MSAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNTEuYWRkcmVzcyA/IChfdm0kcmV0dXJuU2VhcmNoMTUyID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE1MiA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTUyID0gX3ZtJHJldHVyblNlYXJjaDE1Mi5tYXJrZXQxKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTUyID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNTIgPSBfdm0kcmV0dXJuU2VhcmNoMTUyLm1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE1MiA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDE1Mi5hZGRyZXNzIDogJycpICsgIiAiKV0pXSldLCAxKSA6IF92bS5fZSgpLCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEgJiYgX3ZtLm1hcmtldElkID8gX2MoJ2Itcm93JywgewogICAgc3RhdGljQ2xhc3M6ICJtdC0yIGQtbGctYmxvY2sgZC1ub25lIgogIH0sIFtfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogInB4LWxnLTIgbXktbGctMCBteS0zIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFsoX3ZtJHJldHVyblNlYXJjaDE1MyA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNTMgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE1MyA9IF92bSRyZXR1cm5TZWFyY2gxNTMubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1MyAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTUzID0gX3ZtJHJldHVyblNlYXJjaDE1My5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNTMgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTUzLmxhbmcgfHwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5saW5rID8gX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMTRweCIsCiAgICAgICJtYXJnaW4tYm90dG9tIjogIjhweCIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ2NvbHVtbi5sb2NhdGlvbjEnKSkpXSkgOiBfdm0uX2UoKSwgX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAiZC1mbGV4IGp1c3RpZnktY29udGVudC1zdGFydCBhbGlnbi1pdGVtcy1jZW50ZXIiCiAgfSwgWyhfdm0kcmV0dXJuU2VhcmNoMTU0ID0gX3ZtLnJldHVyblNlYXJjaCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1NCAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTU0ID0gX3ZtJHJldHVyblNlYXJjaDE1NC5tYXJrZXQxKSAhPT0gbnVsbCAmJiBfdm0kcmV0dXJuU2VhcmNoMTU0ICE9PSB2b2lkIDAgJiYgKF92bSRyZXR1cm5TZWFyY2gxNTQgPSBfdm0kcmV0dXJuU2VhcmNoMTU0Lm1hcmtldCkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1NCAhPT0gdm9pZCAwICYmIF92bSRyZXR1cm5TZWFyY2gxNTQubGFuZyB8fCAoX3ZtJHJldHVyblNlYXJjaDE1NSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNTUgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE1NSA9IF92bSRyZXR1cm5TZWFyY2gxNTUubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1NSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTU1ID0gX3ZtJHJldHVyblNlYXJjaDE1NS5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNTUgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTU1LmxpbmsgPyBfYygnZGl2JywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgIndpZHRoIjogIjcwJSIKICAgIH0KICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgInRleHQtYWxpZ24iOiAiY2VudGVyIiwKICAgICAgImZvbnQtc2l6ZSI6ICIxM3B4IiwKICAgICAgImJvcmRlciI6ICIycHggc29saWQgIzJiNjc1YiIsCiAgICAgICJwYWRkaW5nIjogIjVweCIsCiAgICAgICJib3JkZXItcmFkaXVzIjogIjVweCIKICAgIH0KICB9LCBbX2MoJ3NwYW4nLCBbX3ZtLl92KCIgIiArIF92bS5fcygoX3ZtJHJldHVyblNlYXJjaDE1NiA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNTYgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE1NiA9IF92bSRyZXR1cm5TZWFyY2gxNTYubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1NiAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTU2ID0gX3ZtJHJldHVyblNlYXJjaDE1Ni5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNTYgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTU2LmxhbmcgPyAoKF92bSRyZXR1cm5TZWFyY2gxNTcgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTU3ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNTcgPSBfdm0kcmV0dXJuU2VhcmNoMTU3Lm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNTcgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE1NyA9IF92bSRyZXR1cm5TZWFyY2gxNTcubWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTU3ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTU3LmxhbmcpICsgJyAsICcgKyAoKF92bSRyZXR1cm5TZWFyY2gxNTggPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTU4ID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNTggPSBfdm0kcmV0dXJuU2VhcmNoMTU4Lm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNTggPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE1OCA9IF92bSRyZXR1cm5TZWFyY2gxNTgubWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTU4ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTU4LmxhdCkgOiAoX3ZtJHJldHVyblNlYXJjaDE1OSA9IF92bS5yZXR1cm5TZWFyY2gpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNTkgIT09IHZvaWQgMCAmJiAoX3ZtJHJldHVyblNlYXJjaDE1OSA9IF92bSRyZXR1cm5TZWFyY2gxNTkubWFya2V0MSkgIT09IG51bGwgJiYgX3ZtJHJldHVyblNlYXJjaDE1OSAhPT0gdm9pZCAwICYmIChfdm0kcmV0dXJuU2VhcmNoMTU5ID0gX3ZtJHJldHVyblNlYXJjaDE1OS5tYXJrZXQpICE9PSBudWxsICYmIF92bSRyZXR1cm5TZWFyY2gxNTkgIT09IHZvaWQgMCAmJiBfdm0kcmV0dXJuU2VhcmNoMTU5LmxpbmsgPyAoKF92bSRyZXR1cm5TZWFyY2gxNjAgPSBfdm0ucmV0dXJuU2VhcmNoKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTYwID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNjAgPSBfdm0kcmV0dXJuU2VhcmNoMTYwLm1hcmtldDEpID09PSBudWxsIHx8IF92bSRyZXR1cm5TZWFyY2gxNjAgPT09IHZvaWQgMCB8fCAoX3ZtJHJldHVyblNlYXJjaDE2MCA9IF92bSRyZXR1cm5TZWFyY2gxNjAubWFya2V0KSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTYwID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfdm0kcmV0dXJuU2VhcmNoMTYwLmxpbmsuc2xpY2UoMCwgMzUpKSArICcuLi4nIDogJycpICsgIiAiKV0pXSldKSA6IF92bS5fZSgpLCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCB8fCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxpbmsgPyBfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJweC0yIgogIH0sIFtfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCA/IF9jKCdhJywgewogICAgYXR0cnM6IHsKICAgICAgImhyZWYiOiAiaHR0cHM6Ly9tYXBzLmdvb2dsZS5jb20vbWFwcz9xPSIuY29uY2F0KF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0LCAiLCIpLmNvbmNhdChfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhbmcsICImbGw9IikuY29uY2F0KF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0LCAiLCIpLmNvbmNhdChfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhbmcsICImej0xNiIpLAogICAgICAidGFyZ2V0IjogIl9ibGFuayIKICAgIH0KICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9saW5rLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pIDogX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5saW5rID8gX2MoJ2EnLCB7CiAgICBhdHRyczogewogICAgICAiaHJlZiI6IChfdm0kcmV0dXJuU2VhcmNoMTYxID0gX3ZtLnJldHVyblNlYXJjaCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE2MSA9PT0gdm9pZCAwIHx8IChfdm0kcmV0dXJuU2VhcmNoMTYxID0gX3ZtJHJldHVyblNlYXJjaDE2MS5tYXJrZXQxKSA9PT0gbnVsbCB8fCBfdm0kcmV0dXJuU2VhcmNoMTYxID09PSB2b2lkIDAgfHwgKF92bSRyZXR1cm5TZWFyY2gxNjEgPSBfdm0kcmV0dXJuU2VhcmNoMTYxLm1hcmtldCkgPT09IG51bGwgfHwgX3ZtJHJldHVyblNlYXJjaDE2MSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3ZtJHJldHVyblNlYXJjaDE2MS5saW5rLAogICAgICAidGFyZ2V0IjogIl9ibGFuayIKICAgIH0KICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9saW5rLnBuZyIpLAogICAgICAiYWx0IjogIiIKICAgIH0KICB9KV0pIDogX2MoJ2EnLCB7CiAgICBhdHRyczogewogICAgICAiaHJlZiI6ICIjIgogICAgfQogIH0sIFtfYygnaW1nJywgewogICAgYXR0cnM6IHsKICAgICAgInNyYyI6IHJlcXVpcmUoIkAvYXNzZXRzL2xpbmsucG5nIiksCiAgICAgICJhbHQiOiAiIgogICAgfQogIH0pXSldKSA6IF92bS5fZSgpLCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCB8fCBfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxpbmsgPyBfYygnZGl2JywgW19jKCdsYWJlbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAiZHJvcGRvd24iCiAgfSwgW19jKCdkaXYnLCB7CiAgICBzdGF0aWNDbGFzczogImRkLWJ1dHRvbiIKICB9LCBbX2MoJ2ltZycsIHsKICAgIGF0dHJzOiB7CiAgICAgICJzcmMiOiByZXF1aXJlKCJAL2Fzc2V0cy9zaGFyZS5wbmciKSwKICAgICAgImFsdCI6ICIiCiAgICB9CiAgfSldKSwgX2MoJ2lucHV0JywgewogICAgc3RhdGljQ2xhc3M6ICJkZC1pbnB1dCIsCiAgICBhdHRyczogewogICAgICAidHlwZSI6ICJjaGVja2JveCIsCiAgICAgICJpZCI6ICJ0ZXN0IgogICAgfQogIH0pLCBfYygndWwnLCB7CiAgICBzdGF0aWNDbGFzczogImRkLW1lbnUiCiAgfSwgW192bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGF0ID8gX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS5zZW5kVG9UZWxlZ3JhbUxhdExhbmcoX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYXQsIF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGFuZyk7CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ2knLCB7CiAgICBzdGF0aWNDbGFzczogIm1kaSBtZGktc2VuZCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzAzOWJlNSIKICAgIH0KICB9KSwgX3ZtLl92KCIgVGVsZWdyYW0gIildKSA6IF9jKCdsaScsIHsKICAgIG9uOiB7CiAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgIHJldHVybiBfdm0uc2VuZFRvVGVsZWdyYW1MaW5rKF92bS5yZXR1cm5TZWFyY2gubWFya2V0MS5tYXJrZXQubGluayk7CiAgICAgIH0KICAgIH0KICB9LCBbX2MoJ2knLCB7CiAgICBzdGF0aWNDbGFzczogIm1kaSBtZGktc2VuZCIsCiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzAzOWJlNSIKICAgIH0KICB9KSwgX3ZtLl92KCIgVGVsZWdyYW0gIildKSwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYXQgPyBfYygnbGknLCB7CiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLmNvcHlMYXRMYW5nTGluayhfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxhdCwgX3ZtLnJldHVyblNlYXJjaC5tYXJrZXQxLm1hcmtldC5sYW5nKTsKICAgICAgfQogICAgfQogIH0sIFtfYygnaScsIHsKICAgIHN0YXRpY0NsYXNzOiAibWRpIG1kaS1jb250ZW50LWNvcHkiCiAgfSksIF92bS5fdigiIE51c3hhbGFzaCAiKV0pIDogX2MoJ2xpJywgewogICAgb246IHsKICAgICAgImNsaWNrIjogZnVuY3Rpb24gY2xpY2soJGV2ZW50KSB7CiAgICAgICAgcmV0dXJuIF92bS5jb3B5TGluayhfdm0ucmV0dXJuU2VhcmNoLm1hcmtldDEubWFya2V0LmxpbmspOwogICAgICB9CiAgICB9CiAgfSwgW19jKCdpJywgewogICAgc3RhdGljQ2xhc3M6ICJtZGkgbWRpLWNvbnRlbnQtY29weSIKICB9KSwgX3ZtLl92KCIgTnVzeGFsYXNoICIpXSldKV0pXSkgOiBfdm0uX2UoKV0pXSldLCAxKSA6IF92bS5fZSgpXSwgMSldKV0pXSwgMSldLCAxKSwgX2MoJ2ItY29sJywgewogICAgc3RhdGljQ2xhc3M6ICJtdC0yIGQtbGctYmxvY2sgZC1ub25lIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygnZGl2JywgewogICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciIKICB9LCBbX2MoJ3AnLCB7CiAgICBzdGF0aWNTdHlsZTogewogICAgICAiY29sb3IiOiAiIzJiNjc1YiIsCiAgICAgICJmb250LXNpemUiOiAiMThweCIsCiAgICAgICJmb250LXdlaWdodCI6ICJib2xkIiwKICAgICAgInRleHQtdHJhbnNmb3JtIjogInVwcGVyY2FzZSIKICAgIH0KICB9LCBbX3ZtLl92KF92bS5fcyhfdm0uJHQoJ3Byb2R1Y3RQcmljZS5vdGhlclByb2R1Y3QnKSkgKyAiICIpXSldKSwgX2MoX3NldHVwLkNhcm91c2VsLCB7CiAgICBhdHRyczogewogICAgICAicGVyLXBhZ2UiOiA2LAogICAgICAibG9vcCI6IHRydWUsCiAgICAgICJwYWdpbmF0aW9uRW5hYmxlZCI6IGZhbHNlLAogICAgICAibW91c2UtZHJhZyI6IHRydWUsCiAgICAgICJzY3JvbGxQZXJQYWdlIjogdHJ1ZSwKICAgICAgIm5hdmlnYXRpb24tZW5hYmxlZCI6IHRydWUKICAgIH0KICB9LCBfdm0uX2woX3ZtLnByb2R1Y3REYXRhLCBmdW5jdGlvbiAodm0sIGluZGV4KSB7CiAgICByZXR1cm4gX2MoX3NldHVwLlNsaWRlLCB7CiAgICAgIGtleTogaW5kZXgKICAgIH0sIFt2bS5pZCAhPSA1NiAmJiB2bS5pZCAhPSA1NyAmJiB2bS5pZCAhPSA1OCA/IF9jKCdkaXYnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImN1cnNvciI6ICJwb2ludGVyIgogICAgICB9LAogICAgICBvbjogewogICAgICAgICJjbGljayI6IGZ1bmN0aW9uIGNsaWNrKCRldmVudCkgewogICAgICAgICAgcmV0dXJuIF92bS5zaG93RGV0YWlsSW5mbyh2bS5pZCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBbX2MoJ2RpdicsIHsKICAgICAgc3RhdGljQ2xhc3M6ICJ0ZXh0LWNlbnRlciBtYi0yIHB0LTQiCiAgICB9LCBbdm0ucGhvdG9QbmcgJiYgdm0ucGhvdG9QbmcudXBsb2FkUGF0aCA/IF9jKCdpbWcnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImJvcmRlciI6ICIxcHggc29saWQgcmdiKDQzLCAxMDMsIDkxLCAwLjMpIiwKICAgICAgICAiYm94LXNoYWRvdyI6ICJyZ2IoMjAxLCAyMTksIDIxNSkgMnB4IDRweCA4cHggMHB4IiwKICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICI4cHgiLAogICAgICAgICJwYWRkaW5nIjogIjVweCIKICAgICAgfSwKICAgICAgYXR0cnM6IHsKICAgICAgICAic3JjIjogIiIuY29uY2F0KF92bS5yb3V0ZU5hbWUsICIvIikuY29uY2F0KHZtLnBob3RvUG5nLnVwbG9hZFBhdGgpLAogICAgICAgICJ3aWR0aCI6ICIyNzAiLAogICAgICAgICJoZWlnaHQiOiAiMTYwIiwKICAgICAgICAiYWx0IjogIiIKICAgICAgfQogICAgfSkgOiBfYygnaW1nJywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJib3JkZXIiOiAiM3B4IHNvbGlkICMyYjY3NWIiLAogICAgICAgICJib3JkZXItcmFkaXVzIjogIjhweCIsCiAgICAgICAgInBhZGRpbmciOiAiMTBweCAyMHB4IgogICAgICB9LAogICAgICBhdHRyczogewogICAgICAgICJ3aWR0aCI6ICIyNzAiLAogICAgICAgICJoZWlnaHQiOiAiMTYwIiwKICAgICAgICAic3JjIjogcmVxdWlyZSgiLi4vLi4vYXNzZXRzL2RlZmF1bHQuc3ZnIiksCiAgICAgICAgImFsdCI6ICIiCiAgICAgIH0KICAgIH0pXSksIF9jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIiCiAgICB9LCBbX2MoJ3AnLCB7CiAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAgICJmb250LXNpemUiOiAiMTVweCIsCiAgICAgICAgImZvbnQtd2VpZ2h0IjogImJvbGQiCiAgICAgIH0KICAgIH0sIFtfdm0uX3YoIiAiICsgX3ZtLl9zKF92bS5nZXROYW1lKHsKICAgICAgbmFtZUx0OiB2bSA9PT0gbnVsbCB8fCB2bSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdm0ubmFtZUx0LAogICAgICBuYW1lVXo6IHZtID09PSBudWxsIHx8IHZtID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2bS5uYW1lVXosCiAgICAgIG5hbWVSdTogdm0gPT09IG51bGwgfHwgdm0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZtLm5hbWVSdQogICAgfSkpICsgIiAiKV0pXSldKSA6IF92bS5fZSgpXSk7CiAgfSksIDEpXSwgMSksIF9jKCdiLWNvbCcsIHsKICAgIHN0YXRpY0NsYXNzOiAibXQtMiBkLWxnLW5vbmUgZC1ibG9jayIsCiAgICBhdHRyczogewogICAgICAiY29scyI6ICIxMiIKICAgIH0KICB9LCBbX2MoJ2RpdicsIHsKICAgIHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIiCiAgfSwgW19jKCdwJywgewogICAgc3RhdGljU3R5bGU6IHsKICAgICAgImNvbG9yIjogIiMyYjY3NWIiLAogICAgICAiZm9udC1zaXplIjogIjE4cHgiLAogICAgICAiZm9udC13ZWlnaHQiOiAiYm9sZCIsCiAgICAgICJ0ZXh0LXRyYW5zZm9ybSI6ICJ1cHBlcmNhc2UiCiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdwcm9kdWN0UHJpY2Uub3RoZXJQcm9kdWN0JykpICsgIiAiKV0pXSksIF9jKF9zZXR1cC5DYXJvdXNlbCwgewogICAgYXR0cnM6IHsKICAgICAgInBlci1wYWdlIjogMSwKICAgICAgImxvb3AiOiB0cnVlLAogICAgICAicGFnaW5hdGlvbkVuYWJsZWQiOiBmYWxzZSwKICAgICAgIm1vdXNlLWRyYWciOiB0cnVlLAogICAgICAic2Nyb2xsUGVyUGFnZSI6IHRydWUsCiAgICAgICJuYXZpZ2F0aW9uLWVuYWJsZWQiOiB0cnVlCiAgICB9CiAgfSwgX3ZtLl9sKF92bS5wcm9kdWN0RGF0YSwgZnVuY3Rpb24gKHZtLCBpbmRleCkgewogICAgcmV0dXJuIF9jKF9zZXR1cC5TbGlkZSwgewogICAgICBrZXk6IGluZGV4CiAgICB9LCBbdm0uaWQgIT0gNTYgJiYgdm0uaWQgIT0gNTcgJiYgdm0uaWQgIT0gNTggPyBfYygnZGl2JywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJjdXJzb3IiOiAicG9pbnRlciIKICAgICAgfSwKICAgICAgb246IHsKICAgICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICAgIHJldHVybiBfdm0uc2hvd0RldGFpbEluZm8odm0uaWQpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgW19jKCdkaXYnLCB7CiAgICAgIHN0YXRpY0NsYXNzOiAidGV4dC1jZW50ZXIgbWItMiBwdC00IgogICAgfSwgW3ZtLnBob3RvUG5nICYmIHZtLnBob3RvUG5nLnVwbG9hZFBhdGggPyBfYygnaW1nJywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJib3JkZXIiOiAiMXB4IHNvbGlkIHJnYig0MywgMTAzLCA5MSwgMC4zKSIsCiAgICAgICAgImJveC1zaGFkb3ciOiAicmdiKDIwMSwgMjE5LCAyMTUpIDJweCA0cHggOHB4IDBweCIsCiAgICAgICAgImJvcmRlci1yYWRpdXMiOiAiOHB4IiwKICAgICAgICAicGFkZGluZyI6ICI1cHgiCiAgICAgIH0sCiAgICAgIGF0dHJzOiB7CiAgICAgICAgInNyYyI6ICIiLmNvbmNhdChfdm0ucm91dGVOYW1lLCAiLyIpLmNvbmNhdCh2bS5waG90b1BuZy51cGxvYWRQYXRoKSwKICAgICAgICAid2lkdGgiOiAiMjcwIiwKICAgICAgICAiaGVpZ2h0IjogIjE2MCIsCiAgICAgICAgImFsdCI6ICIiCiAgICAgIH0KICAgIH0pIDogX2MoJ2ltZycsIHsKICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAiYm9yZGVyIjogIjNweCBzb2xpZCAjMmI2NzViIiwKICAgICAgICAiYm9yZGVyLXJhZGl1cyI6ICI4cHgiLAogICAgICAgICJwYWRkaW5nIjogIjEwcHggMjBweCIKICAgICAgfSwKICAgICAgYXR0cnM6IHsKICAgICAgICAid2lkdGgiOiAiMTY1IiwKICAgICAgICAiaGVpZ2h0IjogIjEzNSIsCiAgICAgICAgInNyYyI6IHJlcXVpcmUoIi4uLy4uL2Fzc2V0cy9kZWZhdWx0LnN2ZyIpLAogICAgICAgICJhbHQiOiAiIgogICAgICB9CiAgICB9KV0pLCBfYygnZGl2JywgewogICAgICBzdGF0aWNDbGFzczogInRleHQtY2VudGVyIgogICAgfSwgW19jKCdwJywgewogICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICJjb2xvciI6ICIjMmI2NzViIiwKICAgICAgICAiZm9udC1zaXplIjogIjE1cHgiLAogICAgICAgICJmb250LXdlaWdodCI6ICJib2xkIgogICAgICB9CiAgICB9LCBbX3ZtLl92KCIgIiArIF92bS5fcyhfdm0uZ2V0TmFtZSh7CiAgICAgIG5hbWVMdDogdm0gPT09IG51bGwgfHwgdm0gPT09IHZvaWQgMCA/IHZvaWQgMCA6IHZtLm5hbWVMdCwKICAgICAgbmFtZVV6OiB2bSA9PT0gbnVsbCB8fCB2bSA9PT0gdm9pZCAwID8gdm9pZCAwIDogdm0ubmFtZVV6LAogICAgICBuYW1lUnU6IHZtID09PSBudWxsIHx8IHZtID09PSB2b2lkIDAgPyB2b2lkIDAgOiB2bS5uYW1lUnUKICAgIH0pKSArICIgIildKV0pXSkgOiBfdm0uX2UoKV0pOwogIH0pLCAxKV0sIDEpLCBfYygnYi1jb2wnLCB7CiAgICBzdGF0aWNDbGFzczogIm10LWxnLTIgbXQtMyBtbC0zIiwKICAgIGF0dHJzOiB7CiAgICAgICJjb2xzIjogIjEyIgogICAgfQogIH0sIFtfYygnZGl2JywgW19jKCdiLWJ0bicsIHsKICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICJiYWNrZ3JvdW5kLWNvbG9yIjogIiNmMWI0NGMiLAogICAgICAiYm9yZGVyIjogIm5vbmUiLAogICAgICAicGFkZGluZyI6ICI1cHggMjBweCIsCiAgICAgICJjb2xvciI6ICJ3aGl0ZSIKICAgIH0sCiAgICBvbjogewogICAgICAiY2xpY2siOiBmdW5jdGlvbiBjbGljaygkZXZlbnQpIHsKICAgICAgICByZXR1cm4gX3ZtLmdvQmFjaygpOwogICAgICB9CiAgICB9CiAgfSwgW192bS5fdihfdm0uX3MoX3ZtLiR0KCdhY3Rpb25zLmJhY2snKSkpXSldLCAxKV0pXSwgMSkgOiBfdm0uX2UoKV0sIDEpXSwgMSk7Cn07CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXTsKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfTs="},null]}