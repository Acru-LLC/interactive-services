{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\reestr-contractors\\modules\\natural\\CreateOrUpdateRemoveDoc.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\reestr-contractors\\modules\\natural\\CreateOrUpdateRemoveDoc.vue","mtime":1674799496516},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1675061970665},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;AAyOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;EACAA;EACA;AACA;EACAC;EACA;AACA;EACAC;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACA;AACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MACA;QAAA;MAAA;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACA;AACA;EACAC;IACAC;MAAA;MACA;QAAA;UAAA;UAAA;YAAA;cAAA;gBAAA,KACAC;kBAAA;kBAAA;gBAAA;gBAAA,KACA;kBAAA;kBAAA;gBAAA;gBACAC;kBACA;kBACA;kBACA;kBACA;oBAAAC;kBAAA;gBACA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA,OAEA;cAAA;gBAAAC;gBACAF,gEACA;kBACA;kBACA;kBACA;kBACA;oBAAAC;kBAAA;gBACA;cAAA;gBAAA;gBAAA;cAAA;gBAGA;kBAAAA;gBAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA,CAEA;QAAA;UAAA;QAAA;MAAA;IACA;IACAE;MACA;QAAA;MAAA;MACA;QACA;MACA;QACA;MACA;IACA;IACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACAC;MACA;QACA;QACAC;QACAA;UAAA;QAAA;QACAA;UAAA;QAAA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA,KACA;gBAAA;gBAAA;cAAA;cACA;cAAA,kCACA;YAAA;cAAA;cAAA,OAEA;YAAA;cAAAC;cACA;cAAA,kCACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAGA;IACAC;MAAA;QAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAAC;cAAAC;cACA;gBACA;gBACA;gBAEA;gBACA;gBAEA;cACA;cACA;gBACAC,cACAC,kHACAC;kBACA;gBACA,GACAC;kBACA;gBACA;cACA;gBACAH,cACAI,iKACAF;kBACA;gBACA,GACAC;kBACA;gBACA;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAE;MACA;QAAA;MAAA;MACA;QACA;UACAC;UACAC;UACAC;QACA;MACA;MACA;IACA;IACAC;MACA;QAAA;MAAA;MACA;QACA;UACAH;UACAC;UACAC;QACA;MAEA;MACA;IACA;IACAE;MACA;QAAA;MAAA;MACA;QACA;UACAJ;UACAC;UACAC;QACA;MAEA;MACA;IACA;IACAG;MAAA;QAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAAC;cACA;gBACA;gBACA;gBACA;gBACA;cACA;cAAA,KACAC;gBAAA;gBAAA;cAAA;cAAA;cAAA,OAEA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAUA;IACAC;MAAA;QAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAAhB;cACA;gBACA;gBACA;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAiB;MAAA;QAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAAjB;cACA;gBACA;gBACA;cACA;cAAA,KACAe;gBAAA;gBAAA;cAAA;cAAA,MACA;gBAAA;gBAAA;cAAA;cACA;cAAA;cAAA,OACAb,iSACAE;gBACA;cACA,GACAC;gBACA;gBACAa;cACA,GACAC;gBACA;cACA;YAAA;cAAA;cAAA;YAAA;cAEA;YAAA;cAAA;cAAA;YAAA;cAGA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAEA;IACA;AACA;AACA;AACA;AACA;IACAC;MACA;QACA;MACA;IACA;IACAC;MACA;QAAA;MAAA;MACA;QACA;MACA;MACA;IACA;IACAC;MACA;QAAA;MAAA;MACA;QACA;MACA;MACA;IACA;IACA;AACA;AACA;AACA;AACA;AACA;IACA;AACA;AACA;AACA;AACA;AACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;UAAA;YAAA;cACA;cAAA;cAAA,OACAtB,0FACAE;gBAAA;gBACA;gBACA;gBACA;cACA,GACAC;gBACAa;gBACA;cACA,GACAC;gBACA;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACA;AACA;AACA;AACA;AACA;AACA;IACAM;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,MACA;gBAAA;gBAAA;cAAA;cACA;cACAvB,6KACAE;gBACA;cACA,GACAC;gBACAa;gBACA;cACA,GACAC;gBACA;cACA;cAAA;cAAA;YAAA;cAAA,MACAO;gBAAA;gBAAA;cAAA;cACA;cAAA;cAAA,OACAnC,sNACAa;gBACA;cACA,GACAC;gBACAa;gBACA;cACA,GACAC;gBACA;cACA;YAAA;cAAA;cAAA;YAAA;cAEA;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAEA;EACA;EACA;AACA;EACAQ;IAAA;IAAA;MAAA;QAAA;UAAA;YACA;YACA;YACA;YAAA,KACA;cAAA;cAAA;YAAA;YAAA;YAAA,OACApC,2CACAa;cACA;YACA,GACAC;cACAa;YACA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA,OAEA3B,2EACAa;cACA;YACA,GACAC;cACAa;YACA;UAAA;YAAA;YAAA,OAMAhB,+DACAE;cACA;YACA,GACAC;cACAa;YACA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EACA;AACA","names":["name","components","data","editingItem","regions","hasNextPageContractors","hasNextPageProductOrServices","contractors","debounce","isLoadingContractors","isLoadingProductOrServices","contractorSearchPayload","productOrServicesSearchPayload","productTypes","products","computed","computedObserver","isModeCreate","productOrServicesByContractorId","isDominant","isNatural","methods","save","valid","crudAndListsService","type","payload","contractorsByProductOrServiceId","getBase64","reader","makeAndReturnFormDataForBase64","res","regionSelected","dontResetDependent","forRepublicEvent","helperService","getReestrByRepublic","then","catch","getReestrByRegionId","customLabelRegion","nameRu","nameLt","nameUz","customLabelProduct","customLabelProductType","productTypeSelected","dontResetDistrict","$event","contractorSelected","productOrServiceSelected","console","finally","productOrServicesReachedEndOfList","customLabelContractorForRepublic","customLabelContractor","fetchProductOrServicesWithKeyword","fetchProductOrServices","fetchContractors","regionId","created"],"sourceRoot":"src/modules/reestr-contractors/modules/natural","sources":["CreateOrUpdateRemoveDoc.vue"],"sourcesContent":["<template>\r\n    <base-create-or-update-wrapper\r\n        @save=\"save\"\r\n        has-save-suspend\r\n        :custom-title=\"$t('actions.remove_from_reestr')\"\r\n    >\r\n        <ValidationObserver\r\n            ref=\"observer\"\r\n            v-slot=\"{}\"\r\n        >\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.orderNumber\"\r\n                        :label=\"$t('column.order_number')\"\r\n                        :placeholder=\"$t('column.order_number')\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseDatePickerWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        :label=\"$t('column.removed_date_from_reestr')\"\r\n                        :placeholder=\"$t('column.removed_date_from_reestr')\"\r\n                        disable-after\r\n                        v-model=\"editingItem.reestrClosedDate\"\r\n                        lang=\"ru\"\r\n                    ></BaseDatePickerWithValidation>\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <!-- <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.regionId\"\r\n                        :options=\"regions.map(e => e.regionId)\"\r\n                        @select=\"regionSelected\"\r\n                        :allow-empty=\"false\"\r\n                        :label=\"$t('column.region')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelRegion\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col> -->\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <b-row>\r\n                        <b-col :cols=\"$can('republic', 'for reestr') ? 8 : 12\">\r\n                            <!-- DISABLED STATE -->\r\n                            <BaseMultiselectWithValidation\r\n                                v-if=\"editingItem.isRepublic\"\r\n                                not-required\r\n                                disabled\r\n                                :value=\"null\"\r\n                                :options=\"regions.map(e => e.regionId)\"\r\n                                :custom-styles=\"$can('republic', 'for reestr') ? `grid-template-columns: 38% 62%;` : ''\"\r\n                                :custom-label=\"customLabelRegion\"\r\n                                placeholder=\"\"\r\n                                :label=\"$t('column.region')\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                            <BaseMultiselectWithValidation\r\n                                v-else\r\n                                rules=\"required\"\r\n                                class=\"required\"\r\n                                v-model=\"editingItem.regionId\"\r\n                                :options=\"regions.map(e => e.regionId)\"\r\n                                :custom-styles=\"$can('republic', 'for reestr') ? `grid-template-columns: 38% 62%;` : ''\"\r\n                                @select=\"regionSelected\"\r\n                                :allow-empty=\"false\"\r\n                                :label=\"$t('column.region')\"\r\n                                placeholder=\"\"\r\n                                :custom-label=\"customLabelRegion\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col\r\n                            cols=\"4\"\r\n                            v-if=\"$can('republic', 'for reestr')\"\r\n                        >\r\n                            <div class=\"form-check form-check-right\">\r\n                                <input\r\n                                    v-model=\"editingItem.isRepublic\"\r\n                                    @change=\"regionSelected(null, false, $event)\"\r\n                                    class=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    id=\"formCheckIsLegal\"\r\n                                />\r\n                                <label\r\n                                    class=\"form-check-label font-weight-normal\"\r\n                                    for=\"formCheckIsLegal\"\r\n                                >\r\n                                    {{ $t('column.is_republic') }}\r\n                                </label>\r\n                            </div>\r\n                        </b-col>\r\n                    </b-row>\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryProductOrServiceTypeId\"\r\n                        @select=\"productTypeSelected\"\r\n                        :allow-empty=\"false\"\r\n                        :options=\"productTypes.map(e => e.typeId)\"\r\n                        :label=\"$t('column.product_or_service_type')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelProductType\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryProductOrServiceId\"\r\n                        @select=\"productOrServiceSelected\"\r\n                        :options=\"products.map(e => e.productOrServiceId)\"\r\n                        :label=\"$t('submodules.product_or_services.title')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelProduct\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                        :allow-empty=\"false\"\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingProductOrServices\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        v-if=\"editingItem.isRepublic\"\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.contractorId\"\r\n                        :allow-empty=\"false\"\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingContractors\"\r\n                        :options=\"contractors.map(e => e.id)\"\r\n                        :label=\"$t('column.business_entity')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelContractorForRepublic\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                    <BaseMultiselectWithValidation\r\n                        v-else\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.contractorId\"\r\n                        :allow-empty=\"false\"\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingContractors\"\r\n                        :options=\"contractors.map(e => e.contractorId)\"\r\n                        :label=\"$t('column.business_entity')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelContractor\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <ValidationProvider\r\n                        name=\"supplementDoc\"\r\n                        rules=\"required\"\r\n                        mode=\"passive\"\r\n                    >\r\n                        <template v-slot:default=\"\">\r\n                            <BaseFileUploaderWithValidation\r\n                                class=\"required\"\r\n                                ref=\"supplementDocUploader\"\r\n                                v-model=\"editingItem.supplementDocs\"\r\n                                data-vv-name=\"supplementDocFile\"\r\n                                data-vv-as=\"SupplementDocFile\"\r\n                                :max-files=\"1\"\r\n                                :label-on-top=\"false\"\r\n                                :label=\"$t('column.ilova')\"\r\n                            ></BaseFileUploaderWithValidation>\r\n                        </template>\r\n                    </ValidationProvider>\r\n                </b-col>\r\n            </b-row>\r\n        </ValidationObserver>\r\n    </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'reestr/contractor-reestr-documents'\r\nconst APPEND_API_URL_NATURAL = 'close-estestveniy'\r\nconst APPEND_API_URL_DOMINANT = 'close-daminiriushiy'\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport helperService from \"@/shared/services/helper.service\"\r\n\r\nexport default {\r\n    name: \"CreateOrUpdateRemoveDoc\",\r\n    /*\r\n    * COMPONENTS */\r\n    components: {},\r\n    /*\r\n    * DATA */\r\n    data () {\r\n        return {\r\n            editingItem: {},\r\n            regions: [],\r\n            hasNextPageContractors: false,\r\n            hasNextPageProductOrServices: false,\r\n            contractors: [],\r\n            debounce: null,\r\n            isLoadingContractors: false,\r\n            isLoadingProductOrServices: false,\r\n            contractorSearchPayload: {},\r\n            productOrServicesSearchPayload: {},\r\n            productTypes: [],\r\n            products: []\r\n        }\r\n    },\r\n    /*\r\n    * COMPUTED */\r\n    computed: {\r\n        computedObserver () {\r\n            return this.$refs.observer\r\n        },\r\n        isModeCreate () {\r\n            return this.$route.name === 'CreateRemoveDocNaturalContractorReestr' || this.$route.name === 'CreateRemoveDocDominantContractorReestr'\r\n        },\r\n        productOrServicesByContractorId () {\r\n            let foundContractor = this.contractors.find(el => el.contractorId == this.editingItem.contractorId)\r\n            if (foundContractor) {\r\n                return foundContractor.productOrServicesByDistrict\r\n            } else {\r\n                return []\r\n            }\r\n        },\r\n        isDominant () {\r\n            return this.$route.name === 'CreateRemoveDocDominantContractorReestr'\r\n        },\r\n        isNatural () {\r\n            return this.$route.name === 'CreateRemoveDocNaturalContractorReestr'\r\n        }\r\n    },\r\n    /*\r\n    * METHODS */\r\n    methods: {\r\n        save () {\r\n            this.computedObserver.validate().then(async valid => {\r\n                if (valid) {\r\n                    if (this.editingItem.id) {\r\n                        crudAndListsService.update(MAIN_API_URL, this.makeAndReturnFormDataForBase64()).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    } else {\r\n                        let payload = await this.makeAndReturnFormDataForBase64()\r\n                        crudAndListsService.create(MAIN_API_URL, payload,\r\n                            `for-${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}`).then(res => {\r\n                                this.computedObserver.reset()\r\n                                this.editingItem = Object.assign({}, {});\r\n                                this.$router.go(-1)\r\n                                this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                            })\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        },\r\n        contractorsByProductOrServiceId (productOrServiceId) {\r\n            let foundEl = this.products.find(el => el.productOrServiceId == productOrServiceId)\r\n            if (foundEl) {\r\n                return foundEl.contractorsByDistrict\r\n            } else {\r\n                return []\r\n            }\r\n        },\r\n        /* makeAndReturnFormData () {\r\n            let form = new FormData();\r\n            this.editingItem.supplementDocs.forEach(f => {\r\n                form.append(\"file\", f.file);\r\n            })\r\n            form.append(\"contractorId\", this.editingItem.contractorId)\r\n            form.append(\"regionId\", this.editingItem.regionId)\r\n            // form.append(\"directoryProductOrServiceTypeId\", this.editingItem.directoryProductOrServiceTypeId)\r\n            // form.append(\"governmentPercentage\", this.editingItem.governmentPercentage)\r\n            form.append(\"orderNumber\", this.editingItem.orderNumber)\r\n            form.append(\"reestrClosedDate\", this.editingItem.reestrClosedDate)\r\n            this.editingItem.directoryProductOrServiceIds.forEach(id => {\r\n                form.append(\"directoryProductOrServiceIds\", id)\r\n            })\r\n            return form\r\n        }, */\r\n        getBase64 (file) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n                reader.onload = () => resolve(reader.result);\r\n                reader.onerror = error => reject(error);\r\n            });\r\n        },\r\n        async makeAndReturnFormDataForBase64 () {\r\n            if (this.editingItem.supplementDocs[0].file.dataURL) {\r\n                this.editingItem.file = this.editingItem.supplementDocs[0].file.dataURL\r\n                return this.editingItem\r\n            } else {\r\n                let res = await this.getBase64(this.editingItem.supplementDocs[0].file)\r\n                this.editingItem.file = res\r\n                return this.editingItem\r\n            }\r\n\r\n        },\r\n        async regionSelected ($event, dontResetDependent = false, forRepublicEvent) {\r\n            if (!dontResetDependent) {\r\n                this.productTypes = []\r\n                this.editingItem.directoryProductOrServiceTypeId = null\r\n\r\n                this.editingItem.contractorId = null\r\n                this.contractors = []\r\n\r\n                this.editingItem.directoryProductOrServiceId = null\r\n            }\r\n            if (this.editingItem.isRepublic) {\r\n                helperService\r\n                    .getReestrByRepublic(this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : '')\r\n                    .then((res) => {\r\n                        this.productTypes = res.data;\r\n                    })\r\n                    .catch(e => {\r\n                        this.productTypes = [];\r\n                    })\r\n            } else if ($event || this.editingItem.regionId) {\r\n                helperService\r\n                    .getReestrByRegionId($event ? $event : this.editingItem.regionId, this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : '')\r\n                    .then((res) => {\r\n                        this.productTypes = res.data;\r\n                    })\r\n                    .catch(e => {\r\n                        this.productTypes = [];\r\n                    })\r\n            }\r\n        },\r\n        customLabelRegion (opt) {\r\n            let selected = this.regions.find(e => e.regionId == (opt.regionId ? opt.regionId : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.regionNameRu,\r\n                    nameLt: selected.regionNameLt,\r\n                    nameUz: selected.regionNameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelProduct (opt) {\r\n            let selected = this.products.find(e => e.productOrServiceId == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.productOrServiceNameRu,\r\n                    nameLt: selected.productOrServiceNameLt,\r\n                    nameUz: selected.productOrServiceNameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelProductType (opt) {\r\n            let selected = this.productTypes.find(e => e.typeId == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.typeNameRu,\r\n                    nameLt: selected.typeNameLt,\r\n                    nameUz: selected.typeNameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        async productTypeSelected ($event, dontResetDistrict = false) {\r\n            if (!dontResetDistrict) {\r\n                this.editingItem.contractorId = null\r\n                this.contractors = []\r\n                this.editingItem.directoryProductOrServiceId = null\r\n                this.products = []\r\n            }\r\n            if ($event) {\r\n                // GET PRODUCT_OR_SERVICES\r\n                await this.fetchContractors(this.editingItem.regionId, $event)\r\n                // await helperService.getProductsByProdectTypeId($event)\r\n                //     .then(res => {\r\n                //         this.products = res.data\r\n                //     })\r\n                //     .catch(e => {\r\n                //         this.products = []\r\n                //         console.log(e)\r\n                //     })\r\n            }\r\n        },\r\n        async contractorSelected ($event, dontResetDependent = false) {\r\n            if (!dontResetDependent) {\r\n                this.editingItem.directoryProductOrServiceId = null\r\n                this.products = []\r\n            }\r\n        },\r\n        async productOrServiceSelected ($event, dontResetDependent = false) {\r\n            if (!dontResetDependent) {\r\n                this.editingItem.contractorId = null\r\n                this.contractors = []\r\n            }\r\n            if ($event) {\r\n                if (this.editingItem.directoryProductOrServiceTypeId && this.editingItem.isRepublic) {\r\n                    this.isLoadingContractors = true\r\n                    await helperService.getContractorsByProdectOrServiceTypeIdAndProductOrServiceId(`${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?typeId=${this.editingItem.directoryProductOrServiceTypeId}&productOrServiceId=${$event}`)\r\n                        .then(res => {\r\n                            this.contractors = res.data\r\n                        })\r\n                        .catch(e => {\r\n                            this.contractors = []\r\n                            console.log(e)\r\n                        })\r\n                        .finally(() => {\r\n                            this.isLoadingContractors = false\r\n                        })\r\n                } else {\r\n                    this.contractors = this.contractorsByProductOrServiceId($event)\r\n                }\r\n            } else {\r\n                this.contractors = []\r\n            }\r\n        },\r\n        /* contractorReachedEndOfList (e) {\r\n            if (e) {\r\n                this.fetchContractors()\r\n            }\r\n        }, */\r\n        productOrServicesReachedEndOfList (e) {\r\n            if (e) {\r\n                this.fetchProductOrServices(this.editingItem.directoryProductOrServiceTypeId)\r\n            }\r\n        },\r\n        customLabelContractorForRepublic (opt) {\r\n            let selected = this.contractors.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${selected.name}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelContractor (opt) {\r\n            let selected = this.contractors.find(e => e.contractorId == opt);\r\n            if (selected) {\r\n                return `${selected.contractorFullName}`\r\n            }\r\n            return ``;\r\n        },\r\n        /* async debounceSearchProductOrServices (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchContractorsWithKeyword(searchText);\r\n            }, 1000);\r\n        }, */\r\n        /* async debounceSearchContractors (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchContractorsWithKeyword(searchText);\r\n            }, 1000);\r\n        }, */\r\n        fetchProductOrServicesWithKeyword (keyword) {\r\n            this.products = []\r\n            this.productOrServicesSearchPayload.page = 1\r\n            this.productOrServicesSearchPayload.keyword = keyword ? keyword : ''\r\n            this.fetchProductOrServices(this.editingItem.directoryProductOrServiceTypeId)\r\n        },\r\n        async fetchProductOrServices (typeId) {\r\n            this.isLoadingProductOrServices = true\r\n            await helperService.getProductOrServicesByTypeId(typeId, this.productOrServicesSearchPayload)\r\n                .then(res => {\r\n                    this.products.push(...res.data.list)\r\n                    this.hasNextPageProductOrServices = res.data.total / this.productOrServicesSearchPayload.itemsPerPage > this.productOrServicesSearchPayload.page\r\n                    this.productOrServicesSearchPayload.page += 1\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    this.products = []\r\n                })\r\n                .finally(() => {\r\n                    this.isLoadingProductOrServices = false\r\n                })\r\n        },\r\n        /* fetchContractorsWithKeyword (keyword) {\r\n            this.contractors = []\r\n            this.contractorSearchPayload.page = 1\r\n            this.contractorSearchPayload.keyword = keyword ? keyword : ''\r\n            this.fetchContractors()\r\n        }, */\r\n        async fetchContractors (regionId, typeId) {\r\n            if (this.editingItem.isRepublic && typeId) {\r\n                this.isLoadingProductOrServices = true\r\n                helperService.searchReestrListByRepublic(`${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?typeId=${typeId}`)\r\n                    .then(res => {\r\n                        this.products = res.data\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                        this.products = []\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoadingProductOrServices = false\r\n                    })\r\n            } else if (regionId && typeId) {\r\n                this.isLoadingProductOrServices = true\r\n                await crudAndListsService.searchList(MAIN_API_URL, null, `${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?regionId=${regionId}&typeId=${typeId}`)\r\n                    .then(res => {\r\n                        this.products = res.data\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                        this.products = []\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoadingProductOrServices = false\r\n                    })\r\n            } else {\r\n                this.editingItem.directoryProductOrServiceId = null\r\n                this.products = []\r\n            }\r\n        },\r\n    },\r\n    /*\r\n    * CREATED */\r\n    async created () {\r\n        this.contractorSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        this.productOrServicesSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        this.var_default_search_payload.itemsPerPage = 500\r\n        if (this.isModeCreate) {\r\n            await crudAndListsService.getEmpty(MAIN_API_URL)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        } else {\r\n            await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, false)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n        // GET CONTRACTORS\r\n        // await this.fetchContractors()\r\n\r\n        // GET REGIONS\r\n        await helperService.fetchRegionsForContractorReestrByCurrentUserId()\r\n            .then(res => {\r\n                this.regions = res.data\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n    padding-top: 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n}\r\n</style>"]}]}