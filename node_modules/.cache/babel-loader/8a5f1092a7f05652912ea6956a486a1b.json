{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\report\\organizitional\\components\\editReportDynamicModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\report\\organizitional\\components\\editReportDynamicModal.vue","mtime":1675054786286},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["editReportDynamicModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AACA,OAAA,OAAA,MAAA,gCAAA;AACA,OAAA,mBAAA,MAAA,yCAAA;AACA,OAAA,QAAA,MAAA,uBAAA;AAEA,IAAA,YAAA,GAAA,kBAAA;AACA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA;AADA,GADA;AAOA,EAAA,UAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,GAPA;AAQA,EAAA,IARA,kBAQA;AACA,WAAA;AACA,MAAA,cAAA,EAAA,EADA;AAEA,MAAA,kBAAA,EAAA,EAFA;AAGA,MAAA,kBAAA,EAAA,EAHA;AAIA,MAAA,QAAA,EAAA,IAJA;AAKA;AACA,MAAA,KAAA,EAAA,EANA;AAOA,MAAA,eAAA,EAAA,KAPA;AAQA,MAAA,aAAA,EAAA,KARA;AASA,MAAA,iBAAA,EAAA,EATA;AAUA;AACA,MAAA,KAAA,EAAA,EAXA;AAYA,MAAA,KAAA,EAAA,EAZA;AAaA,MAAA,MAAA,EAAA,IAbA;AAcA,MAAA,OAAA,EAAA,IAdA;AAeA,MAAA,SAAA,EAAA,EAfA;AAgBA,MAAA,QAAA,EAAA,IAhBA;AAiBA;AACA,MAAA,eAAA,EAAA,EAlBA;AAmBA,MAAA,YAAA,EAAA,EAnBA;AAqBA,MAAA,YAAA,EAAA,EArBA;AAsBA,MAAA,aAAA,EAAA,EAtBA;AAuBA,MAAA,YAAA,EAAA,EAvBA;AAyBA,MAAA,aAAA,EAAA,EAzBA;AA0BA,MAAA,YAAA,EAAA,IA1BA;AA2BA,MAAA,cAAA,EAAA,CA3BA;AA4BA,MAAA,eAAA,EAAA,EA5BA;AA6BA,MAAA,QAAA,EAAA,EA7BA;AA8BA,MAAA,MAAA,EAAA,KA9BA;AA+BA,MAAA,UAAA,EAAA,KA/BA;AAgCA,MAAA,MAAA,EAAA,EAhCA;AAiCA,MAAA,KAAA,EAAA,EAjCA;AAkCA,MAAA,QAAA,EAAA,EAlCA;AAmCA,MAAA,eAAA,EAAA;AACA,QAAA,QAAA,EAAA,IADA;AAEA,QAAA,WAAA,EAAA,IAFA;AAGA,QAAA,KAAA,EAAA,IAHA;AAIA,QAAA,QAAA,EAAA;AAJA,OAnCA;AAyCA,MAAA,oBAAA,EAAA,EAzCA;AA0CA,MAAA,8BAAA,EAAA,EA1CA;AA2CA,MAAA,0BAAA,EAAA;AA3CA,KAAA;AA6CA,GAtDA;AAuDA,EAAA,KAAA,EAAA;AACA,IAAA,aAAA,EAAA,uBAAA,gBAAA,EAAA;AACA,UAAA,QAAA,gBAAA,MAAA,QAAA,IAAA,gBAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,MAAA,GAAA,gBAAA,CAAA,MAAA;;AACA,aAAA,IAAA,EAAA,GAAA,CAAA,EAAA,EAAA,GAAA,MAAA,EAAA,EAAA,EAAA,EAAA;AACA,eAAA,0BAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,QAAA,IAAA,EAAA;AACA;AACA;AACA;AARA,GAvDA;AAiEA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,CADA,EACA;AACA,UAAA,KAAA,GAAA,KAAA,QAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,QAAA,IAAA,CAAA,CAAA,QAAA;AAAA,OAAA,CAAA;;AACA,UAAA,KAAA,EAAA;AACA,eAAA,KAAA,CAAA,UAAA;AACA,OAFA,MAEA;AACA,eAAA,EAAA;AACA;AACA,KARA;AASA;AACA,IAAA,YAVA,0BAUA;AACA,UAAA,MAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,KAAA,QAAA,CAAA;AACA,UAAA,IAAA,GAAA,IAAA;AACA,WAAA,YAAA,CAAA,IAAA,CAAA,UAAA,EAAA,EAAA;AACA,YAAA,EAAA,CAAA,EAAA,IAAA,MAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA;AACA,SAFA,MAEA,IAAA,EAAA,CAAA,EAAA,IAAA,MAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA;AACA;;AACA,eAAA,IAAA;AACA,OAPA;;AAQA,UAAA,IAAA,EAAA;AACA,eAAA,MAAA;AACA,OAFA,MAEA;AACA,aAAA,YAAA;AACA;AAEA,KA3BA;AA4BA,IAAA,SA5BA,uBA4BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,KAAA,CAAA,YAAA,CAAA,IAAA,CAAA;AAAA,kBAAA,EAAA,EAAA,KAAA,CAAA,YAAA;AAAA,iBAAA,CADA;;AAAA;AAAA;AAAA,uBAEA,KAAA,CAAA,uBAAA,CAAA,KAAA,CAAA,cAAA,EAAA,KAAA,CAAA,kBAAA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA,KA/BA;AAgCA,IAAA,WAhCA,yBAgCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,KAAA,CAAA,oBAAA;;AACA,gBAAA,MAAA,CAAA,GAAA,GAAA,IAAA;AAAA,qFAAA,kBAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AACA,gCAAA,EAAA,CAAA,KAAA,EAAA;AACA,8BAAA,MAAA,CAAA,KAAA,CAAA,MAAA,EAAA,IAAA;AACA;;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA;;AAAA;AAAA;AAAA;AAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA,KAvCA;AAwCA,IAAA,eAxCA,6BAwCA;AAAA;;AACA,MAAA,OAAA,CAAA,oBAAA,CAAA,KAAA,QAAA,EACA,IADA;AAAA,4EACA,kBAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAAA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,SAAA,EAAA,gBAAA,EAAA,KAAA,EADA,CAEA;;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA;;AAAA;AAAA;AAAA;AAAA,WAKA,KALA,CAKA,UAAA,GAAA,EAAA,CACA;AACA,OAPA;AAQA,KAjDA;AAkDA,IAAA,SAlDA,qBAkDA,KAlDA,EAkDA,IAlDA,EAkDA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,WADA,GACA,MAAA,CAAA,kBAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AAAA,yBAAA,EAAA,CAAA,EAAA,IAAA,IAAA,CAAA,EAAA;AAAA,iBAAA,CADA;;AAEA,oBAAA,WAAA,GAAA,CAAA,CAAA,EAAA;AACA,kBAAA,MAAA,CAAA,GAAA,GAAA,IAAA;AAAA,wFAAA,kBAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACA,EAAA,CAAA,KADA;AAAA;AAAA;AAAA;;AAAA;AAAA,qCAEA,OAAA,CAAA,WAAA,CAAA,IAAA,CAAA,EAAA,EAAA,MAAA,CAAA,QAAA,EACA,IADA;AAAA,oGACA,kBAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,0CAAA,MAAA,CAAA,YAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;;AAFA;AAAA,iDAGA,MAAA,CAAA,YAAA,EAHA;;AAAA;AAAA;AAAA,iDAIA,MAAA,CAAA,UAAA,EAJA;;AAAA;AAAA;AAAA,iDAKA,MAAA,CAAA,uBAAA,CAAA,MAAA,CAAA,cAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,mDAAA,CAAA,CAAA,KAAA,IAAA,IAAA,CAAA,EAAA;AAAA,2CAAA,CAAA,EAAA,MAAA,CAAA,kBAAA,CALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADA;;AAAA;AAAA;AAAA;AAAA,mCAQA,KARA,CAQA,UAAA,GAAA,EAAA,CACA;AACA,+BAVA,EAWA,OAXA,uEAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACA,MAAA,CAAA,OAAA,CAAA,MAAA,CAAA,OAAA,EAAA,MAAA,CAAA,QAAA,EAAA,MAAA,CAAA,SAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAXA,GAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAA;;AAAA;AAAA;AAAA;AAAA;AAmBA,iBApBA,MAoBA;AACA,kBAAA,MAAA,CAAA,GAAA,GAAA,IAAA;AAAA,wFAAA,kBAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACA,EAAA,CAAA,KADA;AAAA;AAAA;AAAA;;AAEA,8BAAA,gBAFA,GAEA,EAFA;AAGA,8BAAA,MAAA,CAAA,aAAA,GAAA,MAAA,CAAA,aAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,gCAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,KAAA,CAAA,MAAA,CAAA,UAAA,CAAA,EAAA;AACA,sCAAA,CAAA,IAAA,CAAA,CAAA,KAAA,IAAA,IAAA,CAAA,EAAA,EAAA;AACA,wCAAA,CAAA,CAAA,QAAA,KAAA,SAAA,EAAA;AACA,sCAAA,CAAA,CAAA,YAAA,GAAA,CAAA,CAAA,KAAA;AACA,sCAAA,CAAA,CAAA,WAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,eAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,SAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,iBAAA,GAAA,IAAA;AACA,qCANA,MAMA,IAAA,CAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,sCAAA,CAAA,CAAA,WAAA,GAAA,CAAA,CAAA,KAAA;AACA,sCAAA,CAAA,CAAA,eAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,SAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,YAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,iBAAA,GAAA,IAAA;AACA,qCANA,MAMA,IAAA,CAAA,CAAA,QAAA,KAAA,YAAA,EAAA;AACA,sCAAA,CAAA,CAAA,eAAA,GAAA,CAAA,CAAA,KAAA;AACA,sCAAA,CAAA,CAAA,WAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,SAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,YAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,iBAAA,GAAA,IAAA;AACA,qCANA,MAMA,IAAA,CAAA,CAAA,QAAA,KAAA,MAAA,EAAA;AACA,sCAAA,CAAA,CAAA,SAAA,GAAA,CAAA,CAAA,KAAA;AACA,sCAAA,CAAA,CAAA,WAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,eAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,YAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,iBAAA,GAAA,IAAA;AACA,qCANA,MAMA,IAAA,CAAA,CAAA,QAAA,KAAA,MAAA,EAAA;AACA,sCAAA,CAAA,CAAA,SAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,WAAA,GAAA,CAAA,CAAA,KAAA;AACA,sCAAA,CAAA,CAAA,eAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,YAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,iBAAA,GAAA,IAAA;AACA,qCANA,MAMA,IAAA,CAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,sCAAA,CAAA,CAAA,WAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,eAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,SAAA,GAAA,IAAA;AACA,sCAAA,CAAA,CAAA,YAAA,GAAA,IAAA;AACA;;AACA,oCAAA,gBAAA,CAAA,IAAA,CAAA,CAAA;AACA,2CAAA,CAAA;AACA;AACA,iCAzCA,CAAA;AA0CA,uCAAA,CAAA;AACA,+BA5CA,CAAA;;AA6CA,8BAAA,MAAA,CAAA,YAAA,CAAA,MAAA,CAAA,KAAA,EAAA,CAAA;;AAhDA;AAAA,qCAiDA,MAAA,CAAA,YAAA,EAjDA;;AAAA;AAAA;AAAA,qCAkDA,MAAA,CAAA,UAAA,EAlDA;;AAAA;AAmDA,8BAAA,gBAAA,CAAA,OAAA,CAAA,UAAA,CAAA;AAAA,uCAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AAAA,+BAAA;AAnDA;AAAA,qCAoDA,MAAA,CAAA,uBAAA,CAAA,MAAA,CAAA,cAAA,EAAA,MAAA,CAAA,kBAAA,CApDA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAA;;AAAA;AAAA;AAAA;AAAA;AAyDA;;AAhFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiFA,KAnIA;AAqIA,IAAA,2BArIA,uCAqIA,CArIA,EAqIA;AACA,UAAA,CAAA,EAAA;AACA,aAAA,gBAAA;AACA;AACA,KAzIA;AA0IA,IAAA,yBA1IA,qCA0IA,UA1IA,EA0IA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,YAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,gBAAA,MAAA,CAAA,QAAA,GAAA,UAAA,uEAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACA,MAAA,CAAA,2BAAA,CAAA,UAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAA,IAEA,IAFA,CAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,KA/IA;AAgJA,IAAA,2BAhJA,uCAgJA,OAhJA,EAgJA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,iBAAA,CAAA,IAAA,GAAA,CAAA;AACA,WAAA,iBAAA,CAAA,OAAA,GAAA,OAAA,GAAA,OAAA,GAAA,EAAA;AACA,WAAA,gBAAA;AACA,KArJA;AAsJA,IAAA,gBAtJA,8BAsJA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,aAAA,GAAA,IAAA;AADA;AAAA,uBAEA,mBAAA,CAAA,qBAAA,CAAA,YAAA,EAAA,MAAA,CAAA,iBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AAAA;;AACA,kCAAA,MAAA,CAAA,KAAA,EAAA,IAAA,wCAAA,GAAA,CAAA,IAAA,CAAA,IAAA;;AACA,kBAAA,MAAA,CAAA,eAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,GAAA,MAAA,CAAA,iBAAA,CAAA,YAAA,GAAA,MAAA,CAAA,iBAAA,CAAA,IAAA;AACA,kBAAA,MAAA,CAAA,iBAAA,CAAA,IAAA,IAAA,CAAA;;AACA,sBAAA,CAAA,MAAA,CAAA,YAAA,IAAA,MAAA,CAAA,WAAA,CAAA,MAAA,EAAA;AACA,wBAAA,QAAA,GAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AAAA,6BAAA,EAAA,CAAA,EAAA,IAAA,MAAA,CAAA,WAAA,CAAA,MAAA;AAAA,qBAAA,CAAA;;AACA,wBAAA,CAAA,QAAA,IAAA,MAAA,CAAA,WAAA,CAAA,WAAA,EAAA;AACA,sBAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,MAAA,CAAA,WAAA,CAAA,WAAA;AACA;AACA;AACA,iBAXA,EAYA,KAZA,CAYA,UAAA,CAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,kBAAA,MAAA,CAAA,KAAA,GAAA,EAAA;AACA,iBAfA,EAgBA,OAhBA,CAgBA,YAAA;AACA,kBAAA,MAAA,CAAA,aAAA,GAAA,KAAA;AACA,iBAlBA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBA,KA3KA;AA4KA,IAAA,qBA5KA,iCA4KA,GA5KA,EA4KA;AACA,UAAA,QAAA,GAAA,KAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA;AAAA,OAAA,CAAA;;AACA,UAAA,QAAA,EAAA;AACA,yBAAA,QAAA,CAAA,IAAA,gBACA,QAAA,CAAA,MAAA,GACA,KAAA,OAAA,CAAA;AACA,UAAA,MAAA,EAAA,QAAA,CAAA,MADA;AAEA,UAAA,MAAA,EAAA,QAAA,CAAA,MAFA;AAGA,UAAA,MAAA,EAAA,QAAA,CAAA;AAHA,SAAA,CADA,GAOA,QAAA,CAAA,IARA;AAUA;;AACA;AACA,KA3LA;AA4LA;AACA,IAAA,QA7LA,sBA6LA;AACA,WAAA,eAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,WAAA,aAAA,GAAA,EAAA;AACA,WAAA,YAAA,GAAA,EAAA;AACA,WAAA,aAAA,GAAA,EAAA;AACA,WAAA,QAAA,GAAA,EAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,KAxMA;AAyMA,IAAA,UAzMA,sBAyMA,GAzMA,EAyMA,KAzMA,EAyMA,KAzMA,EAyMA,QAzMA,EAyMA,WAzMA,EAyMA,QAzMA,EAyMA,QAzMA,EAyMA;AACA,WAAA,kBAAA,CAAA,GAAA;;AACA,UAAA,QAAA,IAAA,IAAA,EAAA;AACA,YAAA,GAAA,CAAA,OAAA,IAAA,EAAA,IAAA,KAAA,IAAA,IAAA,EAAA;AACA,UAAA,GAAA,CAAA,cAAA,GADA,CAEA;;AACA,cAAA,QAAA,GAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,gBAAA,aAAA,GAAA,KAAA,aAAA,CAAA,WAAA,CAAA;AACA,gBAAA,aAAA,GAAA,KAAA,YAAA,CAAA,QAAA,GAAA,CAAA,CAAA;AACA,gBAAA,SAAA,GAAA,QAAA,CAAA,cAAA,CACA,IAAA,CAAA,SAAA,CAAA;AACA,cAAA,KAAA,EAAA,aAAA,CAAA,EADA;AAEA,cAAA,QAAA,EAAA,aAAA,CAAA;AAFA,aAAA,CADA,CAAA;;AAMA,gBAAA,SAAA,EAAA;AACA,cAAA,SAAA,CAAA,KAAA;AACA;AACA;AACA,SAhBA,MAgBA,IAAA,GAAA,CAAA,OAAA,IAAA,EAAA,IAAA,KAAA,IAAA,IAAA,EAAA;AACA,UAAA,GAAA,CAAA,cAAA;;AACA,cAAA,QAAA,IAAA,CAAA,EAAA;AACA,gBAAA,cAAA,GAAA,KAAA,aAAA,CAAA,WAAA,CAAA;AACA,gBAAA,WAAA,GAAA,KAAA,YAAA,CAAA,QAAA,GAAA,CAAA,CAAA;AACA,gBAAA,OAAA,GAAA,QAAA,CAAA,cAAA,CACA,IAAA,CAAA,SAAA,CAAA;AACA,cAAA,KAAA,EAAA,WAAA,CAAA,EADA;AAEA,cAAA,QAAA,EAAA,cAAA,CAAA;AAFA,aAAA,CADA,CAAA;;AAMA,gBAAA,OAAA,EAAA;AACA,cAAA,OAAA,CAAA,KAAA;AACA;AACA,WAdA,CAeA;;AACA,SAhBA,MAgBA,IAAA,GAAA,CAAA,OAAA,IAAA,EAAA,EAAA;AACA,UAAA,GAAA,CAAA,cAAA,GADA,CAEA;;AACA,cAAA,WAAA,IAAA,CAAA,EAAA;AACA,gBAAA,UAAA,GAAA,KAAA,aAAA,CAAA,WAAA,GAAA,CAAA,CAAA;AAEA,gBAAA,UAAA,GAAA,KAAA,YAAA,CAAA,QAAA,CAAA;AACA,gBAAA,SAAA,GAAA,QAAA,CAAA,cAAA,CACA,IAAA,CAAA,SAAA,CAAA;AACA,cAAA,KAAA,EAAA,UAAA,CAAA,EADA;AAEA,cAAA,QAAA,EAAA,UAAA,CAAA;AAFA,aAAA,CADA,CAAA;;AAMA,gBAAA,SAAA,EAAA;AACA,kBAAA,SAAA,CAAA,QAAA,EAAA;AACA,oBAAA,KAAA,GAAA,KAAA,aAAA,CAAA,MAAA,IAAA,WAAA,GAAA,CAAA,CAAA;;AACA,qBAAA,IAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,KAAA,EAAA,GAAA,EAAA,EAAA;AACA,sBAAA,WAAA,GAAA,KAAA,aAAA,CAAA,WAAA,GAAA,CAAA,GAAA,GAAA,CAAA;;AACA,sBAAA,WAAA,EAAA;AACA,wBAAA,KAAA,GAAA,QAAA,CAAA,cAAA,CACA,IAAA,CAAA,SAAA,CAAA;AACA,sBAAA,KAAA,EAAA,UAAA,CAAA,EADA;AAEA,sBAAA,QAAA,EAAA,WAAA,CAAA;AAFA,qBAAA,CADA,CAAA;;AAMA,wBAAA,KAAA,IAAA,KAAA,CAAA,QAAA,EAAA;AACA;AACA,qBAFA,MAEA;AACA,0BAAA,KAAA,EAAA;AACA,wBAAA,KAAA,CAAA,KAAA;AACA;;AACA;AACA;AACA;AACA;AACA,eArBA,MAqBA;AACA,gBAAA,SAAA,CAAA,KAAA;AACA;AACA;AACA;AACA,SAxCA,MAwCA,IAAA,GAAA,CAAA,OAAA,IAAA,EAAA,EAAA;AACA;AACA,UAAA,GAAA,CAAA,cAAA;;AACA,cAAA,KAAA,aAAA,CAAA,MAAA,GAAA,CAAA,GAAA,WAAA,EAAA;AACA,gBAAA,UAAA,GAAA,KAAA,aAAA,CAAA,WAAA,GAAA,CAAA,CAAA;AACA,gBAAA,WAAA,GAAA,KAAA,YAAA,CAAA,QAAA,CAAA;AACA,gBAAA,SAAA,GAAA,QAAA,CAAA,cAAA,CACA,IAAA,CAAA,SAAA,CAAA;AACA,cAAA,KAAA,EAAA,WAAA,CAAA,EADA;AAEA,cAAA,QAAA,EAAA,UAAA,CAAA;AAFA,aAAA,CADA,CAAA;;AAMA,gBAAA,SAAA,EAAA;AACA,kBAAA,SAAA,CAAA,QAAA,EAAA;AACA,oBAAA,QAAA,GAAA,KAAA,aAAA,CAAA,MAAA,IAAA,WAAA,GAAA,CAAA,CAAA;;AACA,qBAAA,IAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,QAAA,EAAA,GAAA,EAAA,EAAA;AACA,sBAAA,WAAA,GAAA,KAAA,aAAA,CAAA,WAAA,GAAA,CAAA,GAAA,GAAA,CAAA;;AAEA,sBAAA,MAAA,GAAA,QAAA,CAAA,cAAA,CACA,IAAA,CAAA,SAAA,CAAA;AACA,oBAAA,KAAA,EAAA,WAAA,CAAA,EADA;AAEA,oBAAA,QAAA,EAAA,WAAA,CAAA;AAFA,mBAAA,CADA,CAAA;;AAMA,sBAAA,MAAA,CAAA,QAAA,EAAA;AACA;AACA,mBAFA,MAEA;AACA,wBAAA,MAAA,EAAA;AACA,sBAAA,MAAA,CAAA,KAAA;AACA;;AACA;AACA;AACA;AACA,eApBA,MAoBA;AACA,gBAAA,SAAA,CAAA,KAAA;AACA;AACA;AACA;AACA;AACA;AACA,KA5TA;AA6TA,IAAA,UA7TA,wBA6TA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,eAAA,EAAA,UAAA,EAAA,IAAA,CADA;;AAAA;AAAA;AAAA,uBAEA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,eAAA,EAAA,aAAA,EAAA,IAAA,CAFA;;AAAA;AAAA;AAAA,uBAGA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,eAAA,EAAA,OAAA,EAAA,IAAA,CAHA;;AAAA;AAAA;AAAA,uBAIA,MAAA,CAAA,IAAA,CAAA,MAAA,CAAA,eAAA,EAAA,UAAA,EAAA,IAAA,CAJA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,KAnUA;AAoUA,IAAA,QApUA,oBAoUA,EApUA,EAoUA,EApUA,EAoUA,MApUA,EAoUA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,KAxUA;AAyUA,IAAA,kBAzUA,8BAyUA,CAzUA,EAyUA;AACA,UAAA,KAAA,eAAA,CAAA,QAAA,IAAA,IAAA,EAAA;AACA,YAAA,CAAA,CAAA,KAAA,KAAA,EAAA,IAAA,CAAA,CAAA,KAAA,KAAA,EAAA,EAAA;AACA,UAAA,CAAA,CAAA,cAAA;AACA;AACA;AACA,KA/UA;AAgVA,IAAA,WAhVA,uBAgVA,GAhVA,EAgVA;AACA,WAAA,kndA;AAsdA,IAAA,QAtdA,oBAsdA,KAtdA,EAsdA,KAtdA,EAsdA,QAtdA,EAsdA,WAtdA,EAsdA,QAtdA,EAsdA,QAtdA,EAsdA;AACA,WAAA,IAAA,CAAA,KAAA,eAAA,EAAA,UAAA,EAAA,UAAA,CAAA,QAAA,CAAA;AACA,WAAA,IAAA,CAAA,KAAA,eAAA,EAAA,aAAA,EAAA,UAAA,CAAA,WAAA,CAAA;AACA,WAAA,IAAA,CAAA,KAAA,eAAA,EAAA,OAAA,EAAA,UAAA,CAAA,KAAA,CAAA;AACA,WAAA,IAAA,CAAA,KAAA,eAAA,EAAA,UAAA,EAAA,UAAA,CAAA,QAAA,CAAA;AACA,KA3dA;AA4dA,IAAA,aA5dA,2BA4dA;AAAA;;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,GAAA,EAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,OAAA,EAAA;AACA,UAAA,OAAA,CAAA,mBAAA,CAAA,MAAA,CAAA,OAAA,EACA,IADA,CACA,iBAAA;AAAA,gBAAA,IAAA,SAAA,IAAA;AACA,YAAA,MAAA,CAAA,QAAA,GAAA,IAAA;AACA,YAAA,GAAA,CAAA,IAAA,CAAA;AACA,WAJA,EAKA,KALA,CAKA,UAAA,CAAA;AAAA,mBAAA,GAAA,CAAA,CAAA,CAAA;AAAA,WALA;AAMA,SAPA,MAOA;AACA,UAAA,GAAA;AACA;AACA,OAXA,CAAA;AAYA,KAzeA;AA0eA,IAAA,WA1eA,uBA0eA,EA1eA,EA0eA;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,GAAA,EAAA,GAAA,EAAA;AACA,QAAA,OAAA,CAAA,aAAA,CAAA,EAAA,EACA,IADA,CACA,iBAAA;AAAA,cAAA,IAAA,SAAA,IAAA;AACA,UAAA,GAAA,CAAA,IAAA,CAAA;AACA,SAHA,EAIA,KAJA,CAIA,UAAA,CAAA;AAAA,iBAAA,GAAA,CAAA,CAAA,CAAA;AAAA,SAJA;AAKA,OANA,CAAA;AAOA,KAlfA;AAmfA,IAAA,SAnfA,qBAmfA,QAnfA,EAmfA,KAnfA,EAmfA;AACA,WAAA,IAAA,CAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,CAAA,EAAA,aAAA,EAAA,KAAA;AACA,WAAA,YAAA;AACA,KAtfA;AAufA,IAAA,UAvfA,sBAufA,QAvfA,EAufA,KAvfA,EAufA;AACA,WAAA,IAAA,CAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,CAAA,EAAA,eAAA,EAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,EAAA,qBAAA;AACA,WAAA,IAAA,CAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,CAAA,EAAA,mBAAA,EAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,EAAA,yBAAA;AACA,WAAA,IAAA,CAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,CAAA,EAAA,mBAAA,EAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,EAAA,yBAAA;AACA,WAAA,IAAA,CAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,CAAA,EAAA,mBAAA,EAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,EAAA,yBAAA;AACA,WAAA,IAAA,CAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,CAAA,EAAA,aAAA,EAAA,IAAA;AACA,WAAA,YAAA;AACA,KA9fA;AA+fA,IAAA,QA/fA,oBA+fA,KA/fA,EA+fA,KA/fA,EA+fA,QA/fA,EA+fA,KA/fA,EA+fA,EA/fA,EA+fA,QA/fA,EA+fA;AAAA;;AAAA,UAAA,WAAA,uEAAA,KAAA;AAAA,UAAA,eAAA,uEAAA,KAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAA,eAAA,IAAA,QAAA,KAAA,QAAA,EAAA;AACA,YAAA,SAAA,GAAA,KAAA,YAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AAAA,iBAAA,EAAA,CAAA,EAAA,IAAA,KAAA;AAAA,SAAA,CAAA;;AACA,YAAA,CAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,EAAA,KAAA,EAAA;AACA,eAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,IAAA;AACA,YAAA,KAAA,EAAA,KADA;AAEA,YAAA,KAAA,EAAA,QAAA,KAAA,QAAA,GAAA,EAAA,GAAA,KAFA;AAGA,YAAA,aAAA,EAAA,KAAA,GAAA,KAAA,CAAA,EAAA,GAAA,IAHA;AAIA,YAAA,iBAAA,EAAA,KAAA,GAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,IAAA,GAAA,IAJA;AAKA,YAAA,iBAAA,EAAA,KAAA,GAAA,KAAA,CAAA,MAAA,GAAA,IALA;AAMA,YAAA,iBAAA,EAAA,KAAA,GAAA,KAAA,CAAA,MAAA,GAAA,IANA;AAOA,YAAA,yBAAA,EAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,IAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,EAAA,yBAAA,GAAA,EAPA;AAQA,YAAA,yBAAA,EAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,IAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,EAAA,yBAAA,GAAA,EARA;AASA,YAAA,yBAAA,EAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,IAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,EAAA,yBAAA,GAAA,EATA;AAUA,YAAA,QAAA,EAAA,QAVA;AAWA,YAAA,QAAA,EAAA,EAXA;AAYA,YAAA,WAAA,EAAA;AAZA,WAAA;AAcA,eAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,EAAA,qBAAA,GAAA,KAAA,CAAA,EAAA;AACA,eAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,EAAA,yBAAA,GAAA,KAAA,CAAA,MAAA;AACA,eAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,EAAA,yBAAA,GAAA,KAAA,CAAA,MAAA;AACA,eAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,SAAA,EAAA,yBAAA,GAAA,KAAA,CAAA,MAAA;AACA;AACA,OAtBA,MAsBA;AACA,YAAA,QAAA,KAAA,QAAA,EAAA;AACA,UAAA,KAAA,CAAA,KAAA,GAAA,KAAA;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,EAAA;AACA,UAAA,KAAA,CAAA,QAAA,GAAA,QAAA;AACA,UAAA,KAAA,CAAA,WAAA,GAAA,WAAA;AACA,UAAA,KAAA,CAAA,aAAA,GAAA,KAAA,CAAA,EAAA;AACA,UAAA,KAAA,CAAA,iBAAA,GAAA,KAAA,CAAA,MAAA;AACA,UAAA,KAAA,CAAA,iBAAA,GAAA,KAAA,CAAA,MAAA;AACA,UAAA,KAAA,CAAA,iBAAA,GAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,MAAA,GAAA,KAAA,CAAA,IAAA;AACA;;AAEA,aAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,IAAA;AACA,UAAA,KAAA,EAAA,KADA;AAEA,UAAA,KAAA,EAAA,QAAA,KAAA,QAAA,GAAA,EAAA,GAAA,KAFA;AAGA,UAAA,aAAA,EAAA,KAAA,GAAA,KAAA,CAAA,EAAA,GAAA,IAHA;AAIA,UAAA,iBAAA,EAAA,KAAA,GAAA,KAAA,CAAA,MAAA,GAAA,IAJA;AAKA,UAAA,iBAAA,EAAA,KAAA,GAAA,KAAA,CAAA,MAAA,GAAA,IALA;AAMA,UAAA,iBAAA,EAAA,KAAA,GAAA,KAAA,CAAA,MAAA,GAAA,IANA;AAOA,UAAA,yBAAA,EAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,IAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,EAAA,yBAAA,GAAA,EAPA;AAQA,UAAA,yBAAA,EAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,IAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,EAAA,yBAAA,GAAA,EARA;AASA,UAAA,yBAAA,EAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,IAAA,KAAA,aAAA,CAAA,KAAA,EAAA,KAAA,CAAA,QAAA,EAAA,yBAAA,GAAA,EATA;AAUA,UAAA,QAAA,EAAA,QAVA;AAWA,UAAA,QAAA,EAAA,EAXA;AAYA,UAAA,WAAA,EAAA;AAZA,SAAA;AAcA;;AAEA,MAAA,QAAA,CAAA,sBAAA,CAAA,gBAAA,EAAA,OAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,gBAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,SAAA,CAAA,UAAA,CAAA;AAAA,qBAAA,CAAA,IAAA,UAAA,CAAA,EAAA,CAAA;AAAA,aAAA,CAAA;AACA,gBAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,SAAA,CAAA,UAAA,CAAA;AAAA,qBAAA,CAAA,IAAA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,QAAA,CAAA;AAAA,aAAA,CAAA;;AACA,gBACA,QAAA,GAAA,CAAA,CAAA,IACA,QAAA,GAAA,CAAA,CADA,IAEA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA,CAAA,KAAA,UAAA,CAAA,KAAA,CAHA,EAIA;AAEA,kBAAA,MAAA,GAAA,CAAA;AACA,cAAA,QAAA,CAAA,sBAAA,CAAA,WAAA,EAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,oBAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,SAAA,CACA,UAAA,CAAA;AAAA,yBAAA,CAAA,IAAA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAA,CAAA;AAAA,iBADA,CAAA;;AAIA,oBACA,UAAA,GAAA,CAAA,CAAA,IACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,CAAA,KAAA,UAAA,CAAA,KAAA,CAFA,EAGA;AACA,sBAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA,CACA,CADA,MACA;AACA,wBAAA,OAAA,UAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,QAAA,EAAA;AACA,sBAAA,MAAA,IAAA,UAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,qBAFA,MAEA;AACA,sBAAA,MAAA,IAAA,CAAA;AACA;AACA;;AAEA,kBAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,UAAA,CAAA,MAAA,CAAA;;AACA,sBAAA,UAAA,GAAA,MAAA,CAAA,aAAA,CAAA,SAAA,CACA,UAAA,CAAA;AAAA,2BAAA,CAAA,CAAA,QAAA,IAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,QAAA;AAAA,mBADA,CAAA;;AAGA,kBAAA,MAAA,CAAA,aAAA,CAAA,UAAA,EAAA,KAAA,CAAA,QAAA,IAAA;AACA,oBAAA,KAAA,EAAA,KAAA,GAAA,KAAA,GAAA,IADA;AAEA,oBAAA,KAAA,EAAA,MAFA;AAGA,oBAAA,QAAA,EAAA,QAHA;AAIA,oBAAA,QAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA;AAJA,mBAAA;;AAMA,kBAAA,MAAA,CAAA,YAAA;AACA;AACA,eA9BA;AA+BA;AACA,WA1CA;AA2CA,SA5CA,MA4CA;AACA,UAAA,MAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,gBAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,SAAA,CACA,UAAA,CAAA;AAAA,qBAAA,CAAA,IAAA,UAAA,CAAA,EAAA,CAAA;AAAA,aADA,CAAA;AAGA,gBAAA,QAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,SAAA,CACA,UAAA,CAAA;AAAA,qBAAA,CAAA,IAAA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,QAAA,CAAA;AAAA,aADA,CAAA;;AAGA,gBAAA,QAAA,GAAA,CAAA,CAAA,IAAA,QAAA,GAAA,CAAA,CAAA,EAAA;AACA,kBAAA,MAAA,GAAA,CAAA;AACA,cAAA,QAAA,CAAA,sBAAA,CAAA,WAAA,EAAA,OAAA,CAAA,UAAA,MAAA,EAAA;AACA,oBAAA,UAAA,GAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,EAAA,EAAA,SAAA,CACA,UAAA,CAAA;AAAA,yBAAA,CAAA,IAAA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,MAAA,CAAA,EAAA,EAAA,QAAA,CAAA;AAAA,iBADA,CAAA;;AAGA,oBAAA,UAAA,GAAA,CAAA,CAAA,EAAA;AACA,sBAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,EAAA,CACA,CADA,MACA;AACA,wBAAA,OAAA,UAAA,CAAA,MAAA,CAAA,KAAA,CAAA,IAAA,QAAA,EAAA;AACA,sBAAA,MAAA,IAAA,UAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AACA,qBAFA,MAEA;AACA,sBAAA,MAAA,IAAA,CAAA;AACA;AACA;AACA;;AACA,gBAAA,MAAA,CAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,UAAA,CAAA,MAAA,CAAA;;AACA,oBAAA,UAAA,GAAA,MAAA,CAAA,aAAA,CAAA,SAAA,CACA,UAAA,CAAA;AAAA,yBAAA,CAAA,CAAA,QAAA,IAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,QAAA;AAAA,iBADA,CAAA;;AAGA,gBAAA,MAAA,CAAA,aAAA,CAAA,UAAA,EAAA,KAAA,CAAA,CAAA,IAAA;AACA,kBAAA,KAAA,EAAA,IADA;AAEA,kBAAA,KAAA,EAAA,MAFA;AAGA,kBAAA,QAAA,EAAA,QAHA;AAIA,kBAAA,QAAA,EAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA;AAJA,iBAAA;;AAMA,gBAAA,MAAA,CAAA,YAAA;AACA,eAzBA;AA0BA;AACA,WApCA;AAqCA;AACA,OApFA;AAsFA,WAAA,YAAA;AAEA,KA/pBA;AAgqBA,IAAA,uBAhqBA,mCAgqBA,IAhqBA,EAgqBA,QAhqBA,EAgqBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,QAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,eAAA,GAAA,IAAA;;AACA,oBAAA,IAAA,IAAA,IAAA,CAAA,MAAA,EAAA;AACA,kBAAA,IAAA,CAAA,OAAA,CAAA,UAAA,CAAA,EAAA;AACA,wBAAA,CAAA,CAAA,WAAA,IAAA,CAAA,CAAA,eAAA,EAAA;AACA,0BAAA,CAAA,CAAA,QAAA,KAAA,MAAA,EAAA;AACA,wBAAA,QAAA,CAAA,sBAAA,CAAA,8CAAA,EAAA,OAAA,CAAA,UAAA,KAAA,EAAA,GAAA,EAAA;AACA,8BAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACA,gCACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,QAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,IACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA,KAAA,CAFA,EAGA;AACA,kCAAA,QAAA,GAAA,OAAA,CAAA,YAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AAAA,uCAAA,EAAA,CAAA,EAAA,IAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA;AAAA,+BAAA,CAAA;;AACA,kCAAA,QAAA,GAAA,OAAA,CAAA,aAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,uCAAA,IAAA,CAAA,QAAA,KAAA,CAAA,CAAA,QAAA;AAAA,+BAAA,CAAA;;AACA,8BAAA,OAAA,CAAA,QAAA,CAAA,CAAA,CAAA,KAAA,EAAA,CAAA,CAAA,KAAA,EAAA,QAAA,EAAA,QAAA,EAAA,CAAA,CAAA,QAAA,EAAA,MAAA;AACA;AACA;AACA,yBAXA;AAYA,uBAbA,MAaA;AACA,4BAAA,CAAA,CAAA,QAAA,KAAA,YAAA,EAAA;AACA,8BAAA,aAAA,GAAA,OAAA,CAAA,QAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAAA,mCAAA,CAAA,CAAA,QAAA,KAAA,CAAA,CAAA,QAAA;AAAA,2BAAA,CAAA;;AACA,8BAAA,aAAA,GAAA,CAAA,CAAA,EAAA;AACA,4BAAA,OAAA,CAAA,QAAA,CAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,kCAAA,CAAA,CAAA,QAAA,IAAA,CAAA,CAAA,QAAA,EAAA;AACA,gCAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,CAAA,UAAA,GAAA,CAAA,CAAA,CAAA,KAAA;AACA;AACA,6BAJA;AAKA,2BANA,MAMA;AACA,4BAAA,OAAA,CAAA,QAAA,CAAA,IAAA,CAAA;AACA,8BAAA,QAAA,EAAA,CAAA,CAAA,QADA;AAEA,8BAAA,UAAA,EAAA,CAAA,CAAA;AAFA,6BAAA;AAIA;AACA;;AAEA,wBAAA,QAAA,CACA,sBADA,CACA,WADA,EACA,OADA,CACA,UAAA,KAAA,EAAA;AACA,0BAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,gCAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA,EAAA,SAAA,CAAA,UAAA,CAAA;AAAA,qCAAA,CAAA,IAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,QAAA;AAAA,6BAAA,CAAA;;AACA,gCAAA,OAAA,GAAA,CAAA,CAAA,EAAA;AACA,8BAAA,OAAA,CAAA,IAAA,CAAA,KAAA,EAAA,UAAA,EAAA,IAAA;;AACA,8BAAA,OAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA,QAAA,EAAA,MAAA;;AACA,8BAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA,gBAAA;AACA,8BAAA,KAAA,CAAA,KAAA,CAAA,UAAA,GAAA,MAAA;AACA;AACA,2BARA;;AAUA,8BAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACA,gCACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,QAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,IACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA,KAAA,CAFA,EAGA;AACA,8BAAA,OAAA,CAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,KAAA;AACA;AACA,2BAPA,MAOA;AACA,gCACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,QAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA,QAAA,CADA,EAEA;AACA,8BAAA,OAAA,CAAA,IAAA,CAAA,KAAA,EAAA,OAAA,EAAA,CAAA,CAAA,KAAA;AACA;AACA;AACA,yBA1BA;AA2BA;AACA,qBA3DA,MA2DA,IAAA,CAAA,CAAA,SAAA,EAAA;AACA,sBAAA,QAAA,CAAA,sBAAA,CAAA,oDAAA,EAAA,OAAA,CAAA,UAAA,KAAA,EAAA,GAAA,EAAA;AACA,4BAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACA,8BACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,QAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,IACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA,KAAA,CAFA,EAGA;AACA,gCAAA,QAAA,GAAA,OAAA,CAAA,YAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AAAA,qCAAA,EAAA,CAAA,EAAA,IAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA;AAAA,6BAAA,CAAA;;AACA,gCAAA,QAAA,GAAA,OAAA,CAAA,aAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,qCAAA,IAAA,CAAA,QAAA,KAAA,CAAA,CAAA,QAAA;AAAA,6BAAA,CAAA;;AACA,4BAAA,OAAA,CAAA,QAAA,CAAA,CAAA,CAAA,KAAA,EAAA,CAAA,CAAA,KAAA,EAAA,QAAA,EAAA,QAAA,EAAA,CAAA,CAAA,QAAA,EAAA,MAAA;AACA;AACA;AACA,uBAXA;AAYA,qBAbA,MAaA,IAAA,CAAA,CAAA,YAAA,KAAA,IAAA,EAAA;AACA,sBAAA,QAAA,CAAA,sBAAA,CAAA,gBAAA,EAAA,OAAA,CAAA,UAAA,KAAA,EAAA,GAAA,EAAA;AACA,4BAAA,aAAA,GAAA,KAAA,CAAA,SAAA,CAAA,QAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,QAAA,CAAA,CAAA,EAAA,QAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAA,QAAA,CAAA,CAAA,EAAA,QAAA,CAAA,CAAA,EAAA,QAAA,CAAA,CAAA,CAAA;;AACA,4BAAA,aAAA,CAAA,EAAA,IAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,EAAA,CAAA,IAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACA,8BACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,EAAA,EAAA,QAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,IACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA,KAAA,CAFA,EAGA;AACA,gCAAA,QAAA,GAAA,OAAA,CAAA,YAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AAAA,qCAAA,EAAA,CAAA,EAAA,IAAA,IAAA,CAAA,KAAA,CAAA,aAAA,CAAA,EAAA,EAAA,KAAA;AAAA,6BAAA,CAAA;;AACA,gCAAA,QAAA,GAAA,OAAA,CAAA,aAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,qCAAA,IAAA,CAAA,QAAA,IAAA,CAAA,CAAA,QAAA;AAAA,6BAAA,CAAA;;AACA,4BAAA,OAAA,CAAA,QAAA,CAAA,CAAA,CAAA,KAAA,EAAA,IAAA,CAAA,KAAA,CAAA,CAAA,CAAA,KAAA,CAAA,EAAA,QAAA,EAAA,QAAA,EAAA,CAAA,CAAA,QAAA,EAAA,SAAA;AACA;AACA;AACA,uBAZA;AAaA,qBAdA,MAcA,IAAA,CAAA,CAAA,iBAAA,EAAA;AACA,sBAAA,QAAA,CAAA,sBAAA,CAAA,cAAA,EAAA,OAAA,CAAA,UAAA,KAAA,EAAA,GAAA,EAAA;AACA,4BAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA,EAAA;AACA,8BACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,QAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA,QAAA,CAAA,IACA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA,CAAA,KAAA,UAAA,CAAA,CAAA,CAAA,KAAA,CAFA,EAGA;AACA,gCAAA,QAAA,GAAA,OAAA,CAAA,YAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AAAA,qCAAA,EAAA,CAAA,EAAA,IAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,KAAA;AAAA,6BAAA,CAAA;;AACA,gCAAA,QAAA,GAAA,OAAA,CAAA,aAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,qCAAA,IAAA,CAAA,QAAA,IAAA,CAAA,CAAA,QAAA;AAAA,6BAAA,CAAA;;AACA,4BAAA,OAAA,CAAA,QAAA,CACA,CAAA,CAAA,KADA,EAEA;AACA,8BAAA,MAAA,EAAA,CAAA,CAAA,iBADA;AAEA,8BAAA,MAAA,EAAA,CAAA,CAAA,iBAFA;AAGA,8BAAA,MAAA,EAAA,CAAA,CAAA,iBAHA;AAIA,8BAAA,EAAA,EAAA,CAAA,CAAA;AAJA,6BAFA,EAOA,QAPA,EAOA,QAPA,EAOA,CAAA,CAAA,QAPA,EAOA,QAPA,EAOA,IAPA,EAOA,IAPA;AAQA;AACA;AACA,uBAlBA;AAmBA;AACA,mBA5GA;AA6GA,iBA9GA,MA8GA;AACA,kBAAA,QAAA,CACA,sBADA,CACA,WADA,EAEA,OAFA,CAEA,UAAA,KAAA,EAAA;AACA,oBAAA,QAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,0BAAA,OAAA,GAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,EAAA,EAAA,SAAA,CACA,UAAA,CAAA;AAAA,+BAAA,CAAA,IAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,EAAA,EAAA,QAAA;AAAA,uBADA,CAAA;;AAGA,0BAAA,OAAA,GAAA,CAAA,CAAA,EAAA;AACA,wBAAA,OAAA,CAAA,IAAA,CAAA,KAAA,EAAA,UAAA,EAAA,IAAA;;AACA,wBAAA,OAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,EAAA,QAAA,EAAA,MAAA;;AACA,wBAAA,KAAA,CAAA,SAAA,CAAA,GAAA,CAAA,gBAAA;AACA,wBAAA,KAAA,CAAA,KAAA,CAAA,UAAA,GAAA,MAAA;AACA;AACA,qBAVA;AAWA,mBAdA;AAeA;;AACA,qBAAA,uBAAA,IAAA,OAAA,CAAA,oBAAA,EAAA;AACA,kBAAA,gBADA,GACA,QAAA,CAAA,gBAAA,CAAA,2BAAA,uBAAA,GAAA,IAAA,CADA;AAEA,kBAAA,gBAAA,CAAA,OAAA,CAAA,UAAA,OAAA,EAAA;AACA,oBAAA,OAAA,CAAA,SAAA,CAAA,GAAA,CAAA,gBAAA;AACA,oBAAA,OAAA,CAAA,QAAA,GAAA,IAAA;AACA,mBAHA;AAIA;;AAxIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyIA,KAzyBA;AA0yBA,IAAA,OA1yBA,mBA0yBA,EA1yBA,EA0yBA,QA1yBA,EA0yBA,IA1yBA,EA0yBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,QAAA;;AACA,gBAAA,OAAA,CAAA,OAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,QAAA,GAAA,QAAA;AACA,gBAAA,OAAA,CAAA,SAAA,GAAA,IAAA;AACA,gBAAA,OAAA,CAAA,MAAA,GAAA,IAAA;AALA;AAAA,uBAMA,OAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAA,CAAA,kBAAA;AAAA,sBAAA,IAAA,UAAA,IAAA;AACA,kBAAA,OAAA,CAAA,MAAA,GAAA,IAAA;;AACA,kBAAA,OAAA,CAAA,KAAA,CAAA,oBAAA,EAAA,OAAA,CAAA,MAAA,CAAA,SAAA;AACA,iBAHA,CANA;;AAAA;AAAA;AAAA,uBAUA,OAAA,CAAA,wBAAA,CAAA,EAAA,EAAA,QAAA,EACA,IADA;AAAA,uFACA,mBAAA,EAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACA,EAAA,CAAA,IADA;AAAA;AAAA;AAAA;;AAAA;AAAA,mCAEA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA,IAAA,CAAA,OAAA,EAAA,EAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAFA;;AAAA;AAGA,4BAAA,OAAA,CAAA,MAAA,CAAA,EAAA,CAAA,IAAA,CAAA,IAAA;;AACA,4BAAA,OAAA,CAAA,KAAA,GAAA,EAAA,CAAA,IAAA,CAAA,KAAA;AACA,4BAAA,UAAA,CAAA,YAAA;AACA,8BAAA,OAAA,CAAA,GAAA,CAAA,CACA,OAAA,CAAA,WAAA,CAAA,QAAA,CADA,EAEA,OAAA,CAAA,aAAA,EAFA,CAAA,EAGA,IAHA,CAGA,kBAAA;AAAA;AAAA,oCAAA,IAAA;AAAA,oCAAA,QAAA;;AACA,gCAAA,OAAA,CAAA,cAAA,GAAA,IAAA;AACA,gCAAA,OAAA,CAAA,kBAAA,GAAA,QAAA;;AACA,gCAAA,OAAA,CAAA,uBAAA,CAAA,IAAA,EAAA,QAAA;;AACA,gCAAA,OAAA,CAAA,MAAA,GAAA,KAAA;AACA,+BARA;AASA,6BAVA,EAUA,GAVA,CAAA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA;;AAAA;AAAA;AAAA;AAAA,qBAmBA,KAnBA,CAmBA,UAAA,CAAA,EAAA;AACA,kBAAA,OAAA,CAAA,MAAA,GAAA,KAAA;AACA,iBArBA,CAVA;;AAAA;AAAA;AAAA,uBAgCA,OAAA,CAAA,uBAAA,CAAA,EAAA,EAAA,IAAA,CAAA,kBAAA;AAAA,sBAAA,IAAA,UAAA,IAAA;AACA,kBAAA,OAAA,CAAA,oBAAA,GAAA,EAAA;AACA,sBAAA,MAAA,GAAA,IAAA,CAAA,MAAA;AACA,sBAAA,qBAAA,GAAA,IAAA;;AACA,uBAAA,IAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,MAAA,EAAA,GAAA,EAAA,EAAA;AACA,wBAAA,OAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA,MAAA,SAAA,EAAA;AACA,sBAAA,qBAAA,GAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA;AACA,sBAAA,OAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA,IAAA;AACA,wBAAA,IAAA,EAAA,EADA;AAEA,wBAAA,IAAA,EAAA,EAFA;AAGA,wBAAA,aAAA,EAAA,EAHA;AAIA,wBAAA,cAAA,EAAA,IAAA,CAAA,GAAA,CAAA,CAAA;AAJA,uBAAA;AAMA;;AACA,oBAAA,OAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA,EAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA;;AACA,wBAAA,IAAA,CAAA,GAAA,CAAA,CAAA,WAAA,EAAA;AACA,0BAAA,IAAA,CAAA,GAAA,CAAA,CAAA,WAAA,IAAA,OAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA,EAAA,aAAA,CAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,WAAA,MAAA,CAAA,CAAA,EAAA;AACA,wBAAA,OAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA,EAAA,aAAA,CAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,WAAA;AACA;;AACA,0BAAA,OAAA,CAAA,8BAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,WAAA,MAAA,SAAA,EAAA;AACA,wBAAA,OAAA,CAAA,8BAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,WAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA,CAAA;AACA,uBAFA,MAEA;AACA,4BAAA,OAAA,CAAA,8BAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,WAAA,EAAA,OAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA,MAAA,CAAA,CAAA,EAAA;AACA,0BAAA,OAAA,CAAA,8BAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,WAAA,EAAA,IAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA;AACA;AACA;AACA;;AACA,wBAAA,IAAA,CAAA,GAAA,CAAA,CAAA,IAAA,KAAA,WAAA,EAAA;AACA,sBAAA,OAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA,EAAA,IAAA,IAAA,MAAA,IAAA,CAAA,GAAA,CAAA,CAAA,WAAA,GAAA,GAAA;AACA,qBAFA,MAEA;AACA,sBAAA,OAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,GAAA,CAAA,CAAA,cAAA,EAAA,IAAA,IAAA,IAAA,CAAA,GAAA,CAAA,CAAA,IAAA;AACA;AACA;AACA,iBAjCA,CAhCA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkEA,KA52BA;AA82BA,IAAA,UA92BA,sBA82BA,CA92BA,EA82BA,SA92BA,EA82BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,eAAA,GAAA,CAAA;AACA,gBAAA,OAAA,CAAA,YAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,aAAA,GAAA,EAAA;AACA,gBAAA,OAAA,CAAA,YAAA,GAAA,EAAA;AACA,gBAAA,CAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,kBAAA,OAAA,CAAA,YAAA,CAAA,IAAA,CAAA,GAAA;;AACA,kBAAA,GAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,oBAAA,OAAA,CAAA,aAAA,CAAA,IAAA,CAAA,GAAA;;AACA,oBAAA,GAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,GAAA,EAAA;AACA,sBAAA,OAAA,CAAA,YAAA,CAAA,IAAA,iCAAA,GAAA;AAAA,wBAAA,GAAA,EAAA,GAAA,CAAA;AAAA;AACA,qBAFA;AAGA,mBALA;AAMA,iBARA;AASA,gBAAA,UAAA,uEAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,0BAAA,SADA,GACA,QAAA,CAAA,sBAAA,CAAA,WAAA,CADA;AAEA,0BAAA,UAFA,GAEA,QAAA,CAAA,sBAAA,CAAA,YAAA,CAFA;AAGA,0BAAA,SAHA,GAGA,QAAA,CAAA,sBAAA,CAAA,WAAA,CAHA;AAIA,0BAAA,QAJA,GAIA,CAJA,EAKA,QALA,GAKA,CALA;AAAA;AAAA,iCAMA,SAAA,CAAA,OAAA;AAAA,iGAAA,mBAAA,EAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA,0CAAA,EAAA,CAAA,OAAA,GAAA,CAAA,EAAA;AACA,6CAAA,MAAA,GAAA,CAAA,EAAA,MAAA,GAAA,EAAA,CAAA,OAAA,EAAA,MAAA,EAAA,EAAA;AACA,8CAAA,UAAA,CAAA,QAAA,CAAA,IAAA,UAAA,CAAA,QAAA,CAAA,CAAA,OAAA,GAAA,CAAA,EAAA;AAAA,mEAEA,MAFA;AAMA,kDAAA,KAAA,GAAA,SAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,kDAAA,GAAA,GAAA;AACA,gDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CADA;AAEA,gDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAFA;AAGA,gDAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAHA;AAIA,gDAAA,YAAA,EAAA,KAAA,CAAA,CAAA,CAJA;AAKA,gDAAA,kBAAA,EAAA,KAAA,CAAA,CAAA,CALA;AAMA,gDAAA,aAAA,EAAA,KAAA,CAAA,CAAA,CANA;AAOA,gDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CAPA;AAQA,gDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CARA;AASA,gDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CATA;AAUA,gDAAA,aAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAA,CAAA,0BAAA,CAVA;AAWA,gDAAA,WAAA,EAAA,KAXA;AAYA,gDAAA,OAAA,EAAA,EAZA;AAaA,gDAAA,KAAA,EAAA,EAbA;AAcA,gDAAA,KAAA,EAAA;AAdA,+CAAA,CAPA,CAuBA;;AAAA;AACA,kDAAA,GAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,qDAAA,IAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA;AACA,kDAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AAAA,oDAAA,YAAA,EAAA;AAAA,mDAAA;AACA;;AACA,gDAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,aAAA,EAAA,GAAA,CAAA,kBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,sDAAA,CAAA,uBAAA,EAAA,YAAA,EAAA,QAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA;AAAA;;AACA,oEAAA,GAAA,CAAA,OAAA,EAAA,IAAA,wCAAA,GAAA,CAAA,IAAA;AACA,mDAFA,MAEA;AAAA;;AACA,qEAAA,GAAA,CAAA,OAAA,EAAA,IAAA,yCAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,kDAAA,GAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,GAAA,GAAA,CAAA,aAAA,CAAA,YAAA,GAAA,GAAA,CAAA,aAAA,CAAA,IAAA;AACA,kDAAA,GAAA,CAAA,aAAA,CAAA,IAAA,IAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAfA,EAgBA,KAhBA,CAgBA,UAAA,CAAA,EAAA;AACA,kDAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EADA,CAEA;AACA,iDAnBA,EAoBA,OApBA,CAoBA,YAAA,CACA;AACA,iDAtBA;AAuBA;;AACA,8CAAA,OAAA,CAAA,aAAA,CAAA,IAAA,CAAA,GAAA;;AACA,8CAAA,QAAA;AArDA;;AACA,iDACA,MADA,GACA,CADA,EAEA,MAAA,GAAA,UAAA,CAAA,QAAA,CAAA,CAAA,OAFA,EAGA,MAAA,EAHA,EAIA;AAAA,oDAHA,MAGA;AAiDA;;AACA,4CAAA,QAAA;AACA,2CAxDA,MAwDA;AACA,gDACA,UAAA,CAAA,QAAA,CAAA,IACA,UAAA,CAAA,QAAA,CAAA,CAAA,SAAA,CAAA,QAAA,CAAA,WAAA,CAFA,EAGA;AAAA;AACA,oDAAA,KAAA,GAAA,UAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,oDAAA,GAAA,GAAA;AACA,kDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CADA;AAEA,kDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAFA;AAGA,kDAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAHA;AAIA,kDAAA,YAAA,EAAA,KAAA,CAAA,CAAA,CAJA;AAKA,kDAAA,kBAAA,EAAA,KAAA,CAAA,CAAA,CALA;AAMA,kDAAA,aAAA,EAAA,KAAA,CAAA,CAAA,CANA;AAOA,kDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CAPA;AAQA,kDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CARA;AASA,kDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CATA;AAUA,kDAAA,aAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAA,CAAA,0BAAA,CAVA;AAWA,kDAAA,WAAA,EAAA,KAXA;AAYA,kDAAA,OAAA,EAAA,EAZA;AAaA,kDAAA,KAAA,EAAA,EAbA;AAcA,kDAAA,KAAA,EAAA;AAdA,iDAAA,CAFA,CAkBA;;AAAA;AACA,oDAAA,GAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,uDAAA,IAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA;AACA,oDAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AAAA,sDAAA,YAAA,EAAA;AAAA,qDAAA;AACA;;AACA,kDAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,aAAA,EAAA,GAAA,CAAA,kBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,wDAAA,CAAA,uBAAA,EAAA,YAAA,EAAA,QAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA;AAAA;;AACA,uEAAA,GAAA,CAAA,OAAA,EAAA,IAAA,yCAAA,GAAA,CAAA,IAAA;AACA,qDAFA,MAEA;AAAA;;AACA,uEAAA,GAAA,CAAA,OAAA,EAAA,IAAA,yCAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,oDAAA,GAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,GAAA,GAAA,CAAA,aAAA,CAAA,YAAA,GAAA,GAAA,CAAA,aAAA,CAAA,IAAA;AACA,oDAAA,GAAA,CAAA,aAAA,CAAA,IAAA,IAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAfA,EAgBA,KAhBA,CAgBA,UAAA,CAAA,EAAA;AACA,oDAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EADA,CAEA;AACA,mDAnBA,EAoBA,OApBA,CAoBA,YAAA,CACA;AACA,mDAtBA;AAuBA;;AACA,gDAAA,OAAA,CAAA,aAAA,CAAA,IAAA,CAAA,GAAA;;AACA,gDAAA,QAAA;AAhDA;AAiDA,6CApDA,MAoDA;AACA,kDAAA,UAAA,CAAA,QAAA,CAAA,EAAA;AAAA,yEAEA,MAFA;AAMA,sDAAA,KAAA,GAAA,SAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,sDAAA,GAAA,GAAA;AACA,oDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CADA;AAEA,oDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAFA;AAGA,oDAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAHA;AAIA,oDAAA,YAAA,EAAA,KAAA,CAAA,CAAA,CAJA;AAKA,oDAAA,kBAAA,EAAA,KAAA,CAAA,CAAA,CALA;AAMA,oDAAA,aAAA,EAAA,KAAA,CAAA,CAAA,CANA;AAOA,oDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CAPA;AAQA,oDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CARA;AASA,oDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CATA;AAUA,oDAAA,aAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAA,CAAA,0BAAA,CAVA;AAWA,oDAAA,WAAA,EAAA,KAXA;AAYA,oDAAA,OAAA,EAAA,EAZA;AAaA,oDAAA,KAAA,EAAA,EAbA;AAcA,oDAAA,KAAA,EAAA;AAdA,mDAAA,CAPA,CAuBA;;AAAA;AACA,sDAAA,GAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,yDAAA,IAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA;AACA,sDAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AAAA,wDAAA,YAAA,EAAA;AAAA,uDAAA;AACA;;AACA,oDAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,aAAA,EAAA,GAAA,CAAA,kBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,0DAAA,CAAA,uBAAA,EAAA,YAAA,EAAA,QAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA;AAAA;;AACA,yEAAA,GAAA,CAAA,OAAA,EAAA,IAAA,yCAAA,GAAA,CAAA,IAAA;AACA,uDAFA,MAEA;AAAA;;AACA,yEAAA,GAAA,CAAA,OAAA,EAAA,IAAA,yCAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,sDAAA,GAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,GAAA,GAAA,CAAA,aAAA,CAAA,YAAA,GAAA,GAAA,CAAA,aAAA,CAAA,IAAA;AACA,sDAAA,GAAA,CAAA,aAAA,CAAA,IAAA,IAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAfA,EAgBA,KAhBA,CAgBA,UAAA,CAAA,EAAA;AACA,sDAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EADA,CAEA;AACA,qDAnBA,EAoBA,OApBA,CAoBA,YAAA,CACA;AACA,qDAtBA;AAuBA;;AACA,kDAAA,OAAA,CAAA,aAAA,CAAA,IAAA,CAAA,GAAA;;AACA,kDAAA,QAAA;AArDA;;AACA,qDACA,MADA,GACA,CADA,EAEA,MAAA,GAAA,UAAA,CAAA,QAAA,CAAA,CAAA,OAFA,EAGA,MAAA,EAHA,EAIA;AAAA,yDAHA,MAGA;AAiDA;;AAEA,gDAAA,QAAA;AACA;AACA;AACA;AACA;AACA,uCA7KA,MA6KA;AACA,4CAAA,EAAA,CAAA,SAAA,CAAA,QAAA,CAAA,WAAA,CAAA,EAAA;AACA,0CAAA,KADA,GACA,EAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CADA;AAEA,0CAAA,GAFA,GAEA;AACA,4CAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CADA;AAEA,4CAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAFA;AAGA,4CAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAHA;AAIA,4CAAA,YAAA,EAAA,KAAA,CAAA,CAAA,CAJA;AAKA,4CAAA,kBAAA,EAAA,KAAA,CAAA,CAAA,CALA;AAMA,4CAAA,aAAA,EAAA,KAAA,CAAA,CAAA,CANA;AAOA,4CAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CAPA;AAQA,4CAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CARA;AASA,4CAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CATA;AAUA,4CAAA,aAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAA,CAAA,0BAAA,CAVA;AAWA,4CAAA,WAAA,EAAA,KAXA;AAYA,4CAAA,OAAA,EAAA,EAZA;AAaA,4CAAA,KAAA,EAAA,EAbA;AAcA,4CAAA,KAAA,EAAA;AAdA,2CAFA,EAkBA;;AAAA;AACA,8CAAA,GAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,iDAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA;AACA,8CAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AAAA,gDAAA,YAAA,EAAA;AAAA,+CAAA;AACA;;AACA,4CAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,aAAA,EAAA,GAAA,CAAA,kBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,kDAAA,CAAA,uBAAA,EAAA,YAAA,EAAA,QAAA,CAAA,GAAA,CAAA,OAAA,CAAA,EAAA;AAAA;;AACA,iEAAA,GAAA,CAAA,OAAA,EAAA,IAAA,yCAAA,GAAA,CAAA,IAAA;AACA,+CAFA,MAEA;AAAA;;AACA,iEAAA,GAAA,CAAA,OAAA,EAAA,IAAA,yCAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,8CAAA,GAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,GAAA,GAAA,CAAA,aAAA,CAAA,YAAA,GAAA,GAAA,CAAA,aAAA,CAAA,IAAA;AACA,8CAAA,GAAA,CAAA,aAAA,CAAA,IAAA,IAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAfA,EAgBA,KAhBA,CAgBA,UAAA,CAAA,EAAA;AACA,8CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EADA,CAEA;AACA,6CAnBA,EAoBA,OApBA,CAoBA,YAAA,CACA;AACA,6CAtBA;AAuBA;;AACA,0CAAA,OAAA,CAAA,aAAA,CAAA,IAAA,CAAA,GAAA;AACA,yCAhDA,MAgDA;AACA,+CAAA,OAAA,GAAA,CAAA,EAAA,OAAA,GAAA,EAAA,CAAA,OAAA,EAAA,OAAA,EAAA,EAAA;AACA,gDAAA,UAAA,CAAA,QAAA,CAAA,CAAA,OAAA,GAAA,CAAA,EAAA;AAAA,uEAEA,OAFA;AAMA,oDAAA,KAAA,GAAA,SAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,oDAAA,GAAA,GAAA;AACA,kDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CADA;AAEA,kDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAFA;AAGA,kDAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAHA;AAIA,kDAAA,YAAA,EAAA,KAAA,CAAA,CAAA,CAJA;AAKA,kDAAA,kBAAA,EAAA,KAAA,CAAA,CAAA,CALA;AAMA,kDAAA,aAAA,EAAA,KAAA,CAAA,CAAA,CANA;AAOA,kDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CAPA;AAQA,kDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CARA;AASA,kDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CATA;AAUA,kDAAA,aAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAA,CAAA,0BAAA,CAVA;AAWA,kDAAA,WAAA,EAAA,KAXA;AAYA,kDAAA,OAAA,EAAA,EAZA;AAaA,kDAAA,KAAA,EAAA,EAbA;AAcA,kDAAA,KAAA,EAAA;AAdA,iDAAA,CAPA,CAuBA;;AAAA;AACA,oDAAA,GAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,uDAAA,IAAA,GAAA,GAAA,CAAA,EAAA,GAAA,GAAA,SAAA,EAAA,GAAA,EAAA,EAAA;AACA,oDAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AAAA,sDAAA,YAAA,EAAA;AAAA,qDAAA;AACA;;AACA,kDAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,aAAA,EAAA,GAAA,CAAA,kBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,wDAAA,CAAA,uBAAA,EAAA,YAAA,EAAA,QAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA;AAAA;;AACA,uEAAA,GAAA,CAAA,OAAA,EAAA,IAAA,yCAAA,GAAA,CAAA,IAAA;AACA,qDAFA,MAEA;AAAA;;AACA,wEAAA,GAAA,CAAA,OAAA,EAAA,IAAA,0CAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,oDAAA,GAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,GAAA,GAAA,CAAA,aAAA,CAAA,YAAA,GAAA,GAAA,CAAA,aAAA,CAAA,IAAA;AACA,oDAAA,GAAA,CAAA,aAAA,CAAA,IAAA,IAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAfA,EAgBA,KAhBA,CAgBA,UAAA,CAAA,EAAA;AACA,oDAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EADA,CAEA;AACA,mDAnBA,EAoBA,OApBA,CAoBA,YAAA,CACA;AACA,mDAtBA;AAuBA;;AACA,gDAAA,OAAA,CAAA,aAAA,CAAA,IAAA,CAAA,GAAA;;AACA,gDAAA,QAAA;AArDA;;AACA,mDACA,OADA,GACA,CADA,EAEA,OAAA,GAAA,UAAA,CAAA,QAAA,CAAA,CAAA,OAFA,EAGA,OAAA,EAHA,EAIA;AAAA,uDAHA,OAGA;AAiDA;;AACA,8CAAA,QAAA;AACA,6CAxDA,MAwDA;AACA,kDACA,UAAA,CAAA,QAAA,CAAA,IACA,UAAA,CAAA,QAAA,CAAA,CAAA,SAAA,CAAA,QAAA,CAAA,WAAA,CAFA,EAGA;AAAA;AACA,sDAAA,KAAA,GAAA,UAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,sDAAA,GAAA,GAAA;AACA,oDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CADA;AAEA,oDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAFA;AAGA,oDAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAHA;AAIA,oDAAA,YAAA,EAAA,KAAA,CAAA,CAAA,CAJA;AAKA,oDAAA,kBAAA,EAAA,KAAA,CAAA,CAAA,CALA;AAMA,oDAAA,aAAA,EAAA,KAAA,CAAA,CAAA,CANA;AAOA,oDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CAPA;AAQA,oDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CARA;AASA,oDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CATA;AAUA,oDAAA,aAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAA,CAAA,0BAAA,CAVA;AAWA,oDAAA,WAAA,EAAA,KAXA;AAYA,oDAAA,OAAA,EAAA,EAZA;AAaA,oDAAA,KAAA,EAAA,EAbA;AAcA,oDAAA,KAAA,EAAA;AAdA,mDAAA,CAFA,CAkBA;;AAAA;AACA,sDAAA,GAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,yDAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,SAAA,EAAA,IAAA,EAAA,EAAA;AACA,sDAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AAAA,wDAAA,YAAA,EAAA;AAAA,uDAAA;AACA;;AACA,oDAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,aAAA,EAAA,GAAA,CAAA,kBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,0DAAA,CAAA,uBAAA,EAAA,YAAA,EAAA,QAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA;AAAA;;AACA,0EAAA,GAAA,CAAA,OAAA,EAAA,IAAA,0CAAA,GAAA,CAAA,IAAA;AACA,uDAFA,MAEA;AAAA;;AACA,0EAAA,GAAA,CAAA,OAAA,EAAA,IAAA,0CAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,sDAAA,GAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,GAAA,GAAA,CAAA,aAAA,CAAA,YAAA,GAAA,GAAA,CAAA,aAAA,CAAA,IAAA;AACA,sDAAA,GAAA,CAAA,aAAA,CAAA,IAAA,IAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAfA,EAgBA,KAhBA,CAgBA,UAAA,CAAA,EAAA;AACA,sDAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EADA,CAEA;AACA,qDAnBA,EAoBA,OApBA,CAoBA,YAAA,CACA;AACA,qDAtBA;AAuBA;;AACA,kDAAA,OAAA,CAAA,aAAA,CAAA,IAAA,CAAA,GAAA;;AACA,kDAAA,QAAA;AAhDA;AAiDA,+CApDA,MAoDA;AACA,oDAAA,UAAA,CAAA,QAAA,CAAA,EAAA;AAAA,2EAEA,OAFA;AAMA,wDAAA,KAAA,GAAA,SAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,CAAA;AACA,wDAAA,GAAA,GAAA;AACA,sDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CADA;AAEA,sDAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAFA;AAGA,sDAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAHA;AAIA,sDAAA,YAAA,EAAA,KAAA,CAAA,CAAA,CAJA;AAKA,sDAAA,kBAAA,EAAA,KAAA,CAAA,CAAA,CALA;AAMA,sDAAA,aAAA,EAAA,KAAA,CAAA,CAAA,CANA;AAOA,sDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CAPA;AAQA,sDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CARA;AASA,sDAAA,eAAA,EAAA,KAAA,CAAA,CAAA,CATA;AAUA,sDAAA,aAAA,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,OAAA,CAAA,0BAAA,CAVA;AAWA,sDAAA,WAAA,EAAA,KAXA;AAYA,sDAAA,OAAA,EAAA,EAZA;AAaA,sDAAA,KAAA,EAAA,EAbA;AAcA,sDAAA,KAAA,EAAA;AAdA,qDAAA,CAPA,CAuBA;;AAAA;AACA,wDAAA,GAAA,CAAA,QAAA,KAAA,QAAA,EAAA;AACA,2DAAA,IAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,SAAA,EAAA,IAAA,EAAA,EAAA;AACA,wDAAA,GAAA,CAAA,KAAA,CAAA,IAAA,CAAA;AAAA,0DAAA,YAAA,EAAA;AAAA,yDAAA;AACA;;AACA,sDAAA,mBAAA,CAAA,qBAAA,CAAA,GAAA,CAAA,YAAA,EAAA,GAAA,CAAA,aAAA,EAAA,GAAA,CAAA,kBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AACA,4DAAA,CAAA,uBAAA,EAAA,YAAA,EAAA,QAAA,CAAA,CAAA,CAAA,OAAA,CAAA,EAAA;AAAA;;AACA,4EAAA,GAAA,CAAA,OAAA,EAAA,IAAA,0CAAA,GAAA,CAAA,IAAA;AACA,yDAFA,MAEA;AAAA;;AACA,4EAAA,GAAA,CAAA,OAAA,EAAA,IAAA,0CAAA,GAAA,CAAA,IAAA,CAAA,IAAA;AACA;;AACA,wDAAA,GAAA,CAAA,WAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,GAAA,GAAA,CAAA,aAAA,CAAA,YAAA,GAAA,GAAA,CAAA,aAAA,CAAA,IAAA;AACA,wDAAA,GAAA,CAAA,aAAA,CAAA,IAAA,IAAA,CAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAfA,EAgBA,KAhBA,CAgBA,UAAA,CAAA,EAAA;AACA,wDAAA,OAAA,CAAA,GAAA,CAAA,CAAA,EADA,CAEA;AACA,uDAnBA,EAoBA,OApBA,CAoBA,YAAA,CACA;AACA,uDAtBA;AAuBA;;AACA,oDAAA,OAAA,CAAA,aAAA,CAAA,IAAA,CAAA,GAAA;;AACA,oDAAA,QAAA;AArDA;;AACA,uDACA,OADA,GACA,CADA,EAEA,OAAA,GAAA,UAAA,CAAA,QAAA,CAAA,CAAA,OAFA,EAGA,OAAA,EAHA,EAIA;AAAA,2DAHA,OAGA;AAiDA;;AACA,kDAAA,QAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AA5YA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAA;;AAAA;AAAA;AAAA;AAAA,8BANA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAA,IAoZA,GApZA,CAAA;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmaA,KAjxCA;AAkxCA,IAAA,MAlxCA,kBAkxCA,CAlxCA,EAkxCA;AACA,WAAA,YAAA,GAAA,CAAA;AACA,WAAA,kBAAA,GAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;;AACA,UAAA,KAAA,YAAA,CAAA,MAAA,IAAA,CAAA,IAAA,CAAA,KAAA,WAAA,EAAA;AACA,aAAA,YAAA,GAAA,CAAA;AAAA,UAAA,EAAA,EAAA,KAAA,YAAA;AAAA,SAAA,CAAA;AACA;AACA,KAxxCA;AAyxCA,IAAA,YAzxCA,wBAyxCA,EAzxCA,EAyxCA;AACA,aAAA,EAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,GACA,CADA,GAEA,EAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,GACA,CADA,GAEA,CAJA;AAKA,KA/xCA;AAgyCA,IAAA,YAhyCA,wBAgyCA,EAhyCA,EAgyCA;AACA,UAAA,KAAA,GAAA,KAAA,YAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,GAAA,KAAA,EAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,UAAA,aAAA,GAAA,EAAA,CAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,QAAA,CAAA,MAAA,IAAA,CAAA;AAAA,OAAA,CAAA;AACA,aAAA,EAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,CAAA,MAAA,IAAA,CAAA,GACA,EAAA,CAAA,QAAA,CAAA,MADA,GAEA,EAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,CAAA,MAAA,GAAA,CAAA,GACA,aAAA,CAAA,MAAA,GAAA,KAAA,CAAA,MADA,GAEA,CAJA;AAKA,KAxyCA;AAyyCA,IAAA,aAzyCA,yBAyyCA,EAzyCA,EAyyCA;AACA,aAAA,EAAA,CAAA,QAAA,CAAA,MAAA,IAAA,CAAA,IAAA,KAAA,YAAA,CAAA,MAAA,IAAA,CAAA,GACA,CADA,GAEA,EAAA,CAAA,QAAA,CAAA,MAAA,IAAA,CAAA,IAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,GACA,CADA,GAEA,CAJA;AAKA,KA/yCA;AAgzCA,IAAA,aAhzCA,yBAgzCA,EAhzCA,EAgzCA;AACA,aAAA,EAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,GAAA,EAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA;AACA,KAlzCA;AAmzCA,IAAA,iBAnzCA,6BAmzCA,EAnzCA,EAmzCA;AACA,aAAA,EAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,GACA,EADA,GAEA,EAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,IAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,GACA,WADA,GAEA,WAJA;AAKA,KAzzCA;AA0zCA,IAAA,kBA1zCA,8BA0zCA,EA1zCA,EA0zCA;AACA,aAAA,EAAA,CAAA,QAAA,CAAA,MAAA,IAAA,CAAA,IAAA,KAAA,YAAA,CAAA,MAAA,IAAA,CAAA,GACA,WADA,GAEA,EAAA,CAAA,QAAA,CAAA,MAAA,IAAA,CAAA,IAAA,KAAA,YAAA,CAAA,MAAA,GAAA,CAAA,GACA,WADA,GAEA,EAJA;AAKA,KAh0CA;AAi0CA,IAAA,UAj0CA,sBAi0CA,IAj0CA,EAi0CA;AACA,UAAA,CAAA,IAAA,CAAA,QAAA,IAAA,IAAA,CAAA,QAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,eAAA,IAAA,CAAA,QAAA;AACA,eAAA;AACA,UAAA,EAAA,EAAA,IAAA,CAAA,EADA;AAEA,UAAA,KAAA,EAAA,KAAA,OAAA,CAAA;AACA,YAAA,MAAA,EAAA,IAAA,CAAA,MADA;AAEA,YAAA,MAAA,EAAA,IAAA,CAAA,MAFA;AAGA,YAAA,MAAA,EAAA,IAAA,CAAA;AAHA,WAAA;AAFA,SAAA;AAQA;;AACA,aAAA;AACA,QAAA,EAAA,EAAA,IAAA,CAAA,EADA;AAEA,QAAA,KAAA,EAAA,KAAA,OAAA,CAAA;AACA,UAAA,MAAA,EAAA,IAAA,CAAA,MADA;AAEA,UAAA,MAAA,EAAA,IAAA,CAAA,MAFA;AAGA,UAAA,MAAA,EAAA,IAAA,CAAA;AAHA,SAAA,CAFA;AAOA,QAAA,QAAA,EAAA,IAAA,CAAA,QAAA,IAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,GAAA,IAAA,CAAA,QAAA,GAAA;AAPA,OAAA;AASA,KAt1CA;AAu1CA,IAAA,oBAv1CA,gCAu1CA,KAv1CA,EAu1CA,KAv1CA,EAu1CA,QAv1CA,EAu1CA,WAv1CA,EAu1CA,QAv1CA,EAu1CA,QAv1CA,EAu1CA;AACA;AAEA,UAAA,KAAA,8BAAA,CAAA,QAAA,MAAA,SAAA,EAAA;AACA,eAAA,KAAA;AACA;;AACA,UAAA,OAAA,GAAA,KAAA,8BAAA,CAAA,QAAA,CAAA;;AACA,WAAA,IAAA,WAAA,IAAA,OAAA,EAAA;AACA,YAAA,eAAA,GAAA,KAAA,oBAAA,CAAA,OAAA,CAAA,WAAA,CAAA,CAAA;AACA,YAAA,UAAA,GAAA,eAAA,CAAA,IAAA;;AAFA,mDAGA,eAAA,CAAA,aAHA;AAAA;;AAAA;AAGA,8DAAA;AAAA;;AAAA,gBAAA,YAAA;AACA,gBAAA,UAAA,GAAA,KAAA,0BAAA,CAAA,YAAA,CAAA;;AACA,gBAAA,IAAA,GAAA,UAAA,oDAAA,KAAA,aAAA,CAAA,UAAA,CAAA,qFAAA,uBAAA,KAAA,CAAA,QAAA,CAAA,2DAAA,uBAAA,KAAA,yEAAA,CAAA,CAAA;;AACA,gBAAA,CAAA,IAAA,EAAA;AACA,mBAAA,MAAA;AACA;;AACA,YAAA,IAAA,GAAA,KAAA,CAAA,IAAA,CAAA,GAAA,CAAA,GAAA,IAAA;AACA,YAAA,UAAA,GAAA,UAAA,CAAA,OAAA,CAAA,MAAA,YAAA,GAAA,GAAA,EAAA,IAAA,CAAA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;;AAYA,YAAA,GAAA,GAAA,IAAA,CAAA,UAAA,CAAA,CAZA,CAcA;;AACA,aAAA,IAAA,CAAA,QAAA,CAAA,cAAA,CAAA,IAAA,CAAA,SAAA,CAAA;AACA,mBAAA,KADA;AAEA,sBAAA,eAAA,CAAA,cAAA,CAAA,QAAA;AAFA,SAAA,CAAA,CAAA,EAGA,OAHA,EAGA,GAHA;AAKA,aAAA,QAAA,CAAA,KAAA,EAAA,GAAA,EAAA,QAAA,EAAA,KAAA,0BAAA,CAAA,eAAA,CAAA,cAAA,CAAA,EAAA,eAAA,CAAA,cAAA,EAAA,QAAA;AACA;AACA,KAp3CA;AAq3CA,IAAA,UAr3CA,sBAq3CA,OAr3CA,EAq3CA;AACA,WAAA,gBAAA,CAAA,IAAA,CAAA,OAAA,EAAA,QAAA;AACA,KAv3CA;AAw3CA,IAAA,iBAx3CA,qCAw3CA;AAAA,UAAA,MAAA,UAAA,MAAA;AAAA,UAAA,MAAA,UAAA,MAAA;AAAA,UAAA,MAAA,UAAA,MAAA;AAAA,UAAA,IAAA,UAAA,IAAA;AAAA,UAAA,QAAA,UAAA,QAAA;;AACA,UAAA,MAAA,EAAA;AACA,eAAA,KAAA,OAAA,CAAA;AAAA,UAAA,MAAA,EAAA,MAAA;AAAA,UAAA,MAAA,EAAA,MAAA;AAAA,UAAA,MAAA,EAAA;AAAA,SAAA,CAAA;AACA;;AACA,UAAA,QAAA,EAAA;AACA,eAAA,QAAA;AACA;;AACA,aAAA,IAAA;AACA;AAh4CA;AAjEA,CAAA","sourcesContent":["<script>\r\nimport Service from \"@/modules/report/reportService\";\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport Checkbox from \"vue-material-checkbox\";\r\n\r\nconst OKED_API_URL = 'reestr/info-oked'\r\nexport default {\r\n  props: {\r\n    isGenerated: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  components: { Checkbox },\r\n  data() {\r\n    return {\r\n      lastReportData: [],\r\n      lastReportDataRows: [],\r\n      lastReportFormulas: [],\r\n      debounce: null,\r\n      // OKED VARIABLES\r\n      okeds: [],\r\n      hasNextPageOked: false,\r\n      isLoadingOked: false,\r\n      okedSearchPayload: {},\r\n      // ----------------\r\n      f1Ids: [],\r\n      f2Ids: [],\r\n      fRowId: null,\r\n      tableId: null,\r\n      tableInfo: {},\r\n      reportId: null,\r\n      // getName: getName,\r\n      selectedColumns: [],\r\n      selectedRows: [],\r\n\r\n      firstColumns: [],\r\n      secondColumns: [],\r\n      thirdColumns: [],\r\n\r\n      thirdTrIdData: [],\r\n      currentRowId: null,\r\n      invalidEntries: 0,\r\n      currentItemData: [],\r\n      showData: [],\r\n      loader: false,\r\n      showResult: false,\r\n      report: {},\r\n      table: {},\r\n      formulas: [],\r\n      currentPosition: {\r\n        rowIndex: null,\r\n        columnIndex: null,\r\n        rowId: null,\r\n        columnId: null,\r\n      },\r\n      docTableFormulasList: {},\r\n      docTableFormulasListenColumnId: {},\r\n      trColumnIdOnDocColumnIdMap: {},\r\n    };\r\n  },\r\n  watch: {\r\n    thirdTrIdData: function (newThirdTrIdData) {\r\n      if (typeof newThirdTrIdData === 'object' && newThirdTrIdData.length > 0) {\r\n        let length = newThirdTrIdData.length;\r\n        for (let i = 0; i < length; i++) {\r\n          this.trColumnIdOnDocColumnIdMap[newThirdTrIdData[i].columnId] = i\r\n        }\r\n      }\r\n    },\r\n  },\r\n  methods: {\r\n    getColumnData(i) {\r\n      let found = this.showData.find((e) => e.columnId == i.columnId)\r\n      if (found) {\r\n        return found.columnData\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n    // DYNAMIC_REFERENCES METHODS\r\n    getRandomInt() {\r\n      let number = Math.floor(Math.random() * 10000000);\r\n      let bool = true\r\n      this.selectedRows.find(el => {\r\n        if (el.id == number) {\r\n          bool = false\r\n        } else if (el.id == number) {\r\n          bool = false\r\n        }\r\n        return bool\r\n      })\r\n      if (bool) {\r\n        return number;\r\n      } else {\r\n        this.getRandomInt()\r\n      }\r\n\r\n    },\r\n    async addNewRow() {\r\n      await this.selectedRows.push({ id: this.getRandomInt() })\r\n      await this.setDocumentColumnValues(this.lastReportData, this.lastReportFormulas)\r\n    },\r\n    async closeReport() {\r\n      this.$emit(\"closedReportLoader\");\r\n      this.cnf().then(async (rs) => {\r\n        if (rs.value) {\r\n          this.$emit('save', true)\r\n        }\r\n      });\r\n    },\r\n    stopFormingRows() {\r\n      Service.stopFormingTheReport(this.reportId)\r\n          .then(async (rs) => {\r\n            this.$set(this.tableInfo, 'hasDynamicRows', false)\r\n            // await this.deleteSuccess();\r\n          })\r\n          .catch((err) => {\r\n            // this.catchErr(err);\r\n          });\r\n    },\r\n    async deleteRow(index, data) {\r\n      let findElement = this.lastReportDataRows.findIndex(el => el.id == data.id)\r\n      if (findElement > -1) {\r\n        this.cnf().then(async (rs) => {\r\n          if (rs.value) {\r\n            await Service.deleteRowId(data.id, this.reportId)\r\n                .then(async (rs) => {\r\n                  // await this.deleteSuccess();\r\n                  this.selectedRows.splice(index, 1)\r\n                  await this.$forceUpdate()\r\n                  await this.resetIndex()\r\n                  await this.setDocumentColumnValues(this.lastReportData.filter(e => e.rowId != data.id), this.lastReportFormulas)\r\n                })\r\n                .catch((err) => {\r\n                  // this.catchErr(err);\r\n                })\r\n                .finally(async () => {\r\n                  await this.getById(this.tableId, this.reportId, this.tableInfo)\r\n                })\r\n            ;\r\n          }\r\n        });\r\n      } else {\r\n        this.cnf().then(async (rs) => {\r\n          if (rs.value) {\r\n            let newThirdTrIdData = []\r\n            this.thirdTrIdData = this.thirdTrIdData.map((e) => {\r\n              e.value = e.value.filter(d => {\r\n                if (d && d.rowId != data.id) {\r\n                  if (d.typeCode === \"BOOLEAN\") {\r\n                    d.valueBoolean = d.value\r\n                    d.valueString = null\r\n                    d.valueBigDecimal = null\r\n                    d.valueDate = null\r\n                    d.selectValueNameUz = null\r\n                  } else if (d.typeCode === \"STRING\") {\r\n                    d.valueString = d.value\r\n                    d.valueBigDecimal = null\r\n                    d.valueDate = null\r\n                    d.valueBoolean = null\r\n                    d.selectValueNameUz = null\r\n                  } else if (d.typeCode === \"BIGDECIMAL\") {\r\n                    d.valueBigDecimal = d.value\r\n                    d.valueString = null\r\n                    d.valueDate = null\r\n                    d.valueBoolean = null\r\n                    d.selectValueNameUz = null\r\n                  } else if (d.typeCode === \"DATE\") {\r\n                    d.valueDate = d.value\r\n                    d.valueString = null\r\n                    d.valueBigDecimal = null\r\n                    d.valueBoolean = null\r\n                    d.selectValueNameUz = null\r\n                  } else if (d.typeCode === \"YEAR\") {\r\n                    d.valueDate = null\r\n                    d.valueString = d.value\r\n                    d.valueBigDecimal = null\r\n                    d.valueBoolean = null\r\n                    d.selectValueNameUz = null\r\n                  } else if (d.typeCode === \"SELECT\") {\r\n                    d.valueString = null\r\n                    d.valueBigDecimal = null\r\n                    d.valueDate = null\r\n                    d.valueBoolean = null\r\n                  }\r\n                  newThirdTrIdData.push(d)\r\n                  return d\r\n                }\r\n              })\r\n              return e\r\n            })\r\n            this.selectedRows.splice(index, 1)\r\n            await this.$forceUpdate()\r\n            await this.resetIndex()\r\n            newThirdTrIdData.forEach(e => this.lastReportData.push(e))\r\n            await this.setDocumentColumnValues(this.lastReportData, this.lastReportFormulas)\r\n          }\r\n        });\r\n\r\n\r\n      }\r\n    },\r\n\r\n    dynamicRefsReachedEndOfList(e) {\r\n      if (e) {\r\n        this.fetchDynamicRefs()\r\n      }\r\n    },\r\n    async debounceSearchDynamicRefs(searchText) {\r\n      clearTimeout(this.debounce);\r\n      this.debounce = setTimeout(async () => {\r\n        await this.fetchDynamicRefsWithKeyword(searchText);\r\n      }, 1000);\r\n    },\r\n    fetchDynamicRefsWithKeyword(keyword) {\r\n      this.okeds = []\r\n      this.okedSearchPayload.page = 1\r\n      this.okedSearchPayload.keyword = keyword ? keyword : ''\r\n      this.fetchDynamicRefs()\r\n    },\r\n    async fetchDynamicRefs() {\r\n      this.isLoadingOked = true\r\n      await crudAndListsService.searchListWithKeyword(OKED_API_URL, this.okedSearchPayload)\r\n          .then(res => {\r\n            this.okeds.push(...res.data.list)\r\n            this.hasNextPageOked = res.data.total / this.okedSearchPayload.itemsPerPage > this.okedSearchPayload.page\r\n            this.okedSearchPayload.page += 1\r\n            if (!this.isModeCreate && this.editingItem.okedId) {\r\n              let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n              if (!foundItm && this.editingItem.infoOkedDto) {\r\n                this.okeds.push(this.editingItem.infoOkedDto)\r\n              }\r\n            }\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n            this.okeds = []\r\n          })\r\n          .finally(() => {\r\n            this.isLoadingOked = false\r\n          })\r\n    },\r\n    customLabelDynamicRef(opt) {\r\n      let selected = this.okeds.find(e => e.id == opt.id);\r\n      if (selected) {\r\n        return `${selected.code} - ${\r\n            selected.nameUz ?\r\n                this.getName({\r\n                  nameRu: selected.nameRu,\r\n                  nameLt: selected.nameLt,\r\n                  nameUz: selected.nameUz,\r\n                })\r\n                :\r\n                selected.name\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    // --------------------------\r\n    clearAll() {\r\n      this.selectedColumns = [];\r\n      this.selectedRows = [];\r\n      this.firstColumns = [];\r\n      this.secondColumns = [];\r\n      this.thirdColumns = [];\r\n      this.thirdTrIdData = [];\r\n      this.formulas = [];\r\n      this.table = [];\r\n      this.f1Ids = [];\r\n      this.f2Ids = [];\r\n    },\r\n    keydownEvt(evt, rowId, value, rowIndex, columnIndex, columnId, typeCode) {\r\n      this.keyUpEventsDisable(evt);\r\n      if (columnId != null) {\r\n        if (evt.keyCode == 40 && rowId != null) {\r\n          evt.preventDefault();\r\n          // down\r\n          if (rowIndex < this.selectedRows.length - 1) {\r\n            let currentColumn = this.thirdTrIdData[columnIndex];\r\n            let downRowColumn = this.selectedRows[rowIndex + 1];\r\n            let downInput = document.getElementById(\r\n                JSON.stringify({\r\n                  rowId: downRowColumn.id,\r\n                  columnId: currentColumn.columnId,\r\n                })\r\n            );\r\n            if (downInput) {\r\n              downInput.focus();\r\n            }\r\n          }\r\n        } else if (evt.keyCode == 38 && rowId != null) {\r\n          evt.preventDefault();\r\n          if (rowIndex != 0) {\r\n            let currentColumn = this.thirdTrIdData[columnIndex];\r\n            let upRowColumn = this.selectedRows[rowIndex - 1];\r\n            let upInput = document.getElementById(\r\n                JSON.stringify({\r\n                  rowId: upRowColumn.id,\r\n                  columnId: currentColumn.columnId,\r\n                })\r\n            );\r\n            if (upInput) {\r\n              upInput.focus();\r\n            }\r\n          }\r\n          //up\r\n        } else if (evt.keyCode == 37) {\r\n          evt.preventDefault();\r\n          //left\r\n          if (columnIndex != 0) {\r\n            let prevColumn = this.thirdTrIdData[columnIndex - 1];\r\n\r\n            let currentRow = this.selectedRows[rowIndex];\r\n            let prevInput = document.getElementById(\r\n                JSON.stringify({\r\n                  rowId: currentRow.id,\r\n                  columnId: prevColumn.columnId,\r\n                })\r\n            );\r\n            if (prevInput) {\r\n              if (prevInput.disabled) {\r\n                let count = this.thirdTrIdData.length - (columnIndex - 1);\r\n                for (let i = 0; i < count; i++) {\r\n                  let prevColumn2 = this.thirdTrIdData[columnIndex - 1 - i];\r\n                  if (prevColumn2) {\r\n                    let input = document.getElementById(\r\n                        JSON.stringify({\r\n                          rowId: currentRow.id,\r\n                          columnId: prevColumn2.columnId,\r\n                        })\r\n                    );\r\n                    if (input && input.disabled) {\r\n                      continue;\r\n                    } else {\r\n                      if (input) {\r\n                        input.focus();\r\n                      }\r\n                      break;\r\n                    }\r\n                  }\r\n                }\r\n              } else {\r\n                prevInput.focus();\r\n              }\r\n            }\r\n          }\r\n        } else if (evt.keyCode == 39) {\r\n          //right\r\n          evt.preventDefault();\r\n          if (this.thirdTrIdData.length - 1 > columnIndex) {\r\n            let nextColumn = this.thirdTrIdData[columnIndex + 1];\r\n            let currentRow = this.selectedRows[rowIndex];\r\n            let nextInput = document.getElementById(\r\n                JSON.stringify({\r\n                  rowId: currentRow.id,\r\n                  columnId: nextColumn.columnId,\r\n                })\r\n            );\r\n            if (nextInput) {\r\n              if (nextInput.disabled) {\r\n                let forCount = this.thirdTrIdData.length - (columnIndex + 1);\r\n                for (let i = 0; i < forCount; i++) {\r\n                  let nextColumn2 = this.thirdTrIdData[columnIndex + 1 + i];\r\n\r\n                  let input = document.getElementById(\r\n                      JSON.stringify({\r\n                        rowId: currentRow.id,\r\n                        columnId: nextColumn2.columnId,\r\n                      })\r\n                  );\r\n                  if (input.disabled) {\r\n                    continue;\r\n                  } else {\r\n                    if (input) {\r\n                      input.focus();\r\n                    }\r\n                    break;\r\n                  }\r\n                }\r\n              } else {\r\n                nextInput.focus();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    async resetIndex() {\r\n      await this.$set(this.currentPosition, \"rowIndex\", null);\r\n      await this.$set(this.currentPosition, \"columnIndex\", null);\r\n      await this.$set(this.currentPosition, \"rowId\", null);\r\n      await this.$set(this.currentPosition, \"columnId\", null);\r\n      // await document.addEventListener(\"keydown\", this.keyUpEvents);\r\n    },\r\n    setError(f1, f2, frowId) {\r\n      this.f1Ids = f1;\r\n      this.f2Ids = f2;\r\n      this.fRowId = frowId;\r\n    },\r\n    keyUpEventsDisable(e) {\r\n      if (this.currentPosition.columnId != null) {\r\n        if (e.which === 38 || e.which === 40) {\r\n          e.preventDefault();\r\n        }\r\n      }\r\n    },\r\n    keyUpEvents(evt) {\r\n      this.keyUpEventsDisable(evt);\r\n      // if (this.currentPosition.columnId != null) {\r\n      //   if (evt.keyCode == 40 && this.currentPosition.rowId != null) {\r\n      //     evt.preventDefault();\r\n      //     // down\r\n      //     if (this.currentPosition.rowIndex < this.selectedRows.length - 1) {\r\n      //       let currentColumn =\r\n      //         this.thirdTrIdData[this.currentPosition.columnIndex];\r\n      //       let downRowColumn =\r\n      //         this.selectedRows[this.currentPosition.rowIndex + 1];\r\n      //       let downInput = document.getElementById(\r\n      //         JSON.stringify({\r\n      //           rowId: downRowColumn.id,\r\n      //           columnId: currentColumn.columnId,\r\n      //         })\r\n      //       );\r\n      //       if (downInput) {\r\n      //         downInput.focus();\r\n      //       }\r\n      //     }\r\n      //   } else if (evt.keyCode == 38 && this.currentPosition.rowId != null) {\r\n      //     evt.preventDefault();\r\n      //     if (this.currentPosition.rowIndex != 0) {\r\n      //       let currentColumn =\r\n      //         this.thirdTrIdData[this.currentPosition.columnIndex];\r\n      //       let upRowColumn =\r\n      //         this.selectedRows[this.currentPosition.rowIndex - 1];\r\n      //       let upInput = document.getElementById(\r\n      //         JSON.stringify({\r\n      //           rowId: upRowColumn.id,\r\n      //           columnId: currentColumn.columnId,\r\n      //         })\r\n      //       );\r\n      //       if (upInput) {\r\n      //         upInput.focus();\r\n      //       }\r\n      //     }\r\n      //     //up\r\n      //   } else if (evt.keyCode == 37) {\r\n      //     evt.preventDefault();\r\n      //     //left\r\n      //     if (this.currentPosition.columnIndex != 0) {\r\n      //       let prevColumn =\r\n      //         this.thirdTrIdData[this.currentPosition.columnIndex - 1];\r\n      //       let currentRow = this.selectedRows[this.currentPosition.rowIndex];\r\n      //       let prevInput = document.getElementById(\r\n      //         JSON.stringify({\r\n      //           rowId: currentRow.id,\r\n      //           columnId: prevColumn.columnId,\r\n      //         })\r\n      //       );\r\n      //       if (prevInput) {\r\n      //         if (prevInput.disabled) {\r\n      //           let count =\r\n      //             this.thirdTrIdData.length -\r\n      //             (this.currentPosition.columnIndex - 1);\r\n      //           for (let i = 0; i < count; i++) {\r\n      //             let prevColumn2 =\r\n      //               this.thirdTrIdData[\r\n      //                 this.currentPosition.columnIndex - 1 - i\r\n      //               ];\r\n      //             let input = document.getElementById(\r\n      //               JSON.stringify({\r\n      //                 rowId: currentRow.id,\r\n      //                 columnId: prevColumn2.columnId,\r\n      //               })\r\n      //             );\r\n      //             if (input && input.disabled) {\r\n      //               continue;\r\n      //             } else {\r\n      //               if (input) {\r\n      //                 input.focus();\r\n      //               }\r\n      //               break;\r\n      //             }\r\n      //           }\r\n      //         } else {\r\n      //           prevInput.focus();\r\n      //         }\r\n      //       }\r\n      //     }\r\n      //   } else if (evt.keyCode == 39) {\r\n      //     //right\r\n      //     evt.preventDefault();\r\n      //     if (\r\n      //       this.thirdTrIdData.length - 1 >\r\n      //       this.currentPosition.columnIndex\r\n      //     ) {\r\n      //       let nextColumn =\r\n      //         this.thirdTrIdData[this.currentPosition.columnIndex + 1];\r\n      //       let currentRow = this.selectedRows[this.currentPosition.rowIndex];\r\n      //       let nextInput = document.getElementById(\r\n      //         JSON.stringify({\r\n      //           rowId: currentRow.id,\r\n      //           columnId: nextColumn.columnId,\r\n      //         })\r\n      //       );\r\n      //       if (nextInput) {\r\n      //         if (nextInput.disabled) {\r\n      //           let forCount =\r\n      //             this.thirdTrIdData.length -\r\n      //             (this.currentPosition.columnIndex + 1);\r\n      //           for (let i = 0; i < forCount; i++) {\r\n      //             let nextColumn2 =\r\n      //               this.thirdTrIdData[\r\n      //                 this.currentPosition.columnIndex + 1 + i\r\n      //               ];\r\n\r\n      //             let input = document.getElementById(\r\n      //               JSON.stringify({\r\n      //                 rowId: currentRow.id,\r\n      //                 columnId: nextColumn2.columnId,\r\n      //               })\r\n      //             );\r\n      //             if (input.disabled) {\r\n      //               continue;\r\n      //             } else {\r\n      //               if (input) {\r\n      //                 input.focus();\r\n      //               }\r\n      //               break;\r\n      //             }\r\n      //           }\r\n      //         } else {\r\n      //           nextInput.focus();\r\n      //         }\r\n      //       }\r\n      //     }\r\n      //   }\r\n      // }\r\n    }\r\n    ,\r\n\r\n    focusVal(rowId, value, rowIndex, columnIndex, columnId, typeCode) {\r\n      this.$set(this.currentPosition, \"rowIndex\", parseFloat(rowIndex));\r\n      this.$set(this.currentPosition, \"columnIndex\", parseFloat(columnIndex));\r\n      this.$set(this.currentPosition, \"rowId\", parseFloat(rowId));\r\n      this.$set(this.currentPosition, \"columnId\", parseFloat(columnId));\r\n    },\r\n    getFormulas_2() {\r\n      return new Promise((res, rej) => {\r\n        if (this.tableId) {\r\n          Service.formulasByTableId_2(this.tableId)\r\n              .then(({ data }) => {\r\n                this.formulas = data;\r\n                res(data);\r\n              })\r\n              .catch((e) => rej(e));\r\n        } else {\r\n          rej();\r\n        }\r\n      });\r\n    },\r\n    getDataById(id) {\r\n      return new Promise((res, rej) => {\r\n        Service.getReportById(id)\r\n            .then(({ data }) => {\r\n              res(data);\r\n            })\r\n            .catch((e) => rej(e));\r\n      });\r\n    },\r\n    editValue(rowIndex, index) {\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'notEditable', false)\r\n      this.$forceUpdate();\r\n    },\r\n    resetValue(rowIndex, index) {\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'selectValueId', this.thirdTrIdData[index].value[rowIndex].originalSelectValueId)\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'selectValueNameUz', this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameUz)\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'selectValueNameLt', this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameLt)\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'selectValueNameRu', this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameRu)\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'notEditable', true)\r\n      this.$forceUpdate();\r\n    },\r\n    setValue(rowId, value, rowIndex, index, id, typeCode, notEditable = false, initialLoadCall = false) {\r\n      // value.rowId = rowId\r\n      // value.typeCode = typeCode\r\n      //\r\n      // value.notEditable = notEditable\r\n      // value.selectValueNameLt = value.nameLt\r\n      // value.selectValueNameRu = value.nameRu\r\n      // value.selectValueNameUz = value.nameUz\r\n      //\r\n      /* this.thirdTrIdData[index].value[rowIndex] = {\r\n        rowId: rowId ? rowId : null,\r\n        value: typeCode === 'SELECT' ? '' : value,\r\n        selectValueNameUz: value ? value.nameUz : null,\r\n        selectValueNameLt: value ? value.nameLt : null,\r\n        selectValueNameRu: value ? value.nameRu : null,\r\n        originalSelectValueNameUz: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameUz : '',\r\n        originalSelectValueNameLt: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameLt : '',\r\n        originalSelectValueNameRu: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameRu : '',\r\n        typeCode: typeCode,\r\n        columnId: id,\r\n        notEditable: notEditable\r\n      }; */\r\n      if (initialLoadCall && typeCode === 'SELECT') {\r\n        let rowIndex = this.selectedRows.findIndex(el => el.id == rowId)\r\n        if (!this.thirdTrIdData[index].value[rowIndex].rowId) {\r\n          this.thirdTrIdData[index].value[rowIndex] = {\r\n            rowId: rowId,\r\n            value: typeCode === 'SELECT' ? '' : value,\r\n            selectValueId: value ? value.id : null,\r\n            selectValueNameUz: value ? (value.nameUz ? value.nameUz : value.name) : null,\r\n            selectValueNameLt: value ? value.nameLt : null,\r\n            selectValueNameRu: value ? value.nameRu : null,\r\n            originalSelectValueNameUz: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameUz : '',\r\n            originalSelectValueNameLt: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameLt : '',\r\n            originalSelectValueNameRu: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameRu : '',\r\n            typeCode: typeCode,\r\n            columnId: id,\r\n            notEditable: notEditable,\r\n          }\r\n          this.thirdTrIdData[index].value[rowIndex].originalselectValueId = value.id\r\n          this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameUz = value.nameUz\r\n          this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameLt = value.nameLt\r\n          this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameRu = value.nameRu\r\n        }\r\n      } else {\r\n        if (typeCode === 'SELECT') {\r\n          value.rowId = rowId\r\n          value.columnId = id\r\n          value.typeCode = typeCode\r\n          value.notEditable = notEditable\r\n          value.selectValueId = value.id\r\n          value.selectValueNameLt = value.nameLt\r\n          value.selectValueNameRu = value.nameRu\r\n          value.selectValueNameUz = value.nameUz ? value.nameUz : value.name\r\n        }\r\n\r\n        this.thirdTrIdData[index].value[rowIndex] = {\r\n          rowId: rowId,\r\n          value: typeCode === 'SELECT' ? '' : value,\r\n          selectValueId: value ? value.id : null,\r\n          selectValueNameUz: value ? value.nameUz : null,\r\n          selectValueNameLt: value ? value.nameLt : null,\r\n          selectValueNameRu: value ? value.nameRu : null,\r\n          originalSelectValueNameUz: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameUz : '',\r\n          originalSelectValueNameLt: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameLt : '',\r\n          originalSelectValueNameRu: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameRu : '',\r\n          typeCode: typeCode,\r\n          columnId: id,\r\n          notEditable: notEditable,\r\n        };\r\n      }\r\n\r\n      document.getElementsByClassName(\"no_enter_value\").forEach((input) => {\r\n        if (JSON.parse(input.id).rowId) {\r\n          this.formulas.forEach((e) => {\r\n            let index_f2 = JSON.parse(e.f2).findIndex((d) => d == parseFloat(id));\r\n            let index_f1 = JSON.parse(e.f1).findIndex((d) => d == parseFloat(JSON.parse(input.id).columnId));\r\n            if (\r\n                index_f2 > -1 &&\r\n                index_f1 > -1 &&\r\n                parseFloat(JSON.parse(input.id).rowId) === parseFloat(rowId)\r\n            ) {\r\n\r\n              let allVal = 0;\r\n              document.getElementsByClassName(\"input_val\").forEach((vInput) => {\r\n                let e_index_f2 = JSON.parse(e.f2).findIndex(\r\n                    (d) => d == parseFloat(JSON.parse(vInput.id).columnId)\r\n                );\r\n\r\n                if (\r\n                    e_index_f2 > -1 &&\r\n                    parseFloat(JSON.parse(vInput.id).rowId) === parseFloat(rowId)\r\n                ) {\r\n                  if (this._empty(vInput.value)) {\r\n                  } else {\r\n                    if (typeof parseFloat(vInput.value) == \"number\") {\r\n                      allVal += parseFloat(vInput.value);\r\n                    } else {\r\n                      allVal += 0;\r\n                    }\r\n                  }\r\n\r\n                  this.$set(input, \"value\", parseFloat(allVal));\r\n                  let foundIndex = this.thirdTrIdData.findIndex(\r\n                      (e) => e.columnId == JSON.parse(input.id).columnId\r\n                  );\r\n                  this.thirdTrIdData[foundIndex].value[rowIndex] = {\r\n                    rowId: rowId ? rowId : null,\r\n                    value: allVal,\r\n                    typeCode: typeCode,\r\n                    columnId: JSON.parse(input.id).columnId,\r\n                  };\r\n                  this.$forceUpdate();\r\n                }\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.formulas.forEach((e) => {\r\n            let index_f2 = JSON.parse(e.f2).findIndex(\r\n                (d) => d == parseFloat(id)\r\n            );\r\n            let index_f1 = JSON.parse(e.f1).findIndex(\r\n                (d) => d == parseFloat(JSON.parse(input.id).columnId)\r\n            );\r\n            if (index_f2 > -1 && index_f1 > -1) {\r\n              let allVal = 0;\r\n              document.getElementsByClassName(\"input_val\").forEach((vInput) => {\r\n                let e_index_f2 = JSON.parse(e.f2).findIndex(\r\n                    (d) => d == parseFloat(JSON.parse(vInput.id).columnId)\r\n                );\r\n                if (e_index_f2 > -1) {\r\n                  if (this._empty(vInput.value)) {\r\n                  } else {\r\n                    if (typeof parseFloat(vInput.value) == \"number\") {\r\n                      allVal += parseFloat(vInput.value);\r\n                    } else {\r\n                      allVal += 0;\r\n                    }\r\n                  }\r\n                }\r\n                this.$set(input, \"value\", parseFloat(allVal));\r\n                let foundIndex = this.thirdTrIdData.findIndex(\r\n                    (e) => e.columnId == JSON.parse(input.id).columnId\r\n                );\r\n                this.thirdTrIdData[foundIndex].value[0] = {\r\n                  rowId: null,\r\n                  value: allVal,\r\n                  typeCode: typeCode,\r\n                  columnId: JSON.parse(input.id).columnId,\r\n                };\r\n                this.$forceUpdate();\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      this.$forceUpdate();\r\n\r\n    },\r\n    async setDocumentColumnValues(data, formulas) {\r\n      this.showData = []\r\n      this.currentItemData = data\r\n      if (data && data.length) {\r\n        data.forEach((e) => {\r\n          if (e.valueString || e.valueBigDecimal) {\r\n            if (e.typeCode === \"YEAR\") {\r\n              document.getElementsByClassName(\"custom-datepicker mx-datepicker dynamic-year\").forEach((field, idx) => {\r\n                if (JSON.parse(field.id).rowId) {\r\n                  if (\r\n                      parseFloat(JSON.parse(field.id).columnId) === parseFloat(e.columnId) &&\r\n                      parseFloat(JSON.parse(field.id).rowId) === parseFloat(e.rowId)\r\n                  ) {\r\n                    let rowIndex = this.selectedRows.findIndex(el => el.id == JSON.parse(field.id).rowId)\r\n                    let colIndex = this.thirdTrIdData.findIndex(item => item.columnId === e.columnId)\r\n                    this.setValue(e.rowId, e.value, rowIndex, colIndex, e.columnId, 'DATE')\r\n                  }\r\n                }\r\n              })\r\n            } else {\r\n              if (e.typeCode === 'BIGDECIMAL') {\r\n                let foundColumnId = this.showData.findIndex((d) => d.columnId === e.columnId)\r\n                if (foundColumnId > -1) {\r\n                  this.showData.map(f => {\r\n                    if (f.columnId == e.columnId) {\r\n                      f.columnData = (+f.columnData) + (+e.value)\r\n                    }\r\n                  })\r\n                } else {\r\n                  this.showData.push({\r\n                    columnId: e.columnId,\r\n                    columnData: (e.value)\r\n                  })\r\n                }\r\n              }\r\n\r\n              document\r\n                  .getElementsByClassName(\"input_val\").forEach((input) => {\r\n                formulas.forEach((element) => {\r\n                  let index_V = JSON.parse(element.f1).findIndex((e) => e == JSON.parse(input.id).columnId);\r\n                  if (index_V > -1) {\r\n                    this.$set(input, \"disabled\", true);\r\n                    this.$set(input.style, \"border\", \"none\");\r\n                    input.classList.add(\"no_enter_value\");\r\n                    input.style.fontWeight = \"bold\";\r\n                  }\r\n                });\r\n\r\n                if (JSON.parse(input.id).rowId) {\r\n                  if (\r\n                      parseFloat(JSON.parse(input.id).columnId) === parseFloat(e.columnId) &&\r\n                      parseFloat(JSON.parse(input.id).rowId) === parseFloat(e.rowId)\r\n                  ) {\r\n                    this.$set(input, \"value\", e.value);\r\n                  }\r\n                } else {\r\n                  if (\r\n                      parseFloat(JSON.parse(input.id).columnId) === parseFloat(e.columnId)\r\n                  ) {\r\n                    this.$set(input, \"value\", e.value);\r\n                  }\r\n                }\r\n              });\r\n            }\r\n          } else if (e.valueDate) {\r\n            document.getElementsByClassName(\"custom-datepicker mx-datepicker dynamic-datepicker\").forEach((field, idx) => {\r\n              if (JSON.parse(field.id).rowId) {\r\n                if (\r\n                    parseFloat(JSON.parse(field.id).columnId) === parseFloat(e.columnId) &&\r\n                    parseFloat(JSON.parse(field.id).rowId) === parseFloat(e.rowId)\r\n                ) {\r\n                  let rowIndex = this.selectedRows.findIndex(el => el.id == JSON.parse(field.id).rowId)\r\n                  let colIndex = this.thirdTrIdData.findIndex(item => item.columnId === e.columnId)\r\n                  this.setValue(e.rowId, e.value, rowIndex, colIndex, e.columnId, 'DATE')\r\n                }\r\n              }\r\n            })\r\n          } else if (e.valueBoolean !== null) {\r\n            document.getElementsByClassName(\"checkbox_field\").forEach((field, idx) => {\r\n              let checkboxInput = field.classList.contains('active') ? field.children[0].children[1].children[0] : field.children[0].children[0].children[0]\r\n              if (checkboxInput.id && JSON.parse(checkboxInput.id) && JSON.parse(checkboxInput.id).rowId) {\r\n                if (\r\n                    parseFloat(JSON.parse(checkboxInput.id).columnId) === parseFloat(e.columnId) &&\r\n                    parseFloat(JSON.parse(checkboxInput.id).rowId) === parseFloat(e.rowId)\r\n                ) {\r\n                  let rowIndex = this.selectedRows.findIndex(el => el.id == JSON.parse(checkboxInput.id).rowId)\r\n                  let colIndex = this.thirdTrIdData.findIndex(item => item.columnId == e.columnId)\r\n                  this.setValue(e.rowId, JSON.parse(e.value), rowIndex, colIndex, e.columnId, 'BOOLEAN')\r\n                }\r\n              }\r\n            })\r\n          } else if (e.selectValueNameUz) {\r\n            document.getElementsByClassName(\"select_field\").forEach((field, idx) => {\r\n              if (JSON.parse(field.id).rowId) {\r\n                if (\r\n                    parseFloat(JSON.parse(field.id).columnId) === parseFloat(e.columnId) &&\r\n                    parseFloat(JSON.parse(field.id).rowId) === parseFloat(e.rowId)\r\n                ) {\r\n                  let rowIndex = this.selectedRows.findIndex(el => el.id == JSON.parse(field.id).rowId)\r\n                  let colIndex = this.thirdTrIdData.findIndex(item => item.columnId == e.columnId)\r\n                  this.setValue(\r\n                      e.rowId,\r\n                      {\r\n                        nameUz: e.selectValueNameUz,\r\n                        nameLt: e.selectValueNameLt,\r\n                        nameRu: e.selectValueNameRu,\r\n                        id: e.selectValueId\r\n                      }, rowIndex, colIndex, e.columnId, 'SELECT', true, true)\r\n                }\r\n              }\r\n            })\r\n          }\r\n        });\r\n      } else {\r\n        document\r\n            .getElementsByClassName(\"input_val\")\r\n            .forEach((input) => {\r\n              formulas.forEach((element) => {\r\n                let index_V = JSON.parse(element.f1).findIndex(\r\n                    (e) => e == JSON.parse(input.id).columnId\r\n                );\r\n                if (index_V > -1) {\r\n                  this.$set(input, \"disabled\", true);\r\n                  this.$set(input.style, \"border\", \"none\");\r\n                  input.classList.add(\"no_enter_value\");\r\n                  input.style.fontWeight = \"bold\";\r\n                }\r\n              });\r\n            });\r\n      }\r\n      for (const docTableFormulaTargetId in this.docTableFormulasList) {\r\n        let disabledElements = document.querySelectorAll('input[data-column-id=\"' + docTableFormulaTargetId + '\"]');\r\n        disabledElements.forEach((element) => {\r\n          element.classList.add(\"no_enter_value\");\r\n          element.disabled = true;\r\n        });\r\n      }\r\n    },\r\n    async getById(id, reportId, info) {\r\n      this.clearAll();\r\n      this.tableId = id;\r\n      this.reportId = reportId;\r\n      this.tableInfo = info;\r\n      this.loader = true;\r\n      await Service.reportGetById(reportId).then(({ data }) => {\r\n        this.report = data;\r\n        this.$emit('setReportGenerated', this.report.generated);\r\n      });\r\n      await Service.getByIdTableWithReportId(id, reportId)\r\n        .then(async (rs) => {\r\n          if (rs.data) {\r\n            await this.setColumns(rs.data.columns, rs.data.rows.length);\r\n            this.setRow(rs.data.rows);\r\n            this.table = rs.data.table;\r\n            setTimeout(() => {\r\n              Promise.all([\r\n                this.getDataById(reportId),\r\n                this.getFormulas_2(),\r\n              ]).then(([data, formulas]) => {\r\n                    this.lastReportData = data\r\n                    this.lastReportFormulas = formulas\r\n                    this.setDocumentColumnValues(data, formulas)\r\n                    this.loader = false;\r\n                  });\r\n            },500);\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          this.loader = false;\r\n        });\r\n      await Service.getDocTableFormulasList(id).then(({ data }) => {\r\n        this.docTableFormulasList = {};\r\n        let length = data.length;\r\n        let currentTargetColumnId = null;\r\n        for (let i = 0; i < length; i++) {\r\n          if (this.docTableFormulasList[data[i].targetColumnId] === undefined) {\r\n            currentTargetColumnId = data[i].targetColumnId;\r\n            this.docTableFormulasList[data[i].targetColumnId] = {\r\n              eval: \"\",\r\n              list: [],\r\n              listenColumns: [],\r\n              targetColumnId: data[i].targetColumnId\r\n            };\r\n          }\r\n          this.docTableFormulasList[data[i].targetColumnId].list.push(data[i]);\r\n          if (data[i].docColumnId) {\r\n            if (data[i].docColumnId && this.docTableFormulasList[data[i].targetColumnId].listenColumns.indexOf(data[i].docColumnId) === -1) {\r\n              this.docTableFormulasList[data[i].targetColumnId].listenColumns.push(data[i].docColumnId)\r\n            }\r\n            if (this.docTableFormulasListenColumnId[data[i].docColumnId] === undefined) {\r\n              this.docTableFormulasListenColumnId[data[i].docColumnId] = [data[i].targetColumnId];\r\n            } else {\r\n              if (this.docTableFormulasListenColumnId[data[i].docColumnId].indexOf(data[i].targetColumnId) === -1) {\r\n                this.docTableFormulasListenColumnId[data[i].docColumnId].push(data[i].targetColumnId);\r\n              }\r\n            }\r\n          }\r\n          if (data[i].type === \"ARGUMENTS\") {\r\n            this.docTableFormulasList[data[i].targetColumnId].eval += \"{\" + data[i].docColumnId + \"}\";\r\n          } else {\r\n            this.docTableFormulasList[data[i].targetColumnId].eval += data[i].code;\r\n          }\r\n        }\r\n      });\r\n    },\r\n\r\n    async setColumns(v, rowsCount) {\r\n      this.selectedColumns = v;\r\n      this.firstColumns = [];\r\n      this.secondColumns = [];\r\n      this.thirdColumns = [];\r\n      v.forEach((el1) => {\r\n        this.firstColumns.push(el1);\r\n        el1.children.forEach((el2) => {\r\n          this.secondColumns.push(el2);\r\n          el2.children.forEach((el3) => {\r\n            this.thirdColumns.push({ ...el3, fId: el1.id });\r\n          });\r\n        });\r\n      });\r\n      setTimeout(async () => {\r\n        let firstTrTh = document.getElementsByClassName(\"firstTrTh\");\r\n        let secondTrTh = document.getElementsByClassName(\"secondTrTh\");\r\n        let thirdTrTh = document.getElementsByClassName(\"thirdTrTh\");\r\n        let counter2 = 0,\r\n            counter3 = 0;\r\n        await firstTrTh.forEach(async (th) => {\r\n          if (th.colSpan > 1) {\r\n            for (let index2 = 0; index2 < th.colSpan; index2++) {\r\n              if (secondTrTh[counter2] && secondTrTh[counter2].colSpan > 1) {\r\n                for (\r\n                    let index3 = 0;\r\n                    index3 < secondTrTh[counter2].colSpan;\r\n                    index3++\r\n                ) {\r\n                  let array = thirdTrTh[counter3].id.split(\",\");\r\n                  let tmp = {\r\n                    columnId: array[0],\r\n                    typeCode: array[1],\r\n                    refCode: array[2],\r\n                    referenceUrl: array[3],\r\n                    referenceAppendUrl: array[4],\r\n                    referenceCode: array[5],\r\n                    referenceNameUz: array[6],\r\n                    referenceNameLt: array[7],\r\n                    referenceNameRu: array[8],\r\n                    searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                    hasNextPage: false,\r\n                    options: [],\r\n                    rowId: [],\r\n                    value: [],\r\n                  };\r\n                  // GET DYNAMIC REFRENCE OPTIONS\r\n                  if (tmp.typeCode === 'SELECT') {\r\n                    for (let i = 0; i < rowsCount; i++) {\r\n                      tmp.value.push({ selectedItem: null })\r\n                    }\r\n                    crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                        .then(res => {\r\n                          if (['DepartmentForDocument', 'Department'].includes(i.refCode)) {\r\n                            tmp.options.push(...res.data)\r\n                          } else {\r\n                            tmp.options.push(...res.data.list)\r\n                          }\r\n                          tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                          tmp.searchPayload.page += 1\r\n                          /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                              let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                              if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                  this.okeds.push(this.editingItem.infoOkedDto)\r\n                              }\r\n                          } */\r\n                        })\r\n                        .catch(e => {\r\n                          console.log(e)\r\n                          // this.okeds = []\r\n                        })\r\n                        .finally(() => {\r\n                          // this.isLoadingOked = false\r\n                        })\r\n                  }\r\n                  this.thirdTrIdData.push(tmp);\r\n                  counter3++;\r\n                }\r\n                counter2++;\r\n              } else {\r\n                if (\r\n                    secondTrTh[counter2] &&\r\n                    secondTrTh[counter2].classList.contains(\"thirdTrId\")\r\n                ) {\r\n                  let array = secondTrTh[counter2].id.split(\",\");\r\n                  let tmp = {\r\n                    columnId: array[0],\r\n                    typeCode: array[1],\r\n                    refCode: array[2],\r\n                    referenceUrl: array[3],\r\n                    referenceAppendUrl: array[4],\r\n                    referenceCode: array[5],\r\n                    referenceNameUz: array[6],\r\n                    referenceNameLt: array[7],\r\n                    referenceNameRu: array[8],\r\n                    searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                    hasNextPage: false,\r\n                    options: [],\r\n                    rowId: [],\r\n                    value: [],\r\n                  };\r\n                  // GET DYNAMIC REFRENCE OPTIONS\r\n                  if (tmp.typeCode === 'SELECT') {\r\n                    for (let i = 0; i < rowsCount; i++) {\r\n                      tmp.value.push({ selectedItem: null })\r\n                    }\r\n                    crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                        .then(res => {\r\n                          if (['DepartmentForDocument', 'Department'].includes(i.refCode)) {\r\n                            tmp.options.push(...res.data)\r\n                          } else {\r\n                            tmp.options.push(...res.data.list)\r\n                          }\r\n                          tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                          tmp.searchPayload.page += 1\r\n                          /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                              let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                              if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                  this.okeds.push(this.editingItem.infoOkedDto)\r\n                              }\r\n                          } */\r\n                        })\r\n                        .catch(e => {\r\n                          console.log(e)\r\n                          // this.okeds = []\r\n                        })\r\n                        .finally(() => {\r\n                          // this.isLoadingOked = false\r\n                        })\r\n                  }\r\n                  this.thirdTrIdData.push(tmp);\r\n                  counter2++;\r\n                } else {\r\n                  if (secondTrTh[counter2]) {\r\n                    for (\r\n                        let index3 = 0;\r\n                        index3 < secondTrTh[counter2].colSpan;\r\n                        index3++\r\n                    ) {\r\n                      let array = thirdTrTh[counter3].id.split(\",\");\r\n                      let tmp = {\r\n                        columnId: array[0],\r\n                        typeCode: array[1],\r\n                        refCode: array[2],\r\n                        referenceUrl: array[3],\r\n                        referenceAppendUrl: array[4],\r\n                        referenceCode: array[5],\r\n                        referenceNameUz: array[6],\r\n                        referenceNameLt: array[7],\r\n                        referenceNameRu: array[8],\r\n                        searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                        hasNextPage: false,\r\n                        options: [],\r\n                        rowId: [],\r\n                        value: [],\r\n                      };\r\n                      // GET DYNAMIC REFRENCE OPTIONS\r\n                      if (tmp.typeCode === 'SELECT') {\r\n                        for (let i = 0; i < rowsCount; i++) {\r\n                          tmp.value.push({ selectedItem: null })\r\n                        }\r\n                        crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                            .then(res => {\r\n                              if (['DepartmentForDocument', 'Department'].includes(i.refCode)) {\r\n                                tmp.options.push(...res.data)\r\n                              } else {\r\n                                tmp.options.push(...res.data.list)\r\n                              }\r\n                              tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                              tmp.searchPayload.page += 1\r\n                              /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                                  let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                                  if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                      this.okeds.push(this.editingItem.infoOkedDto)\r\n                                  }\r\n                              } */\r\n                            })\r\n                            .catch(e => {\r\n                              console.log(e)\r\n                              // this.okeds = []\r\n                            })\r\n                            .finally(() => {\r\n                              // this.isLoadingOked = false\r\n                            })\r\n                      }\r\n                      this.thirdTrIdData.push(tmp);\r\n                      counter3++;\r\n                    }\r\n\r\n                    counter2++;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            if (th.classList.contains(\"thirdTrId\")) {\r\n              let array = th.id.split(\",\");\r\n              let tmp = {\r\n                columnId: array[0],\r\n                typeCode: array[1],\r\n                refCode: array[2],\r\n                referenceUrl: array[3],\r\n                referenceAppendUrl: array[4],\r\n                referenceCode: array[5],\r\n                referenceNameUz: array[6],\r\n                referenceNameLt: array[7],\r\n                referenceNameRu: array[8],\r\n                searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                hasNextPage: false,\r\n                options: [],\r\n                rowId: [],\r\n                value: [],\r\n              };\r\n              // GET DYNAMIC REFRENCE OPTIONS\r\n              if (tmp.typeCode === 'SELECT') {\r\n                for (let i = 0; i < rowsCount; i++) {\r\n                  tmp.value.push({ selectedItem: null })\r\n                }\r\n                crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                    .then(res => {\r\n                      if ([\"DepartmentForDocument\", \"Department\"].includes(tmp.refCode)) {\r\n                        tmp.options.push(...res.data)\r\n                      } else {\r\n                        tmp.options.push(...res.data.list)\r\n                      }\r\n                      tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                      tmp.searchPayload.page += 1\r\n                      /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                          let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                          if (!foundItm && this.editingItem.infoOkedDto) {\r\n                              this.okeds.push(this.editingItem.infoOkedDto)\r\n                          }\r\n                      } */\r\n                    })\r\n                    .catch(e => {\r\n                      console.log(e)\r\n                      // this.okeds = []\r\n                    })\r\n                    .finally(() => {\r\n                      // this.isLoadingOked = false\r\n                    })\r\n              }\r\n              this.thirdTrIdData.push(tmp);\r\n            } else {\r\n              for (let index2 = 0; index2 < th.colSpan; index2++) {\r\n                if (secondTrTh[counter2].colSpan > 1) {\r\n                  for (\r\n                      let index3 = 0;\r\n                      index3 < secondTrTh[counter2].colSpan;\r\n                      index3++\r\n                  ) {\r\n                    let array = thirdTrTh[counter3].id.split(\",\");\r\n                    let tmp = {\r\n                      columnId: array[0],\r\n                      typeCode: array[1],\r\n                      refCode: array[2],\r\n                      referenceUrl: array[3],\r\n                      referenceAppendUrl: array[4],\r\n                      referenceCode: array[5],\r\n                      referenceNameUz: array[6],\r\n                      referenceNameLt: array[7],\r\n                      referenceNameRu: array[8],\r\n                      searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                      hasNextPage: false,\r\n                      options: [],\r\n                      rowId: [],\r\n                      value: [],\r\n                    };\r\n                    // GET DYNAMIC REFRENCE OPTIONS\r\n                    if (tmp.typeCode === 'SELECT') {\r\n                      for (let i = 0; i < rowsCount; i++) {\r\n                        tmp.value.push({ selectedItem: null })\r\n                      }\r\n                      crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                          .then(res => {\r\n                            if (['DepartmentForDocument', 'Department'].includes(i.refCode)) {\r\n                              tmp.options.push(...res.data)\r\n                            } else {\r\n                              tmp.options.push(...res.data.list)\r\n                            }\r\n                            tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                            tmp.searchPayload.page += 1\r\n                            /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                                let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                                if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                    this.okeds.push(this.editingItem.infoOkedDto)\r\n                                }\r\n                            } */\r\n                          })\r\n                          .catch(e => {\r\n                            console.log(e)\r\n                            // this.okeds = []\r\n                          })\r\n                          .finally(() => {\r\n                            // this.isLoadingOked = false\r\n                          })\r\n                    }\r\n                    this.thirdTrIdData.push(tmp);\r\n                    counter3++;\r\n                  }\r\n                  counter2++;\r\n                } else {\r\n                  if (\r\n                      secondTrTh[counter2] &&\r\n                      secondTrTh[counter2].classList.contains(\"thirdTrId\")\r\n                  ) {\r\n                    let array = secondTrTh[counter2].id.split(\",\");\r\n                    let tmp = {\r\n                      columnId: array[0],\r\n                      typeCode: array[1],\r\n                      refCode: array[2],\r\n                      referenceUrl: array[3],\r\n                      referenceAppendUrl: array[4],\r\n                      referenceCode: array[5],\r\n                      referenceNameUz: array[6],\r\n                      referenceNameLt: array[7],\r\n                      referenceNameRu: array[8],\r\n                      searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                      hasNextPage: false,\r\n                      options: [],\r\n                      rowId: [],\r\n                      value: [],\r\n                    };\r\n                    // GET DYNAMIC REFRENCE OPTIONS\r\n                    if (tmp.typeCode === 'SELECT') {\r\n                      for (let i = 0; i < rowsCount; i++) {\r\n                        tmp.value.push({ selectedItem: null })\r\n                      }\r\n                      crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                          .then(res => {\r\n                            if (['DepartmentForDocument', 'Department'].includes(i.refCode)) {\r\n                              tmp.options.push(...res.data)\r\n                            } else {\r\n                              tmp.options.push(...res.data.list)\r\n                            }\r\n                            tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                            tmp.searchPayload.page += 1\r\n                            /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                                let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                                if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                    this.okeds.push(this.editingItem.infoOkedDto)\r\n                                }\r\n                            } */\r\n                          })\r\n                          .catch(e => {\r\n                            console.log(e)\r\n                            // this.okeds = []\r\n                          })\r\n                          .finally(() => {\r\n                            // this.isLoadingOked = false\r\n                          })\r\n                    }\r\n                    this.thirdTrIdData.push(tmp);\r\n                    counter2++;\r\n                  } else {\r\n                    if (secondTrTh[counter2]) {\r\n                      for (\r\n                          let index3 = 0;\r\n                          index3 < secondTrTh[counter2].colSpan;\r\n                          index3++\r\n                      ) {\r\n                        let array = thirdTrTh[counter3].id.split(\",\");\r\n                        let tmp = {\r\n                          columnId: array[0],\r\n                          typeCode: array[1],\r\n                          refCode: array[2],\r\n                          referenceUrl: array[3],\r\n                          referenceAppendUrl: array[4],\r\n                          referenceCode: array[5],\r\n                          referenceNameUz: array[6],\r\n                          referenceNameLt: array[7],\r\n                          referenceNameRu: array[8],\r\n                          searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                          hasNextPage: false,\r\n                          options: [],\r\n                          rowId: [],\r\n                          value: [],\r\n                        };\r\n                        // GET DYNAMIC REFRENCE OPTIONS\r\n                        if (tmp.typeCode === 'SELECT') {\r\n                          for (let i = 0; i < rowsCount; i++) {\r\n                            tmp.value.push({ selectedItem: null })\r\n                          }\r\n                          crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                              .then(res => {\r\n                                if (['DepartmentForDocument', 'Department'].includes(i.refCode)) {\r\n                                  tmp.options.push(...res.data)\r\n                                } else {\r\n                                  tmp.options.push(...res.data.list)\r\n                                }\r\n                                tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                                tmp.searchPayload.page += 1\r\n                                /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                                    let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                                    if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                        this.okeds.push(this.editingItem.infoOkedDto)\r\n                                    }\r\n                                } */\r\n                              })\r\n                              .catch(e => {\r\n                                console.log(e)\r\n                                // this.okeds = []\r\n                              })\r\n                              .finally(() => {\r\n                                // this.isLoadingOked = false\r\n                              })\r\n                        }\r\n                        this.thirdTrIdData.push(tmp);\r\n                        counter3++;\r\n                      }\r\n                      counter2++;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }, 300);\r\n    },\r\n    setRow(v) {\r\n      this.selectedRows = v;\r\n      this.lastReportDataRows = JSON.parse(JSON.stringify(v));\r\n      if (this.selectedRows.length == 0 && !this.isGenerated) {\r\n        this.selectedRows = [{ id: this.getRandomInt() }];\r\n      }\r\n    },\r\n    rowspanFirst(el) {\r\n      return el.children.length > 0\r\n          ? 1\r\n          : el.children.length > 0 && this.thirdColumns.length > 0\r\n              ? 3\r\n              : 3;\r\n    },\r\n    colspanFirst(el) {\r\n      let found = this.thirdColumns.filter((i) => i.fId === el.id);\r\n      let totalNotChild = el.children.filter((d) => d.children.length == 0);\r\n      return el.children.length > 0 && found.length == 0\r\n          ? el.children.length\r\n          : el.children.length > 0 && found.length > 0\r\n              ? totalNotChild.length + found.length\r\n              : 1;\r\n    },\r\n    rowspanSecond(el) {\r\n      return el.children.length == 0 && this.thirdColumns.length == 0\r\n          ? 1\r\n          : el.children.length == 0 && this.thirdColumns.length > 0\r\n              ? 2\r\n              : 1;\r\n    },\r\n    colspanSecond(el) {\r\n      return el.children.length > 0 ? el.children.length : 1;\r\n    },\r\n    rowspanFirstClass(el) {\r\n      return el.children.length > 0\r\n          ? \"\"\r\n          : el.children.length > 0 && this.thirdColumns.length > 0\r\n              ? \"thirdTrId\"\r\n              : \"thirdTrId\";\r\n    },\r\n    rowspanSecondClass(el) {\r\n      return el.children.length == 0 && this.thirdColumns.length == 0\r\n          ? \"thirdTrId\"\r\n          : el.children.length == 0 && this.thirdColumns.length > 0\r\n              ? \"thirdTrId\"\r\n              : \"\";\r\n    },\r\n    normalizer(node) {\r\n      if (!node.children || node.children.length === 0) {\r\n        delete node.children\r\n        return {\r\n          id: node.id,\r\n          label: this.getName({\r\n            nameRu: node.nameRu,\r\n            nameLt: node.nameLt,\r\n            nameUz: node.nameUz,\r\n          }),\r\n        }\r\n      }\r\n      return {\r\n        id: node.id,\r\n        label: this.getName({\r\n          nameRu: node.nameRu,\r\n          nameLt: node.nameLt,\r\n          nameUz: node.nameUz,\r\n        }),\r\n        children: node.children && node.children.length > 0 ? node.children : [],\r\n      }\r\n    },\r\n    calculateDocFormulas(rowId, value, rowIndex, columnIndex, columnId, typeCode) {\r\n      // rowIndex is `selectedRows` index\r\n\r\n      if (this.docTableFormulasListenColumnId[columnId] === undefined) {\r\n        return false;\r\n      }\r\n      let targets = this.docTableFormulasListenColumnId[columnId];\r\n      for (const targetIndex in targets) {\r\n        const docTableFormula = this.docTableFormulasList[targets[targetIndex]];\r\n        let evalString = docTableFormula.eval;\r\n        for (const listenColumn of docTableFormula.listenColumns) {\r\n          let thirdIndex = this.trColumnIdOnDocColumnIdMap[listenColumn];\r\n          let val = parseFloat(this.thirdTrIdData[thirdIndex]?.value[rowIndex]?.value ?? 0);\r\n          if (!val) {\r\n            this.report\r\n          }\r\n          val = isNaN(val) ? 0 : val;\r\n          evalString = evalString.replace(\"{\" + listenColumn + \"}\", val);\r\n        }\r\n        let val = eval(evalString);\r\n\r\n        // todo optimize qilish kerak. v-model bilan qilish kerak\r\n        this.$set(document.getElementById(JSON.stringify({\r\n          \"rowId\": rowId,\r\n          \"columnId\": docTableFormula.targetColumnId.toString()\r\n        })), \"value\", val);\r\n\r\n        this.setValue(rowId, val, rowIndex, this.trColumnIdOnDocColumnIdMap[docTableFormula.targetColumnId], docTableFormula.targetColumnId, typeCode);\r\n      }\r\n    },\r\n    treeClosed(veeName) {\r\n      this.computedObserver.refs[veeName].validate();\r\n    },\r\n    selectCustomLabel({ nameUz, nameLt, nameRu, name, fullName }) {\r\n      if (nameUz) {\r\n        return this.getName({ nameUz: nameUz, nameLt: nameLt, nameRu: nameRu });\r\n      }\r\n      if (fullName) {\r\n        return fullName;\r\n      }\r\n      return name;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div>\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n          <h5 class=\"text-center mb-1\">\r\n            <strong>\r\n              {{ getName({ nameLt: table.nameLt, nameUz: table.nameUz, nameRu: table.nameRu }) }}\r\n\r\n            </strong>\r\n          </h5>\r\n          <p class=\"text-center m-0\">\r\n            {{ getName({ nameLt: table.titleLt, nameUz: table.titleUz, nameRu: table.titleRu }) }}\r\n\r\n          </p>\r\n        </div>\r\n        <div class=\"col-lg-12\">\r\n          <div class=\"d-flex justify-content-between align-items-end pl-3 pr-3\">\r\n            <div>\r\n              <strong>\r\n                {{\r\n                  getName({\r\n                    nameLt: report.nameLt,\r\n                    nameRu: report.nameRu,\r\n                    nameUz: report.nameUz\r\n                  })\r\n                }}\r\n              </strong><br>\r\n              <span>\r\n                {{\r\n                  report.reportDate\r\n                }}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <strong>\r\n                {{\r\n                  getName({\r\n                    nameLt: table.conditionLt,\r\n                    nameRu: table.conditionRu,\r\n                    nameUz: table.conditionUz,\r\n                  })\r\n                }}\r\n              </strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-12\">\r\n          <b-overlay :opacity=\"0.1\" :show=\"loader\" rounded=\"sm\">\r\n            <div class=\"bg-white pl-3 pr-3 pt-1\" style=\"min-height: 60vh; overflow: auto;\">\r\n              <div class=\"pb-5\">\r\n                <table class=\"table thead-table table-centered table-custom-bordered\">\r\n                  <thead>\r\n                  <tr class=\"tr-text-center\">\r\n                    <th\r\n                        :id=\"[el.id, el.typeCode, el.refCode, el.referenceUrl, el.referenceAppendUrl, el.referenceCode, el.referenceNameUz, el.referenceNameLt, el.referenceNameRu]\"\r\n                        :class=\"rowspanFirstClass(el, index)\"\r\n                        class=\"firstTrTh\"\r\n                        style=\"min-width: 70px\"\r\n                        :rowspan=\"rowspanFirst(el)\"\r\n                        :colspan=\"colspanFirst(el)\"\r\n                        v-for=\"(el, index) in firstColumns\"\r\n                        :key=\"index + 'first'\"\r\n                    >\r\n                      <div style=\" max-height: 200px; display: inline-block; \" >\r\n                        <div :class=\" (el.isVertical == 1 ) ? 'rotate_text' : ''\">\r\n                          {{ getName({ nameLt: el.nameLt, nameUz: el.nameUz, nameRu: el.nameRu }) }}\r\n                        </div>\r\n                      </div>\r\n                    </th>\r\n                    <th\r\n                        v-show=\"tableInfo.hasDynamicRows &&  !tableInfo.isGenerated && !loader\"\r\n                        :rowspan=\"thirdColumns.length > 0 ? 3 : secondColumns.length > 0 ? 2 : 1\"\r\n                    >\r\n                      <div style=\"max-height: 200px; display: inline-block;\">\r\n                        <div>\r\n                          {{ $t('column.actions') }}\r\n                        </div>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n                  <tr class=\"tr-text-center\">\r\n                    <th\r\n                        style=\"min-width: 70px\"\r\n                        :id=\"[el.id, el.typeCode, el.refCode, el.referenceUrl, el.referenceAppendUrl, el.referenceCode, el.referenceNameUz, el.referenceNameLt, el.referenceNameRu]\"\r\n                        :class=\"rowspanSecondClass(el)\"\r\n                        class=\"secondTrTh\"\r\n                        :rowspan=\"rowspanSecond(el)\"\r\n                        :colspan=\"colspanSecond(el)\"\r\n                        v-for=\"(el, index) in secondColumns\"\r\n                        :key=\"index + 'second'\"\r\n                    >\r\n                      <div\r\n                          style=\"\r\n                          max-height: 200px;\r\n                          position: relative;\r\n                          display: inline-block;\r\n                          cursor: pointer;\"\r\n                      >\r\n                        <div\r\n\r\n                            :class=\"(el.isVertical == 1 )  ? 'rotate_text' : ''\"\r\n                        >\r\n                          {{\r\n                            getName({ nameLt: el.nameLt, nameRu: el.nameRu, nameUz: el.nameUz })\r\n                          }}\r\n                        </div>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n\r\n                  <tr class=\"tr-text-center\">\r\n                    <th\r\n                        style=\"min-width: 70px\"\r\n                        :id=\"[el.id, el.typeCode, el.refCode, el.referenceUrl, el.referenceAppendUrl, el.referenceCode, el.referenceNameUz, el.referenceNameLt, el.referenceNameRu]\"\r\n                        class=\"thirdTrId thirdTrTh\"\r\n                        :colspan=\"el.children.length > 0 ? el.children.length : 1\"\r\n                        v-for=\"(el, index) in thirdColumns\"\r\n                        :key=\"index + 'third'\"\r\n                    >\r\n                      <div\r\n                          style=\"\r\n                            max-height: 200px;\r\n                            position: relative;\r\n                            display: inline-block;\r\n                            cursor: pointer;\r\n                          \"\r\n                      >\r\n                        <div :class=\"(el.isVertical == 1 )  ? 'rotate_text' : ''\">\r\n                          {{\r\n                            getName({ nameLt: el.nameLt, nameRu: el.nameRu, nameUz: el.nameUz })\r\n                          }}\r\n                        </div>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n\r\n                  <tr class=\"tr-text-center\">\r\n                    <td\r\n                        v-for=\"(item, index) of (tableInfo.hasDynamicRows &&  !tableInfo.isGenerated) ? thirdTrIdData.length  + 1 :  thirdTrIdData.length \"\r\n                        :key=\"index + 'I-1'\"\r\n                    >\r\n                      <strong v-if=\"selectedRows.length > 1\">\r\n                        {{\r\n                          selectedRows.length > 1 && index == 0 ? \"\" : index\r\n                        }}\r\n                      </strong\r\n                      >\r\n\r\n                      <strong v-else>\r\n                        {{ index + 1 }}\r\n                      </strong>\r\n                    </td>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  <tr v-if=\"isGenerated && !selectedRows.length && !loader\">\r\n                    <td class=\"text-center\" colspan=\"4000\">\r\n                      <h5 class=\"m-3 p-0\">\r\n                        {{ $t('messages.data_not_found') }}\r\n                      </h5>\r\n                    </td>\r\n                  </tr>\r\n                  <tr v-for=\"(data, index1) in selectedRows\" :key=\"index1 + 'MM'\">\r\n                    <td\r\n                        :class=\"[\r\n                          f1Ids &&\r\n                          f1Ids.indexOf(i.columnId) > -1 &&\r\n                          selectedRows.length > 1 &&\r\n                          fRowId == data.id\r\n                            ? 'bg-success'\r\n                            : f1Ids &&\r\n                              f1Ids.indexOf(i.columnId) > -1 &&\r\n                              selectedRows.length <= 1\r\n                            ? 'bg-success'\r\n                            : '',\r\n                          f2Ids &&\r\n                          f2Ids.indexOf(i.columnId) > -1 &&\r\n                          selectedRows.length > 1 &&\r\n                          fRowId == data.id\r\n                            ? 'bg-primary'\r\n                            : f2Ids &&\r\n                              f2Ids.indexOf(i.columnId) > -1 &&\r\n                              selectedRows.length <= 1\r\n                            ? 'bg-primary'\r\n                            : '',\r\n                        ]\"\r\n                        v-for=\"(i, index) in thirdTrIdData\"\r\n                        :key=\"index + 'td'\"\r\n                        class=\"text-center p\"\r\n                    >\r\n                      <p class=\"m-0 p-2\" v-if=\"i.typeCode === 'SEQUENCE'\">\r\n                        {{ index1 + 1 }}\r\n                      </p>\r\n                      <div\r\n                          v-else-if=\"i.typeCode === 'SELECT' && thirdTrIdData[index].value[index1] && thirdTrIdData[index].value[index1].notEditable\"\r\n                          :v-b-tooltip=\"tableInfo.isGenerated ? '' :{ variant: 'info' }\"\r\n                          class=\"cursor-pointer\"\r\n                          @click=\"tableInfo.isGenerated ? '' : editValue(index1, index)\"\r\n                          :title=\"tableInfo.isGenerated ? '' :  $t('actions.click_to_edit')\"\r\n                      >\r\n                        {{\r\n                          getName({\r\n                            nameUz: thirdTrIdData[index].value[index1].selectValueNameUz,\r\n                            nameLt: thirdTrIdData[index].value[index1].selectValueNameLt,\r\n                            nameRu: thirdTrIdData[index].value[index1].selectValueNameRu\r\n                          })\r\n                        }}\r\n                      </div>\r\n                      <!-- FOR SELECT -->\r\n                      <div v-else-if=\"i.typeCode === 'SELECT'\" style=\"min-width: 300px;\">\r\n                        <BaseTreeselectWithValidation\r\n                            not-required\r\n                            ref=\"parentDepVeeName\"\r\n                            name=\"parentDepVeeName\"\r\n                            class=\"select_field\"\r\n                            v-if=\"thirdTrIdData[index].value[index1] && ['DepartmentForDocument', 'Department'].includes(i.refCode)\"\r\n                            v-model=\"thirdTrIdData[index].value[index1].selectedItem\"\r\n                            form-label=\"__none\"\r\n                            :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId})\"\r\n                            :options=\"i.options\"\r\n                            :show-count=\"true\"\r\n                            :normalizer=\"normalizer\"\r\n                            :placeholder=\"$t('column.parent_department')\"\r\n                            :custom-label=\"selectCustomLabel\"\r\n                            :default-expand-level=\"1\"\r\n                            @select=\"setValue(data.id,$event,index1,index,i.columnId,i.typeCode,i.notEditable)\"\r\n                            @search-change=\"debounceSearchDynamicRefs\"\r\n                        >\r\n                          <div slot=\"value-label\">-{{ thirdTrIdData[index].value[index1].selectValueNameUz }}</div>\r\n                        </BaseTreeselectWithValidation>\r\n                        <BaseTreeselectWithValidation\r\n                            not-required\r\n                            ref=\"parentDepVeeName\"\r\n                            name=\"parentDepVeeName\"\r\n                            class=\"select_field\"\r\n                            v-if=\"!thirdTrIdData[index].value[index1] && ['DepartmentForDocument', 'Department'].includes(i.refCode)\"\r\n                            v-model=\"thirdTrIdData[index].value[index1]\"\r\n                            form-label=\"__none\"\r\n                            :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId})\"\r\n                            :options=\"i.options\"\r\n                            :show-count=\"true\"\r\n                            :normalizer=\"normalizer\"\r\n                            :placeholder=\"$t('column.parent_department')\"\r\n                            :default-expand-level=\"1\"\r\n                            :custom-label=\"({nameUz, nameLt, nameRu, name})  => nameUz ? getName({nameUz: nameUz, nameLt: nameLt, nameRu: nameRu}) : name\"\r\n                            @select=\"setValue(data.id,$event,index1,index,i.columnId,i.typeCode,i.notEditable)\"\r\n                            @search-change=\"debounceSearchDynamicRefs\"\r\n                        >\r\n                        </BaseTreeselectWithValidation>\r\n                        <BaseMultiselectWithValidation\r\n                            v-if=\"thirdTrIdData[index].value[index1] && !['DepartmentForDocument', 'Department'].includes(i.refCode)\"\r\n                            not-required\r\n                            only-form-element\r\n                            v-model=\"thirdTrIdData[index].value[index1].selectedItem\"\r\n                            class=\"select_field\"\r\n                            :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId})\"\r\n                            :custom-label=\"selectCustomLabel\"\r\n                            label=\"name\"\r\n                            @select=\"setValue(data.id,$event,index1,index,i.columnId,i.typeCode,i.notEditable)\"\r\n                            :options=\"i.options\"\r\n                            :placeholder=\"getName({nameUz: i.referenceNameUz, nameLt: i.referenceNameLt, nameRu: i.referenceNameRu})\"\r\n                            open-direction=\"bottom\"\r\n                            :max-height=\"600\"\r\n                            :show-labels=\"false\"\r\n                            :has-next-page=\"i.hasNextPage\"\r\n                            @reachedEndOfList=\"dynamicRefsReachedEndOfList\"\r\n                            @search-change=\"debounceSearchDynamicRefs\"\r\n                            :searchable=\"true\"\r\n                            preserve-search\r\n                            :clear-on-select=\"false\"\r\n                            :loading=\"i.isLoading\"\r\n                            :internal-search=\"false\"\r\n                            :with-create-addition=\"(thirdTrIdData[index].value[index1] && thirdTrIdData[index].value[index1].originalSelectValueNameUz) ? true : false\"\r\n                        >\r\n                          <template v-slot:append-slot>\r\n                            <b-btn\r\n                                v-if=\"thirdTrIdData[index].value[index1] && thirdTrIdData[index].value[index1].originalSelectValueNameUz\"\r\n                                variant=\"link\"\r\n                                class=\"text-decoration-none p-0 text-danger\"\r\n                                style=\"font-size: 1.2rem;\"\r\n                            >\r\n                              <i\r\n                                  @click=\"resetValue(index1, index)\"\r\n                                  class=\"mdi mdi-refresh\"\r\n                              ></i>\r\n                            </b-btn>\r\n                          </template>\r\n                        </BaseMultiselectWithValidation>\r\n                        <BaseMultiselectWithValidation\r\n                            v-else-if=\"!thirdTrIdData[index].value[index1] && !['DepartmentForDocument', 'Department'].includes(i.refCode)\"\r\n                            not-required\r\n                            only-form-element\r\n                            class=\"select_field\"\r\n                            :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId})\"\r\n                            v-model=\"thirdTrIdData[index].value[index1]\"\r\n                            :custom-label=\"selectCustomLabel\"\r\n                            label=\"name\"\r\n                            @select=\"setValue(data.id,$event,index1,index,i.columnId,i.typeCode,i.notEditable)\"\r\n                            :options=\"i.options\"\r\n                            :placeholder=\"getName({nameUz: i.referenceNameUz, nameLt: i.referenceNameLt, nameRu: i.referenceNameRu})\"\r\n                            open-direction=\"bottom\"\r\n                            :max-height=\"600\"\r\n                            :show-labels=\"false\"\r\n                            :has-next-page=\"i.hasNextPage\"\r\n                            @reachedEndOfList=\"dynamicRefsReachedEndOfList\"\r\n                            @search-change=\"debounceSearchDynamicRefs\"\r\n                            :searchable=\"true\"\r\n                            preserve-search\r\n                            :clear-on-select=\"false\"\r\n                            :loading=\"i.isLoading\"\r\n                            :internal-search=\"false\"\r\n                        />\r\n                      </div>\r\n                      <!-- FOR DATE -->\r\n                      <BaseDatePickerWithValidation\r\n                          v-else-if=\"i.typeCode === 'DATE' && thirdTrIdData[index].value[index1]\"\r\n                          not-required\r\n                          only-form-element\r\n                          custom-styles=\"min-width: 140px;\"\r\n                          placeholder=\"\"\r\n                          v-model=\"thirdTrIdData[index].value[index1].value\"\r\n                          class=\"datepicker_field\"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          @input=\"(e) => setValue( data.id, e, index1, index, i.columnId, i.typeCode ) \"\r\n                          lang=\"ru\"\r\n                      />\r\n                      <BaseDatePickerWithValidation\r\n                          v-else-if=\"i.typeCode === 'DATE'\"\r\n                          not-required\r\n                          only-form-element\r\n                          custom-styles=\"min-width: 140px;\"\r\n                          class=\"datepicker_field\"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          placeholder=\"\"\r\n                          @input=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                          lang=\"ru\"\r\n                      />\r\n\r\n                      <!-- FOR YEAR -->\r\n                      <BaseDatePickerWithValidation\r\n                          v-else-if=\"i.typeCode === 'YEAR' && thirdTrIdData[index].value[index1]\"\r\n                          not-required\r\n                          only-form-element\r\n                          custom-styles=\"min-width: 140px;\"\r\n                          placeholder=\"\"\r\n                          v-model=\"thirdTrIdData[index].value[index1].value\"\r\n                          class=\"datepicker_field dynamic-year\"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          @input=\"(e) => setValue( data.id, e, index1, index, i.columnId, i.typeCode ) \"\r\n                          type=\"year\"\r\n                          format=\"YYYY\"\r\n                      />\r\n                      <BaseDatePickerWithValidation\r\n                          v-else-if=\"i.typeCode === 'YEAR'\"\r\n                          not-required\r\n                          only-form-element\r\n                          custom-styles=\"min-width: 140px;\"\r\n                          class=\"datepicker_field dynamic-year\"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          placeholder=\"\"\r\n                          @input=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                          type=\"year\"\r\n                          format=\"YYYY\"\r\n                      />\r\n\r\n                      <!-- FOR STRING -->\r\n                      <div v-else-if=\"i.typeCode === 'STRING'\" style=\"min-width: 300px;\">\r\n                        <b-form-input\r\n                            @keydown=\" (evt) => keydownEvt( evt, data.id, evt.target.value, index1, index, i.columnId, i.typeCode ) \"\r\n                            @keyup=\"(event) => calculateDocFormulas(data.id, event.target.value, index1, index, i.columnId, i.typeCode)\"\r\n                            :class=\"\r\n                              currentPosition.rowId &&\r\n                              currentPosition.columnId &&\r\n                              i.columnId == currentPosition.columnId &&\r\n                              data.id == currentPosition.rowId\r\n                                ? 'borderInput'\r\n                                : currentPosition.columnId &&\r\n                                  !currentPosition.rowId &&\r\n                                  i.columnId == currentPosition.columnId\r\n                                ? 'borderInput'\r\n                                : ''\r\n                            \"\r\n                            @focus=\" (e) => focusVal( data.id, e, index1, index, i.columnId, i.typeCode ) \"\r\n                            :style=\" report.status && report.status !== 'CREATED' ? 'border: none !important' : ''\"\r\n                            :disabled=\"report.status && report.status !== 'CREATED'\"\r\n                            :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                            @input=\"(e) => setValue( data.id, e, index1, index, i.columnId, i.typeCode)\"\r\n                            class=\"text-center input_val p-0\"\r\n                        >\r\n                        </b-form-input>\r\n                      </div>\r\n                      <!-- FOR BOOLEAN -->\r\n                      <Checkbox\r\n                          v-else-if=\"i.typeCode === 'BOOLEAN' && thirdTrIdData[index].value[index1]\"\r\n                          v-model=\"thirdTrIdData[index].value[index1].value\"\r\n                          :font-size=\"0\"\r\n                          :disabled=\"\r\n                            report.status && report.status !== 'CREATED'\r\n                          \"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          class=\"justify-content-center checkbox_field\"\r\n                          @change=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                      />\r\n                      <Checkbox\r\n                          v-else-if=\"i.typeCode === 'BOOLEAN'\"\r\n                          :font-size=\"0\"\r\n                          :disabled=\"\r\n                            report.status && report.status !== 'CREATED'\r\n                          \"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          class=\"justify-content-center checkbox_field\"\r\n                          @change=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                      />\r\n                      <!-- FOR INTEGER -->\r\n                      <div v-else>\r\n                        <b-form-input\r\n                            @keydown=\"(evt) => keydownEvt(evt,data.id,evt.target.value,index1,index,i.columnId,i.typeCode) \"\r\n                            @keyup=\"(event) => calculateDocFormulas(data.id, event.target.value, index1, index, i.columnId, i.typeCode)\"\r\n                            :class=\"\r\n                              currentPosition.rowId &&\r\n                              currentPosition.columnId &&\r\n                              i.columnId == currentPosition.columnId &&\r\n                              data.id == currentPosition.rowId\r\n                                ? 'borderInput'\r\n                                : currentPosition.columnId &&\r\n                                  !currentPosition.rowId &&\r\n                                  i.columnId == currentPosition.columnId\r\n                                ? 'borderInput'\r\n                                : ''\r\n                            \"\r\n                            :data-column-id=\"i.columnId\"\r\n                            @focus=\"(e) => focusVal(data.id, e, index1, index, i.columnId, i.typeCode)\"\r\n                            :style=\"report.status && report.status !== 'CREATED' ? 'border: none !important' : ''\"\r\n                            :disabled=\"report.status && report.status !== 'CREATED'\"\r\n                            :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                            @input=\"(e) => setValue(data.id, e, index1, index, i.columnId, i.typeCode)\"\r\n                            type=\"number\"\r\n                            class=\"text-center input_val p-0\"\r\n                        >\r\n                        </b-form-input>\r\n                      </div>\r\n                    </td>\r\n                    <td style=\"width: 30px\" v-show=\"tableInfo.hasDynamicRows &&  !tableInfo.isGenerated\">\r\n                      <div style=\"display: block; text-align: center\" class=\"mt-1\">\r\n                        <i v-if=\"selectedRows.length > 1\" @click=\"deleteRow(index1, data)\" style=\"color: red\"\r\n                           class=\"mdi mdi-trash-can delete grow \"></i>\r\n                        <i v-if=\"selectedRows.length-1 === index1\" @click=\"addNewRow\" style=\"color: #0059ff\"\r\n                           class=\"mdi mdi-plus-circle grow \"> </i>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  </tbody>\r\n                  <tfoot>\r\n                  <tr class=\"mt-5\" v-show=\"showResult\"\r\n                  >\r\n                    <td v-for=\"(i, index) in thirdTrIdData\"\r\n                        :key=\"index + 'td'\"\r\n                        class=\"text-center p\"\r\n                    >\r\n                      <p v-if=\"index === 0\">Jami</p>\r\n                      <div v-else-if=\"i.typeCode === 'BIGDECIMAL'\">\r\n                        {{ getColumnData(i) }}\r\n                      </div>\r\n                      <div v-else>---</div>\r\n                    </td>\r\n                    <td></td>\r\n                  </tr>\r\n                  </tfoot>\r\n                </table>\r\n              </div>\r\n              <div v-show=\"tableInfo.hasDynamicRows &&  !tableInfo.isGenerated\">\r\n                <!-- <b-button variant=\"primary\" class=\"mr-1\" @click=\"showResult = !showResult \">\r\n                  {{ $t( 'submodules.reports.report_result_see' ) }}\r\n                </b-button> -->\r\n                <b-button closed variant=\"warning\" class=\"ml-1\" @click=\"closeReport\">\r\n                  {{ $t('submodules.reports.stop_forming_report') }}\r\n                </b-button>\r\n              </div>\r\n            </div>\r\n          </b-overlay>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style lang=\"scss\">\r\n.borderInput {\r\n  border: 2px solid green !important;\r\n}\r\n\r\nth {\r\n  /* &#SELECT {\r\n    width: 20%;\r\n  } */\r\n  &[id*=\"SELECT\"] {\r\n    width: 150px;\r\n  }\r\n}\r\n\r\n.check {\r\n  margin-top: 5px;\r\n\r\n  .m-chckbox--container {\r\n    margin: 0px !important;\r\n    width: 22px !important;\r\n  }\r\n\r\n  label {\r\n    margin: 0;\r\n    display: none;\r\n  }\r\n}\r\n\r\n.vue-treeselect__list-item {\r\n  padding-left: 15px !important;\r\n}\r\n\r\n.vue-treeselect__list-item.vue-treeselect__indent-level-0 {\r\n  padding-left: 0px !important;\r\n}\r\n</style>\r\n<style lang=\"scss\">\r\n/* Chrome, Safari, Edge, Opera */\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n  -webkit-appearance: none;\r\n  margin: 0;\r\n}\r\n\r\n/* Firefox */\r\ninput[type=\"number\"] {\r\n  -moz-appearance: textfield;\r\n}\r\n\r\n.rotate_text {\r\n  height: 100%;\r\n  word-break: normal;\r\n  writing-mode: vertical-rl;\r\n  -ms-writing-mode: vertical-lr;\r\n  -webkit-transform: rotate(-180deg);\r\n  -moz-transform: rotate(-180deg);\r\n  -o-transform: rotate(-180deg);\r\n  transform: rotate(-180deg);\r\n  padding-bottom: 20px !important;\r\n  padding-top: 20px !important;\r\n}\r\n\r\n.no_enter_value {\r\n  padding: 0px !important;\r\n  min-width: auto !important;\r\n}\r\n\r\n.grow {\r\n  font-size: 1.3em;\r\n  cursor: pointer;\r\n}\r\n\r\n.grow:hover,\r\n.grow:focus,\r\n.grow:active {\r\n  transition: all .2s ease-in-out;\r\n  -webkit-transform: scale(1.3);\r\n  transform: scale(1.3);\r\n}\r\n</style>\r\n"],"sourceRoot":"src/modules/report/organizitional/components"}]}