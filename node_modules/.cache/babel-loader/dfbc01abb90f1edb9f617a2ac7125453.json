{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\commission\\create\\CreateOrUpdatePhysical.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\commission\\create\\CreateOrUpdatePhysical.vue","mtime":1674799497658},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CreateOrUpdatePhysical.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAUA,OAAA,2BAAA,MAAA,2EAAA;AAEA,IAAA,YAAA,GAAA,+BAAA;AACA;AACA;;AACA,OAAA,mBAAA,MAAA,yCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,wBADA;;AAEA;AACA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,2BAAA,EAAA;AADA,GAJA;;AAOA;AACA;AACA,EAAA,IATA,kBASA;AACA,WAAA,EAAA;AACA,GAXA;;AAYA;AACA;AACA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA,aAAA,KAAA,MAAA,CAAA,IAAA,KAAA,0BAAA;AACA,KAHA;AAIA,IAAA,gBAJA,8BAIA;AACA,aAAA,KAAA,KAAA,CAAA,yBAAA,CAAA,KAAA,CAAA,QAAA;AACA;AANA,GAdA;;AAsBA;AACA;AACA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,6BACA;AACA,UAAA,KAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,WAAA,EAAA;AACA,YAAA,WAAA,GAAA,KAAA;;AACA,QAAA,KAAA,EACA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,WAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,eAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,KAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,WAAA,CAAA,CAAA,EAAA,WAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,gBAAA,KAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,WAAA,CAAA,CAAA,EAAA,WAAA,CAAA,CAAA,EAAA,cAAA,EAAA;AACA,cAAA,WAAA,GAAA,IAAA;AACA,oBAAA,KAAA,CAFA,CAEA;AACA;AACA;AACA;;AACA,eAAA,WAAA;AACA,OAZA,MAYA;AACA,eAAA,KAAA;AACA;AACA,KAjBA;AAkBA,IAAA,UAlBA,sBAkBA,OAlBA,EAkBA;AACA,WAAA,gBAAA,CAAA,IAAA,CAAA,OAAA,EAAA,QAAA;AACA,KApBA;AAqBA,IAAA,UArBA,sBAqBA,IArBA,EAqBA;AACA,UAAA,CAAA,IAAA,CAAA,QAAA,IAAA,IAAA,CAAA,QAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,eAAA,IAAA,CAAA,QAAA;AACA,eAAA;AACA,UAAA,EAAA,EAAA,IAAA,CAAA,EADA;AAEA,UAAA,KAAA,EAAA,IAAA,CAAA;AAFA,SAAA;AAIA;;AACA,aAAA;AACA,QAAA,EAAA,EAAA,IAAA,CAAA,EADA;AAEA,QAAA,KAAA,EAAA,IAAA,CAAA,IAFA;AAGA,QAAA,QAAA,EAAA,IAAA,CAAA,QAAA,IAAA,IAAA,CAAA,QAAA,CAAA,MAAA,GAAA,CAAA,GAAA,IAAA,CAAA,QAAA,GAAA;AAHA,OAAA;AAKA,KAlCA;AAmCA,IAAA,SAnCA,qBAmCA,IAnCA,EAmCA;AACA,aAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,YAAA,MAAA,GAAA,IAAA,UAAA,EAAA;AACA,QAAA,MAAA,CAAA,aAAA,CAAA,IAAA;;AACA,QAAA,MAAA,CAAA,MAAA,GAAA;AAAA,iBAAA,OAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AAAA,SAAA;;AACA,QAAA,MAAA,CAAA,OAAA,GAAA,UAAA,KAAA;AAAA,iBAAA,MAAA,CAAA,KAAA,CAAA;AAAA,SAAA;AACA,OALA,CAAA;AAMA,KA1CA;AA2CA,IAAA,wBA3CA,sCA2CA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACA,KAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,gBADA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAEA,KAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,gBAAA,CAAA,GAAA;AAAA,qFAAA,iBAAA,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACA,CAAA,CAAA,IAAA,CAAA,OADA;AAAA;AAAA;AAAA;;AAAA,6DAEA,CAAA,CAAA,IAAA,CAAA,OAFA;;AAAA;AAAA;AAAA,mCAIA,KAAA,CAAA,SAAA,CAAA,CAAA,CAAA,IAAA,CAJA;;AAAA;AAIA,4BAAA,GAJA;AAAA,6DAKA,GALA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA;;AAAA;AAAA;AAAA;AAAA,oBAFA;;AAAA;AAEA,gBAAA,QAFA;AAAA,kDAUA,QAVA;;AAAA;AAAA,kDAYA,EAZA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA,KAxDA;AAyDA,IAAA,IAzDA,kBAyDA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,gBAAA,CAAA,QAAA,GAAA,IAAA;AAAA,sFAAA,kBAAA,KAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACA,KAAA,IAAA,MAAA,CAAA,eAAA,EADA;AAAA;AAAA;AAAA;;AAEA,4BAAA,MAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,IAAA,GAAA,UAAA;;AAFA,iCAGA,MAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,EAHA;AAAA;AAAA;AAAA;;AAIA,4BAAA,mBAAA,CAAA,MAAA,CAAA,YAAA,EAAA,MAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,8BAAA,MAAA,CAAA,gBAAA,CAAA,KAAA;;AACA,8BAAA,MAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,EAAA,CAAA;;AACA,8BAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;AACA,8BAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA,6BAAA,CAAA,EAAA;AAAA,gCAAA,IAAA,EAAA;AAAA,+BAAA;AACA,6BALA;AAJA;AAAA;;AAAA;AAAA;AAAA,mCA2BA,MAAA,CAAA,wBAAA,EA3BA;;AAAA;AA2BA,4BAAA,QA3BA;AA4BA,4BAAA,OAAA,CAAA,GAAA,CAAA,QAAA,EAAA,IAAA,CAAA,UAAA,OAAA,EAAA;AACA,8BAAA,MAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,gBAAA,GAAA,OAAA;;AAEA,kCAAA,MAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,WAAA,EAAA;AACA,oCAAA,YAAA,GAAA,MAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,WAAA;AACA,gCAAA,MAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,yBAAA,GAAA,YAAA,CAAA,GAAA,CAAA,UAAA,EAAA,EAAA;AACA,yCAAA;AACA,qDAAA,EAAA,CAAA,aADA;AAEA,wDAAA,EAAA,CAAA,YAAA,CAAA,YAFA;AAGA,sDAAA,EAAA,CAAA,YAAA,CAAA,UAHA;AAIA,sDAAA,EAAA,CAAA,YAAA,CAAA,UAJA;AAKA,kDAAA,EAAA,CAAA,YAAA,CAAA,EALA;AAMA,kDAAA,EANA;AAOA,wEAAA,EAAA,CAAA,WAAA,CAAA,GAAA,CAAA,UAAA,IAAA,EAAA;AACA,6CAAA;AACA,4DAAA,IAAA,CAAA,gBADA;AAEA,qDAAA,EAAA,CAAA,SAFA;AAGA,0DAAA,IAAA,CAAA,UAAA,CAAA,YAHA;AAIA,wDAAA,IAAA,CAAA,UAAA,CAAA,UAJA;AAKA,wDAAA,IAAA,CAAA,UAAA,CAAA,UALA;AAMA,oDAAA,IAAA,CAAA,UAAA,CAAA,EANA;AAOA,0DAAA,IAAA,CAAA;AAPA,uCAAA;AASA,qCAVA;AAPA,mCAAA;AAmBA,iCApBA,CAAA;AAqBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAKA,gCAAA,MAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,CAAA,WAAA,GAAA,IAAA;AACA,+BA5CA,CA8CA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;AAEA,8BAAA,mBAAA,CAAA,MAAA,CAAA,YAAA,EAAA,MAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,gCAAA,MAAA,CAAA,gBAAA,CAAA,KAAA;;AACA,gCAAA,MAAA,CAAA,KAAA,CAAA,yBAAA,CAAA,WAAA,GAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,EAAA,CAAA;;AACA,gCAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;AACA,gCAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA,6BAAA,CAAA,EAAA;AAAA,kCAAA,IAAA,EAAA;AAAA,iCAAA;AACA,+BALA;AAMA,6BA/DA;;AA5BA;AAAA;AAAA;;AAAA;AA8FA,4BAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA,+BAAA,CAAA,EAAA;AAAA,8BAAA,IAAA,EAAA;AAAA,6BAAA;;AA9FA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAA;;AAAA;AAAA;AAAA;AAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkGA;AA3JA,GAxBA;;AAqLA;AACA;AACA,EAAA,OAvLA,qBAuLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAxLA,CAAA","sourcesContent":["<template>\r\n    <base-create-or-update-wrapper\r\n        @save=\"save\"\r\n        has-save-suspend\r\n        :custom-title=\"isModeCreate ? $t('actions.create') : $t('actions.update')\"\r\n    >\r\n        <CreateApplicationByPhysical ref=\"formApplicationByPhysical\"></CreateApplicationByPhysical>\r\n    </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nimport CreateApplicationByPhysical from \"@/shared/views/components/commission/document/CreateApplicationByPhysical\";\r\n\r\nconst MAIN_API_URL = 'before-commission/application'\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\n\r\nexport default {\r\n    name: \"CreateOrUpdatePhysical\",\r\n    /*\r\n    * COMPONENTS */\r\n    components: {\r\n        CreateApplicationByPhysical\r\n    },\r\n    /*\r\n    * DATA */\r\n    data () {\r\n        return {}\r\n    },\r\n    /*\r\n    * COMPUTED */\r\n    computed: {\r\n        isModeCreate () {\r\n            return this.$route.name === 'CreateApplicationByLegal'\r\n        },\r\n        computedObserver () {\r\n            return this.$refs.formApplicationByPhysical.$refs.observer\r\n        }\r\n    },\r\n    /*\r\n    * METHODS */\r\n    methods: {\r\n        hasProjectOwner() {\r\n            if (this.$refs.formApplicationByPhysical.editingItem.assignments) {\r\n                let foundPOwner = false\r\n                loop1:\r\n                    for (let i = 0; i < this.$refs.formApplicationByPhysical.editingItem.assignments.length; i++) {\r\n                        for (let j = 0; j < this.$refs.formApplicationByPhysical.editingItem.assignments[i].toEmployees.length; j++) {\r\n                            if (this.$refs.formApplicationByPhysical.editingItem.assignments[i].toEmployees[j].isProjectOwner) {\r\n                                foundPOwner = true\r\n                                break loop1;  // breaks out of loop2 and loop1\r\n                            }\r\n                        }\r\n                    }\r\n                return foundPOwner\r\n            } else {\r\n                return false\r\n            }\r\n        },\r\n        treeClosed (veeName) {\r\n            this.computedObserver.refs[veeName].validate();\r\n        },\r\n        normalizer (node) {\r\n            if (!node.children || node.children.length === 0) {\r\n                delete node.children\r\n                return {\r\n                    id: node.id,\r\n                    label: node.name,\r\n                }\r\n            }\r\n            return {\r\n                id: node.id,\r\n                label: node.name,\r\n                children: node.children && node.children.length > 0 ? node.children : [],\r\n            }\r\n        },\r\n        getBase64 (file) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n                reader.onload = () => resolve(reader.result);\r\n                reader.onerror = error => reject(error);\r\n            });\r\n        },\r\n        async returnBase64FilePromises () {\r\n            if (this.$refs.formApplicationByPhysical.editingItem.applicationFiles) {\r\n                let promises = await this.$refs.formApplicationByPhysical.editingItem.applicationFiles.map(async f => {\r\n                    if (f.file.dataURL) {\r\n                        return f.file.dataURL\r\n                    } else {\r\n                        let res = await this.getBase64(f.file)\r\n                        return res\r\n                    }\r\n                })\r\n                return promises\r\n            }\r\n            return []\r\n        },\r\n        async save () {\r\n            this.computedObserver.validate().then(async valid => {\r\n                if (valid && this.hasProjectOwner()) {\r\n                    this.$refs.formApplicationByPhysical.editingItem.type = 'PHYSICAL'\r\n                    if (this.$refs.formApplicationByPhysical.editingItem.id) {\r\n                        crudAndListsService.update(MAIN_API_URL, this.$refs.formApplicationByPhysical.editingItem).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.$refs.formApplicationByPhysical.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    } else {\r\n\r\n                        /* let vm = this\r\n                        let base64PriceFiles = []\r\n                        if (this.$refs.formApplicationByPhysical.editingItem.applicationFiles) {\r\n                            await this.$refs.formApplicationByPhysical.editingItem.applicationFiles.forEach(async f => {\r\n                                if (f.file.dataURL) {\r\n                                    base64PriceFiles.push(f.file.dataURL)\r\n                                } else {\r\n                                    let res = await this.getBase64(f.file)\r\n                                    base64PriceFiles.push(res)\r\n                                }\r\n                            })\r\n                        }\r\n\r\n\r\n                        this.$refs.formApplicationByPhysical.editingItem.applicationFiles = base64PriceFiles */\r\n                        let promises = await this.returnBase64FilePromises()\r\n                        Promise.all(promises).then(results => {\r\n                            this.$refs.formApplicationByPhysical.editingItem.applicationFiles = results\r\n\r\n                            if (this.$refs.formApplicationByPhysical.editingItem.assignments) {\r\n                                let participants = this.$refs.formApplicationByPhysical.editingItem.assignments\r\n                                this.$refs.formApplicationByPhysical.editingItem.assignmentParticipantList = participants.map(el => {\r\n                                    return {\r\n                                        \"dateOfCreated\": el.dateOfCreated,\r\n                                        \"fromDepartmentId\": el.fromEmployee.departmentId,\r\n                                        \"fromEmployeeId\": el.fromEmployee.employeeId,\r\n                                        \"fromPositionId\": el.fromEmployee.positionId,\r\n                                        \"fromUserId\": el.fromEmployee.id,\r\n                                        \"resolution\": \"\",\r\n                                        \"sendingAssignmentParticipantList\": el.toEmployees.map(toEl => {\r\n                                            return {\r\n                                                \"mailingPurposeId\": toEl.mailingPurposeId,\r\n                                                \"processId\": el.processId,\r\n                                                \"toDepartmentId\": toEl.toEmployee.departmentId,\r\n                                                \"toEmployeeId\": toEl.toEmployee.employeeId,\r\n                                                \"toPositionId\": toEl.toEmployee.positionId,\r\n                                                \"toUserId\": toEl.toEmployee.id,\r\n                                                \"isProjectOwner\": toEl.isProjectOwner\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                })\r\n                                /* let objEml = this.$refs.formApplicationByPhysical.editingItem.assignments\r\n                                for (let i = 0; i < objEml.length; i++) {\r\n                  \r\n                                  if (i !== 0) {\r\n                                    this.$refs.formApplicationByPhysical.editingItem.applicationMembersDtos.push( {\r\n                                      fromEmployeeId: objEml[i - 1].employeeId,\r\n                                      toEmployeeId: objEml[i].employeeId,\r\n                  \r\n                                    } )\r\n                                  } else {\r\n                                    this.$refs.formApplicationByPhysical.editingItem.applicationMembersDtos.push( {\r\n                                      fromEmployeeId: null,\r\n                                      toEmployeeId: objEml[i].employeeId,\r\n                  \r\n                                    } )\r\n                                  }\r\n                                } */\r\n                                this.$refs.formApplicationByPhysical.editingItem.assignments = null\r\n                            }\r\n\r\n                            // let old_obj = {\r\n                            //     fileName: 'test',\r\n                            //     regNumber: this.$refs.formApplicationByPhysical.editingItem.numberOfIncomingDocument,\r\n                            //     date: this.$refs.formApplicationByPhysical.editingItem.dateOfIncomingDocument,\r\n                            // }\r\n                            /* let letterId = null\r\n                            await crudAndListsService.getLetterId(old_obj).then(res => {\r\n                                letterId = res.data.id\r\n                            }) */\r\n                            // this.$refs.formApplicationByPhysical.editingItem.legalId = null\r\n\r\n                            crudAndListsService.create(MAIN_API_URL, this.$refs.formApplicationByPhysical.editingItem, null, true).then(res => {\r\n                                this.computedObserver.reset()\r\n                                this.$refs.formApplicationByPhysical.editingItem = Object.assign({}, {});\r\n                                this.$router.go(-1)\r\n                                this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                            })\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        }\r\n    },\r\n    /*\r\n    * CREATED */\r\n    async created () {\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n    padding-top: 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/modules/commission/create"}]}