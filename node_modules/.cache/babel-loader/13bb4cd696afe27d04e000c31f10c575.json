{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\plugins\\vee-validate.js","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\plugins\\vee-validate.js","mtime":1674799498725},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1667355397815}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiQzpcXEFDUlUgUFJPSkVDVFxcRmFpciBUZWNoXFxvaGlyZ2lcXGFjcnUtZnJvbnRlbmRcXGFjcnUtZnJvbnRlbmRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lXFxoZWxwZXJzXFxlc21cXG9iamVjdFNwcmVhZDIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuY29uc3RydWN0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZG90LWFsbC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLnN0aWNreS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudGVzdC5qcyI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IHsgVG9rZW5TZXJ2aWNlIH0gZnJvbSAnQC9zaGFyZWQvc2VydmljZXMvc3RvcmFnZS5zZXJ2aWNlJzsKaW1wb3J0IGkxOG4gZnJvbSAnQC9pMThuJzsKaW1wb3J0IHsgVmFsaWRhdGlvblByb3ZpZGVyLCBWYWxpZGF0aW9uT2JzZXJ2ZXIgfSBmcm9tICd2ZWUtdmFsaWRhdGUnOwpWdWUuY29tcG9uZW50KCdWYWxpZGF0aW9uUHJvdmlkZXInLCBWYWxpZGF0aW9uUHJvdmlkZXIpOwpWdWUuY29tcG9uZW50KCdWYWxpZGF0aW9uT2JzZXJ2ZXInLCBWYWxpZGF0aW9uT2JzZXJ2ZXIpOwppbXBvcnQgeyBleHRlbmQgfSBmcm9tICd2ZWUtdmFsaWRhdGUnOwppbXBvcnQgeyByZXF1aXJlZCB9IGZyb20gJ3ZlZS12YWxpZGF0ZS9kaXN0L3J1bGVzJzsKaW1wb3J0IHsgY29uZmlybWVkIH0gZnJvbSAndmVlLXZhbGlkYXRlL2Rpc3QvcnVsZXMnOwppbXBvcnQgeyBpbnRlZ2VyIH0gZnJvbSAndmVlLXZhbGlkYXRlL2Rpc3QvcnVsZXMnOwppbXBvcnQgeyBkb3VibGUgfSBmcm9tICd2ZWUtdmFsaWRhdGUvZGlzdC9ydWxlcyc7CmltcG9ydCB7IG51bWVyaWMgfSBmcm9tICd2ZWUtdmFsaWRhdGUvZGlzdC9ydWxlcyc7CmltcG9ydCB7IHJlZ2V4IH0gZnJvbSAndmVlLXZhbGlkYXRlL2Rpc3QvcnVsZXMnOwppbXBvcnQgeyBtaW4gfSBmcm9tICd2ZWUtdmFsaWRhdGUvZGlzdC9ydWxlcyc7CmltcG9ydCB7IG1heCB9IGZyb20gJ3ZlZS12YWxpZGF0ZS9kaXN0L3J1bGVzJzsKaW1wb3J0IHsgZW1haWwgfSBmcm9tICd2ZWUtdmFsaWRhdGUvZGlzdC9ydWxlcyc7CmV4dGVuZCgncGFzc3dvcmQnLCB7CiAgcGFyYW1zOiBbJ3RhcmdldCddLAogIHZhbGlkYXRlOiBmdW5jdGlvbiB2YWxpZGF0ZSh2YWx1ZSwgX3JlZikgewogICAgdmFyIHRhcmdldCA9IF9yZWYudGFyZ2V0OwogICAgcmV0dXJuIHZhbHVlID09PSB0YXJnZXQ7CiAgfSwKICBtZXNzYWdlOiBpMThuLnQoJ3ZhbGlkYXRvci5wYXNzd29yZHNfbWlzbWF0Y2gnLCBUb2tlblNlcnZpY2UuZ2V0TG9jYWxlKCkpCn0pOwp2YXIgcGhvbmVPckVtYWlsUnVsZSA9IHsKICBnZXRNZXNzYWdlOiBmdW5jdGlvbiBnZXRNZXNzYWdlKGZpZWxkLCBhcmdzKSB7CiAgICByZXR1cm4gIlRoZSAiLmNvbmNhdChmaWVsZCwgIiBtdXN0IGJlIGVpdGhlciBhIHZhbGlkIHBob25lIG51bWJlciBvciBlLW1haWwiKTsKICB9LAogIHZhbGlkYXRlOiBmdW5jdGlvbiB2YWxpZGF0ZSh2YWx1ZSwgYXJncykgewogICAgLy8gQ3VzdG9tIHJlZ2V4IGZvciBhIHBob25lIG51bWJlcgogICAgdmFyIHV6YlBob25lUmVnZXggPSBuZXcgUmVnRXhwKCJeWytdezAsMX1bOC05XXsxLDN9WzAtOV17Mn1bLV17MX1bMC05XXszfVstXXsxfVswLTldezJ9Wy1dezF9WzAtOV17Mn0iKTsgLy8gQ2hlY2sgZm9yIGVpdGhlciBvZiB0aGVzZSB0byByZXR1cm4gdHJ1ZQoKICAgIHJldHVybiBlbWFpbCh2YWx1ZSkgfHwgdXpiUGhvbmVSZWdleC50ZXN0KHZhbHVlKTsKICB9Cn07Ci8qIGNvbnN0IHZhbGlkUGFzc3dvcmRSZWdleCA9IHsNCiAgICBnZXRNZXNzYWdlIChmaWVsZCwgYXJncykgew0KICAgICAgICByZXR1cm4gaTE4bi50KCd2YWxpZGF0b3IucmVnZXgnLCBUb2tlblNlcnZpY2UuZ2V0TG9jYWxlKCkpDQogICAgfSwNCiAgICB2YWxpZGF0ZSAodmFsdWUsIGFyZ3MpIHsNCiAgICAgICAgLy8gQ3VzdG9tIHJlZ2V4IGZvciBwYXNzd29yZA0KICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdXNlbGVzcy1lc2NhcGUNCiAgICAgICAgbGV0IHZhbGlkUGFzc3dvcmRSZWcgPSBuZXcgUmVnRXhwKCJeKD89LipbQS1aYS16XSkoPz0uKlxkKVtBLVphLXpcZF17OCx9JCIpOw0KICAgICAgICAvLyBDaGVjayBmb3IgZWl0aGVyIG9mIHRoZXNlIHRvIHJldHVybiB0cnVlDQogICAgICAgIHJldHVybiB2YWxpZFBhc3N3b3JkUmVnLnRlc3QodmFsdWUpOw0KICAgIH0NCn07DQpleHRlbmQoJ3ZhbGlkUGFzc3dvcmQnLCB7DQogICAgLi4udmFsaWRQYXNzd29yZFJlZ2V4LA0KICAgIC8vKyB2YWx1ZXMuX2ZpZWxkXw0KICAgIG1lc3NhZ2U6IChfLCB2YWx1ZXMpID0+IGkxOG4udCgndmFsaWRhdG9yLnJlZ2V4JywgVG9rZW5TZXJ2aWNlLmdldExvY2FsZSgpKQ0KfSk7ICovCgpleHRlbmQoJ3Bob25lT3JFbWFpbCcsIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcGhvbmVPckVtYWlsUnVsZSksIHt9LCB7CiAgLy8rIHZhbHVlcy5fZmllbGRfCiAgbWVzc2FnZTogZnVuY3Rpb24gbWVzc2FnZShfLCB2YWx1ZXMpIHsKICAgIHJldHVybiBpMThuLnQoJ3ZhbGlkYXRvci5yZXF1aXJlZCcsIFRva2VuU2VydmljZS5nZXRMb2NhbGUoKSk7CiAgfQp9KSk7CmV4dGVuZCgncmVxdWlyZWQnLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHJlcXVpcmVkKSwge30sIHsKICAvLysgdmFsdWVzLl9maWVsZF8KICBtZXNzYWdlOiBmdW5jdGlvbiBtZXNzYWdlKF8sIHZhbHVlcykgewogICAgcmV0dXJuIGkxOG4udCgndmFsaWRhdG9yLnJlcXVpcmVkJywgVG9rZW5TZXJ2aWNlLmdldExvY2FsZSgpKTsKICB9Cn0pKTsKZXh0ZW5kKCdlbWFpbCcsIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZW1haWwpLCB7fSwgewogIC8vKyB2YWx1ZXMuX2ZpZWxkXwogIG1lc3NhZ2U6IGZ1bmN0aW9uIG1lc3NhZ2UoXywgdmFsdWVzKSB7CiAgICByZXR1cm4gaTE4bi50KCd2YWxpZGF0b3IuZW1haWwnLCBUb2tlblNlcnZpY2UuZ2V0TG9jYWxlKCkpOwogIH0KfSkpOwpleHRlbmQoJ3JlZ2V4JywgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCByZWdleCksIHt9LCB7CiAgLy8rIHZhbHVlcy5fZmllbGRfCiAgbWVzc2FnZTogZnVuY3Rpb24gbWVzc2FnZShfLCB2YWx1ZXMpIHsKICAgIHJldHVybiBpMThuLnQoJ3ZhbGlkYXRvci5yZWdleCcsIFRva2VuU2VydmljZS5nZXRMb2NhbGUoKSk7CiAgfQp9KSk7CmV4dGVuZCgnaW50ZWdlcicsIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgaW50ZWdlciksIHt9LCB7CiAgLy8rIHZhbHVlcy5fZmllbGRfCiAgbWVzc2FnZTogZnVuY3Rpb24gbWVzc2FnZShfLCB2YWx1ZXMpIHsKICAgIHJldHVybiBpMThuLnQoJ3ZhbGlkYXRvci5pbnRlZ2VyJywgVG9rZW5TZXJ2aWNlLmdldExvY2FsZSgpKTsKICB9Cn0pKTsKZXh0ZW5kKCdkb3VibGUnLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIGRvdWJsZSksIHt9LCB7CiAgLy8rIHZhbHVlcy5fZmllbGRfCiAgbWVzc2FnZTogZnVuY3Rpb24gbWVzc2FnZShfLCB2YWx1ZXMpIHsKICAgIHJldHVybiBpMThuLnQoJ3ZhbGlkYXRvci5kb3VibGUnLCBUb2tlblNlcnZpY2UuZ2V0TG9jYWxlKCkpOwogIH0KfSkpOwpleHRlbmQoJ251bWVyaWMnLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG51bWVyaWMpLCB7fSwgewogIC8vKyB2YWx1ZXMuX2ZpZWxkXwogIG1lc3NhZ2U6IGZ1bmN0aW9uIG1lc3NhZ2UoXywgdmFsdWVzKSB7CiAgICByZXR1cm4gaTE4bi50KCd2YWxpZGF0b3IubnVtZXJpYycsIFRva2VuU2VydmljZS5nZXRMb2NhbGUoKSk7CiAgfQp9KSk7CmV4dGVuZCgnbWluJywgX29iamVjdFNwcmVhZChfb2JqZWN0U3ByZWFkKHt9LCBtaW4pLCB7fSwgewogIC8vKyB2YWx1ZXMuX2ZpZWxkXwogIG1lc3NhZ2U6IGZ1bmN0aW9uIG1lc3NhZ2UoXywgdmFsdWVzKSB7CiAgICByZXR1cm4gaTE4bi50KCd2YWxpZGF0b3IubWluJywgVG9rZW5TZXJ2aWNlLmdldExvY2FsZSgpKTsKICB9Cn0pKTsKZXh0ZW5kKCdtYXgnLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIG1heCksIHt9LCB7CiAgLy8rIHZhbHVlcy5fZmllbGRfCiAgbWVzc2FnZTogZnVuY3Rpb24gbWVzc2FnZShfLCB2YWx1ZXMpIHsKICAgIHJldHVybiBpMThuLnQoJ3ZhbGlkYXRvci5tYXgnLCBUb2tlblNlcnZpY2UuZ2V0TG9jYWxlKCkpOwogIH0KfSkpOwpleHRlbmQoJ2NvbmZpcm1lZCcsIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgY29uZmlybWVkKSwge30sIHsKICAvLysgdmFsdWVzLl9maWVsZF8KICBtZXNzYWdlOiBmdW5jdGlvbiBtZXNzYWdlKF8sIHZhbHVlcykgewogICAgcmV0dXJuIGkxOG4udCgndmFsaWRhdG9yLmNvbmZpcm1lZCcsIFRva2VuU2VydmljZS5nZXRMb2NhbGUoKSk7CiAgfQp9KSk7CmV4dGVuZCgncG9zaXRpdmUnLCBmdW5jdGlvbiAodmFsdWUpIHsKICBpZiAodmFsdWUgPj0gMCkgewogICAgcmV0dXJuIHRydWU7CiAgfQoKICByZXR1cm4gaTE4bi50KCd2YWxpZGF0b3IucG9zaXRpdmUnLCBUb2tlblNlcnZpY2UuZ2V0TG9jYWxlKCkpOwp9KTsKZXh0ZW5kKCdwb3NpdGl2ZU5vdFplcm8nLCBmdW5jdGlvbiAodmFsdWUpIHsKICBpZiAodmFsdWUgPiAwKSB7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIHJldHVybiBpMThuLnQoJ3ZhbGlkYXRvci5wb3NpdGl2ZScsIFRva2VuU2VydmljZS5nZXRMb2NhbGUoKSk7Cn0pOwpleHRlbmQoJ25lZ2F0aXZlJywgZnVuY3Rpb24gKHZhbHVlKSB7CiAgaWYgKC9eLVxkKlwuP1xkKyQvLnRlc3QodmFsdWUpKSB7CiAgICByZXR1cm4gdHJ1ZTsKICB9CgogIHJldHVybiBpMThuLnQoJ3ZhbGlkYXRvci5uZWdhdGl2ZScsIFRva2VuU2VydmljZS5nZXRMb2NhbGUoKSk7Cn0pOwpleHRlbmQoJ25vdGVtcHR5JywgZnVuY3Rpb24gKHZhbHVlKSB7CiAgaWYgKHZhbHVlICE9PSAnJykgewogICAgcmV0dXJuIHRydWU7CiAgfQoKICByZXR1cm4gJ1RoZSB7X2ZpZWxkX30gZmllbGQgbXVzdCBiZSBhIHBvc2l0aXZlIG51bWJlcic7Cn0pOwpleHRlbmQoJ3Bob25lTnVtYmVyJywgewogIHZhbGlkYXRlOiBmdW5jdGlvbiB2YWxpZGF0ZSh2YWx1ZSkgewogICAgdmFyIHV6YlBob25lUmVnZXggPSBuZXcgUmVnRXhwKCJeWytdezAsMX1bOC05XXsxLDN9WzAtOV17Mn1bLV17MX1bMC05XXszfVstXXsxfVswLTldezJ9Wy1dezF9WzAtOV17Mn0iKTsKICAgIHJldHVybiB1emJQaG9uZVJlZ2V4LnRlc3QodmFsdWUpOwogIH0KfSk7"},{"version":3,"sources":["C:/ACRU PROJECT/Fair Tech/ohirgi/acru-frontend/acru-frontend/src/plugins/vee-validate.js"],"names":["Vue","TokenService","i18n","ValidationProvider","ValidationObserver","component","extend","required","confirmed","integer","double","numeric","regex","min","max","email","params","validate","value","target","message","t","getLocale","phoneOrEmailRule","getMessage","field","args","uzbPhoneRegex","RegExp","test","_","values"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport {\r\n    TokenService\r\n} from '@/shared/services/storage.service'\r\nimport i18n from '@/i18n'\r\n\r\nimport { ValidationProvider, ValidationObserver } from 'vee-validate'\r\n\r\nVue.component('ValidationProvider', ValidationProvider);\r\nVue.component('ValidationObserver', ValidationObserver);\r\n\r\nimport { extend } from 'vee-validate';\r\nimport { required } from 'vee-validate/dist/rules';\r\nimport { confirmed } from 'vee-validate/dist/rules';\r\nimport { integer } from 'vee-validate/dist/rules';\r\nimport { double } from 'vee-validate/dist/rules';\r\nimport { numeric } from 'vee-validate/dist/rules';\r\nimport { regex } from 'vee-validate/dist/rules';\r\nimport { min } from 'vee-validate/dist/rules';\r\nimport { max } from 'vee-validate/dist/rules';\r\nimport { email } from 'vee-validate/dist/rules';\r\n\r\nextend('password', {\r\n    params: ['target'],\r\n    validate (value, { target }) {\r\n        return value === target;\r\n    },\r\n    message: i18n.t('validator.passwords_mismatch', TokenService.getLocale())\r\n});\r\n\r\nconst phoneOrEmailRule = {\r\n    getMessage (field, args) {\r\n        return `The ${field} must be either a valid phone number or e-mail`;\r\n    },\r\n    validate (value, args) {\r\n        // Custom regex for a phone number\r\n        let uzbPhoneRegex = new RegExp(\"^[+]{0,1}[8-9]{1,3}[0-9]{2}[-]{1}[0-9]{3}[-]{1}[0-9]{2}[-]{1}[0-9]{2}\");\r\n\r\n        // Check for either of these to return true\r\n        return email(value) || uzbPhoneRegex.test(value);\r\n    }\r\n};\r\n/* const validPasswordRegex = {\r\n    getMessage (field, args) {\r\n        return i18n.t('validator.regex', TokenService.getLocale())\r\n    },\r\n    validate (value, args) {\r\n        // Custom regex for password\r\n        // eslint-disable-next-line no-useless-escape\r\n        let validPasswordReg = new RegExp(\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\");\r\n        // Check for either of these to return true\r\n        return validPasswordReg.test(value);\r\n    }\r\n};\r\nextend('validPassword', {\r\n    ...validPasswordRegex,\r\n    //+ values._field_\r\n    message: (_, values) => i18n.t('validator.regex', TokenService.getLocale())\r\n}); */\r\nextend('phoneOrEmail', {\r\n    ...phoneOrEmailRule,\r\n    //+ values._field_\r\n    message: (_, values) => i18n.t('validator.required', TokenService.getLocale())\r\n});\r\n\r\nextend('required', {\r\n    ...required,\r\n    //+ values._field_\r\n    message: (_, values) => i18n.t('validator.required', TokenService.getLocale())\r\n});\r\nextend('email', {\r\n    ...email,\r\n    //+ values._field_\r\n    message: (_, values) => i18n.t('validator.email', TokenService.getLocale())\r\n});\r\nextend('regex', {\r\n    ...regex,\r\n    //+ values._field_\r\n    message: (_, values) => i18n.t('validator.regex', TokenService.getLocale())\r\n});\r\nextend('integer', {\r\n    ...integer,\r\n    //+ values._field_\r\n    message: (_, values) => i18n.t('validator.integer', TokenService.getLocale())\r\n});\r\nextend('double', {\r\n    ...double,\r\n    //+ values._field_\r\n    message: (_, values) => i18n.t('validator.double', TokenService.getLocale())\r\n});\r\nextend('numeric', {\r\n    ...numeric,\r\n    //+ values._field_\r\n    message: (_, values) => i18n.t('validator.numeric', TokenService.getLocale())\r\n});\r\nextend('min', {\r\n    ...min,\r\n    //+ values._field_\r\n    message: (_, values) => i18n.t('validator.min', TokenService.getLocale())\r\n});\r\nextend('max', {\r\n    ...max,\r\n    //+ values._field_\r\n    message: (_, values) => i18n.t('validator.max', TokenService.getLocale())\r\n});\r\nextend('confirmed', {\r\n    ...confirmed,\r\n    //+ values._field_\r\n    message: (_, values) => i18n.t('validator.confirmed', TokenService.getLocale())\r\n});\r\nextend('positive', value => {\r\n    if (value >= 0) {\r\n        return true;\r\n    }\r\n\r\n    return i18n.t('validator.positive', TokenService.getLocale());\r\n});\r\nextend('positiveNotZero', value => {\r\n    if (value > 0) {\r\n        return true;\r\n    }\r\n\r\n    return i18n.t('validator.positive', TokenService.getLocale());\r\n});\r\nextend('negative', value => {\r\n    if (/^-\\d*\\.?\\d+$/.test(value)) {\r\n        return true;\r\n    }\r\n\r\n    return i18n.t('validator.negative', TokenService.getLocale());\r\n});\r\n\r\nextend('notempty', value => {\r\n    if (value !== '') {\r\n        return true;\r\n    }\r\n\r\n    return 'The {_field_} field must be a positive number';\r\n})\r\nextend('phoneNumber', {\r\n    validate: value => {\r\n        let uzbPhoneRegex = new RegExp(\"^[+]{0,1}[8-9]{1,3}[0-9]{2}[-]{1}[0-9]{3}[-]{1}[0-9]{2}[-]{1}[0-9]{2}\");\r\n        return uzbPhoneRegex.test(value);\r\n    }\r\n});\r\n"]}]}