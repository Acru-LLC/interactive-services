{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\reestr-contractors\\modules\\natural\\CreateOrUpdateRemoveDoc.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\reestr-contractors\\modules\\natural\\CreateOrUpdateRemoveDoc.vue","mtime":1674799496516},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CreateOrUpdateRemoveDoc.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <base-create-or-update-wrapper\r\n        @save=\"save\"\r\n        has-save-suspend\r\n        :custom-title=\"$t('actions.remove_from_reestr')\"\r\n    >\r\n        <ValidationObserver\r\n            ref=\"observer\"\r\n            v-slot=\"{}\"\r\n        >\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.orderNumber\"\r\n                        :label=\"$t('column.order_number')\"\r\n                        :placeholder=\"$t('column.order_number')\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseDatePickerWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        :label=\"$t('column.removed_date_from_reestr')\"\r\n                        :placeholder=\"$t('column.removed_date_from_reestr')\"\r\n                        disable-after\r\n                        v-model=\"editingItem.reestrClosedDate\"\r\n                        lang=\"ru\"\r\n                    ></BaseDatePickerWithValidation>\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <!-- <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.regionId\"\r\n                        :options=\"regions.map(e => e.regionId)\"\r\n                        @select=\"regionSelected\"\r\n                        :allow-empty=\"false\"\r\n                        :label=\"$t('column.region')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelRegion\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col> -->\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <b-row>\r\n                        <b-col :cols=\"$can('republic', 'for reestr') ? 8 : 12\">\r\n                            <!-- DISABLED STATE -->\r\n                            <BaseMultiselectWithValidation\r\n                                v-if=\"editingItem.isRepublic\"\r\n                                not-required\r\n                                disabled\r\n                                :value=\"null\"\r\n                                :options=\"regions.map(e => e.regionId)\"\r\n                                :custom-styles=\"$can('republic', 'for reestr') ? `grid-template-columns: 38% 62%;` : ''\"\r\n                                :custom-label=\"customLabelRegion\"\r\n                                placeholder=\"\"\r\n                                :label=\"$t('column.region')\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                            <BaseMultiselectWithValidation\r\n                                v-else\r\n                                rules=\"required\"\r\n                                class=\"required\"\r\n                                v-model=\"editingItem.regionId\"\r\n                                :options=\"regions.map(e => e.regionId)\"\r\n                                :custom-styles=\"$can('republic', 'for reestr') ? `grid-template-columns: 38% 62%;` : ''\"\r\n                                @select=\"regionSelected\"\r\n                                :allow-empty=\"false\"\r\n                                :label=\"$t('column.region')\"\r\n                                placeholder=\"\"\r\n                                :custom-label=\"customLabelRegion\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col\r\n                            cols=\"4\"\r\n                            v-if=\"$can('republic', 'for reestr')\"\r\n                        >\r\n                            <div class=\"form-check form-check-right\">\r\n                                <input\r\n                                    v-model=\"editingItem.isRepublic\"\r\n                                    @change=\"regionSelected(null, false, $event)\"\r\n                                    class=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    id=\"formCheckIsLegal\"\r\n                                />\r\n                                <label\r\n                                    class=\"form-check-label font-weight-normal\"\r\n                                    for=\"formCheckIsLegal\"\r\n                                >\r\n                                    {{ $t('column.is_republic') }}\r\n                                </label>\r\n                            </div>\r\n                        </b-col>\r\n                    </b-row>\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryProductOrServiceTypeId\"\r\n                        @select=\"productTypeSelected\"\r\n                        :allow-empty=\"false\"\r\n                        :options=\"productTypes.map(e => e.typeId)\"\r\n                        :label=\"$t('column.product_or_service_type')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelProductType\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.directoryProductOrServiceId\"\r\n                        @select=\"productOrServiceSelected\"\r\n                        :options=\"products.map(e => e.productOrServiceId)\"\r\n                        :label=\"$t('submodules.product_or_services.title')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelProduct\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                        :allow-empty=\"false\"\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingProductOrServices\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        v-if=\"editingItem.isRepublic\"\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.contractorId\"\r\n                        :allow-empty=\"false\"\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingContractors\"\r\n                        :options=\"contractors.map(e => e.id)\"\r\n                        :label=\"$t('column.business_entity')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelContractorForRepublic\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                    <BaseMultiselectWithValidation\r\n                        v-else\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.contractorId\"\r\n                        :allow-empty=\"false\"\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingContractors\"\r\n                        :options=\"contractors.map(e => e.contractorId)\"\r\n                        :label=\"$t('column.business_entity')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelContractor\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <ValidationProvider\r\n                        name=\"supplementDoc\"\r\n                        rules=\"required\"\r\n                        mode=\"passive\"\r\n                    >\r\n                        <template v-slot:default=\"\">\r\n                            <BaseFileUploaderWithValidation\r\n                                class=\"required\"\r\n                                ref=\"supplementDocUploader\"\r\n                                v-model=\"editingItem.supplementDocs\"\r\n                                data-vv-name=\"supplementDocFile\"\r\n                                data-vv-as=\"SupplementDocFile\"\r\n                                :max-files=\"1\"\r\n                                :label-on-top=\"false\"\r\n                                :label=\"$t('column.ilova')\"\r\n                            ></BaseFileUploaderWithValidation>\r\n                        </template>\r\n                    </ValidationProvider>\r\n                </b-col>\r\n            </b-row>\r\n        </ValidationObserver>\r\n    </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'reestr/contractor-reestr-documents'\r\nconst APPEND_API_URL_NATURAL = 'close-estestveniy'\r\nconst APPEND_API_URL_DOMINANT = 'close-daminiriushiy'\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport helperService from \"@/shared/services/helper.service\"\r\n\r\nexport default {\r\n    name: \"CreateOrUpdateRemoveDoc\",\r\n    /*\r\n    * COMPONENTS */\r\n    components: {},\r\n    /*\r\n    * DATA */\r\n    data () {\r\n        return {\r\n            editingItem: {},\r\n            regions: [],\r\n            hasNextPageContractors: false,\r\n            hasNextPageProductOrServices: false,\r\n            contractors: [],\r\n            debounce: null,\r\n            isLoadingContractors: false,\r\n            isLoadingProductOrServices: false,\r\n            contractorSearchPayload: {},\r\n            productOrServicesSearchPayload: {},\r\n            productTypes: [],\r\n            products: []\r\n        }\r\n    },\r\n    /*\r\n    * COMPUTED */\r\n    computed: {\r\n        computedObserver () {\r\n            return this.$refs.observer\r\n        },\r\n        isModeCreate () {\r\n            return this.$route.name === 'CreateRemoveDocNaturalContractorReestr' || this.$route.name === 'CreateRemoveDocDominantContractorReestr'\r\n        },\r\n        productOrServicesByContractorId () {\r\n            let foundContractor = this.contractors.find(el => el.contractorId == this.editingItem.contractorId)\r\n            if (foundContractor) {\r\n                return foundContractor.productOrServicesByDistrict\r\n            } else {\r\n                return []\r\n            }\r\n        },\r\n        isDominant () {\r\n            return this.$route.name === 'CreateRemoveDocDominantContractorReestr'\r\n        },\r\n        isNatural () {\r\n            return this.$route.name === 'CreateRemoveDocNaturalContractorReestr'\r\n        }\r\n    },\r\n    /*\r\n    * METHODS */\r\n    methods: {\r\n        save () {\r\n            this.computedObserver.validate().then(async valid => {\r\n                if (valid) {\r\n                    if (this.editingItem.id) {\r\n                        crudAndListsService.update(MAIN_API_URL, this.makeAndReturnFormDataForBase64()).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    } else {\r\n                        let payload = await this.makeAndReturnFormDataForBase64()\r\n                        crudAndListsService.create(MAIN_API_URL, payload,\r\n                            `for-${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}`).then(res => {\r\n                                this.computedObserver.reset()\r\n                                this.editingItem = Object.assign({}, {});\r\n                                this.$router.go(-1)\r\n                                this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                            })\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        },\r\n        contractorsByProductOrServiceId (productOrServiceId) {\r\n            let foundEl = this.products.find(el => el.productOrServiceId == productOrServiceId)\r\n            if (foundEl) {\r\n                return foundEl.contractorsByDistrict\r\n            } else {\r\n                return []\r\n            }\r\n        },\r\n        /* makeAndReturnFormData () {\r\n            let form = new FormData();\r\n            this.editingItem.supplementDocs.forEach(f => {\r\n                form.append(\"file\", f.file);\r\n            })\r\n            form.append(\"contractorId\", this.editingItem.contractorId)\r\n            form.append(\"regionId\", this.editingItem.regionId)\r\n            // form.append(\"directoryProductOrServiceTypeId\", this.editingItem.directoryProductOrServiceTypeId)\r\n            // form.append(\"governmentPercentage\", this.editingItem.governmentPercentage)\r\n            form.append(\"orderNumber\", this.editingItem.orderNumber)\r\n            form.append(\"reestrClosedDate\", this.editingItem.reestrClosedDate)\r\n            this.editingItem.directoryProductOrServiceIds.forEach(id => {\r\n                form.append(\"directoryProductOrServiceIds\", id)\r\n            })\r\n            return form\r\n        }, */\r\n        getBase64 (file) {\r\n            return new Promise((resolve, reject) => {\r\n                const reader = new FileReader();\r\n                reader.readAsDataURL(file);\r\n                reader.onload = () => resolve(reader.result);\r\n                reader.onerror = error => reject(error);\r\n            });\r\n        },\r\n        async makeAndReturnFormDataForBase64 () {\r\n            if (this.editingItem.supplementDocs[0].file.dataURL) {\r\n                this.editingItem.file = this.editingItem.supplementDocs[0].file.dataURL\r\n                return this.editingItem\r\n            } else {\r\n                let res = await this.getBase64(this.editingItem.supplementDocs[0].file)\r\n                this.editingItem.file = res\r\n                return this.editingItem\r\n            }\r\n\r\n        },\r\n        async regionSelected ($event, dontResetDependent = false, forRepublicEvent) {\r\n            if (!dontResetDependent) {\r\n                this.productTypes = []\r\n                this.editingItem.directoryProductOrServiceTypeId = null\r\n\r\n                this.editingItem.contractorId = null\r\n                this.contractors = []\r\n\r\n                this.editingItem.directoryProductOrServiceId = null\r\n            }\r\n            if (this.editingItem.isRepublic) {\r\n                helperService\r\n                    .getReestrByRepublic(this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : '')\r\n                    .then((res) => {\r\n                        this.productTypes = res.data;\r\n                    })\r\n                    .catch(e => {\r\n                        this.productTypes = [];\r\n                    })\r\n            } else if ($event || this.editingItem.regionId) {\r\n                helperService\r\n                    .getReestrByRegionId($event ? $event : this.editingItem.regionId, this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : '')\r\n                    .then((res) => {\r\n                        this.productTypes = res.data;\r\n                    })\r\n                    .catch(e => {\r\n                        this.productTypes = [];\r\n                    })\r\n            }\r\n        },\r\n        customLabelRegion (opt) {\r\n            let selected = this.regions.find(e => e.regionId == (opt.regionId ? opt.regionId : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.regionNameRu,\r\n                    nameLt: selected.regionNameLt,\r\n                    nameUz: selected.regionNameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelProduct (opt) {\r\n            let selected = this.products.find(e => e.productOrServiceId == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.productOrServiceNameRu,\r\n                    nameLt: selected.productOrServiceNameLt,\r\n                    nameUz: selected.productOrServiceNameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelProductType (opt) {\r\n            let selected = this.productTypes.find(e => e.typeId == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.typeNameRu,\r\n                    nameLt: selected.typeNameLt,\r\n                    nameUz: selected.typeNameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        async productTypeSelected ($event, dontResetDistrict = false) {\r\n            if (!dontResetDistrict) {\r\n                this.editingItem.contractorId = null\r\n                this.contractors = []\r\n                this.editingItem.directoryProductOrServiceId = null\r\n                this.products = []\r\n            }\r\n            if ($event) {\r\n                // GET PRODUCT_OR_SERVICES\r\n                await this.fetchContractors(this.editingItem.regionId, $event)\r\n                // await helperService.getProductsByProdectTypeId($event)\r\n                //     .then(res => {\r\n                //         this.products = res.data\r\n                //     })\r\n                //     .catch(e => {\r\n                //         this.products = []\r\n                //         console.log(e)\r\n                //     })\r\n            }\r\n        },\r\n        async contractorSelected ($event, dontResetDependent = false) {\r\n            if (!dontResetDependent) {\r\n                this.editingItem.directoryProductOrServiceId = null\r\n                this.products = []\r\n            }\r\n        },\r\n        async productOrServiceSelected ($event, dontResetDependent = false) {\r\n            if (!dontResetDependent) {\r\n                this.editingItem.contractorId = null\r\n                this.contractors = []\r\n            }\r\n            if ($event) {\r\n                if (this.editingItem.directoryProductOrServiceTypeId && this.editingItem.isRepublic) {\r\n                    this.isLoadingContractors = true\r\n                    await helperService.getContractorsByProdectOrServiceTypeIdAndProductOrServiceId(`${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?typeId=${this.editingItem.directoryProductOrServiceTypeId}&productOrServiceId=${$event}`)\r\n                        .then(res => {\r\n                            this.contractors = res.data\r\n                        })\r\n                        .catch(e => {\r\n                            this.contractors = []\r\n                            console.log(e)\r\n                        })\r\n                        .finally(() => {\r\n                            this.isLoadingContractors = false\r\n                        })\r\n                } else {\r\n                    this.contractors = this.contractorsByProductOrServiceId($event)\r\n                }\r\n            } else {\r\n                this.contractors = []\r\n            }\r\n        },\r\n        /* contractorReachedEndOfList (e) {\r\n            if (e) {\r\n                this.fetchContractors()\r\n            }\r\n        }, */\r\n        productOrServicesReachedEndOfList (e) {\r\n            if (e) {\r\n                this.fetchProductOrServices(this.editingItem.directoryProductOrServiceTypeId)\r\n            }\r\n        },\r\n        customLabelContractorForRepublic (opt) {\r\n            let selected = this.contractors.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${selected.name}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelContractor (opt) {\r\n            let selected = this.contractors.find(e => e.contractorId == opt);\r\n            if (selected) {\r\n                return `${selected.contractorFullName}`\r\n            }\r\n            return ``;\r\n        },\r\n        /* async debounceSearchProductOrServices (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchContractorsWithKeyword(searchText);\r\n            }, 1000);\r\n        }, */\r\n        /* async debounceSearchContractors (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchContractorsWithKeyword(searchText);\r\n            }, 1000);\r\n        }, */\r\n        fetchProductOrServicesWithKeyword (keyword) {\r\n            this.products = []\r\n            this.productOrServicesSearchPayload.page = 1\r\n            this.productOrServicesSearchPayload.keyword = keyword ? keyword : ''\r\n            this.fetchProductOrServices(this.editingItem.directoryProductOrServiceTypeId)\r\n        },\r\n        async fetchProductOrServices (typeId) {\r\n            this.isLoadingProductOrServices = true\r\n            await helperService.getProductOrServicesByTypeId(typeId, this.productOrServicesSearchPayload)\r\n                .then(res => {\r\n                    this.products.push(...res.data.list)\r\n                    this.hasNextPageProductOrServices = res.data.total / this.productOrServicesSearchPayload.itemsPerPage > this.productOrServicesSearchPayload.page\r\n                    this.productOrServicesSearchPayload.page += 1\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    this.products = []\r\n                })\r\n                .finally(() => {\r\n                    this.isLoadingProductOrServices = false\r\n                })\r\n        },\r\n        /* fetchContractorsWithKeyword (keyword) {\r\n            this.contractors = []\r\n            this.contractorSearchPayload.page = 1\r\n            this.contractorSearchPayload.keyword = keyword ? keyword : ''\r\n            this.fetchContractors()\r\n        }, */\r\n        async fetchContractors (regionId, typeId) {\r\n            if (this.editingItem.isRepublic && typeId) {\r\n                this.isLoadingProductOrServices = true\r\n                helperService.searchReestrListByRepublic(`${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?typeId=${typeId}`)\r\n                    .then(res => {\r\n                        this.products = res.data\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                        this.products = []\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoadingProductOrServices = false\r\n                    })\r\n            } else if (regionId && typeId) {\r\n                this.isLoadingProductOrServices = true\r\n                await crudAndListsService.searchList(MAIN_API_URL, null, `${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?regionId=${regionId}&typeId=${typeId}`)\r\n                    .then(res => {\r\n                        this.products = res.data\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                        this.products = []\r\n                    })\r\n                    .finally(() => {\r\n                        this.isLoadingProductOrServices = false\r\n                    })\r\n            } else {\r\n                this.editingItem.directoryProductOrServiceId = null\r\n                this.products = []\r\n            }\r\n        },\r\n    },\r\n    /*\r\n    * CREATED */\r\n    async created () {\r\n        this.contractorSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        this.productOrServicesSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        this.var_default_search_payload.itemsPerPage = 500\r\n        if (this.isModeCreate) {\r\n            await crudAndListsService.getEmpty(MAIN_API_URL)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        } else {\r\n            await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, false)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n        // GET CONTRACTORS\r\n        // await this.fetchContractors()\r\n\r\n        // GET REGIONS\r\n        await helperService.fetchRegionsForContractorReestrByCurrentUserId()\r\n            .then(res => {\r\n                this.regions = res.data\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n    padding-top: 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n}\r\n</style>"],"sourceRoot":"src/modules/reestr-contractors/modules/natural"}]}