{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\integration\\modules\\adliya-vazirlik\\Confirm.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\integration\\modules\\adliya-vazirlik\\Confirm.vue","mtime":1674799496856},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Confirm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA,OAAA,mBAAA,MAAA,yCAAA;AAEA,IAAA,YAAA,GAAA,gBAAA;AACA,OAAA,UAAA,MAAA,yCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,IAAA,EAAA,IADA;AAEA,MAAA,sBAAA,EAAA,KAFA;AAGA,MAAA,oBAAA,EAAA,KAHA;AAIA,MAAA,WAAA,EAAA,EAJA;AAKA,MAAA,uBAAA,EAAA;AACA,QAAA,YAAA,EAAA;AADA,OALA;AAQA,MAAA,QAAA,EAAA,KARA;AASA,MAAA,IAAA,EAAA;AACA,QAAA,cAAA,EAAA,IADA;AAEA,QAAA,YAAA,EAAA;AAFA,OATA;AAaA,MAAA,QAAA,EAAA;AAbA,KAAA;AAeA,GAlBA;AAmBA,EAAA,QAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,CAAA,KAAA,IAAA,EAAA,OAAA,MAAA;;AACA,WAAA,IAAA,KAAA,IAAA,KAAA,IAAA,EAAA;AACA,YAAA,KAAA,MAAA,CAAA,KAAA,CAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA;AACA,YAAA,KAAA,EAAA,KAAA,MAAA,CAAA,KAAA,CADA;AAEA,YAAA,KAAA,EAAA,KAAA,IAAA,CAAA,KAAA;AAFA,WAAA;AAIA;AACA;;AACA,aAAA,MAAA;AACA,KAbA;AAcA,IAAA,MAdA,oBAcA;AACA,aAAA;AACA,QAAA,OAAA,EAAA,KAAA,EAAA,CAAA,+CAAA,CADA;AAEA,QAAA,IAAA,EAAA,KAAA,EAAA,CAAA,4CAAA,CAFA;AAGA,QAAA,GAAA,EAAA,KAAA,EAAA,CAAA,2CAAA,CAHA;AAIA,QAAA,SAAA,EAAA,KAAA,EAAA,CAAA,iDAAA,CAJA;AAKA,QAAA,KAAA,EAAA,KAAA,EAAA,CAAA,6CAAA,CALA;AAMA,QAAA,QAAA,EAAA,KAAA,EAAA,CAAA,gDAAA,CANA;AAOA,QAAA,MAAA,EAAA,KAAA,EAAA,CAAA,8CAAA,CAPA;AAQA,QAAA,UAAA,EAAA,KAAA,EAAA,CAAA,kDAAA,CARA;AASA,QAAA,MAAA,EAAA,KAAA,EAAA,CAAA,8CAAA;AATA,OAAA;AAWA,KA1BA;AA2BA,IAAA,gBA3BA,8BA2BA;AACA,aAAA,KAAA,KAAA,CAAA,QAAA;AACA;AA7BA,GAnBA;AAkDA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,cADA,GACA,KAAA,CAAA,IADA,CACA,cADA;AAAA;AAAA,uBAEA,UAAA,CAAA,GAAA,CAAA,YAAA,GAAA,OAAA,GAAA,cAAA,EAAA,IAAA,EACA,IADA,CACA,UAAA,QAAA,EAAA;AACA,kBAAA,KAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AACA,iBAHA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA,KAPA;AAQA,IAAA,0BARA,sCAQA,CARA,EAQA;AACA,UAAA,CAAA,IAAA,CAAA,KAAA,oBAAA,EAAA;AACA,aAAA,gBAAA;AACA;AACA,KAZA;AAaA,IAAA,yBAbA,qCAaA,UAbA,EAaA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,YAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,gBAAA,MAAA,CAAA,QAAA,GAAA,UAAA,uEAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCACA,MAAA,CAAA,2BAAA,CAAA,UAAA,CADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAA,IAEA,IAFA,CAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,KAlBA;AAmBA,IAAA,2BAnBA,uCAmBA,OAnBA,EAmBA;AAAA,UAAA,iBAAA,uEAAA,KAAA;AACA,WAAA,WAAA,GAAA,EAAA;AACA,WAAA,uBAAA,CAAA,IAAA,GAAA,CAAA;AACA,WAAA,uBAAA,CAAA,OAAA,GAAA,OAAA,GAAA,OAAA,GAAA,EAAA;AACA,WAAA,gBAAA,CAAA,iBAAA;AACA,KAxBA;AAyBA,IAAA,gBAzBA,4BAyBA,iBAzBA,EAyBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,oBAAA,GAAA,IAAA;AADA;AAAA,uBAEA,mBAAA,CAAA,qBAAA,CAAA,YAAA,EAAA,MAAA,CAAA,uBAAA,EAAA,eAAA,EAAA,CAAA,MAAA,CAAA,kBAAA,EACA,IADA,CACA,UAAA,GAAA,EAAA;AAAA;;AACA,wCAAA,MAAA,CAAA,WAAA,EAAA,IAAA,8CAAA,GAAA,CAAA,IAAA,CAAA,IAAA;;AACA,kBAAA,MAAA,CAAA,sBAAA,GAAA,GAAA,CAAA,IAAA,CAAA,KAAA,GAAA,MAAA,CAAA,uBAAA,CAAA,YAAA,GAAA,MAAA,CAAA,uBAAA,CAAA,IAAA;AACA,kBAAA,MAAA,CAAA,uBAAA,CAAA,IAAA,IAAA,CAAA;;AACA,sBAAA,iBAAA,EAAA;AACA,oBAAA,MAAA,CAAA,WAAA,CAAA,QAAA,GAAA,MAAA,CAAA,WAAA,CAAA,MAAA,GAAA,MAAA,CAAA,WAAA,CAAA,CAAA,EAAA,EAAA,GAAA,IAAA;AACA;AACA,iBARA,EASA,KATA,CASA,UAAA,CAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,CAAA;AACA,kBAAA,MAAA,CAAA,WAAA,GAAA,EAAA;AACA,iBAZA,EAaA,OAbA,CAaA,YAAA;AACA,kBAAA,MAAA,CAAA,oBAAA,GAAA,KAAA;AACA,iBAfA,CAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA,KA3CA;AA4CA,IAAA,qBA5CA,iCA4CA,GA5CA,EA4CA;AACA,UAAA,QAAA,GAAA,KAAA,WAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,IAAA,GAAA;AAAA,OAAA,CAAA;;AACA,UAAA,QAAA,EAAA;AACA,yBAAA,QAAA,CAAA,QAAA;AACA;;AACA;AACA,KAlDA;AAmDA,IAAA,IAnDA,kBAmDA;AAAA;;AACA,WAAA,gBAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AACA,UAAA,UAAA,CAAA,IAAA,CAAA,YAAA,aAAA,EAAA,MAAA,CAAA,IAAA,EAAA,IAAA,EAAA,IAAA,CAAA,UAAA,GAAA,EAAA;AACA,YAAA,MAAA,CAAA,gBAAA,CAAA,KAAA;;AACA,YAAA,MAAA,CAAA,IAAA,GAAA;AACA,cAAA,cAAA,EAAA,IADA;AAEA,cAAA,YAAA,EAAA;AAFA,aAAA;;AAIA,YAAA,MAAA,CAAA,OAAA,CAAA,EAAA,CAAA,CAAA,CAAA;;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA,6BAAA,CAAA,EAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aAAA;AACA,WARA;AASA,SAVA,MAUA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,CAAA,+BAAA,CAAA,EAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;AACA;AACA,OAdA;AAeA;AAnEA,GAlDA;AAuHA,EAAA,OAvHA,qBAuHA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,cAAA,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA;AADA;AAAA,qBAEA,MAAA,CAAA,OAAA,EAFA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AA1HA,CAAA","sourcesContent":["<template>\r\n  <base-create-or-update-wrapper\r\n      :custom-title=\"$t('actions.confirm')\"\r\n      has-save-suspend\r\n      @save=\"save\"\r\n  >\r\n    <ValidationObserver ref=\"observer\" v-slot=\"{}\">\r\n      <b-row class=\"mb-3\">\r\n        <b-col md=\"5\" sm=\"12\">\r\n          <BaseMultiselectWithValidation\r\n              v-model=\"form.contractorId\"\r\n              not-required\r\n              label-on-top\r\n              preserve-search\r\n              with-create-addition\r\n              open-direction=\"bottom\"\r\n              :max-height=\"600\"\r\n              :searchable=\"true\"\r\n              :show-labels=\"false\"\r\n              :clear-on-select=\"false\"\r\n              :internal-search=\"false\"\r\n              :loading=\"isLoadingContractors\"\r\n              :label=\"$t('column.contractor')\"\r\n              :custom-label=\"customLabelContractor\"\r\n              :placeholder=\"$t('column.contractor')\"\r\n              :options=\"contractors.map((e) => e.id)\"\r\n              :has-next-page=\"hasNextPageContractors\"\r\n              @search-change=\"debounceSearchContractors\"\r\n              @reachedEndOfList=\"contractorReachedEndOfList\"\r\n          >\r\n          </BaseMultiselectWithValidation>\r\n        </b-col>\r\n        <b-col md=\"7\" sm=\"12\">\r\n          <b-table :items=\"viewItems\" hover striped thead-class=\"d-none\" bordered small/>\r\n        </b-col>\r\n      </b-row>\r\n    </ValidationObserver>\r\n  </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\";\r\n\r\nconst MAIN_API_URL = 'e-auction-info'\r\nimport apiService from \"../../../../shared/services/api.service\";\r\n\r\nexport default {\r\n  name: \"Confirm\",\r\n  data() {\r\n    return {\r\n      item: null,\r\n      hasNextPageContractors: false,\r\n      isLoadingContractors: false,\r\n      contractors: [],\r\n      contractorSearchPayload: {\r\n        itemsPerPage: 10,\r\n      },\r\n      debounce: false,\r\n      form: {\r\n        eAuctionInfoId: null,\r\n        contractorId: null,\r\n      },\r\n      statuses: []\r\n    }\r\n  },\r\n  computed: {\r\n    viewItems() {\r\n      let result = [];\r\n      if (!this.item) return result;\r\n      for (const index in this.item) {\r\n        if (this.labels[index]) {\r\n          result.push({\r\n            label: this.labels[index],\r\n            value: this.item[index],\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n    labels() {\r\n      return {\r\n        address:     this.$t('submodules.integration.e_auction_info.address'),\r\n        area:        this.$t('submodules.integration.e_auction_info.area'),\r\n        lot:         this.$t('submodules.integration.e_auction_info.lot'),\r\n        over_time:   this.$t('submodules.integration.e_auction_info.over_time'),\r\n        price:       this.$t('submodules.integration.e_auction_info.price'),\r\n        property:    this.$t('submodules.integration.e_auction_info.property'),\r\n        region:      this.$t('submodules.integration.e_auction_info.region'),\r\n        win_amount:  this.$t('submodules.integration.e_auction_info.win_amount'),\r\n        winner:      this.$t('submodules.integration.e_auction_info.winner'),\r\n      }\r\n    },\r\n    computedObserver() {\r\n      return this.$refs.observer\r\n    }\r\n  },\r\n  methods: {\r\n    async getById() {\r\n      const { eAuctionInfoId } = this.form\r\n      await apiService.get(MAIN_API_URL + '/get/' + eAuctionInfoId, true)\r\n          .then((response) => {\r\n            this.item = response.data\r\n          })\r\n    },\r\n    contractorReachedEndOfList(e) {\r\n      if (e && !this.isLoadingContractors) {\r\n        this.fetchContractors()\r\n      }\r\n    },\r\n    async debounceSearchContractors(searchText) {\r\n      clearTimeout(this.debounce);\r\n      this.debounce = setTimeout(async () => {\r\n        await this.fetchContractorsWithKeyword(searchText);\r\n      }, 1000);\r\n    },\r\n    fetchContractorsWithKeyword(keyword, makeFirstSelected = false) {\r\n      this.contractors = []\r\n      this.contractorSearchPayload.page = 1\r\n      this.contractorSearchPayload.keyword = keyword ? keyword : ''\r\n      this.fetchContractors(makeFirstSelected)\r\n    },\r\n    async fetchContractors(makeFirstSelected) {\r\n      this.isLoadingContractors = true\r\n      await crudAndListsService.searchListWithKeyword('contractor', this.contractorSearchPayload, 'by-contractor', !this.customIsModeCreate)\r\n          .then(res => {\r\n            this.contractors.push(...res.data.list)\r\n            this.hasNextPageContractors = res.data.total / this.contractorSearchPayload.itemsPerPage > this.contractorSearchPayload.page\r\n            this.contractorSearchPayload.page += 1\r\n            if (makeFirstSelected) {\r\n              this.editingItem.parentId = this.contractors.length ? this.contractors[0].id : null\r\n            }\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n            this.contractors = []\r\n          })\r\n          .finally(() => {\r\n            this.isLoadingContractors = false\r\n          })\r\n    },\r\n    customLabelContractor(opt) {\r\n      let selected = this.contractors.find(e => e.id == opt);\r\n      if (selected) {\r\n        return `${selected.fullName}`\r\n      }\r\n      return ``;\r\n    },\r\n    save() {\r\n      this.computedObserver.validate().then(valid => {\r\n        if (valid) {\r\n          apiService.post(MAIN_API_URL + `/confirm`, this.form, true).then(res => {\r\n            this.computedObserver.reset()\r\n            this.form = {\r\n              eAuctionInfoId: null,\r\n              contractorId: null,\r\n            };\r\n            this.$router.go(-1)\r\n            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n          })\r\n        } else {\r\n          this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n        }\r\n      });\r\n    }\r\n  },\r\n  async created() {\r\n    this.form.eAuctionInfoId = this.$route.params.id;\r\n    await this.getById();\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.base-form-component {\r\n  display: block;\r\n}\r\n\r\n.base-form-component__label {\r\n  padding: 10px 0;\r\n}\r\n</style>"],"sourceRoot":"src/modules/integration/modules/adliya-vazirlik"}]}