{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\views\\components\\CreateFormGroupOfIndividuals.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\views\\components\\CreateFormGroupOfIndividuals.vue","mtime":1674799498076},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1675061970665},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;AAmFA;AACA;AACA;AACA;AAEA;EACAA;EACAC;IACAC;MACAC;MACAC;IACA;EACA;EACA;AACA;EACAC;EACA;AACA;EACAC;IACA;MACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACA;IACA;EACA;;EACA;AACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACA;AACA;EACAC;IACA;IACAC;MACA;QACA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;UAAA;YAAA;cACAC;cACA;gBAAA;kBAAA;oBAAA;sBAAA;sBAAA,OACA;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA,CACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAC;MACA;QAAA;MAAA;MACA;QACA;MACA;MACA;IACA;IACAC;MAAA;MACA;MACA;MACA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;UAAA;YAAA;cACA;cACA;cACA;cACA;cACA;cAAA;cAAA,OACAC,yGACAC;gBAAA;gBACA;gBACA;gBACA;gBACA;kBACA;gBACA;cACA,GACAC;gBACAC;gBACA;cACA,GACAC;gBACA;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAC;MACA;QACA;MACA;IACA;IACA;IACAC;MAAA;MACA;QACA;UACA;YACAN;cACA;cACA;cACA;cACA;gBAAArB;cAAA;YACA;UACA;YACAqB;cACA;cACA;cACA;cACA;gBAAArB;cAAA;YACA;UACA;QACA;UACA;YAAAA;UAAA;QACA;MACA;IACA;EACA;EACA;AACA;EACA4B;IAAA;IAAA;MAAA;QAAA;UAAA;YACA;YACA;YAAA;YAAA,OACA;UAAA;YACA;YACA;YAAA,KACA;cAAA;cAAA;YAAA;YAAA;YAAA,OACAP,2CACAC;cACA;YACA,GACAC;cACAC;YACA;UAAA;YAAA;YAAA;UAAA;YAAA;YAAA,OAEAH,0EACAC;cACA;YACA,GACAC;cACAC;YACA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAEA;AACA","names":["name","props","customIsModeCreate","type","default","components","data","editingItem","hasNextPageContractors","contractors","debounce","isLoadingContractors","contractorCreateModal","contractorSearchPayload","computed","isModeCreate","computedObserver","methods","contractorReachedEndOfList","debounceSearchContractors","clearTimeout","customLabelContractor","fetchContractorsWithKeyword","fetchContractors","crudAndListsService","then","catch","console","finally","newRefCreated","save","created"],"sourceRoot":"src/shared/views/components","sources":["CreateFormGroupOfIndividuals.vue"],"sourcesContent":["<template>\r\n    <ValidationObserver\r\n        ref=\"observer\"\r\n        v-slot=\"{}\"\r\n    >\r\n        <b-row class=\"mb-3\">\r\n            <b-col\r\n                sm=\"12\"\r\n                md=\"6\"\r\n            >\r\n                <BaseInputWithValidation\r\n                    rules=\"required\"\r\n                    class=\"required\"\r\n                    v-model=\"editingItem.name\"\r\n                    :label=\"$t('column.name')\"\r\n                />\r\n            </b-col>\r\n            <b-col\r\n                sm=\"12\"\r\n                md=\"6\"\r\n            >\r\n                <BaseMultiselectWithValidation\r\n                    not-required\r\n                    v-model=\"editingItem.inn\"\r\n                    :has-next-page=\"hasNextPageContractors\"\r\n                    @reachedEndOfList=\"contractorReachedEndOfList\"\r\n                    @search-change=\"debounceSearchContractors\"\r\n                    :searchable=\"true\"\r\n                    preserve-search\r\n                    :clear-on-select=\"false\"\r\n                    :loading=\"isLoadingContractors\"\r\n                    :internal-search=\"false\"\r\n                    :options=\"contractors.map(e => e.inn)\"\r\n                    :label=\"$t('column.inn')\"\r\n                    :placeholder=\"$t('column.inn')\"\r\n                    :custom-label=\"customLabelContractor\"\r\n                    open-direction=\"bottom\"\r\n                    :max-height=\"600\"\r\n                    :show-labels=\"false\"\r\n                    with-create-addition\r\n                >\r\n                    <template v-slot:append-slot>\r\n                        <b-button\r\n                            @click=\"contractorCreateModal = true\"\r\n                            variant=\"outline-primary\"\r\n                            style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n                        >\r\n                            <i class=\"mdi mdi-plus-circle\"></i>\r\n                        </b-button>\r\n                    </template>\r\n                </BaseMultiselectWithValidation>\r\n                <BaseModalForCreate\r\n                    v-model=\"contractorCreateModal\"\r\n                    without-list-search\r\n                    use-component-save-fn\r\n                    mainApiUrl=\"contractor\"\r\n                    createFormName=\"CreateFormContractor\"\r\n                    @new-ref-created-without-list-search=\"newRefCreated\"\r\n                />\r\n            </b-col>\r\n        </b-row>\r\n\r\n        <b-row class=\"mb-3\">\r\n            <b-col\r\n                sm=\"12\"\r\n                md=\"6\"\r\n            >\r\n\r\n            </b-col>\r\n            <b-col\r\n                sm=\"12\"\r\n                md=\"6\"\r\n            >\r\n                <BaseInputWithValidation\r\n                    rules=\"positiveNotZero\"\r\n                    v-model=\"editingItem.percentage\"\r\n                    :label=\"$t('column.share_percentage')\"\r\n                />\r\n            </b-col>\r\n        </b-row>\r\n    </ValidationObserver>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'reestr/group-of-individuals'\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\n\r\nexport default {\r\n    name: \"CreateFormGroupOfIndividuals\",\r\n    props: {\r\n        customIsModeCreate: {\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n    },\r\n    /*\r\n    * COMPONENTS */\r\n    components: {},\r\n    /*\r\n    * DATA */\r\n    data () {\r\n        return {\r\n            editingItem: {},\r\n            // CONTRACTOR SELECT_AND_CREATE VARS\r\n            hasNextPageContractors: false,\r\n            contractors: [],\r\n            debounce: null,\r\n            isLoadingContractors: false,\r\n            contractorCreateModal: false,\r\n            contractorSearchPayload: {},\r\n            // ---------------------------------\r\n        }\r\n    },\r\n    /*\r\n    * COMPUTED */\r\n    computed: {\r\n        isModeCreate () {\r\n            return this.customIsModeCreate ? this.customIsModeCreate : this.$route.name === 'CreateGroupOfIndividuals'\r\n        },\r\n        computedObserver () {\r\n            return this.$refs.observer\r\n        }\r\n    },\r\n    /*\r\n    * METHODS */\r\n    methods: {\r\n        // CONTRACTOR SELECT_AND_CREATE METHODS\r\n        contractorReachedEndOfList (e) {\r\n            if (e && !this.isLoadingContractors) {\r\n                this.fetchContractors()\r\n            }\r\n        },\r\n        async debounceSearchContractors (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchContractorsWithKeyword(searchText);\r\n            }, 1000);\r\n        },\r\n        customLabelContractor (opt) {\r\n            let selected = this.contractors.find(e => e.inn == opt);\r\n            if (selected) {\r\n                return `${selected.inn} - ${selected.fullName}`\r\n            }\r\n            return ``;\r\n        },\r\n        fetchContractorsWithKeyword (keyword, makeFirstSelected = false) {\r\n            this.contractors = []\r\n            this.contractorSearchPayload.page = 1\r\n            this.contractorSearchPayload.keyword = keyword ? keyword : ''\r\n            this.fetchContractors(makeFirstSelected)\r\n        },\r\n        async fetchContractors (makeFirstSelected) {\r\n            this.contractorSearchPayload.sortBy = []\r\n            this.contractorSearchPayload.sortBy.push('created')\r\n            this.contractorSearchPayload.sortDesc = []\r\n            this.contractorSearchPayload.sortDesc.push(true)\r\n            this.isLoadingContractors = true\r\n            await crudAndListsService.searchListWithKeyword('contractor', this.contractorSearchPayload, 'by-contractor')\r\n                .then(res => {\r\n                    this.contractors.push(...res.data.list)\r\n                    this.hasNextPageContractors = res.data.total / this.contractorSearchPayload.itemsPerPage > this.contractorSearchPayload.page\r\n                    this.contractorSearchPayload.page += 1\r\n                    if (makeFirstSelected) {\r\n                        this.editingItem.parentId = this.contractors.length ? this.contractors[0].id : null\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    this.contractors = []\r\n                })\r\n                .finally(() => {\r\n                    this.isLoadingContractors = false\r\n                })\r\n        },\r\n        newRefCreated (formName) {\r\n            if (formName == 'CreateFormContractor') {\r\n                this.fetchContractorsWithKeyword('', true)\r\n            }\r\n        },\r\n        // ------------------------------------\r\n        save () {\r\n            this.computedObserver.validate().then(valid => {\r\n                if (valid) {\r\n                    if (this.editingItem.id) {\r\n                        crudAndListsService.update(MAIN_API_URL, this.editingItem).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    } else {\r\n                        crudAndListsService.create(MAIN_API_URL, this.editingItem).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, {});\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        }\r\n    },\r\n    /*\r\n    * CREATED */\r\n    async created () {\r\n        // FOR CONTRACTOR SELECT_AND_ADD\r\n        this.contractorSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        await this.fetchContractors()\r\n        // ---------------------------------\r\n        this.var_default_search_payload.itemsPerPage = 500\r\n        if (this.isModeCreate) {\r\n            await crudAndListsService.getEmpty(MAIN_API_URL)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        } else {\r\n            await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, false)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n    }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n    padding-top: 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n}\r\n</style>"]}]}