{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\services\\auth.service.js","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\services\\auth.service.js","mtime":1675054786291},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1667355397815}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxBQ1JVIFBST0pFQ1RcXEZhaXIgVGVjaFxcYWNydS1mcm9udGVuZFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzpcXEFDUlUgUFJPSkVDVFxcRmFpciBUZWNoXFxhY3J1LWZyb250ZW5kXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjcmVhdGVDbGFzcy5qcyI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQzpcXEFDUlUgUFJPSkVDVFxcRmFpciBUZWNoXFxhY3J1LWZyb250ZW5kXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjbGFzc0NhbGxDaGVjay5qcyI7CmltcG9ydCBfaW5oZXJpdHMgZnJvbSAiQzpcXEFDUlUgUFJPSkVDVFxcRmFpciBUZWNoXFxhY3J1LWZyb250ZW5kXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxpbmhlcml0cy5qcyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiQzpcXEFDUlUgUFJPSkVDVFxcRmFpciBUZWNoXFxhY3J1LWZyb250ZW5kXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZVxcaGVscGVyc1xcZXNtXFxjcmVhdGVTdXBlci5qcyI7CmltcG9ydCBfd3JhcE5hdGl2ZVN1cGVyIGZyb20gIkM6XFxBQ1JVIFBST0pFQ1RcXEZhaXIgVGVjaFxcYWNydS1mcm9udGVuZFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcd3JhcE5hdGl2ZVN1cGVyLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UtYWxsLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgQXBpU2VydmljZSBmcm9tICcuL2FwaS5zZXJ2aWNlJzsKaW1wb3J0IHsgVG9rZW5TZXJ2aWNlIH0gZnJvbSAnLi9zdG9yYWdlLnNlcnZpY2UnOwp2YXIgUkVHX01BSU5fQVBJX1VSTCA9ICdyZWdpc3RyYXRpb24nOwp2YXIgVVNFUl9NQUlOX0FQSV9VUkwgPSAndXNlcic7Cgp2YXIgQXV0aGVudGljYXRpb25FcnJvciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX0Vycm9yKSB7CiAgX2luaGVyaXRzKEF1dGhlbnRpY2F0aW9uRXJyb3IsIF9FcnJvcik7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQXV0aGVudGljYXRpb25FcnJvcik7CgogIGZ1bmN0aW9uIEF1dGhlbnRpY2F0aW9uRXJyb3IoZXJyb3JDb2RlLCBtZXNzYWdlKSB7CiAgICB2YXIgX3RoaXM7CgogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEF1dGhlbnRpY2F0aW9uRXJyb3IpOwoKICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgbWVzc2FnZSk7CiAgICBfdGhpcy5uYW1lID0gX3RoaXMuY29uc3RydWN0b3IubmFtZTsKICAgIF90aGlzLm1lc3NhZ2UgPSBtZXNzYWdlOwogICAgX3RoaXMuZXJyb3JDb2RlID0gZXJyb3JDb2RlOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgcmV0dXJuIF9jcmVhdGVDbGFzcyhBdXRoZW50aWNhdGlvbkVycm9yKTsKfSggLyojX19QVVJFX18qL193cmFwTmF0aXZlU3VwZXIoRXJyb3IpKTsKCnZhciBBdXRoU2VydmljZSA9IHsKICBzaWdudXA6IGZ1bmN0aW9uIHNpZ251cChwYXlsb2FkKSB7CiAgICByZXR1cm4gQXBpU2VydmljZS5wb3N0KCIiLmNvbmNhdChSRUdfTUFJTl9BUElfVVJMLCAiL2ZpbmlzaCIpLCBwYXlsb2FkKTsKICB9LAogIGNvbmZpcm1QaG9uZTogZnVuY3Rpb24gY29uZmlybVBob25lKHBheWxvYWQpIHsKICAgIHJldHVybiBBcGlTZXJ2aWNlLnBvc3QoIiIuY29uY2F0KFJFR19NQUlOX0FQSV9VUkwsICIvY29uZmlybWF0aW9uL3Bob25lLWNvbmZpcm1lZD91aWQ9IikuY29uY2F0KHBheWxvYWQudXNlci5pbm4sICImdG9rZW49IikuY29uY2F0KHBheWxvYWQudmVyaWZ5Q29kZSwgIiZ1c2VybmFtZT0iKS5jb25jYXQocGF5bG9hZC51c2VyLnVzZXJuYW1lKSk7CiAgfSwKICBjb25maXJtTWFpbDogZnVuY3Rpb24gY29uZmlybU1haWwocGF5bG9hZCkgewogICAgcmV0dXJuIEFwaVNlcnZpY2UucG9zdCgiIi5jb25jYXQoUkVHX01BSU5fQVBJX1VSTCwgIi9jb25maXJtYXRpb24vbWFpbC1jb25maXJtZWQ/dWlkPSIpLmNvbmNhdChwYXlsb2FkLmlubiwgIiZ0b2tlbj0iKS5jb25jYXQocGF5bG9hZC50b2tlbiwgIiZ1c2VybmFtZT0iKS5jb25jYXQocGF5bG9hZC51c2VybmFtZSkpOwogIH0sCiAgc2VuZFZlcmlmeUNvZGVUb01haWw6IGZ1bmN0aW9uIHNlbmRWZXJpZnlDb2RlVG9NYWlsKHBheWxvYWQpIHsKICAgIHJldHVybiBBcGlTZXJ2aWNlLnBvc3QoIiIuY29uY2F0KFJFR19NQUlOX0FQSV9VUkwsICIvc2VuZC9jb25maXJtYXRpb24vY29kZS90by1jb25maXJtYXRpb24iKSwgcGF5bG9hZCk7CiAgfSwKICBzZW5kVmVyaWZ5Q29kZTogZnVuY3Rpb24gc2VuZFZlcmlmeUNvZGUocGF5bG9hZCkgewogICAgdmFyIHdpdGhMb2FkZXIgPSBhcmd1bWVudHMubGVuZ3RoID4gMSAmJiBhcmd1bWVudHNbMV0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1sxXSA6IGZhbHNlOwogICAgdmFyIHBheWxvYWRUZW1wID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShwYXlsb2FkKSk7CiAgICBwYXlsb2FkVGVtcC51c2VyLnBob25lTnVtYmVyID0gcGF5bG9hZFRlbXAudXNlci5waG9uZU51bWJlci5yZXBsYWNlQWxsKCctJywgJycpOwogICAgcGF5bG9hZFRlbXAudXNlci5waG9uZU51bWJlciA9IHBheWxvYWRUZW1wLnVzZXIucGhvbmVOdW1iZXIucmVwbGFjZUFsbCgnKycsICcnKTsKICAgIHJldHVybiBBcGlTZXJ2aWNlLnBvc3QoIiIuY29uY2F0KFJFR19NQUlOX0FQSV9VUkwsICIvc2VuZC9jb25maXJtYXRpb24vY29kZS90by1jb25maXJtYXRpb24/dWlkPSIpLmNvbmNhdChwYXlsb2FkVGVtcC51c2VyLmlubiksIHBheWxvYWRUZW1wLCB3aXRoTG9hZGVyKTsKICAgIC8qcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uKHJlc29sdmUpIHsNCiAgICAgICAgc2V0VGltZW91dChyZXNvbHZlLCAxMDAwKTsNCiAgICB9KTsqLwogIH0sCiAgY2hlY2tOb1VzZXJuYW1lOiBmdW5jdGlvbiBjaGVja05vVXNlcm5hbWUodXNlcm5hbWUpIHsKICAgIHJldHVybiBBcGlTZXJ2aWNlLmdldCgiIi5jb25jYXQoVVNFUl9NQUlOX0FQSV9VUkwsICIvY2hlY2svbm8tdXNlcm5hbWU/dXNlcm5hbWU9IikuY29uY2F0KHVzZXJuYW1lKSk7CiAgfSwKICBpc09yZ1JlZ2lzdGVyZWQ6IGZ1bmN0aW9uIGlzT3JnUmVnaXN0ZXJlZCh0aW4sIHBpbmZsLCB1aWQsIGlzWXVyLCBwb3NpdGlvbikgewogICAgcmV0dXJuIEFwaVNlcnZpY2UuZ2V0KCIiLmNvbmNhdChSRUdfTUFJTl9BUElfVVJMLCAiL2NoZWNrLWlubj90aW49IikuY29uY2F0KHRpbiwgIiZwaW5mbD0iKS5jb25jYXQocGluZmwsICImdWlkPSIpLmNvbmNhdCh1aWQsICImaXNZdXI9IikuY29uY2F0KGlzWXVyLnRvU3RyaW5nKCksICImcG9zaXRpb249IikuY29uY2F0KHBvc2l0aW9uKSk7CiAgfSwKICBnZXRLZXlGb3JMb2dpblNpZ246IGZ1bmN0aW9uIGdldEtleUZvckxvZ2luU2lnbihpbm4sIGVtcGxveWVlVGluLCBwaW5mbCkgewogICAgcmV0dXJuIEFwaVNlcnZpY2UuZ2V0KCJrZXktZm9yLWxvZ2luLXNpZ24/SU5OPSIuY29uY2F0KGlubiwgIiZUSU49IikuY29uY2F0KGVtcGxveWVlVGluLCAiJlBORkw9IikuY29uY2F0KHBpbmZsKSk7CiAgfSwKCiAgLyoqDQogICAqIExvZ2luIHRoZSB1c2VyIGFuZCBzdG9yZSB0aGUgYWNjZXNzIHRva2VuIHRvIFRva2VuU2VydmljZS4NCiAgICoNCiAgICogQHJldHVybnMgYWNjZXNzX3Rva2VuDQogICAqIEB0aHJvd3MgQXV0aGVudGljYXRpb25FcnJvcg0KICAgKiovCiAgbG9naW46IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfbG9naW4gPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodXNlcm5hbWUsIHBhc3N3b3JkKSB7CiAgICAgIHZhciByZXNwb25zZTsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBBcGlTZXJ2aWNlLnBvc3QoJ2F1dGgtcGF5bG9hZCcsIHsKICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwKICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgICAgICAgICAgIH0sIHRydWUpOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBUb2tlblNlcnZpY2Uuc2F2ZVRva2VuKHJlc3BvbnNlLmRhdGEudG9rZW4pOwogICAgICAgICAgICAgIFRva2VuU2VydmljZS5zZXRVc2VyQXZhdGFyVXJsKHJlc3BvbnNlLmRhdGEudXBsb2FkUGF0aCk7CiAgICAgICAgICAgICAgVG9rZW5TZXJ2aWNlLnNhdmVSZWZyZXNoVG9rZW4ocmVzcG9uc2UuZGF0YS50b2tlbik7CiAgICAgICAgICAgICAgVG9rZW5TZXJ2aWNlLnNldFVzZXJJbmZvKHsKICAgICAgICAgICAgICAgIGlkOiByZXNwb25zZS5kYXRhLmlkLAogICAgICAgICAgICAgICAgdXNlcm5hbWU6IHJlc3BvbnNlLmRhdGEudXNlcm5hbWUsCiAgICAgICAgICAgICAgICBlbXBsb3llZUlkOiByZXNwb25zZS5kYXRhLmVtcGxveWVlSWQsCiAgICAgICAgICAgICAgICBzZXR0aW5nczogcmVzcG9uc2UuZGF0YS51c2VyU2V0dGluZ3MsCiAgICAgICAgICAgICAgICBlbXBsb3llZUZ1bGxOYW1lOiByZXNwb25zZS5kYXRhLmVtcGxveWVlRmlyc3ROYW1lICsgJyAnICsgcmVzcG9uc2UuZGF0YS5lbXBsb3llZUxhc3ROYW1lICsgJyAnICsgKHJlc3BvbnNlLmRhdGEuZW1wbG95ZWVNaWRkbGVOYW1lID8gcmVzcG9uc2UuZGF0YS5lbXBsb3llZU1pZGRsZU5hbWUgOiAnJykKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBUb2tlblNlcnZpY2Uuc2V0VXNlcklkKHJlc3BvbnNlLmRhdGEuaWQpOwogICAgICAgICAgICAgIFRva2VuU2VydmljZS5zZXRJc091dGVyKHJlc3BvbnNlLmRhdGEuaXNPdXRlcik7CiAgICAgICAgICAgICAgQXBpU2VydmljZS5zZXRIZWFkZXIoKTsgLy8gQXBpU2VydmljZS5tb3VudDQwMUludGVyY2VwdG9yKCk7CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmRhdGEpOwoKICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTQ7CiAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICB0aHJvdyBuZXcgQXV0aGVudGljYXRpb25FcnJvcihfY29udGV4dC50MC5yZXNwb25zZS5zdGF0dXMsIF9jb250ZXh0LnQwLnJlc3BvbnNlLmRhdGEubWVzc2FnZSk7CgogICAgICAgICAgICBjYXNlIDE3OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzAsIDE0XV0pOwogICAgfSkpOwoKICAgIGZ1bmN0aW9uIGxvZ2luKF94LCBfeDIpIHsKICAgICAgcmV0dXJuIF9sb2dpbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBsb2dpbjsKICB9KCksCiAgbG9naW5Fc3A6IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfbG9naW5Fc3AgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKHNpZ25lZERhdGEsIFRJTiwgUE5GTCwgSU5OKSB7CiAgICAgIHZhciByZXF1ZXN0RGF0YSwgcmVzcG9uc2U7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgcmVxdWVzdERhdGEgPSB7CiAgICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICAgIHVybDogJy9hdXRoLXBheWxvYWQnLAogICAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAgICBzaWduZWREYXRhOiBzaWduZWREYXRhLAogICAgICAgICAgICAgICAgICBUSU46IFRJTiwKICAgICAgICAgICAgICAgICAgSU5OOiBJTk4sCiAgICAgICAgICAgICAgICAgIHRpbjogVElOLAogICAgICAgICAgICAgICAgICBQTkZMOiBQTkZMCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgY29uZmlnOiB7CiAgICAgICAgICAgICAgICAgIHdpdGhMb2FkZXI6IHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIEFwaVNlcnZpY2UuY3VzdG9tUmVxdWVzdChyZXF1ZXN0RGF0YSk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBUb2tlblNlcnZpY2Uuc2F2ZVRva2VuKHJlc3BvbnNlLmRhdGEudG9rZW4pOwogICAgICAgICAgICAgIFRva2VuU2VydmljZS5zZXRVc2VyQXZhdGFyVXJsKHJlc3BvbnNlLmRhdGEudXBsb2FkUGF0aCk7CiAgICAgICAgICAgICAgVG9rZW5TZXJ2aWNlLnNhdmVSZWZyZXNoVG9rZW4ocmVzcG9uc2UuZGF0YS50b2tlbik7CiAgICAgICAgICAgICAgVG9rZW5TZXJ2aWNlLnNldFVzZXJJbmZvKHsKICAgICAgICAgICAgICAgIGlkOiByZXNwb25zZS5kYXRhLmlkLAogICAgICAgICAgICAgICAgdXNlcm5hbWU6IHJlc3BvbnNlLmRhdGEudXNlcm5hbWUsCiAgICAgICAgICAgICAgICBlbXBsb3llZUlkOiByZXNwb25zZS5kYXRhLmVtcGxveWVlSWQsCiAgICAgICAgICAgICAgICBzZXR0aW5nczogcmVzcG9uc2UuZGF0YS51c2VyU2V0dGluZ3MsCiAgICAgICAgICAgICAgICBlbXBsb3llZUZ1bGxOYW1lOiByZXNwb25zZS5kYXRhLmVtcGxveWVlRmlyc3ROYW1lICsgJyAnICsgcmVzcG9uc2UuZGF0YS5lbXBsb3llZUxhc3ROYW1lICsgJyAnICsgKHJlc3BvbnNlLmRhdGEuZW1wbG95ZWVNaWRkbGVOYW1lID8gcmVzcG9uc2UuZGF0YS5lbXBsb3llZU1pZGRsZU5hbWUgOiAnJykKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBUb2tlblNlcnZpY2Uuc2V0VXNlcklkKHJlc3BvbnNlLmRhdGEuaWQpOwogICAgICAgICAgICAgIFRva2VuU2VydmljZS5zZXRJc091dGVyKHJlc3BvbnNlLmRhdGEuaXNPdXRlcik7CiAgICAgICAgICAgICAgQXBpU2VydmljZS5zZXRIZWFkZXIoKTsgLy8gQXBpU2VydmljZS5tb3VudDQwMUludGVyY2VwdG9yKCk7CgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXNwb25zZS5kYXRhKTsKCiAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxNTsKICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEF1dGhlbnRpY2F0aW9uRXJyb3IoX2NvbnRleHQyLnQwLnJlc3BvbnNlLnN0YXR1cywgX2NvbnRleHQyLnQwLnJlc3BvbnNlLmRhdGEuZGV0YWlsKTsKCiAgICAgICAgICAgIGNhc2UgMTg6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMiwgbnVsbCwgW1sxLCAxNV1dKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiBsb2dpbkVzcChfeDMsIF94NCwgX3g1LCBfeDYpIHsKICAgICAgcmV0dXJuIF9sb2dpbkVzcC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfQoKICAgIHJldHVybiBsb2dpbkVzcDsKICB9KCksCgogIC8qKg0KICAgKiBSZWZyZXNoIHRoZSBhY2Nlc3MgdG9rZW4uDQogICAqKi8KICByZWZyZXNoVG9rZW46IGZ1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmcmVzaFRva2VuID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIHJlZnJlc2hUb2tlbiwgcmVxdWVzdERhdGEsIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIHJlZnJlc2hUb2tlbiA9IFRva2VuU2VydmljZS5nZXRSZWZyZXNoVG9rZW4oKTsKICAgICAgICAgICAgICByZXF1ZXN0RGF0YSA9IHsKICAgICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgICAgICAgICAgdXJsOiAiL28vdG9rZW4vIiwKICAgICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgICAgZ3JhbnRfdHlwZTogJ3JlZnJlc2hfdG9rZW4nLAogICAgICAgICAgICAgICAgICByZWZyZXNoX3Rva2VuOiByZWZyZXNoVG9rZW4KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBhdXRoOiB7CiAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiBwcm9jZXNzLmVudi5WVUVfQVBQX0NMSUVOVF9JRCwKICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlZVRV9BUFBfQ0xJRU5UX1NFQ1JFVAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGNvbmZpZzogewogICAgICAgICAgICAgICAgICB3aXRoTG9hZGVyOiB0cnVlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDI7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBBcGlTZXJ2aWNlLmN1c3RvbVJlcXVlc3QocmVxdWVzdERhdGEpOwoKICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgVG9rZW5TZXJ2aWNlLnNhdmVUb2tlbihyZXNwb25zZS5kYXRhLmFjY2Vzc190b2tlbik7CiAgICAgICAgICAgICAgVG9rZW5TZXJ2aWNlLnNldFVzZXJBdmF0YXJVcmwocmVzcG9uc2UuZGF0YS51cGxvYWRQYXRoKTsKICAgICAgICAgICAgICBUb2tlblNlcnZpY2Uuc2F2ZVJlZnJlc2hUb2tlbihyZXNwb25zZS5kYXRhLnJlZnJlc2hfdG9rZW4pOyAvLyBVcGRhdGUgdGhlIGhlYWRlciBpbiBBcGlTZXJ2aWNlCgogICAgICAgICAgICAgIEFwaVNlcnZpY2Uuc2V0SGVhZGVyKCk7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoInJldHVybiIsIHJlc3BvbnNlLmRhdGEuYWNjZXNzX3Rva2VuKTsKCiAgICAgICAgICAgIGNhc2UgMTM6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxMzsKICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IEF1dGhlbnRpY2F0aW9uRXJyb3IoX2NvbnRleHQzLnQwLnJlc3BvbnNlLnN0YXR1cywgX2NvbnRleHQzLnQwLnJlc3BvbnNlLmRhdGEuZGV0YWlsKTsKCiAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1syLCAxM11dKTsKICAgIH0pKTsKCiAgICBmdW5jdGlvbiByZWZyZXNoVG9rZW4oKSB7CiAgICAgIHJldHVybiBfcmVmcmVzaFRva2VuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICB9CgogICAgcmV0dXJuIHJlZnJlc2hUb2tlbjsKICB9KCksCgogIC8qKg0KICAgKiBMb2dvdXQgdGhlIGN1cnJlbnQgdXNlciBieSByZW1vdmluZyB0aGUgdG9rZW4gZnJvbSBzdG9yYWdlLg0KICAgKg0KICAgKiBXaWxsIGFsc28gcmVtb3ZlIGBBdXRob3JpemF0aW9uIEJlYXJlciA8dG9rZW4+YCBoZWFkZXIgZnJvbSBmdXR1cmUgcmVxdWVzdHMuDQogICAqKi8KICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dCgpIHsKICAgIC8vIFJlbW92ZSB0aGUgdG9rZW4gYW5kIHJlbW92ZSBBdXRob3JpemF0aW9uIGhlYWRlciBmcm9tIEFwaSBTZXJ2aWNlIGFzIHdlbGwKICAgIFRva2VuU2VydmljZS5yZW1vdmVUb2tlbigpOwogICAgVG9rZW5TZXJ2aWNlLnJlbW92ZVVzZXJBdmF0YXJVcmwoKTsgLy8gVG9rZW5TZXJ2aWNlLnJlbW92ZUxvY2FsZSgpOwoKICAgIFRva2VuU2VydmljZS5yZW1vdmVSZWZyZXNoVG9rZW4oKTsKICAgIFRva2VuU2VydmljZS5yZW1vdmVTaWRlYmFyKCk7IC8vVG9rZW5TZXJ2aWNlLnJlbW92ZU1lbnVNaW5pbWl6ZSgpOwoKICAgIEFwaVNlcnZpY2UucmVtb3ZlSGVhZGVyKCk7CiAgICBUb2tlblNlcnZpY2UucmVtb3ZlVXNlckluZm8oKTsKICAgIFRva2VuU2VydmljZS5yZW1vdmVVc2VySWQoKTsKICAgIFRva2VuU2VydmljZS5yZW1vdmVJc091dGVyKCk7CiAgICBBcGlTZXJ2aWNlLnVubW91bnQ0MDFJbnRlcmNlcHRvcigpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgQXV0aFNlcnZpY2U7CmV4cG9ydCB7IEF1dGhTZXJ2aWNlLCBBdXRoZW50aWNhdGlvbkVycm9yIH07"},{"version":3,"sources":["C:/ACRU PROJECT/Fair Tech/acru-frontend/src/shared/services/auth.service.js"],"names":["ApiService","TokenService","REG_MAIN_API_URL","USER_MAIN_API_URL","AuthenticationError","errorCode","message","name","constructor","Error","AuthService","signup","payload","post","confirmPhone","user","inn","verifyCode","username","confirmMail","token","sendVerifyCodeToMail","sendVerifyCode","withLoader","payloadTemp","JSON","parse","stringify","phoneNumber","replaceAll","checkNoUsername","get","isOrgRegistered","tin","pinfl","uid","isYur","position","toString","getKeyForLoginSign","employeeTin","login","password","response","saveToken","data","setUserAvatarUrl","uploadPath","saveRefreshToken","setUserInfo","id","employeeId","settings","userSettings","employeeFullName","employeeFirstName","employeeLastName","employeeMiddleName","setUserId","setIsOuter","isOuter","setHeader","status","loginEsp","signedData","TIN","PNFL","INN","requestData","method","url","config","customRequest","detail","refreshToken","getRefreshToken","grant_type","refresh_token","auth","process","env","VUE_APP_CLIENT_ID","VUE_APP_CLIENT_SECRET","access_token","logout","removeToken","removeUserAvatarUrl","removeRefreshToken","removeSidebar","removeHeader","removeUserInfo","removeUserId","removeIsOuter","unmount401Interceptor"],"mappings":"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","sourcesContent":["import ApiService from './api.service'\r\nimport { TokenService } from './storage.service'\r\n\r\nconst REG_MAIN_API_URL = 'registration'\r\nconst USER_MAIN_API_URL = 'user'\r\n\r\nclass AuthenticationError extends Error {\r\n    constructor(errorCode, message) {\r\n        super(message)\r\n        this.name = this.constructor.name\r\n        this.message = message\r\n        this.errorCode = errorCode\r\n    }\r\n}\r\n\r\nconst AuthService = {\r\n    signup (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/finish`, payload)\r\n    },\r\n\r\n    confirmPhone (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/confirmation/phone-confirmed?uid=${payload.user.inn}&token=${payload.verifyCode}&username=${payload.user.username}`)\r\n    },\r\n\r\n    confirmMail (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/confirmation/mail-confirmed?uid=${payload.inn}&token=${payload.token}&username=${payload.username}`)\r\n    },\r\n\r\n    sendVerifyCodeToMail (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/send/confirmation/code/to-confirmation`, payload)\r\n    },\r\n\r\n    sendVerifyCode (payload, withLoader = false) {\r\n        let payloadTemp = JSON.parse(JSON.stringify(payload))\r\n        payloadTemp.user.phoneNumber = payloadTemp.user.phoneNumber.replaceAll('-', '')\r\n        payloadTemp.user.phoneNumber = payloadTemp.user.phoneNumber.replaceAll('+', '')\r\n        return ApiService.post(`${REG_MAIN_API_URL}/send/confirmation/code/to-confirmation?uid=${payloadTemp.user.inn}`, payloadTemp, withLoader)\r\n        /*return new Promise(function(resolve) {\r\n            setTimeout(resolve, 1000);\r\n        });*/\r\n    },\r\n\r\n    checkNoUsername (username) {\r\n        return ApiService.get(`${USER_MAIN_API_URL}/check/no-username?username=${username}`)\r\n    },\r\n\r\n    isOrgRegistered (tin, pinfl, uid, isYur, position) {\r\n        return ApiService.get(`${REG_MAIN_API_URL}/check-inn?tin=${tin}&pinfl=${pinfl}&uid=${uid}&isYur=${isYur.toString()}&position=${position}`)\r\n    },\r\n\r\n    getKeyForLoginSign (inn, employeeTin, pinfl) {\r\n        return ApiService.get(`key-for-login-sign?INN=${inn}&TIN=${employeeTin}&PNFL=${pinfl}`)\r\n    },\r\n    /**\r\n     * Login the user and store the access token to TokenService.\r\n     *\r\n     * @returns access_token\r\n     * @throws AuthenticationError\r\n     **/\r\n    login: async function (username, password) {\r\n        try {\r\n            const response = await ApiService.post('auth-payload', { username: username, password: password }, true)\r\n            TokenService.saveToken(response.data.token)\r\n            TokenService.setUserAvatarUrl(response.data.uploadPath)\r\n            TokenService.saveRefreshToken(response.data.token);\r\n            TokenService.setUserInfo({\r\n                id: response.data.id,\r\n                username: response.data.username,\r\n                employeeId: response.data.employeeId,\r\n                settings: response.data.userSettings,\r\n                employeeFullName: response.data.employeeFirstName + ' ' + response.data.employeeLastName + ' ' + (response.data.employeeMiddleName ? response.data.employeeMiddleName : '')\r\n            })\r\n            TokenService.setUserId(response.data.id);\r\n            TokenService.setIsOuter(response.data.isOuter);\r\n            ApiService.setHeader();\r\n            // ApiService.mount401Interceptor();\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new AuthenticationError(error.response.status, error.response.data.message)\r\n        }\r\n    },\r\n    loginEsp: async function (signedData, TIN, PNFL, INN) {\r\n        const requestData = {\r\n            method: 'post',\r\n            url: '/auth-payload',\r\n            data: {\r\n                signedData: signedData,\r\n                TIN: TIN,\r\n                INN: INN,\r\n                tin: TIN,\r\n                PNFL: PNFL\r\n            },\r\n            config: {\r\n                withLoader: true\r\n            }\r\n        };\r\n\r\n        try {\r\n            const response = await ApiService.customRequest(requestData)\r\n            TokenService.saveToken(response.data.token)\r\n            TokenService.setUserAvatarUrl(response.data.uploadPath)\r\n            TokenService.saveRefreshToken(response.data.token);\r\n            TokenService.setUserInfo({\r\n                id: response.data.id,\r\n                username: response.data.username,\r\n                employeeId: response.data.employeeId,\r\n                settings: response.data.userSettings,\r\n                employeeFullName: response.data.employeeFirstName + ' ' + response.data.employeeLastName + ' ' + (response.data.employeeMiddleName ? response.data.employeeMiddleName : '')\r\n            })\r\n            TokenService.setUserId(response.data.id);\r\n            TokenService.setIsOuter(response.data.isOuter);\r\n            ApiService.setHeader();\r\n            // ApiService.mount401Interceptor();\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new AuthenticationError(error.response.status, error.response.data.detail)\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Refresh the access token.\r\n     **/\r\n    refreshToken: async function () {\r\n        const refreshToken = TokenService.getRefreshToken()\r\n\r\n        const requestData = {\r\n            method: 'post',\r\n            url: \"/o/token/\",\r\n            data: {\r\n                grant_type: 'refresh_token',\r\n                refresh_token: refreshToken\r\n            },\r\n            auth: {\r\n                username: process.env.VUE_APP_CLIENT_ID,\r\n                password: process.env.VUE_APP_CLIENT_SECRET\r\n            },\r\n            config: {\r\n                withLoader: true\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await ApiService.customRequest(requestData)\r\n\r\n            TokenService.saveToken(response.data.access_token)\r\n            TokenService.setUserAvatarUrl(response.data.uploadPath)\r\n            TokenService.saveRefreshToken(response.data.refresh_token)\r\n            // Update the header in ApiService\r\n            ApiService.setHeader()\r\n\r\n            return response.data.access_token\r\n        } catch (error) {\r\n            throw new AuthenticationError(error.response.status, error.response.data.detail)\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Logout the current user by removing the token from storage.\r\n     *\r\n     * Will also remove `Authorization Bearer <token>` header from future requests.\r\n     **/\r\n    logout () {\r\n        // Remove the token and remove Authorization header from Api Service as well\r\n        TokenService.removeToken();\r\n        TokenService.removeUserAvatarUrl();\r\n        // TokenService.removeLocale();\r\n        TokenService.removeRefreshToken();\r\n        TokenService.removeSidebar();\r\n        //TokenService.removeMenuMinimize();\r\n        ApiService.removeHeader();\r\n        TokenService.removeUserInfo();\r\n        TokenService.removeUserId();\r\n        TokenService.removeIsOuter();\r\n\r\n        ApiService.unmount401Interceptor()\r\n    }\r\n}\r\n\r\nexport default AuthService\r\n\r\nexport { AuthService, AuthenticationError }\r\n"]}]}