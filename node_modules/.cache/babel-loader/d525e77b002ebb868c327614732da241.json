{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\integration\\modules\\open-data\\modules\\domestic-market-price\\View.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\integration\\modules\\open-data\\modules\\domestic-market-price\\View.vue","mtime":1674799496998},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1675061970665},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9yZWdlbmVyYXRvclJ1bnRpbWUgZnJvbSAiQzovQUNSVSBQUk9KRUNUL0ZhaXIgVGVjaC9hY3J1LWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9yZWdlbmVyYXRvclJ1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovQUNSVSBQUk9KRUNUL0ZhaXIgVGVjaC9hY3J1LWZyb250ZW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwp2YXIgTUFJTl9BUElfVVJMID0gJ29wZW4tZGF0YS9kb21lc3RpYy1tYXJrZXQtcHJpY2UnOwppbXBvcnQgeyBidXMgfSBmcm9tICJAL21haW4iOwppbXBvcnQgY3J1ZEFuZExpc3RzU2VydmljZSBmcm9tICJAL3NoYXJlZC9zZXJ2aWNlcy9jcnVkX2FuZF9saXN0LnNlcnZpY2UiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlZpZXciLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0aXRsZTogdGhpcy4kdCgnb3Blbl9kYXRhLmRvbWVzdGljX21hcmtldF9wcmljZS50aXRsZScpLAogICAgICBlZGl0aW5nSXRlbToge30sCiAgICAgIHN0YXR1c2VzOiBbXQogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBpdGVtczogZnVuY3Rpb24gaXRlbXMoKSB7CiAgICAgIHZhciByZXN1bHQgPSBbXTsKICAgICAgZm9yICh2YXIgaW5kZXggaW4gdGhpcy5lZGl0aW5nSXRlbSkgewogICAgICAgIGlmICh0aGlzLmxhYmVsc1tpbmRleF0pIHsKICAgICAgICAgIHJlc3VsdC5wdXNoKHsKICAgICAgICAgICAgbGFiZWw6IHRoaXMubGFiZWxzW2luZGV4XSwKICAgICAgICAgICAgdmFsdWU6IHRoaXMuZWRpdGluZ0l0ZW1baW5kZXhdCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0KICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0sCiAgICBsYWJlbHM6IGZ1bmN0aW9uIGxhYmVscygpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBkYXRlOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLmRhdGUnKSwKICAgICAgICBmb3JtZWRCcmVhZDogdGhpcy4kdCgnb3Blbl9kYXRhLmRvbWVzdGljX21hcmtldF9wcmljZS5mb3JtZWRCcmVhZCcpLAogICAgICAgIGhpZ2hHcmFkZUZsb3VySW1wb3J0OiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLmhpZ2hHcmFkZUZsb3VySW1wb3J0JyksCiAgICAgICAgZmlyc3RHcmFkZUZsb3VySW1wb3J0OiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLmZpcnN0R3JhZGVGbG91ckltcG9ydCcpLAogICAgICAgIGZpcnN0R3JhZGVGbG91ckxvY2FsOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLmZpcnN0R3JhZGVGbG91ckxvY2FsJyksCiAgICAgICAgY290dG9uT2lsTG9jYWw6IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2UuY290dG9uT2lsTG9jYWwnKSwKICAgICAgICBzdW5mbG93ZXJPaWxJbXBvcnQ6IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2Uuc3VuZmxvd2VyT2lsSW1wb3J0JyksCiAgICAgICAgc3VnYXI6IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2Uuc3VnYXItc3RhdGlvbnMnKSwKICAgICAgICBtaWxrTG9jYWw6IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2UubWlsa0xvY2FsJyksCiAgICAgICAgZWdnOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLmVnZycpLAogICAgICAgIHJpY2VBbGFuZ2E6IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2UucmljZUFsYW5nYScpLAogICAgICAgIHBhc3RhOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLnBhc3RhJyksCiAgICAgICAgcGFzdGFQYWNrYWdlZDogdGhpcy4kdCgnb3Blbl9kYXRhLmRvbWVzdGljX21hcmtldF9wcmljZS5wYXN0YVBhY2thZ2VkJyksCiAgICAgICAgYmVlZkJvbmVsZXNzOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLmJlZWZCb25lbGVzcycpLAogICAgICAgIGJlZWZXaXRoQm9uZTogdGhpcy4kdCgnb3Blbl9kYXRhLmRvbWVzdGljX21hcmtldF9wcmljZS5iZWVmV2l0aEJvbmUnKSwKICAgICAgICBtdXR0b246IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2UubXV0dG9uJyksCiAgICAgICAgY2hpY2tlbjogdGhpcy4kdCgnb3Blbl9kYXRhLmRvbWVzdGljX21hcmtldF9wcmljZS5jaGlja2VuJyksCiAgICAgICAgcG90YXRvOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLnBvdGF0bycpLAogICAgICAgIG9uaW9uOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLm9uaW9uJyksCiAgICAgICAgY2Fycm90OiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLmNhcnJvdCcpLAogICAgICAgIGJ1dHRlcjogdGhpcy4kdCgnb3Blbl9kYXRhLmRvbWVzdGljX21hcmtldF9wcmljZS5idXR0ZXInKSwKICAgICAgICBidWNrd2hlYXQ6IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2UuYnVja3doZWF0JyksCiAgICAgICAgYmFieUZvb2Q6IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2UuYmFieUZvb2QnKSwKICAgICAgICBtYXNrOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLm1hc2snKSwKICAgICAgICBzYW5pdGl6ZXJHZWw6IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2Uuc2FuaXRpemVyR2VsJyksCiAgICAgICAgZHJ5TmFwa2luOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLmRyeU5hcGtpbicpLAogICAgICAgIHdldE5hcGtpbjogdGhpcy4kdCgnb3Blbl9kYXRhLmRvbWVzdGljX21hcmtldF9wcmljZS53ZXROYXBraW4nKSwKICAgICAgICBiYWJ5RGlhcGVyOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLmJhYnlEaWFwZXInKSwKICAgICAgICB0b2lsZXRQYXBlcjogdGhpcy4kdCgnb3Blbl9kYXRhLmRvbWVzdGljX21hcmtldF9wcmljZS50b2lsZXRQYXBlcicpLAogICAgICAgIGNobG9yaW5lOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLmNobG9yaW5lJyksCiAgICAgICAgdG9vdGhwYXN0ZTogdGhpcy4kdCgnb3Blbl9kYXRhLmRvbWVzdGljX21hcmtldF9wcmljZS50b290aHBhc3RlJyksCiAgICAgICAgcGVyZnVtZVNvYXA6IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2UucGVyZnVtZVNvYXAnKSwKICAgICAgICBsaXF1aWRTb2FwOiB0aGlzLiR0KCdvcGVuX2RhdGEuZG9tZXN0aWNfbWFya2V0X3ByaWNlLmxpcXVpZFNvYXAnKSwKICAgICAgICBldGh5bEFsY29ob2w6IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2UuZXRoeWxBbGNvaG9sJyksCiAgICAgICAgd2FzaGluZ1Bvd2RlcjogdGhpcy4kdCgnb3Blbl9kYXRhLmRvbWVzdGljX21hcmtldF9wcmljZS53YXNoaW5nUG93ZGVyJyksCiAgICAgICAgbGF1bmRyeVNvYXA6IHRoaXMuJHQoJ29wZW5fZGF0YS5kb21lc3RpY19tYXJrZXRfcHJpY2UubGF1bmRyeVNvYXAnKQogICAgICB9OwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ29CYWNrOiBmdW5jdGlvbiBnb0JhY2soKSB7CiAgICAgIGJ1cy5sZWF2ZVdpdGhDb25maXJtID0gdHJ1ZTsKICAgICAgaWYgKHRoaXMuZ29CYWNrUm91dGUgJiYgdGhpcy5nb0JhY2tSb3V0ZS5uYW1lKSB7CiAgICAgICAgdGhpcy4kcm91dGVyLnB1c2godGhpcy5nb0JhY2tSb3V0ZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kcm91dGVyLmdvKC0xKTsKICAgICAgfQogICAgfSwKICAgIGhhbmRsZUNyZWF0ZWQ6IGZ1bmN0aW9uIGhhbmRsZUNyZWF0ZWQoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUoKS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX3RoaXMudmFyX2RlZmF1bHRfc2VhcmNoX3BheWxvYWQuaXRlbXNQZXJQYWdlID0gNTAwOwogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgIHJldHVybiBjcnVkQW5kTGlzdHNTZXJ2aWNlLmdldEJ5SWQoTUFJTl9BUElfVVJMLCBfdGhpcy4kcm91dGUucGFyYW1zLmlkLCB0cnVlKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgICAgICAgIF90aGlzLmVkaXRpbmdJdGVtID0gcmVzLmRhdGE7CiAgICAgICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzMiA9IHRoaXM7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lKCkubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUoKS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICB3aGlsZSAoMSkgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5oYW5kbGVDcmVhdGVkKCk7CiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKSgpOwogIH0KfTs="},{"version":3,"mappings":";;;;AAkBA;AACA;AACA;AAEA;EACAA;EACAC;IACA;MACAC;MACAC;MACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;QACA;UACAC;YACAC;YACAC;UACA;QACA;MACA;MACA;IACA;IACAC;MACA;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACAC;MACA;QACA;MACA;QACA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;UAAA;YAAA;cACA;cAAA;cAAA,OACAC,wEACAC;gBACA;cACA,GACAC;gBACAC;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;EACA;EACAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EACA;AACA","names":["name","data","title","editingItem","statuses","computed","items","result","label","value","labels","date","formedBread","highGradeFlourImport","firstGradeFlourImport","firstGradeFlourLocal","cottonOilLocal","sunflowerOilImport","sugar","milkLocal","egg","riceAlanga","pasta","pastaPackaged","beefBoneless","beefWithBone","mutton","chicken","potato","onion","carrot","butter","buckwheat","babyFood","mask","sanitizerGel","dryNapkin","wetNapkin","babyDiaper","toiletPaper","chlorine","toothpaste","perfumeSoap","liquidSoap","ethylAlcohol","washingPowder","laundrySoap","methods","goBack","bus","handleCreated","crudAndListsService","then","catch","console","created"],"sourceRoot":"src/modules/integration/modules/open-data/modules/domestic-market-price","sources":["View.vue"],"sourcesContent":["<template>\r\n  <b-row>\r\n    <b-col sm=\"12\" class=\"text-center\">\r\n      <div class=\"h4 mb-4 d-inline-block\">{{ title }}</div>\r\n      <b-btn variant=\"warning\" class=\"float-right\" @click=\"goBack\">{{ $t('actions.back') }}</b-btn>\r\n    </b-col>\r\n    <b-col sm=\"12\">\r\n      <b-card>\r\n        <b-card-header>\r\n        </b-card-header>\r\n        <b-card-body>\r\n          <b-table :items=\"items\" hover striped thead-class=\"d-none\" bordered small/>\r\n        </b-card-body>\r\n      </b-card>\r\n    </b-col>\r\n  </b-row>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'open-data/domestic-market-price';\r\nimport {bus} from \"@/main\";\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\n\r\nexport default {\r\n  name: \"View\",\r\n  data() {\r\n    return {\r\n      title: this.$t('open_data.domestic_market_price.title'),\r\n      editingItem: {},\r\n      statuses: []\r\n    }\r\n  },\r\n  computed: {\r\n    items() {\r\n      let result = [];\r\n      for (const index in this.editingItem) {\r\n        if (this.labels[index]) {\r\n          result.push({\r\n            label: this.labels[index],\r\n            value: this.editingItem[index],\r\n          });\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n    labels() {\r\n      return {\r\n        date: this.$t('open_data.domestic_market_price.date'),\r\n        formedBread: this.$t('open_data.domestic_market_price.formedBread'),\r\n        highGradeFlourImport: this.$t('open_data.domestic_market_price.highGradeFlourImport'),\r\n        firstGradeFlourImport: this.$t('open_data.domestic_market_price.firstGradeFlourImport'),\r\n        firstGradeFlourLocal: this.$t('open_data.domestic_market_price.firstGradeFlourLocal'),\r\n        cottonOilLocal: this.$t('open_data.domestic_market_price.cottonOilLocal'),\r\n        sunflowerOilImport: this.$t('open_data.domestic_market_price.sunflowerOilImport'),\r\n        sugar: this.$t('open_data.domestic_market_price.sugar-stations'),\r\n        milkLocal: this.$t('open_data.domestic_market_price.milkLocal'),\r\n        egg: this.$t('open_data.domestic_market_price.egg'),\r\n        riceAlanga: this.$t('open_data.domestic_market_price.riceAlanga'),\r\n        pasta: this.$t('open_data.domestic_market_price.pasta'),\r\n        pastaPackaged: this.$t('open_data.domestic_market_price.pastaPackaged'),\r\n        beefBoneless: this.$t('open_data.domestic_market_price.beefBoneless'),\r\n        beefWithBone: this.$t('open_data.domestic_market_price.beefWithBone'),\r\n        mutton: this.$t('open_data.domestic_market_price.mutton'),\r\n        chicken: this.$t('open_data.domestic_market_price.chicken'),\r\n        potato: this.$t('open_data.domestic_market_price.potato'),\r\n        onion: this.$t('open_data.domestic_market_price.onion'),\r\n        carrot: this.$t('open_data.domestic_market_price.carrot'),\r\n        butter: this.$t('open_data.domestic_market_price.butter'),\r\n        buckwheat: this.$t('open_data.domestic_market_price.buckwheat'),\r\n        babyFood: this.$t('open_data.domestic_market_price.babyFood'),\r\n        mask: this.$t('open_data.domestic_market_price.mask'),\r\n        sanitizerGel: this.$t('open_data.domestic_market_price.sanitizerGel'),\r\n        dryNapkin: this.$t('open_data.domestic_market_price.dryNapkin'),\r\n        wetNapkin: this.$t('open_data.domestic_market_price.wetNapkin'),\r\n        babyDiaper: this.$t('open_data.domestic_market_price.babyDiaper'),\r\n        toiletPaper: this.$t('open_data.domestic_market_price.toiletPaper'),\r\n        chlorine: this.$t('open_data.domestic_market_price.chlorine'),\r\n        toothpaste: this.$t('open_data.domestic_market_price.toothpaste'),\r\n        perfumeSoap: this.$t('open_data.domestic_market_price.perfumeSoap'),\r\n        liquidSoap: this.$t('open_data.domestic_market_price.liquidSoap'),\r\n        ethylAlcohol: this.$t('open_data.domestic_market_price.ethylAlcohol'),\r\n        washingPowder: this.$t('open_data.domestic_market_price.washingPowder'),\r\n        laundrySoap: this.$t('open_data.domestic_market_price.laundrySoap'),\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    goBack() {\r\n      bus.leaveWithConfirm = true\r\n      if (this.goBackRoute && this.goBackRoute.name) {\r\n        this.$router.push(this.goBackRoute)\r\n      } else {\r\n        this.$router.go(-1)\r\n      }\r\n    },\r\n    async handleCreated() {\r\n      this.var_default_search_payload.itemsPerPage = 500\r\n      await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, true)\r\n          .then(res => {\r\n            this.editingItem = res.data\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    }\r\n  },\r\n  async created() {\r\n    await this.handleCreated();\r\n  }\r\n}\r\n</script>\r\n<style>\r\n.card-header {\r\n  background: white;\r\n}\r\n</style>"]}]}