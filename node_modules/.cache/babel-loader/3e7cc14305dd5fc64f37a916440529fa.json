{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\commission\\document-tree\\document-tree.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\commission\\document-tree\\document-tree.vue","mtime":1667352074421},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["document-tree.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <b-row>\r\n        <b-col>\r\n            <b-card>\r\n                <div\r\n                    class=\"card-body p-0\"\r\n                    style=\"overflow: auto;\"\r\n                >\r\n                    <h4 class=\"card-title mb-4\"><b>{{ $t( 'submodules.doc.tab_doc_tree' ) }}</b></h4>\r\n                    <!-- <h5 v-if=\"currentDocument && currentDocument.id\">\r\n                        <i class=\"fa fa-clock text-primary\"></i>\r\n                        {{currentDocument.dateOfCreated ? currentDocument.dateOfCreated : ''}} <span class=\"text-primary\">#</span>\r\n                        <i>{{currentDocument.fromEmployee}}</i> (Registered)\r\n                    </h5> -->\r\n                    <v-jstree\r\n                        v-if=\"documentTreeArray[0] && documentTreeArray[0].id\"\r\n                        :data=\"documentTreeArray\"\r\n                        whole-row\r\n                        text-field-name=\"fromEmployee\"\r\n                    >\r\n                        <template slot-scope=\"_\">\r\n                            <div @click.exact=\"customItemClick(_.vm, _.model, $event)\">\r\n                                <p>\r\n                                    <i class=\"fa fa-clock text-primary\"></i>\r\n                                    {{_.model.dateOfCreated ? _.model.dateOfCreated : ''}} <span class=\"text-primary\">#</span>\r\n                                    <i>{{_.model.fromEmployee}}</i> <i class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <span class=\"text-primary\">\r\n                                        {{getName({nameLt: _.model.mailingPurposeNameLt, nameUz: _.model.mailingPurposeNameUz, nameRu: _.model.mailingPurposeNameRu})}}\r\n                                    </span> <i class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <i>\r\n                                        {{_.model.toEmployee}} (<span class=\"text-primary\">{{getName({nameLt: _.model.processNameLt, nameUz: _.model.processNameUz, nameRu: _.model.processNameRu})}}</span>)</i>\r\n                                </p>\r\n\r\n                            </div>\r\n                        </template>\r\n                    </v-jstree>\r\n                </div>\r\n            </b-card>\r\n        </b-col>\r\n    </b-row>\r\n</template>\r\n<script>\r\n// import MyDocumentService from \"../../../services/document/mydocument.service\";\r\nimport VJstree from 'vue-jstree'\r\nimport helperService from '@/shared/services/helper.service';\r\n\r\nexport default {\r\n    props: {\r\n        docId: {\r\n            type: String\r\n        }\r\n    },\r\n    components: {\r\n        VJstree\r\n    },\r\n    name: \"DocumentTree\",\r\n    data () {\r\n        return {\r\n            currentDocument: {},\r\n        }\r\n    },\r\n    methods: {\r\n        async getDocumentTree () {\r\n            this.$emit('toggleLoading', true)\r\n            helperService.getApplicationTree(this.docId)\r\n                .then(res => {\r\n                    this.currentDocument = res.data\r\n                    // this.currentDocument.children = this.currentDocument.children.map(function f (o) {\r\n                    //     vm.$set(o, 'opened', true)\r\n                    //     // o.opened = true\r\n                    //     if (o.children && o.children.length) {\r\n                    //         o.children.map(f)\r\n                    //     }\r\n                    //     return o\r\n                    // })\r\n                })\r\n                .finally(() => {\r\n                    this.$emit('toggleLoading', false)\r\n                })\r\n            /* await MyDocumentService.getDocumentTree( this.docId ).then( response => {\r\n              this.currentDocument = response.data\r\n            } ).catch( (e) => {\r\n              this.$myMakeToast(\r\n                  this.$globalCreateErrorMessageFromArray(\r\n                      this.$getArrayFromArrayList( Object.values( e.response.data.errors ) ) ),\r\n                  this.$t( \"actions.error\" ),\r\n                  \"danger\"\r\n              );\r\n            } ); */\r\n        },\r\n        customItemClick (obj, model, event) {\r\n            this.$set(model, 'opened', !model.opened)\r\n            // model.opened = !model.opened\r\n        },\r\n        recursiveCreateNode (node, assignments = false, batches = false) {\r\n            let currentTreeNode = {\r\n                text: `<i class=\"fa fa-clock text-primary\"></i>\r\n                                                ${node.processDate} <span class=\"text-primary\">#</span> `,\r\n                children: [],\r\n                opened: true,\r\n            };\r\n            if (assignments) {\r\n                currentTreeNode.text += `<i>${node.fromUser}</i>  <i\r\n                                                        class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <span\r\n                                                        class=\"text-primary\">\r\n                                                       ${node.mailingPurpose}\r\n                                                    </span> <i class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <i>\r\n                                                    ${node.toUser} (<span class=\"text-primary\">${node.process}</span>`;\r\n                if (node.message) {\r\n                    currentTreeNode.text += ` - <span class=\"text-success\">${node.message}</span>`\r\n                }\r\n                currentTreeNode.text += `)`;\r\n            } else if (batches) {\r\n                currentTreeNode.text += `<i>${node.user}</i> <i\r\n                                                        class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <span\r\n                                                        class=\"text-primary\">\r\n                                                       ${node.process}\r\n                                                    </span>`;\r\n            } else {\r\n                currentTreeNode.text += `<i>${node.user}</i> <i\r\n                                                        class=\"fa fa-arrow-right text-success ml-1 mr-1\"></i> <span\r\n                                                        class=\"text-primary\">\r\n                                                        ${node.process}\r\n                                                    </span>`;\r\n            }\r\n\r\n\r\n            if (node.assignments && node.assignments.length) {\r\n                node.assignments.forEach(el => {\r\n                    currentTreeNode.children.push(this.recursiveCreateNode(el, true))\r\n                })\r\n            }\r\n\r\n            if (node.batches && node.batches.length) {\r\n                node.batches.forEach(el => {\r\n                    currentTreeNode.children.push(this.recursiveCreateNode(el, false, true))\r\n                })\r\n            }\r\n\r\n            return currentTreeNode;\r\n        }\r\n    },\r\n    async created () {\r\n        if (this.docId) {\r\n            await this.getDocumentTree()\r\n        }\r\n    },\r\n    computed: {\r\n        documentTreeArray () {\r\n            // let correctBatchesTree = [];\r\n            // this.currentDocument.batches.forEach(treeElement => {\r\n            //     correctBatchesTree.push(this.recursiveCreateNode(treeElement, false, true))\r\n            // });\r\n\r\n            // let correctAssignmentsTree = [];\r\n            // this.currentDocument.assignments.forEach(treeElement => {\r\n            //     correctAssignmentsTree.push(this.recursiveCreateNode(treeElement, true))\r\n            // });\r\n            let vm = this\r\n            let copyOfData = Object.assign({}, this.currentDocument)\r\n            if (copyOfData.children) {\r\n                copyOfData.children = copyOfData.children.map(function f (o) {\r\n                    vm.$set(o, 'opened', true)\r\n                    // o.opened = true\r\n                    if (o.children && o.children.length) {\r\n                        o.children.map(f)\r\n                    }\r\n                    return o\r\n                })\r\n            }\r\n            this.$set(copyOfData, 'opened', true)\r\n            return [copyOfData];\r\n        },\r\n    },\r\n    /* \r\n    WATCH */\r\n    watch: {\r\n        docId: {\r\n            handler () {\r\n                this.getDocumentTree()\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/modules/commission/document-tree"}]}