{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\services\\auth.service.js","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\services\\auth.service.js","mtime":1667352074584},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1667355397815}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/ACRU PROJECT/Fair Tech/acru-frontend/src/shared/services/auth.service.js"],"names":["ApiService","TokenService","REG_MAIN_API_URL","USER_MAIN_API_URL","AuthenticationError","errorCode","message","name","constructor","Error","AuthService","signup","payload","post","confirmPhone","user","inn","verifyCode","username","confirmMail","token","sendVerifyCodeToMail","sendVerifyCode","withLoader","payloadTemp","JSON","parse","stringify","phoneNumber","replaceAll","checkNoUsername","get","isOrgRegistered","tin","uid","position","getKeyForLoginSign","employeeTin","pinfl","login","password","response","saveToken","data","setUserAvatarUrl","uploadPath","saveRefreshToken","setUserInfo","id","employeeId","settings","userSettings","employeeFullName","employeeFirstName","employeeLastName","employeeMiddleName","setUserId","setIsOuter","isOuter","setHeader","status","loginEsp","signedData","TIN","PNFL","requestData","method","url","config","customRequest","detail","refreshToken","getRefreshToken","grant_type","refresh_token","auth","process","env","VUE_APP_CLIENT_ID","VUE_APP_CLIENT_SECRET","access_token","logout","removeToken","removeUserAvatarUrl","removeRefreshToken","removeSidebar","removeHeader","removeUserInfo","removeUserId","removeIsOuter","unmount401Interceptor"],"mappings":"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","sourcesContent":["import ApiService from './api.service'\r\nimport { TokenService } from './storage.service'\r\n\r\nconst REG_MAIN_API_URL = 'registration'\r\nconst USER_MAIN_API_URL = 'user'\r\n\r\nclass AuthenticationError extends Error {\r\n    constructor(errorCode, message) {\r\n        super(message)\r\n        this.name = this.constructor.name\r\n        this.message = message\r\n        this.errorCode = errorCode\r\n    }\r\n}\r\n\r\nconst AuthService = {\r\n    signup (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/finish`, payload)\r\n    },\r\n\r\n    confirmPhone (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/confirmation/phone-confirmed?uid=${payload.user.inn}&token=${payload.verifyCode}&username=${payload.user.username}`)\r\n    },\r\n\r\n    confirmMail (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/confirmation/mail-confirmed?uid=${payload.inn}&token=${payload.token}&username=${payload.username}`)\r\n    },\r\n\r\n    sendVerifyCodeToMail (payload) {\r\n        return ApiService.post(`${REG_MAIN_API_URL}/send/confirmation/code/to-confirmation`, payload)\r\n    },\r\n\r\n    sendVerifyCode (payload, withLoader = false) {\r\n        let payloadTemp = JSON.parse(JSON.stringify(payload))\r\n        payloadTemp.user.phoneNumber = payloadTemp.user.phoneNumber.replaceAll('-', '')\r\n        payloadTemp.user.phoneNumber = payloadTemp.user.phoneNumber.replaceAll('+', '')\r\n        return ApiService.post(`${REG_MAIN_API_URL}/send/confirmation/code/to-confirmation?uid=${payloadTemp.user.inn}`, payloadTemp, withLoader)\r\n        /*return new Promise(function(resolve) {\r\n            setTimeout(resolve, 1000);\r\n        });*/\r\n    },\r\n\r\n    checkNoUsername (username) {\r\n        return ApiService.get(`${USER_MAIN_API_URL}/check/no-username?username=${username}`)\r\n    },\r\n\r\n    isOrgRegistered (tin, uid, position) {\r\n        return ApiService.get(`${REG_MAIN_API_URL}/check-inn?tin=${tin}&uid=${uid}&position=${position}`)\r\n    },\r\n\r\n    getKeyForLoginSign (inn, employeeTin, pinfl) {\r\n        return ApiService.get(`key-for-login-sign?INN=${inn}&TIN=${employeeTin}&PNFL=${pinfl}`)\r\n    },\r\n    /**\r\n     * Login the user and store the access token to TokenService.\r\n     *\r\n     * @returns access_token\r\n     * @throws AuthenticationError\r\n     **/\r\n    login: async function (username, password) {\r\n        try {\r\n            const response = await ApiService.post('auth-payload', { username: username, password: password }, true)\r\n            TokenService.saveToken(response.data.token)\r\n            TokenService.setUserAvatarUrl(response.data.uploadPath)\r\n            TokenService.saveRefreshToken(response.data.token);\r\n            TokenService.setUserInfo({\r\n                id: response.data.id,\r\n                username: response.data.username,\r\n                employeeId: response.data.employeeId,\r\n                settings: response.data.userSettings,\r\n                employeeFullName: response.data.employeeFirstName + ' ' + response.data.employeeLastName + ' ' + (response.data.employeeMiddleName ? response.data.employeeMiddleName : '')\r\n            })\r\n            TokenService.setUserId(response.data.id);\r\n            TokenService.setIsOuter(response.data.isOuter);\r\n            ApiService.setHeader();\r\n            // ApiService.mount401Interceptor();\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new AuthenticationError(error.response.status, error.response.data.message)\r\n        }\r\n    },\r\n    loginEsp: async function (signedData, TIN, PNFL) {\r\n        const requestData = {\r\n            method: 'post',\r\n            url: '/auth-payload',\r\n            data: {\r\n                signedData: signedData,\r\n                TIN: TIN,\r\n                tin: TIN,\r\n                PNFL: PNFL\r\n            },\r\n            config: {\r\n                withLoader: true\r\n            }\r\n        };\r\n\r\n        try {\r\n            const response = await ApiService.customRequest(requestData)\r\n            TokenService.saveToken(response.data.token)\r\n            TokenService.setUserAvatarUrl(response.data.uploadPath)\r\n            TokenService.saveRefreshToken(response.data.token);\r\n            TokenService.setUserInfo({\r\n                id: response.data.id,\r\n                username: response.data.username,\r\n                employeeId: response.data.employeeId,\r\n                settings: response.data.userSettings,\r\n                employeeFullName: response.data.employeeFirstName + ' ' + response.data.employeeLastName + ' ' + (response.data.employeeMiddleName ? response.data.employeeMiddleName : '')\r\n            })\r\n            TokenService.setUserId(response.data.id);\r\n            TokenService.setIsOuter(response.data.isOuter);\r\n            ApiService.setHeader();\r\n            // ApiService.mount401Interceptor();\r\n            return response.data;\r\n        } catch (error) {\r\n            throw new AuthenticationError(error.response.status, error.response.data.detail)\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Refresh the access token.\r\n     **/\r\n    refreshToken: async function () {\r\n        const refreshToken = TokenService.getRefreshToken()\r\n\r\n        const requestData = {\r\n            method: 'post',\r\n            url: \"/o/token/\",\r\n            data: {\r\n                grant_type: 'refresh_token',\r\n                refresh_token: refreshToken\r\n            },\r\n            auth: {\r\n                username: process.env.VUE_APP_CLIENT_ID,\r\n                password: process.env.VUE_APP_CLIENT_SECRET\r\n            },\r\n            config: {\r\n                withLoader: true\r\n            }\r\n        }\r\n\r\n        try {\r\n            const response = await ApiService.customRequest(requestData)\r\n\r\n            TokenService.saveToken(response.data.access_token)\r\n            TokenService.setUserAvatarUrl(response.data.uploadPath)\r\n            TokenService.saveRefreshToken(response.data.refresh_token)\r\n            // Update the header in ApiService\r\n            ApiService.setHeader()\r\n\r\n            return response.data.access_token\r\n        } catch (error) {\r\n            throw new AuthenticationError(error.response.status, error.response.data.detail)\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Logout the current user by removing the token from storage.\r\n     *\r\n     * Will also remove `Authorization Bearer <token>` header from future requests.\r\n     **/\r\n    logout () {\r\n        // Remove the token and remove Authorization header from Api Service as well\r\n        TokenService.removeToken();\r\n        TokenService.removeUserAvatarUrl();\r\n        // TokenService.removeLocale();\r\n        TokenService.removeRefreshToken();\r\n        TokenService.removeSidebar();\r\n        //TokenService.removeMenuMinimize();\r\n        ApiService.removeHeader();\r\n        TokenService.removeUserInfo();\r\n        TokenService.removeUserId();\r\n        TokenService.removeIsOuter();\r\n\r\n        ApiService.unmount401Interceptor()\r\n    }\r\n}\r\n\r\nexport default AuthService\r\n\r\nexport { AuthService, AuthenticationError }\r\n"]}]}