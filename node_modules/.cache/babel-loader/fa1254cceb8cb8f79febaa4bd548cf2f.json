{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\commission\\create\\CreateOrUpdatePhysical.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\commission\\create\\CreateOrUpdatePhysical.vue","mtime":1682419455875},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1675061970665},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;AAUA;AACA;AACA;AACA;AAEA;AAEA;EACAA;EACA;AACA;EACAC;IACAC;EACA;EACA;AACA;EACAC;IACA;EACA;EACA;AACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;EACA;AACA;EACAC;IACAC;MACA;QACA;QACAC,OACA;UACA;YACA;cACAC;cACA;YACA;UACA;QACA;;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;QACA;QACA;UACAC;UACAC;QACA;MACA;MACA;QACAD;QACAC;QACAC;MACA;IACA;IACAC;MACA;QACA;QACAC;QACAA;UAAA;QAAA;QACAA;UAAA;QAAA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA,KACA;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACA;gBAAA;kBAAA;oBAAA;sBAAA;wBAAA,KACAC;0BAAA;0BAAA;wBAAA;wBAAA,iCACA;0BACAnB;0BACAoB;wBACA;sBAAA;wBAAA,cAGAD;wBAAA;wBAAA,OACA;sBAAA;wBAAA;wBAAA;0BADAnB;0BACAoB;wBAAA;sBAAA;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA,CAGA;gBAAA;kBAAA;gBAAA;cAAA;YAAA;cAAA;YAAA;cAAA,kCAEA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAC;MAAA;MAAA;QAAA;UAAA;YAAA;cACA;gBAAA;kBAAA;kBAAA;oBAAA;sBAAA;wBAAA,MACAC;0BAAA;0BAAA;wBAAA;wBACA;wBAAA,KACA;0BAAA;0BAAA;wBAAA;wBACAC;0BACA;0BACA;0BACA;0BACA;4BAAAC;0BAAA;wBACA;wBAAA;wBAAA;sBAAA;wBAAA;wBAAA,OAkBA;sBAAA;wBAAAC;wBACAC;0BACA;0BAEA;4BACA;4BACA;8BACA;gCACA;gCACA;gCACA;gCACA;gCACA;gCACA;gCACA;kCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;oCACA;kCACA;gCACA;8BACA;4BACA;4BACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;4BAKA;0BACA;;0BAEA;0BACA;0BACA;0BACA;0BACA;0BACA;AACA;AACA;AACA;0BACA;;0BAEAH;4BACA;4BACA;4BACA;4BACA;8BAAAC;4BAAA;0BACA;wBACA;sBAAA;wBAAA;wBAAA;sBAAA;wBAGA;0BAAAA;wBAAA;sBAAA;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA,CAEA;gBAAA;kBAAA;gBAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;EACA;EACA;AACA;EACAG;IAAA;MAAA;QAAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EACA;AACA","names":["name","components","CreateApplicationByPhysical","data","computed","isModeCreate","computedObserver","methods","hasProjectOwner","loop1","foundPOwner","treeClosed","normalizer","id","label","children","getBase64","reader","returnBase64FilePromises","f","base64","save","valid","crudAndListsService","type","promises","Promise","created"],"sourceRoot":"src/modules/commission/create","sources":["CreateOrUpdatePhysical.vue"],"sourcesContent":["<template>\r\n  <base-create-or-update-wrapper\r\n      @save=\"save\"\r\n      has-save-suspend\r\n      :custom-title=\"isModeCreate ? $t('actions.create') : $t('actions.update')\"\r\n  >\r\n    <CreateApplicationByPhysical ref=\"formApplicationByPhysical\"></CreateApplicationByPhysical>\r\n  </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nimport CreateApplicationByPhysical from \"@/shared/views/components/commission/document/CreateApplicationByPhysical\";\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\n\r\nconst MAIN_API_URL = 'before-commission/application'\r\n\r\nexport default {\r\n  name: \"CreateOrUpdatePhysical\",\r\n  /*\r\n  * COMPONENTS */\r\n  components: {\r\n    CreateApplicationByPhysical\r\n  },\r\n  /*\r\n  * DATA */\r\n  data() {\r\n    return {}\r\n  },\r\n  /*\r\n  * COMPUTED */\r\n  computed: {\r\n    isModeCreate() {\r\n      return this.$route.name === 'CreateApplicationByLegal'\r\n    },\r\n    computedObserver() {\r\n      return this.$refs.formApplicationByPhysical.$refs.observer\r\n    }\r\n  },\r\n  /*\r\n  * METHODS */\r\n  methods: {\r\n    hasProjectOwner() {\r\n      if (this.$refs.formApplicationByPhysical.editingItem.assignments) {\r\n        let foundPOwner = false\r\n        loop1:\r\n            for (let i = 0; i < this.$refs.formApplicationByPhysical.editingItem.assignments.length; i++) {\r\n              for (let j = 0; j < this.$refs.formApplicationByPhysical.editingItem.assignments[i].toEmployees.length; j++) {\r\n                if (this.$refs.formApplicationByPhysical.editingItem.assignments[i].toEmployees[j].isProjectOwner) {\r\n                  foundPOwner = true\r\n                  break loop1;  // breaks out of loop2 and loop1\r\n                }\r\n              }\r\n            }\r\n        return foundPOwner\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n    treeClosed(veeName) {\r\n      this.computedObserver.refs[veeName].validate();\r\n    },\r\n    normalizer(node) {\r\n      if (!node.children || node.children.length === 0) {\r\n        delete node.children\r\n        return {\r\n          id: node.id,\r\n          label: node.name,\r\n        }\r\n      }\r\n      return {\r\n        id: node.id,\r\n        label: node.name,\r\n        children: node.children && node.children.length > 0 ? node.children : [],\r\n      }\r\n    },\r\n    getBase64(file) {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n      });\r\n    },\r\n    async returnBase64FilePromises() {\r\n      if (this.$refs.formApplicationByPhysical.editingItem.applicationFiles) {\r\n        return await this.$refs.formApplicationByPhysical.editingItem.applicationFiles.map(async f => {\r\n          if (f.file.dataURL) {\r\n            return {\r\n              name: f.file.name,\r\n              base64: f.file.dataURL\r\n            }\r\n          } else {\r\n            return {\r\n              name: f.file.name,\r\n              base64: await this.getBase64(f.file),\r\n            }\r\n          }\r\n        })\r\n      }\r\n      return []\r\n    },\r\n    async save() {\r\n      this.computedObserver.validate().then(async valid => {\r\n        if (valid && this.hasProjectOwner()) {\r\n          this.$refs.formApplicationByPhysical.editingItem.type = 'PHYSICAL'\r\n          if (this.$refs.formApplicationByPhysical.editingItem.id) {\r\n            crudAndListsService.update(MAIN_API_URL, this.$refs.formApplicationByPhysical.editingItem).then(res => {\r\n              this.computedObserver.reset()\r\n              this.$refs.formApplicationByPhysical.editingItem = Object.assign({}, {});\r\n              this.$router.go(-1)\r\n              this.$toast(this.$t('messages.saved_successfully'), {type: 'success'});\r\n            })\r\n          } else {\r\n\r\n            /* let vm = this\r\n            let base64PriceFiles = []\r\n            if (this.$refs.formApplicationByPhysical.editingItem.applicationFiles) {\r\n                await this.$refs.formApplicationByPhysical.editingItem.applicationFiles.forEach(async f => {\r\n                    if (f.file.dataURL) {\r\n                        base64PriceFiles.push(f.file.dataURL)\r\n                    } else {\r\n                        let res = await this.getBase64(f.file)\r\n                        base64PriceFiles.push(res)\r\n                    }\r\n                })\r\n            }\r\n\r\n\r\n            this.$refs.formApplicationByPhysical.editingItem.applicationFiles = base64PriceFiles */\r\n            let promises = await this.returnBase64FilePromises()\r\n            Promise.all(promises).then(results => {\r\n              this.$refs.formApplicationByPhysical.editingItem.applicationFiles = results\r\n\r\n              if (this.$refs.formApplicationByPhysical.editingItem.assignments) {\r\n                let participants = this.$refs.formApplicationByPhysical.editingItem.assignments\r\n                this.$refs.formApplicationByPhysical.editingItem.assignmentParticipantList = participants.map(el => {\r\n                  return {\r\n                    \"dateOfCreated\": el.dateOfCreated,\r\n                    \"fromDepartmentId\": el.fromEmployee.departmentId,\r\n                    \"fromEmployeeId\": el.fromEmployee.employeeId,\r\n                    \"fromPositionId\": el.fromEmployee.positionId,\r\n                    \"fromUserId\": el.fromEmployee.id,\r\n                    \"resolution\": \"\",\r\n                    \"sendingAssignmentParticipantList\": el.toEmployees.map(toEl => {\r\n                      return {\r\n                        \"mailingPurposeId\": toEl.mailingPurposeId,\r\n                        \"processId\": el.processId,\r\n                        \"toDepartmentId\": toEl.toEmployee.departmentId,\r\n                        \"toEmployeeId\": toEl.toEmployee.employeeId,\r\n                        \"toPositionId\": toEl.toEmployee.positionId,\r\n                        \"toUserId\": toEl.toEmployee.id,\r\n                        \"isProjectOwner\": toEl.isProjectOwner\r\n                      }\r\n                    })\r\n                  }\r\n                })\r\n                /* let objEml = this.$refs.formApplicationByPhysical.editingItem.assignments\r\n                for (let i = 0; i < objEml.length; i++) {\r\n\r\n                  if (i !== 0) {\r\n                    this.$refs.formApplicationByPhysical.editingItem.applicationMembersDtos.push( {\r\n                      fromEmployeeId: objEml[i - 1].employeeId,\r\n                      toEmployeeId: objEml[i].employeeId,\r\n\r\n                    } )\r\n                  } else {\r\n                    this.$refs.formApplicationByPhysical.editingItem.applicationMembersDtos.push( {\r\n                      fromEmployeeId: null,\r\n                      toEmployeeId: objEml[i].employeeId,\r\n\r\n                    } )\r\n                  }\r\n                } */\r\n                this.$refs.formApplicationByPhysical.editingItem.assignments = null\r\n              }\r\n\r\n              // let old_obj = {\r\n              //     fileName: 'test',\r\n              //     regNumber: this.$refs.formApplicationByPhysical.editingItem.numberOfIncomingDocument,\r\n              //     date: this.$refs.formApplicationByPhysical.editingItem.dateOfIncomingDocument,\r\n              // }\r\n              /* let letterId = null\r\n              await crudAndListsService.getLetterId(old_obj).then(res => {\r\n                  letterId = res.data.id\r\n              }) */\r\n              // this.$refs.formApplicationByPhysical.editingItem.legalId = null\r\n\r\n              crudAndListsService.create(MAIN_API_URL, this.$refs.formApplicationByPhysical.editingItem, null, true).then(res => {\r\n                this.computedObserver.reset()\r\n                this.$refs.formApplicationByPhysical.editingItem = Object.assign({}, {});\r\n                this.$router.go(-1)\r\n                this.$toast(this.$t('messages.saved_successfully'), {type: 'success'});\r\n              })\r\n            })\r\n          }\r\n        } else {\r\n          this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n        }\r\n      });\r\n    }\r\n  },\r\n  /*\r\n  * CREATED */\r\n  async created() {\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.col-form-label {\r\n  padding-top: 0;\r\n}\r\n\r\nul {\r\n  list-style-type: none;\r\n}\r\n</style>\r\n"]}]}