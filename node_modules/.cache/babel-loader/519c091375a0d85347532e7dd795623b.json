{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\advertisement\\modules\\e-auction-monitoring\\map\\VanillaLeaflet.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\advertisement\\modules\\e-auction-monitoring\\map\\VanillaLeaflet.vue","mtime":1675054786257},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1675061970665},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;;;;AA0HA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;EACAA;IACA;IACAC;EACA;EACAC;IACA;IACAC;EACA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;MACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;QACA9B;QACAE;QACAE;QACAD;QACAF;MACA;MACA8B;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IAAA;IAAA;MAAA;QAAA;UAAA;YACAC;YACA;YACA;YACA;YACAA;YACA;YACAA;YACA;YACAA;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EACA;EACAC;IACAC;MACA;MACA;MACA;QAAAhC;QAAAC;QAAAC;QAAAG;QAAAD;QAAAD;QAAAG;MACA2B;QACAhC;QACAC;QACAG;MACA;MACAL;MACAA;MACA;IACA;IACAkC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cACAlC;cACA;gBACAA;cACA;cACA;gBACAmC;kBACA;oBACAC;oBACAC;oBACAC;kBACA;gBACA;cACA;cACA;cACAtC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAuC;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,OACAC,4DACAC;gBACA;cACA,GACAC;gBACAC;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAC;MACA;MACA;MACA;IACA;IACAC;MAAA;MACAL,yEACAC;QACA;QACA;QACA;QACAK;UACA;YACAC;cACAC;gBACAC;gBACAC;gBACAZ;cACA;YACA,GACAa;cAAA;YAAA;UACA;QACA;QACA;MACA,GACAT;QACAC;MACA;IACA;IACAS;MACA;QACA;MACA;MACA;MACA;QAAAJ;MAAA;QACAK;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MACA;MACAC,wDACAhB;QAAA;QACA;MACA,GACAC;QACAC;MACA;IACA;IACAe;MACA;QAAA;MAAA;MACA;QACA;UACAC;UACAC;UACAC;QACA;MAEA;MACA;IACA;IACAC;MACA;QAAA;MAAA;MACA;QACA;UACAH;UACAC;UACAC;QACA;MAEA;MACA;IACA;IACAE;MAAA;QAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAAC;cACA;gBACA;cACA;cAAA,MACAC;gBAAA;gBAAA;cAAA;cAAA;cAAA,OAEAzB,yDACAC;gBACA;cACA,GACAC;gBACAC;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAEA;IACAuB;MACA;QAAA;MAAA;MACA;QACA;MACA;MACA;IACA;IACAC;MAAA;QAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAAC;cACAC;cACA;gBAAA;kBAAA;oBAAA;sBAAA;sBAAA,OACA;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA,CACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAC;MACA;MACA;MACA;MACA;QACA;MACA;IACA;IACAC;MAAA;MAAA;QAAA;UAAA;YAAA;cACA;cAAA;cAAA,OACAC,yGACA/B;gBAAA;gBACA;gBACA;gBACA;cACA,GACAC;gBACAC;gBACA;cACA,GACA8B;gBACA;cACA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IACA;IACAC;MAAA;MACA;QACA;MACA;IACA;EACA;EACAC;IACA;MACAC;QACA;MACA;IACA;IACA;MACAA;QACA;UACA;QACA;MACA;MACAC;IACA;IACApE;MACA;IACA;EACA;AACA","names":["components","Popup","mounted","LeafletMarkercluster","data","filterPayload","passportNumber","designTypeIds","contractorIds","districtIds","regionIds","map","self","maxZoom","minZoom","initZoom","view","attribution","maxBounds","markers","adMarkers","adMarkerObjects","searchResultMarker","slide","sliding","currentAdDetails","currentAdImgs","strForImgs","publicPath","districts","regions","contractorSearchPayload","hasNextPageContractors","contractors","debounce","isLoadingContractors","initialFilterPayload","mapPopup","id","show","element","created","store","methods","initMap","L","handleAddLayers","iconCreateFunction","html","className","iconSize","fetchRegionsForAdvertisementByCurrentUserId","helperService","then","catch","console","resetFilter","search","res","list","icon","iconUrl","iconAnchor","on","addSearchResultMarker","vm","onSlideStart","onSlideEnd","getAdDetails","adMonitoringService","customLabelDistrict","nameRu","nameLt","nameUz","customLabelRegion","regionSelected","dontResetDistrict","$event","customLabelContractor","debounceSearchContractors","selectName","clearTimeout","fetchContractorsWithKeyword","fetchContractors","crudAndListsService","finally","contractorReachedEndOfList","watch","handler","deep"],"sourceRoot":"src/modules/advertisement/modules/e-auction-monitoring/map","sources":["VanillaLeaflet.vue"],"sourcesContent":["<template>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <div class=\"col-md-12 text-center\">\r\n        <div class=\"h4 mb-4 d-inline-block\">{{ $t('submodules.ad_monitoring.title') }}</div>\r\n      </div>\r\n      <div class=\"card\">\r\n        <div class=\"card-body p-0\">\r\n          <div class=\"row p-4\">\r\n            <div class=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-3 px-1 pb-2\">\r\n              <BaseInputWithValidation\r\n                  not-required\r\n                  label-on-top\r\n                  custom-styles=\"width: 100%;\"\r\n                  v-model=\"filterPayload.passportNumber\"\r\n                  :label=\"$t('column.ad_construction_passport_number')\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-3 px-1 pb-2\">\r\n              <BaseMultiselectWithValidation\r\n                  not-required\r\n                  v-model=\"filterPayload.contractorIds\"\r\n                  multiple\r\n                  :has-next-page=\"hasNextPageContractors\"\r\n                  @reachedEndOfList=\"contractorReachedEndOfList\"\r\n                  @search-change=\"debounceSearchContractors\"\r\n                  :searchable=\"true\"\r\n                  preserve-search\r\n                  :clear-on-select=\"false\"\r\n                  :close-on-select=\"false\"\r\n                  :loading=\"isLoadingContractors\"\r\n                  :internal-search=\"false\"\r\n                  :options=\"contractors.map(e => e.id)\"\r\n                  :hide-selected=\"true\"\r\n                  :label=\"$t('submodules.contractor.title')\"\r\n                  label-on-top\r\n                  style=\"width: 100%;\"\r\n                  placeholder=\"\"\r\n                  :custom-label=\"customLabelContractor\"\r\n                  open-direction=\"bottom\"\r\n                  :max-height=\"600\"\r\n                  :show-labels=\"false\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 px-1 pb-2\">\r\n              <BaseMultiselectWithValidation\r\n                  not-required\r\n                  multiple\r\n                  v-model=\"filterPayload.regionIds\"\r\n                  :options=\"regions.map(e => e.regionId)\"\r\n                  :hide-selected=\"true\"\r\n                  :close-on-select=\"false\"\r\n                  :label=\"$t('column.region')\"\r\n                  label-on-top\r\n                  placeholder=\"\"\r\n                  :custom-label=\"customLabelRegion\"\r\n                  open-direction=\"bottom\"\r\n                  style=\"width: 100%;\"\r\n                  :max-height=\"600\"\r\n                  :show-labels=\"false\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12 col-sm-6 col-md-4 col-lg-3 col-xl-2 px-1 pb-2\">\r\n              <BaseMultiselectWithValidation\r\n                  not-required\r\n                  multiple\r\n                  v-model=\"filterPayload.districtIds\"\r\n                  :options=\"districts.map(e => e.id)\"\r\n                  :hide-selected=\"true\"\r\n                  :close-on-select=\"false\"\r\n                  :label=\"$t('column.district')\"\r\n                  label-on-top\r\n                  placeholder=\"\"\r\n                  :custom-label=\"customLabelDistrict\"\r\n                  open-direction=\"bottom\"\r\n                  style=\"width: 100%;\"\r\n                  :max-height=\"600\"\r\n                  :show-labels=\"false\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12 col-sm-12 col-md-8 col-lg-12 col-xl-2 text-right px-1 pb-2\">\r\n              <br class=\"d-none d-xl-block\">\r\n              <b-button variant=\"primary\" size=\"sm\" class=\"me-2\" @click=\"search\" >\r\n                <i class=\"mdi mdi-magnify font-size-20 align-middle\"></i>\r\n              </b-button>\r\n              <b-button variant=\"warning\" size=\"sm\" @click=\"resetFilter\" >\r\n                <i class=\"mdi mdi-refresh font-size-20 align-middle\"></i>\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-12\">\r\n              <v-map id=\"map\" ref=\"map\"></v-map>\r\n            </div>\r\n          </div>\r\n          <b-modal :id=\"mapPopup.id\" size=\"xl\" v-model=\"mapPopup.show\">\r\n            <template #modal-header v-if=\"!mapPopup.element.details\">\r\n              <h4 class=\"m-0\"><strong>{{ $t('submodules.ad_monitoring.ad_passport_details_title') }}</strong></h4>\r\n            </template>\r\n            <template #modal-title v-else>\r\n              <h4 class=\"m-0 mb-1 d-flex justify-content-between\">\r\n                <strong>{{ $t('submodules.ad_monitoring.ad_passport_details_title') }}</strong>\r\n                <strong v-if=\"currentAdDetails.isUzAvtoYul\" style=\"color: green;\">{{ $t('column.uzavtoyul') }}</strong>\r\n                <strong>{{ $t('column.number_sign') }}: {{ currentAdDetails.passportNumber }}</strong>\r\n              </h4>\r\n            </template>\r\n            <template #modal-footer>&nbsp;</template>\r\n            <popup\r\n                v-if=\"mapPopup.show\"\r\n                :currentAdDetails=\"currentAdDetails\"\r\n                :publicPath=\"publicPath\"\r\n                :onSlideStart=\"onSlideStart\"\r\n                :onSlideEnd=\"onSlideEnd\"\r\n            ></popup>\r\n          </b-modal>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { LMap } from \"vue2-leaflet\";\r\nimport helperService from '@/shared/services/helper.service'\r\nimport L from \"leaflet\";\r\nimport store from \"@/state/store\";\r\nimport LeafletMarkercluster from \"leaflet.markercluster\";\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport \"leaflet.markercluster/dist/MarkerCluster.css\";\r\nimport \"leaflet.markercluster/dist/MarkerCluster.Default.css\";\r\nimport MarkerIcon from \"leaflet/dist/images/marker-icon.png\";\r\nimport Popup from \"./Popup\";\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\";\r\nimport adMonitoringService from \"@/shared/services/advertisement/adMonitoring.service\";\r\n\r\nconst MAIN_API_URL = 'contractor-advertising-construction'\r\nexport default {\r\n  components: {\r\n    \"v-map\": LMap,\r\n    Popup\r\n  },\r\n  mounted() {\r\n    this.initMap();\r\n    LeafletMarkercluster;\r\n  },\r\n  data() {\r\n    return {\r\n      filterPayload: {\r\n        passportNumber: '',\r\n        designTypeIds: '',\r\n        contractorIds: '',\r\n        districtIds: '',\r\n        regionIds: '',\r\n      },\r\n      map: {\r\n        self: null,\r\n        maxZoom: 19,\r\n        minZoom: 6,\r\n        initZoom: 6,\r\n        view: [41.5, 64.5],\r\n        attribution: [41.5, 64.5],\r\n        maxBounds: [[37, 55], [46, 74]],\r\n        markers: null,\r\n      },\r\n      adMarkers: [],\r\n      adMarkerObjects: [],\r\n      searchResultMarker: null,\r\n      slide: 0,\r\n      sliding: null,\r\n      currentAdDetails: {},\r\n      currentAdImgs: [],\r\n      strForImgs: '',\r\n      publicPath: process.env.BASE_URL,\r\n      districts: [],\r\n      regions: [],\r\n      contractorSearchPayload: {},\r\n      hasNextPageContractors: false,\r\n      contractors: [],\r\n      debounce: null,\r\n      isLoadingContractors: false,\r\n      initialFilterPayload: {\r\n        passportNumber: '',\r\n        contractorIds: [],\r\n        regionIds: [],\r\n        districtIds: [],\r\n        designTypeIds: []\r\n      },\r\n      mapPopup: {\r\n        id: 'map-popup',\r\n        show: false,\r\n        element: {},\r\n      },\r\n    };\r\n  },\r\n  async created() {\r\n    store.commit(\"SET_GLOBAL_LOADING\", true);\r\n    this.contractorSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n    this.var_default_search_payload.itemsPerPage = 500;\r\n    this.search()\r\n    store.commit(\"SET_GLOBAL_LOADING\", true);\r\n    this.fetchContractors()\r\n    store.commit(\"SET_GLOBAL_LOADING\", true);\r\n    this.fetchRegionsForAdvertisementByCurrentUserId()\r\n    store.commit(\"SET_GLOBAL_LOADING\", false);\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const { mapObject } = this.$refs.map;\r\n      this.map.self = mapObject\r\n      const { self, maxZoom, minZoom, attribution, view, initZoom, maxBounds } = this.map;\r\n      L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n        maxZoom: maxZoom,\r\n        minZoom: minZoom,\r\n        attribution: attribution,\r\n      }).addTo(self);\r\n      self.setView(view, initZoom);\r\n      self.setMaxBounds(maxBounds);\r\n      this.handleAddLayers();\r\n    },\r\n    async handleAddLayers() {\r\n      const { self } = this.map;\r\n      if (this.map.markers) {\r\n        self.removeLayer(this.map.markers);\r\n      }\r\n      this.map.markers = L.markerClusterGroup({\r\n        iconCreateFunction: (cluster) => {\r\n          return L.divIcon({\r\n            html: cluster.getAllChildMarkers().length,\r\n            className: 'cluster-bar',\r\n            iconSize: L.point(40, 30)\r\n          });\r\n        },\r\n      });\r\n      this.map.markers.addLayers(this.adMarkerObjects);\r\n      self.addLayer(this.map.markers);\r\n    },\r\n    async fetchRegionsForAdvertisementByCurrentUserId() {\r\n      await helperService.fetchRegionsForAdvertisementByCurrentUserId()\r\n          .then(res => {\r\n            this.regions = res.data\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    resetFilter() {\r\n      this.filterPayload = Object.assign({}, this.initialFilterPayload)\r\n      this.search()\r\n      this.map.self.setView(this.map.view, this.map.zoom);\r\n    },\r\n    search() {\r\n      helperService.getAdConstructionsForMapEAuction(this.filterPayload, true)\r\n          .then(res => {\r\n            this.adMarkers = res.data\r\n            this.adMarkerObjects = []\r\n            let list = [];\r\n            res.data.forEach((element, index) => {\r\n              if (element.latNumber && element.lngNumber) {\r\n                list.push(new L.marker([element.latNumber, element.lngNumber], {\r\n                  icon: L.icon({\r\n                    iconUrl: MarkerIcon,\r\n                    iconAnchor: new L.Point(12.5, 40),\r\n                    iconSize: new L.Point(25, 41),\r\n                  })\r\n                })\r\n                    .on('click', () => this.getAdDetails(this.adMarkers[index], index)))\r\n              }\r\n            });\r\n            this.adMarkerObjects = list;\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    addSearchResultMarker(e) {\r\n      if (this.searchResultMarker) {\r\n        this.map.removeLayer(this.searchResultMarker)\r\n      }\r\n      let vm = this\r\n      this.searchResultMarker = new L.Marker(e.latlng, { icon: new MyCustomMarkerForSearch() }).addTo(this.map).on('click', function (e) {\r\n        vm.map.removeLayer(vm.searchResultMarker)\r\n      });\r\n    },\r\n    onSlideStart(slide) {\r\n      this.sliding = true\r\n    },\r\n    onSlideEnd(slide) {\r\n      this.sliding = false\r\n    },\r\n    getAdDetails(adInfo, index) {\r\n      this.mapPopup.show = true\r\n      adMonitoringService.getEAuctionShortInfoById(adInfo.id)\r\n          .then(({ data }) => {\r\n            this.currentAdDetails = data\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    customLabelDistrict(opt) {\r\n      let selected = this.districts.find(e => e.id == opt);\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    customLabelRegion(opt) {\r\n      let selected = this.regions.find(e => e.regionId == (opt.regionId ? opt.regionId : opt));\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.regionNameRu,\r\n          nameLt: selected.regionNameLt,\r\n          nameUz: selected.regionNameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    async regionSelected($event, dontResetDistrict = false) {\r\n      if (!dontResetDistrict) {\r\n        this.filterPayload.districtIds = []\r\n      }\r\n      if ($event && $event.length) {\r\n        // GET DISTRICTS\r\n        await helperService.getGeoLocationsByMultipleParentIds($event)\r\n            .then(res => {\r\n              this.districts = res.data\r\n            })\r\n            .catch(e => {\r\n              console.log(e)\r\n            })\r\n      }\r\n    },\r\n    customLabelContractor(opt) {\r\n      let selected = this.contractors.find(e => e.id == opt);\r\n      if (selected) {\r\n        return `${selected.fullName}`\r\n      }\r\n      return ``;\r\n    },\r\n    async debounceSearchContractors(searchText, selectName = '') {\r\n      clearTimeout(this.debounce);\r\n      this.debounce = setTimeout(async () => {\r\n        await this.fetchContractorsWithKeyword(searchText, selectName);\r\n      }, 1000);\r\n    },\r\n    fetchContractorsWithKeyword(keyword, selectName) {\r\n      this.contractors = []\r\n      this.contractorSearchPayload.page = 1\r\n      this.contractorSearchPayload.keyword = keyword ? keyword : ''\r\n      if (selectName == 'contractor') {\r\n        this.fetchContractors()\r\n      }\r\n    },\r\n    async fetchContractors() {\r\n      this.isLoadingContractors = true\r\n      await crudAndListsService.searchListWithKeyword('contractor', this.contractorSearchPayload, 'by-contractor')\r\n          .then(res => {\r\n            this.contractors.push(...res.data.list)\r\n            this.hasNextPageContractors = res.data.total / this.contractorSearchPayload.itemsPerPage > this.contractorSearchPayload.page\r\n            this.contractorSearchPayload.page += 1\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n            this.contractors = []\r\n          })\r\n          .finally(() => {\r\n            this.isLoadingContractors = false\r\n          })\r\n    },\r\n    contractorReachedEndOfList(e, selectName = '') {\r\n      if (e) {\r\n        this.fetchContractors()\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    'filterPayload.regionIds': {\r\n      handler(newVal, oldVal) {\r\n        this.regionSelected(newVal);\r\n      },\r\n    },\r\n    'mapPopup.show': {\r\n      handler(newVal, oldVal) {\r\n        if (!newVal) {\r\n          this.currentAdDetails = {};\r\n        }\r\n      },\r\n      deep: true,\r\n    },\r\n    adMarkerObjects() {\r\n      this.handleAddLayers();\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"scss\">\r\n#map {\r\n  height: calc(100vh - 300px);\r\n  z-index: 1;\r\n}\r\n</style>\r\n<style>\r\n.cluster-bar {\r\n  background: #efecec;\r\n  color: #283593;\r\n  border-radius: 10px;\r\n  outline: 1px solid #7d8acf;\r\n  text-align: center;\r\n  line-height: 30px;\r\n  box-shadow: 0 3px 5px #a5aac9;\r\n}\r\n\r\n.multiselect__content-wrapper {\r\n  z-index: 500 !important;\r\n}\r\n</style>"]}]}