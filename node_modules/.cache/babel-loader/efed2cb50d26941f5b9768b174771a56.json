{"remainingRequest":"D:\\ACRU\\my-fairtech\\node_modules\\babel-loader\\lib\\index.js!D:\\ACRU\\my-fairtech\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\ACRU\\my-fairtech\\src\\shared\\store\\auth.module.js","dependencies":[{"path":"D:\\ACRU\\my-fairtech\\src\\shared\\store\\auth.module.js","mtime":1719222285813},{"path":"D:\\ACRU\\my-fairtech\\babel.config.js","mtime":1719222278287},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1719222280288},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\babel-loader\\lib\\index.js","mtime":1719222279696},{"path":"D:\\ACRU\\my-fairtech\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1719222279439}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["AuthService","AuthenticationError","router","ApiService","TokenService","state","authenticating","accessToken","authenticationErrorCode","authenticationError","refreshTokenPromise","UserInfo","getters","actions","login","_ref","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","commit","Username","Password","_data","wrap","_callee$","_context","prev","next","data","sent","root","push","abrupt","t0","errorCode","errorMessage","message","stop","loginByToken","_ref3","_ref4","_callee2","signedData","TIN","PNFL","INN","_data2","_callee2$","_context2","loginEsp","history","current","query","redirect","loginOneId","_ref5","_callee3","_callee3$","_context3","saveToken","token","setUserAvatarUrl","uploadPath","saveRefreshToken","setUserInfo","id","username","employeeId","settings","userSettings","employeeFullName","employeeFirstName","employeeLastName","employeeMiddleName","setUserId","setIsOuter","isOuter","setHeader","refreshToken","_ref6","p","then","response","logout","_ref7","window","location","reload","mutations","loginRequest","loginSuccess","loginError","_ref8","logoutSuccess","promise","auth","namespaced"],"sources":["D:/ACRU/my-fairtech/src/shared/store/auth.module.js"],"sourcesContent":["import {AuthService, AuthenticationError} from \"@/shared/services/auth.service\"\r\nimport router from '@/router'\r\nimport ApiService from \"@/shared/services/api.service\";\r\nimport {TokenService} from \"@/shared/services/storage.service\";\r\n\r\n\r\nconst state = {\r\n    authenticating: false,\r\n    accessToken: '',\r\n    authenticationErrorCode: 0,\r\n    authenticationError: '',\r\n    refreshTokenPromise: null, // Holds the promise of the refresh token\r\n    UserInfo: {}\r\n};\r\n\r\nconst getters = {\r\n    authenticationErrorCode: (state) => {\r\n        return state.authenticationErrorCode\r\n    },\r\n\r\n    authenticationError: (state) => {\r\n        return state.authenticationError\r\n    },\r\n\r\n    authenticating: (state) => {\r\n        return state.authenticating\r\n    }\r\n};\r\n\r\nconst actions = {\r\n    async login({commit}, {Username, Password}) {\r\n        commit('loginRequest');\r\n        try {\r\n            const data = await AuthService.login(Username, Password);\r\n            commit('loginSuccess', data);\r\n            commit('ROOT_LOGIN_SUCCESS', data, {root: true});\r\n            // Redirect the user to the page he first tried to visit or to the home view\r\n            // await router.push(router.history.current.query.redirect || '/');\r\n            await router.push('/');\r\n            return true\r\n        } catch (e) {\r\n            if (e instanceof AuthenticationError) {\r\n                commit('loginError', {errorCode: e.errorCode, errorMessage: e.message})\r\n            }\r\n            return false\r\n        }\r\n    },\r\n    async loginByToken({commit}, {signedData, TIN, PNFL, INN}) {\r\n        try {\r\n            const data = await AuthService.loginEsp(signedData, TIN, PNFL, INN);\r\n            commit('loginSuccess', data);\r\n            commit('ROOT_LOGIN_SUCCESS', data, {root: true});\r\n\r\n            // Redirect the user to the page he first tried to visit or to the home view\r\n            await router.push(router.history.current.query.redirect ? router.history.current.query.redirect : '/');\r\n\r\n            return true\r\n        } catch (e) {\r\n            if (e instanceof AuthenticationError) {\r\n                commit('loginError', {errorCode: e.errorCode, errorMessage: e.message})\r\n            }\r\n\r\n            return false\r\n        }\r\n    },\r\n    async loginOneId({commit}, data) {\r\n        commit('loginRequest');\r\n        try {\r\n            TokenService.saveToken(data.token)\r\n            TokenService.setUserAvatarUrl(data.uploadPath)\r\n            TokenService.saveRefreshToken(data.token);\r\n            TokenService.setUserInfo({\r\n                id: data.id,\r\n                username: data.username,\r\n                employeeId: data.employeeId,\r\n                settings: data.userSettings,\r\n                employeeFullName: data.employeeFirstName + ' ' + data.employeeLastName + ' ' + (data.employeeMiddleName ? data.employeeMiddleName : '')\r\n            })\r\n            TokenService.setUserId(data.id);\r\n            TokenService.setIsOuter(data.isOuter);\r\n            ApiService.setHeader();\r\n            commit('loginSuccess', data);\r\n            commit('ROOT_LOGIN_SUCCESS', data, {root: true});\r\n            await router.push('/');\r\n            return true\r\n        } catch (e) {\r\n            if (e instanceof AuthenticationError) {\r\n                commit('loginError', {errorCode: e.errorCode, errorMessage: e.message})\r\n            }\r\n            return false\r\n        }\r\n    },\r\n\r\n    refreshToken({commit, state}) {\r\n        // If this is the first time the refreshToken has been called, make a request\r\n        // otherwise return the same promise to the caller\r\n        if (!state.refreshTokenPromise) {\r\n            const p = AuthService.refreshToken()\r\n            commit('refreshTokenPromise', p)\r\n\r\n            // Wait for the AuthService.refreshToken() to resolve. On success set the token and clear promise\r\n            // Clear the promise on error as well.\r\n            p.then(\r\n                response => {\r\n                    commit('refreshTokenPromise', null)\r\n                    commit('loginSuccess', response)\r\n                    commit('ROOT_LOGIN_SUCCESS', data, {root: true});\r\n                },\r\n                () => {\r\n                    commit('refreshTokenPromise', null)\r\n                }\r\n            )\r\n        }\r\n\r\n        return state.refreshTokenPromise\r\n    },\r\n\r\n    logout({commit}) {\r\n        AuthService.logout()\r\n        commit('logoutSuccess')\r\n        commit('ROOT_LOGOUT_SUCCESS', null, {root: true});\r\n        // router.push('authentication/fulllogin')\r\n        window.location.reload()\r\n    }\r\n}\r\n\r\nconst mutations = {\r\n    loginRequest(state) {\r\n        state.authenticating = true;\r\n        state.authenticationError = ''\r\n        state.authenticationErrorCode = 0\r\n    },\r\n    setUserInfo(state, data) {\r\n        state.UserInfo = data;\r\n    },\r\n\r\n    loginSuccess(state, data) {\r\n        /*let formattedRules = [];\r\n        if (data.permissions.length > 0) {\r\n            formattedRules = data.permissions.map(perm => {\r\n                let formattedObj = {};\r\n                formattedObj.actions = perm.substr(0, perm.indexOf(' '));\r\n                formattedObj.subject = perm.substr(perm.indexOf(' ') + 1);\r\n                return formattedObj;\r\n            })\r\n        }*/\r\n        // state.rules = formattedRules;\r\n        state.accessToken = data.token;\r\n        // state.token = data.token;\r\n        state.authenticating = false;\r\n    },\r\n\r\n    loginError(state, {errorCode, errorMessage}) {\r\n        state.authenticating = false\r\n        state.authenticationErrorCode = errorCode\r\n        state.authenticationError = errorMessage\r\n    },\r\n\r\n    logoutSuccess(state) {\r\n        state.accessToken = '';\r\n        state.UserInfo = {}\r\n        // state.rules = [];\r\n    },\r\n\r\n    refreshTokenPromise(state, promise) {\r\n        state.refreshTokenPromise = promise\r\n    }\r\n}\r\n\r\nexport const auth = {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n}\r\n"],"mappings":"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"}]}