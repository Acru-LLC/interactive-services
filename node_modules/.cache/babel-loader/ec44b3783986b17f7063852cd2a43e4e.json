{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\letter\\income\\signature.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\letter\\income\\signature.vue","mtime":1676607555089},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1675061970665},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1675061970715}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"mappings":";;;;;;;AAmUA;AACA;AACA;AACA;AAEA;AACA;AAEA;EACAA;IACA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;IACA;EACA;EACAC;EACAC;IACAC;IACAC;IACAC;EACA;EACAC;IACA;IACAC;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;QACA;MACA;QACA;UAAAC;QAAA;MACA;IACA;IACAC;MACA;QACA;MACA;QACA;UAAAD;QAAA;MACA;IACA;IACAE;MACA;QAAA;MAAA;MACA;QACA;UACAC;UACAC;UACAC;QACA;MAEA;MACA;IACA;IACAC;MACA;QAAA;MAAA;MACA;QACA;MACA;MACA;IACA;IACAC;MAAA;MACA;QACA;UACAC;UACAC;UACAC;UACAC;QACA;QACAC,kCACAC;UACA;YACAC;UACA;YACAA;UACA;QACA,GACAC;UACA;UACAC;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;IACA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cACA;cACAC;gBACAC;gBACAC;gBACAC;cACA;cAAA,gBACA;cAAA,oCACA;cAAA;YAAA;cAAA,MACA;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACAZ,kEACA,SACA,SACA,uBACAC;gBAAA;kBAAA;oBAAA;sBAAA;sBAAA,OACA;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA,CACA,IACAE;gBACA;cACA,GACAU;gBACA;cACA;YAAA;cAAA;cAAA;YAAA;cACA;gBACAb,uDACA,SACA,SACA,mDACAC;kBAAA;oBAAA;sBAAA;wBACA;0BAAAvB;wBAAA;wBACAoC;sBAAA;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA,CACA,IACAD;kBACA;gBACA;cACA;gBACAb,4EACA,SACA,SACA,sGACAC;kBAAA;oBAAA;sBAAA;wBACA;0BAAAvB;wBAAA;wBACAoC;sBAAA;sBAAA;wBAAA;oBAAA;kBAAA;gBAAA,CACA,IACAD;kBACA;gBACA;cACA;YAAA;cAAA;YAAA;cAAA,KAGA;gBAAA;gBAAA;cAAA;cACAb;gBACA;gBACA;gBACA;kBAAAtB;gBAAA;cACA;cAAA;cAAA;YAAA;cAAA,KACA;gBAAA;gBAAA;cAAA;cACAsB;gBACA;gBACA;gBACA;kBAAAtB;gBAAA;cACA;cAAA;cAAA;YAAA;cAAA,MACA;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACAsB,sDACA,SACA,SACA,uBACAC;gBAAA;kBAAA;oBAAA;sBAAA,KACA;wBAAA;wBAAA;sBAAA;sBAAA;sBAAA,OACAD;wBAAAe;sBAAA,2BACAd;wBAAA;0BAAA;4BAAA;8BACA;gCAAAvB;8BAAA;8BACAoC;4BAAA;4BAAA;8BAAA;0BAAA;wBAAA;sBAAA,CAEA,IACAX;wBACA;sBACA;oBAAA;sBAAA;sBAAA;oBAAA;sBAAA;sBAAA,OAEAH;wBAAAe;sBAAA,2BACAd;wBAAA;0BAAA;4BAAA;8BACA;gCAAAvB;8BAAA;8BACAoC;4BAAA;4BAAA;8BAAA;0BAAA;wBAAA;sBAAA,CAEA,IACAX;wBACA;sBACA;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA,CAEA,IACAA,sBACA,GACAU;gBACA;cACA;YAAA;cAAA;cAAA;YAAA;cAAA,MACA;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACAb,kEACA,SACA,SACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cACA;cAAA,CACAG;gBACA;cACA,GACAU;gBACA;cACA;YAAA;cAAA;cAAA;YAAA;cAAA,MAEA;gBAAA;gBAAA;cAAA;cACAb,sDACA,SACA,SACA,uBACAC;gBAAA;kBAAA;oBAAA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;wBAAAvB;sBAAA;sBACAoC;sBACA;sBACA;sBACA;sBACA;sBACA;sBACA;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA,CACA,IACAX;gBACA;cAAA,CACA,EACAU;gBACA;cACA;cAAA;cAAA;YAAA;cAAA,MACA;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACAb,kEACA,SACA,SACA,uBACAC;gBAAA;kBAAA;oBAAA;sBAAA;sBAAA,OACAD,8DACAC;wBAAA;0BAAA;4BAAA;8BACA;gCAAAvB;8BAAA;8BACAoC;4BAAA;4BAAA;8BAAA;0BAAA;wBAAA;sBAAA,CAEA,IACAX;wBACA;sBACA;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA,CAEA,IACAA;gBACA;cAAA,CACA,EACAU;gBACA;cACA;YAAA;cAAA;cAAA;YAAA;cAAA,MACA;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACAb,iEACA,SACA,SACA,uBACAC;gBAAA;kBAAA;oBAAA;sBACA;wBAAAvB;sBAAA;sBACAoC;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA,CACA,IACAX;gBACA;cAAA,CACA,EACAU;gBACA;cACA;YAAA;cAAA;cAAA;YAAA;cAEAb,kDACA,SACA,SACA,wEACAC;gBAAA;kBAAA;oBAAA;sBACA;wBAAAvB;sBAAA;sBACAoC;oBAAA;oBAAA;sBAAA;kBAAA;gBAAA;cAAA,CACA,IACAX;gBACA;cAAA,CACA,EACAU;gBACA;cACA;YAAA;cAAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAMA;IACAG;MAAA;MACAhB,6CACAC;QACA;QACAgB;QACA;QACA;UACA;YACA;cACAC;gBACA,6BACAjB;kBACA;oBACA;kBACA;kBACA;gBACA,GACAE;kBACA;gBACA;cACA;YACA;cACA;gBACA;cACA;cACA;YACA;UACA;QACA;UACA;YACA;UACA;UACA;QACA;MACA,GACAA,oBACA;IACA;IACAgB;MACA,IACAC,qBACA,uCACA,uBACA;QACA;QACA;QACA;MACA,WACAA,qBACA,qCACA,UACA;QACA;MACA;QACA;MACA;IACA;IACAC;MACA;IACA;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MAAA;MACA;QACA;QACAvB,2CACAC;UACA;UAEA;YACA,+EACAuB,WACA;YACA;UACA;UAEAtB;QACA,GACAC;UACAC;QACA,GACAS;UACAK;YACA;UACA;QACA;MACA;IACA;IAEAO;MAAA;MACA;QACA;UACAC;QACA;UACA;UACA1B,4CACAC;YACA;cACA;cACA;YACA;UACA,GACAE;YACA;UAAA,CACA,EACAU;YACA;UACA;QACA;MACA;QACAa;MACA;IACA;IAEAC;MAAA;MACA;QACA;UACA;QACA;UACA;YACA;cACA;gBACAC;kBACA;oBACA;kBACA;gBACA;gBACA;cACA;gBACAA;kBACA;oBACA;kBACA;gBACA;gBACA;YAAA;UAEA;YACA;cACA;gBACA;kBACA;gBACA;kBACA;kBACAC,oHACA5B;oBACA;kBACA,GACAE;oBACAc;kBACA;kBACA;gBACA;gBACA;cACA;gBACA;kBACA;gBACA;kBACAY,oHACA5B;oBACA;kBACA,GACAE;oBACAc;kBACA;kBACA;gBACA;gBACA;cACA;gBACA;kBACA;gBACA;kBACAW;oBACA;sBACA;oBACA;kBACA;gBACA;gBACA;YAAA;UAEA;QACA;MACA;QACAF;MACA;IACA;IACAI;MAAA;MAAA;QAAA;MAAA;MACAD,wHACA5B;QACA;QACA8B;MACA,GACA5B;QACAc;MACA;IACA;IACAe;MAAA;MAAA;MAAA;QAAA;MAAA;MACA;QACA;UACA;YACA;UACA;QACA;QACA;MACA;MACAH,uFACA;QAAAI;MAAA,mBACAhC;QACA;QACA;UACA;QACA;MACA,GACAE;QACAc;MACA;IACA;IACAiB;MACA;QAAA;MAAA;MACA;QACA;MACA;MACA;IACA;EACA;EACAC;IACAC;MACA;IACA;IACAC;MACA;IACA;EACA;AACA","names":["data","commissionTypeId","commissionComment","commentForCommission","commissionModalLoader","commissionTypes","commissionsModal","commissionsModalForComment","commissionManagementId","commissionManagementList","commissionManagementComment","commissionManagementModal","currentPage","pageCount","src","imgUrl","width","height","x","y","numPages","pageYOffset","loaderQrCode","qrCodePage","loaderPdf","currentDoc","signatureModal","compromiseDecisionToAcceptRejectModal","employee_id","comment","employee_list","deleteQrPosition","loaderSign","name","components","VueDragResize","SignKeys","pdf","created","document","methods","openSignatureModalForCommissionForComment","openSignatureModalForCommission","type","openSignatureModalForCommissionManagement","customLabelCommissionTypes","nameRu","nameLt","nameUz","customLabelCommissionManagementTypes","convertToPdf","url","outputtype","forSign","key","Service","then","res","catch","rej","mouseEnter","mouseLeave","mousemove","signSuccess","payload","signedContent","inn","pnfl","finally","showMsgSuccess","decision_text","getByIdLetter","console","setTimeout","keyUpEvents","evt","setCurrentPage","resize","getPdf","pdfBase64","signData","showMsgError","save","cnfDoc","crudAndListsService","getCommissionManagementList","callback","fetchEmployeeList","keyword","customLabelEmployeeList","computed","computedMakeSignedCompromiseDecisionToReject","computedMakeSignedCompromiseDecisionToAccept"],"sourceRoot":"src/modules/letter/income","sources":["signature.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <div id=\"myHeader\" class=\"card card-body stickyHead\">\r\n        <div class=\"d-flex\">\r\n          <div style=\"width: 58%\">\r\n            <h5 v-if=\"numPages\" class=\"float-right m-0\">\r\n              {{ currentPage }} / {{ numPages }}\r\n            </h5>\r\n          </div>\r\n          <div style=\"width: 43%\">\r\n            <div class=\"float-right d-flex align-items-center\">\r\n              <b-button-group>\r\n                <b-button class=\"float-right\" variant=\"primary\" @click=\"signData\">\r\n                  <b-overlay :opacity=\"0.1\" :show=\"loaderQrCode\" rounded=\"sm\">\r\n                    <i class=\"fa fa-qrcode mr-1\"></i>\r\n                    {{ $t(\"actions.qrcode\") }}\r\n                  </b-overlay>\r\n                </b-button>\r\n                <b-button class=\"float-right mr-2\" variant=\"success\" @click=\"save\">\r\n                  <i class=\"fa fa-save\"></i>\r\n                  {{ $t(\"actions.save\") }}\r\n                </b-button>\r\n              </b-button-group>\r\n\r\n              <b-button :to=\"{name: 'LetterIncome'}\" class=\"float-right mr-2\" variant=\"primary\">\r\n                <i class=\"fa fa-arrow-left\"></i>\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-5\">\r\n        <b-row>\r\n          <!-- <b-col></b-col> -->\r\n          <b-col cols=\"12\">\r\n            <div class=\"d-flex justify-content-center\">\r\n              <b-overlay :opacity=\"1\" :show=\"loaderPdf\" rounded=\"lg\" variant=\"white\">\r\n                <div id=\"pdfId\" style=\" width: 270mm !important; min-height: 210mm; position: relative; \">\r\n                  <VueDragResize\r\n                      v-if=\"imgUrl && qrCodePage == currentPage\"\r\n                      :h=\"110\"\r\n                      :isActive=\"true\"\r\n                      :isResizable=\"false\"\r\n                      :parent=\"true\"\r\n                      :parentLimitation=\"true\"\r\n                      :w=\"110\"\r\n                      :x=\"x\"\r\n                      :y=\"y\"\r\n                      style=\"z-index: 3\"\r\n                      v-on:dragging=\"resize\"\r\n                      v-on:resizing=\"resize\"\r\n                  >\r\n                    <img\r\n                        :src=\"`${ imgUrl ? `data:image/png;base64, ${imgUrl}` : require('@/assets/img.png') }`\"\r\n                        @mouseenter=\"mouseEnter\"\r\n                        @mouseleave=\"mouseLeave\"\r\n                        @mousemove=\"mousemove\"\r\n                    />\r\n                  </VueDragResize>\r\n                  <pdf\r\n                      v-if=\"src\"\r\n                      ref=\"myPdfComponent\"\r\n                      :page=\"currentPage\"\r\n                      :src=\"src\"\r\n                      @num-pages=\"numPages = $event\"\r\n                  />\r\n                </div>\r\n              </b-overlay>\r\n            </div>\r\n          </b-col>\r\n          <!-- <b-col></b-col> -->\r\n        </b-row>\r\n\r\n        <b-row>\r\n          <b-col cols=\"12\">\r\n            <div class=\"d-flex mt-4 justify-content-center\">\r\n              <div\r\n                  class=\"d-flex mt-4\"\r\n                  style=\"overflow: auto; max-width: 90%\"\r\n              >\r\n                <div\r\n                    v-for=\"page in numPages\"\r\n                    :key=\"page + 'page'\"\r\n                    class=\"ml-3 mb-4\"\r\n                >\r\n                  <div\r\n                      :class=\"currentPage == page ? 'my-card-hovered-pdf-active' : ''\"\r\n                      class=\"my-card-hovered-pdf\"\r\n                      @click.prevent=\"setCurrentPage(page)\"\r\n                  >\r\n                    <div style=\"width: 200px;!important;position:relative\">\r\n                      <div\r\n                          v-if=\"imgUrl && qrCodePage == page\"\r\n                          :style=\"{\r\n                          top: `${y / 5.1}px`,\r\n                          left: `${x / 5.08}px`,\r\n                        }\"\r\n                          style=\"position: absolute; z-index: 999\"\r\n                      >\r\n                        <img\r\n                            v-if=\"imgUrl\"\r\n                            :height=\"20\"\r\n                            :src=\"`${\r\n                            imgUrl\r\n                              ? `data:image/png;base64, ${imgUrl}`\r\n                              : require('@/assets/img.png')\r\n                          }`\"\r\n                            :width=\"20\"\r\n                        />\r\n                      </div>\r\n\r\n                      <pdf v-if=\"src\" :page=\"page\" :src=\"src\"/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- COMMISSIONS MODAL Maxsus komissiya turi -->\r\n    <b-modal\r\n        v-model=\"commissionsModal\"\r\n        :title=\"`${$t('submodules.commission.title')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <p>\r\n        <BaseMultiselectWithValidation\r\n            v-model=\"commissionTypeId\"\r\n            :custom-label=\"customLabelCommissionTypes\"\r\n            :label=\"$t('submodules.commission.special_commission_type.title')\"\r\n            :max-height=\"600\"\r\n            :options=\"commissionTypes.map(e => e.id)\"\r\n            :show-labels=\"false\"\r\n            class=\"required\"\r\n            label-on-top\r\n            open-direction=\"bottom\"\r\n            placeholder=\"\"\r\n            rules=\"required\"\r\n        />\r\n      </p>\r\n\r\n      <BaseMultiselectWithValidation\r\n          v-if=\"this.currentDoc.status === 'SEND_SIGN'\"\r\n          v-model=\"commissionManagementId\"\r\n          :custom-label=\"customLabelCommissionManagementTypes\"\r\n          :label=\"$t('column.management')\"\r\n          :max-height=\"600\"\r\n          :options=\"commissionManagementList.map(e => e.id)\"\r\n          :show-labels=\"false\"\r\n          class=\"required\"\r\n          label-on-top\r\n          open-direction=\"bottom\"\r\n          placeholder=\"\"\r\n          rules=\"required\"\r\n      />\r\n\r\n      <b-form-textarea\r\n          v-model=\"commissionComment\"\r\n          :placeholder=\"$t('submodules.doc.summary')\"\r\n          class=\"mt-3\"\r\n          rows=\"5\"\r\n      ></b-form-textarea>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"success\"\r\n            @click=\"openSignatureModalForCommission\"\r\n        >\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"commissionModalLoader\"\r\n              rounded=\"sm\"\r\n          >\r\n            {{ $t(\"actions.continue\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n\r\n    <!-- COMMISSIONS MODAL Komissiya rahbar listi -->\r\n    <b-modal\r\n        v-model=\"commissionManagementModal\"\r\n        :title=\"`${$t('submodules.commission.title')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <BaseMultiselectWithValidation\r\n          v-model=\"commissionManagementId\"\r\n          :custom-label=\"customLabelCommissionManagementTypes\"\r\n          :label=\"$t('column.director')\"\r\n          :max-height=\"600\"\r\n          :options=\"commissionManagementList.map(e => e.id)\"\r\n          :show-labels=\"false\"\r\n          class=\"required mt-3\"\r\n          label-on-top\r\n          open-direction=\"bottom\"\r\n          placeholder=\"\"\r\n          rules=\"required\"\r\n      ></BaseMultiselectWithValidation>\r\n\r\n      <b-form-textarea\r\n          v-model=\"commissionManagementComment\"\r\n          :placeholder=\"$t('submodules.doc.summary')\"\r\n          class=\"mt-3\"\r\n          rows=\"5\"\r\n      ></b-form-textarea>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"success\"\r\n            @click=\"openSignatureModalForCommissionManagement\"\r\n        >\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"commissionModalLoader\"\r\n              rounded=\"sm\"\r\n          >\r\n            {{ $t(\"actions.continue\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n\r\n    <!-- COMMISSIONS MODAL FOR Comment-->\r\n    <b-modal\r\n        v-model=\"commissionsModalForComment\"\r\n        :title=\"`${$t('submodules.commission.sign_decision')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <div>\r\n        {{ $t('submodules.doc.summary') }}\r\n      </div>\r\n      <b-form-textarea\r\n          v-model=\"commentForCommission\"\r\n          :placeholder=\"$t('submodules.doc.summary')\"\r\n          class=\"mt-3\"\r\n          rows=\"5\"\r\n      />\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button variant=\"success\" @click=\"openSignatureModalForCommissionForComment\">\r\n          <b-overlay :opacity=\"0.1\" :show=\"commissionModalLoader\" rounded=\"sm\">\r\n            {{ $t(\"actions.continue\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n    <b-modal\r\n        v-model=\"signatureModal\"\r\n        :title=\"`${$t('submodules.reports.make_sign')}`\"\r\n        hide-footer\r\n        scrollable\r\n        size=\"lg\"\r\n    >\r\n      <b-overlay\r\n          :opacity=\"0.1\"\r\n          :show=\"loaderSign\"\r\n          rounded=\"sm\"\r\n      >\r\n        <SignKeys\r\n            :dataToSign=\"currentDoc\"\r\n            @sign=\"signSuccess\"\r\n        />\r\n      </b-overlay>\r\n    </b-modal>\r\n\r\n    <b-modal\r\n        v-model=\"compromiseDecisionToAcceptRejectModal\"\r\n        :title=\"`${$t('submodules.reports.make_sign')}`\"\r\n        hide-footer\r\n        scrollable\r\n        size=\"lg\"\r\n    >\r\n      <b-overlay\r\n          :opacity=\"0.1\"\r\n          :show=\"loaderSign\"\r\n          rounded=\"sm\"\r\n      >\r\n        <b-row>\r\n          <b-col cols=\"6\">\r\n            <BaseMultiselectWithValidation\r\n                v-if=\"computedMakeSignedCompromiseDecisionToReject\"\r\n                v-model=\"employee_id\"\r\n                :custom-label=\"customLabelEmployeeList\"\r\n                :label=\"$t('column.employee')\"\r\n                :max-height=\"600\"\r\n                :options=\"employee_list.map(e => e.id)\"\r\n                :show-labels=\"false\"\r\n                class=\"required\"\r\n                label-on-top\r\n                open-direction=\"bottom\"\r\n                placeholder=\"\"\r\n                rules=\"required\"\r\n                @search-change=\"fetchEmployeeList\"\r\n            />\r\n          </b-col>\r\n          <b-col :cols=\"computedMakeSignedCompromiseDecisionToReject ? 6 : 12\">\r\n            {{$t('submodules.doc.summary')}}\r\n            <b-form-textarea\r\n                v-model=\"comment\"\r\n                :placeholder=\"$t('submodules.doc.summary')\"\r\n                rows=\"5\"\r\n            />\r\n          </b-col>\r\n        </b-row>\r\n        <SignKeys\r\n            v-show=\"computedMakeSignedCompromiseDecisionToAccept || employee_id\"\r\n            :dataToSign=\"currentDoc\"\r\n            @sign=\"signSuccess\"\r\n        />\r\n      </b-overlay>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport {cnfDoc, showMsgError, showMsgSuccess} from \"@/helper\";\r\nimport pdf from \"vue-pdf\";\r\nimport Service from \"../letterService\";\r\nimport crudAndListsService from '@/shared/services/crud_and_list.service'\r\n\r\nimport SignKeys from \"../SignKeys.vue\";\r\nimport VueDragResize from \"vue-drag-resize\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      commissionTypeId: null,\r\n      commissionComment: '',\r\n      commentForCommission: '',\r\n      commissionModalLoader: false,\r\n      commissionTypes: [],\r\n      commissionsModal: false,\r\n      commissionsModalForComment: false,\r\n      commissionManagementId: false,\r\n      commissionManagementList: [],\r\n      commissionManagementComment: '',\r\n      commissionManagementModal: false,\r\n      currentPage: 1,\r\n      pageCount: 0,\r\n      src: null,\r\n      imgUrl: null,\r\n      width: 110,\r\n      height: 110,\r\n      x: 200,\r\n      y: 300,\r\n      numPages: undefined,\r\n      pageYOffset: 0,\r\n      loaderQrCode: false,\r\n      qrCodePage: null,\r\n      loaderPdf: false,\r\n      currentDoc: {},\r\n      signatureModal: false,\r\n      compromiseDecisionToAcceptRejectModal: false,\r\n      employee_id: null,\r\n      comment: null,\r\n      employee_list: [],\r\n      deleteQrPosition: false,\r\n      loaderSign: false,\r\n    };\r\n  },\r\n  name: \"Signature\",\r\n  components: {\r\n    VueDragResize,\r\n    SignKeys,\r\n    pdf,\r\n  },\r\n  created() {\r\n    this.getByIdLetter();\r\n    document.addEventListener(\"keyup\", this.keyUpEvents);\r\n  },\r\n  methods: {\r\n    openSignatureModalForCommissionForComment() {\r\n      this.signatureModal = true\r\n    },\r\n    openSignatureModalForCommission() {\r\n      if (this.commissionTypeId) {\r\n        this.signatureModal = true\r\n      } else {\r\n        this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n      }\r\n    },\r\n    openSignatureModalForCommissionManagement() {\r\n      if (this.commissionManagementId) {\r\n        this.signatureModal = true\r\n      } else {\r\n        this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n      }\r\n    },\r\n    customLabelCommissionTypes(opt) {\r\n      let selected = this.commissionTypes.find(e => e.id == opt);\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    customLabelCommissionManagementTypes(opt) {\r\n      let selected = this.commissionManagementList.find(e => e.id === opt);\r\n      if (selected) {\r\n        return selected.fullName\r\n      }\r\n      return ``;\r\n    },\r\n    convertToPdf(selectedItem, forSign = false) {\r\n      return new Promise((res, rej) => {\r\n        let config = {\r\n          url: `${selectedItem.url}`,\r\n          outputtype: \".pdf\",\r\n          forSign: forSign,\r\n          key: selectedItem.key,\r\n        };\r\n        Service.convertToPdfByApi(config)\r\n            .then((rs) => {\r\n              if (rs.data.uploadPath) {\r\n                res(rs.data.uploadPath);\r\n              } else {\r\n                res(false);\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              // this.catchErr(e);\r\n              rej(e);\r\n            });\r\n      });\r\n    },\r\n    mouseEnter() {\r\n      this.deleteQrPosition = true;\r\n    },\r\n    mouseLeave() {\r\n      this.deleteQrPosition = false;\r\n    },\r\n    mousemove() {\r\n      this.deleteQrPosition = true;\r\n    },\r\n    async signSuccess(data) {\r\n      this.loaderSign = true;\r\n      let payload = {\r\n        signedContent: data.content,\r\n        inn: data.inn,\r\n        pnfl: data.pnfl\r\n      };\r\n      switch (this.currentDoc.status) {\r\n        case 'SEND_SIGN':\r\n          if (this.currentDoc.projectType === 'NOT_BELONG' && this.currentDoc.letterType === 'LETTER') {\r\n            await Service.onlyDocSignFORNotBelong(payload, this.$route.params.id2,\r\n                this.x,\r\n                this.y,\r\n                this.currentPage - 1)\r\n                .then(async () => {\r\n                  await this.$router.push(\"/letter/income\");\r\n                })\r\n                .catch((err) => {\r\n                  this.catchErr(err);\r\n                })\r\n                .finally(() => {\r\n                  this.loaderSign = false;\r\n                });\r\n          } else if (this.currentDoc.projectType === 'FROM_DXA' && this.currentDoc.letterType === 'DECISION') {\r\n            Service.signDecision(payload, this.$route.params.id2,\r\n                this.x,\r\n                this.y,\r\n                this.currentPage - 1, this.commentForCommission)\r\n                .then(async () => {\r\n                  this.$router.push({name: 'LetterIncome'});\r\n                  showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                })\r\n                .finally(() => {\r\n                  this.loaderSign = false;\r\n                });\r\n          } else {\r\n            Service.makeSignedNewWithHeadOfDepartment(payload, this.$route.params.id2,\r\n                this.x,\r\n                this.y,\r\n                this.currentPage - 1, this.commissionTypeId, this.commissionComment, this.commissionManagementId)\r\n                .then(async () => {\r\n                  this.$router.push({name: 'LetterIncome'});\r\n                  showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                })\r\n                .finally(() => {\r\n                  this.loaderSign = false;\r\n                });\r\n          }\r\n          break;\r\n        default:\r\n          if (this.computedMakeSignedCompromiseDecisionToAccept) {\r\n            Service.makeSignedBeforeCommission(payload, this.$route.params.id2, this.comment, this.x, this.y, this.currentPage - 1).then(() => {\r\n              this.employee_id = null;\r\n              this.comment = null;\r\n              this.$router.push({name: 'CommissionProjects'})\r\n            })\r\n          } else if (this.computedMakeSignedCompromiseDecisionToReject) {\r\n            Service.onlyDocMakeSignedToReject(payload, this.$route.params.id2, this.employee_id, this.comment, this.x, this.y, this.currentPage - 1).then(() => {\r\n              this.employee_id = null;\r\n              this.comment = null;\r\n              this.$router.push({name: 'LetterIncome'})\r\n            })\r\n          } else if (this.currentDoc.projectType === 'FROM_DXA' && this.currentDoc.passedToCommission) {\r\n            await Service.onlyDocSign(payload, this.$route.params.id2,\r\n                this.x,\r\n                this.y,\r\n                this.currentPage - 1)\r\n                .then(async () => {\r\n                  if (this.currentDoc.isRejected) {\r\n                    await Service.resultApplicationForDXARejected({decision_text: this.commentForCommission}, this.$route.params.id)\r\n                        .then(async () => {\r\n                          this.$router.push({name: 'LetterIncome'});\r\n                          showMsgSuccess(this.$t(\"successDocSigned\"));\r\n\r\n                        })\r\n                        .catch((err) => {\r\n                          this.catchErr(err);\r\n                        });\r\n                  } else {\r\n                    await Service.resultApplicationForDXA({decision_text: this.commentForCommission}, this.$route.params.id)\r\n                        .then(async () => {\r\n                          this.$router.push({name: 'LetterIncome'});\r\n                          showMsgSuccess(this.$t(\"successDocSigned\"));\r\n\r\n                        })\r\n                        .catch((err) => {\r\n                          this.catchErr(err);\r\n                        });\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                })\r\n                .finally(() => {\r\n                  this.loaderSign = false;\r\n                });\r\n          } else if (this.currentDoc.projectType === 'NOT_BELONG' && this.currentDoc.letterType === 'LETTER') {\r\n            await Service.onlyDocSignFORNotBelong(payload, this.$route.params.id2,\r\n                this.x,\r\n                this.y,\r\n                this.currentPage - 1)\r\n                // .then(async () => {\r\n                //   await Service.onlyDocSignNotBelong(payload, this.$route.params.id)\r\n                //       .then(async () => {\r\n                //         this.$router.push({name: 'LetterIncome'});\r\n                //         showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                //\r\n                //       })\r\n                //       .catch((err) => {\r\n                //         this.catchErr(err);\r\n                //       });\r\n                //\r\n                // })\r\n                .catch((err) => {\r\n                  this.catchErr(err);\r\n                })\r\n                .finally(() => {\r\n                  this.loaderSign = false;\r\n                });\r\n          } else {\r\n            if (this.currentDoc.letterType === 'PROTOCOL') {\r\n              Service.onlyDocSign(payload, this.$route.params.id2,\r\n                  this.x,\r\n                  this.y,\r\n                  this.currentPage - 1)\r\n                  .then(async () => {\r\n                    // this.isModalKeys = false;\r\n                    // this.signatureModal = false;\r\n                    // let tempData = this.currentDoc;\r\n                    // await showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                    // await this.getList();\r\n                    // await this.getIncomeTotalCount();\r\n                    this.$router.push({name: 'LetterIncome'});\r\n                    showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                    // setTimeout(() => {\r\n                    //     let newdata = this.list.find((e) => e.id == tempData.id);\r\n                    //     this.currentDoc = Object.assign({}, newdata);\r\n                    //     this.$forceUpdate();\r\n                    //     this.getReceivers(this.currentDoc);\r\n                    // }, 1000);\r\n                  })\r\n                  .catch((err) => {\r\n                    // this.catchErr(err);\r\n                  })\r\n                  .finally(() => {\r\n                    this.loaderSign = false;\r\n                  });\r\n            } else if (this.currentDoc.letterType === 'LETTER') {\r\n              await Service.onlyDocSignFORNotBelong(payload, this.$route.params.id2,\r\n                  this.x,\r\n                  this.y,\r\n                  this.currentPage - 1)\r\n                  .then(async () => {\r\n                    await Service.onlyDocSignNotBelong(payload, this.$route.params.id)\r\n                        .then(async () => {\r\n                          this.$router.push({name: 'LetterIncome'});\r\n                          showMsgSuccess(this.$t(\"successDocSigned\"));\r\n\r\n                        })\r\n                        .catch((err) => {\r\n                          this.catchErr(err);\r\n                        });\r\n\r\n                  })\r\n                  .catch((err) => {\r\n                    // this.catchErr(err);\r\n                  })\r\n                  .finally(() => {\r\n                    this.loaderSign = false;\r\n                  });\r\n            } else if (['LETTER_NOT_COMPLETED', 'LETTER_NOT_BELONG', 'LETTER_REGION'].indexOf(this.currentDoc.letterType) !== -1) {\r\n              await Service.onlyDocSignForToReturn(payload, this.$route.params.id2,\r\n                  this.x,\r\n                  this.y,\r\n                  this.currentPage - 1)\r\n                  .then(async () => {\r\n                    this.$router.push({name: 'LetterIncome'});\r\n                    showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                  })\r\n                  .catch((err) => {\r\n                    // this.catchErr(err);\r\n                  })\r\n                  .finally(() => {\r\n                    this.loaderSign = false;\r\n                  });\r\n            } else {\r\n              Service.signDoc(payload, this.$route.params.id2,\r\n                  this.x,\r\n                  this.y,\r\n                  this.currentPage - 1, this.commissionTypeId, this.commissionComment)\r\n                  .then(async () => {\r\n                    this.$router.push({name: 'LetterIncome'});\r\n                    showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                  })\r\n                  .catch((err) => {\r\n                    // this.catchErr(err);\r\n                  })\r\n                  .finally(() => {\r\n                    this.loaderSign = false;\r\n                  });\r\n            }\r\n          }\r\n\r\n          break;\r\n      }\r\n    },\r\n    getByIdLetter() {\r\n      Service.getByIdLetter(this.$route.params.id)\r\n          .then((rs) => {\r\n            this.currentDoc = rs.data;\r\n            console.log(this.currentDoc)\r\n            this.loaderPdf = true;\r\n            if (this.currentDoc.fileType !== 'pdf') {\r\n              this.convertToPdf(rs.data).then((uploadPath) => {\r\n                if (!uploadPath) {\r\n                  setTimeout(() => {\r\n                    this.convertToPdf(rs.data)\r\n                        .then((uploadPath2) => {\r\n                          this.$nextTick(() => {\r\n                            this.src = pdf.createLoadingTask(`${this.baseUrl}/${uploadPath2}`);\r\n                          });\r\n                          this.loaderPdf = false;\r\n                        })\r\n                        .catch((e) => {\r\n                          this.loaderPdf = false;\r\n                        });\r\n                  }, 4000);\r\n                } else {\r\n                  this.$nextTick(() => {\r\n                    this.src = pdf.createLoadingTask(`${this.baseUrl}/${uploadPath}`);\r\n                  });\r\n                  this.loaderPdf = false;\r\n                }\r\n              });\r\n            } else {\r\n              this.$nextTick(() => {\r\n                this.src = pdf.createLoadingTask(`${this.baseUrl}/${this.currentDoc.url}`);\r\n              });\r\n              this.loaderPdf = false;\r\n            }\r\n          })\r\n          .catch((e) => {\r\n          });\r\n    },\r\n    keyUpEvents(evt) {\r\n      if (\r\n          evt.keyCode == 46 &&\r\n          this.currentPage == this.qrCodePage &&\r\n          this.deleteQrPosition\r\n      ) {\r\n        this.imgUrl = null;\r\n        this.qrCodePage = null;\r\n        this.deleteQrPosition = false;\r\n      } else if (\r\n          evt.keyCode == 39 &&\r\n          this.currentPage != this.numPages &&\r\n          this.src\r\n      ) {\r\n        this.currentPage++;\r\n      } else if (evt.keyCode == 37 && this.currentPage > 1 && this.src) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    setCurrentPage(page) {\r\n      this.currentPage = page;\r\n    },\r\n    resize(newRect) {\r\n      this.width = newRect.width;\r\n      this.height = newRect.height;\r\n      this.y = newRect.top;\r\n      this.x = newRect.left;\r\n    },\r\n    getPdf() {\r\n      return new Promise((res, rej) => {\r\n        this.convertToPdf();\r\n        Service.getDocPdf(this.$route.params.id)\r\n            .then((rs) => {\r\n              let pdfBase64 = rs.data;\r\n\r\n              this.$nextTick(() => {\r\n                let loadingTask = pdf.createLoadingTask(\r\n                    `data:application/pdf;base64, ${pdfBase64}`\r\n                );\r\n                this.src = loadingTask;\r\n              });\r\n\r\n              res(rs.data);\r\n            })\r\n            .catch((e) => {\r\n              rej(e);\r\n            })\r\n            .finally(() => {\r\n              setTimeout(() => {\r\n                this.loaderPdf = false;\r\n              }, 500);\r\n            });\r\n      });\r\n    },\r\n\r\n    signData() {\r\n      if (this.src) {\r\n        if (this.qrCodePage && this.imgUrl) {\r\n          showMsgError(this.$t(\"qrcodeWaring\"));\r\n        } else {\r\n          this.loaderQrCode = true;\r\n          Service.letterQRCODE(this.$route.params.id)\r\n              .then((rs) => {\r\n                if (rs.data) {\r\n                  this.qrCodePage = this.currentPage;\r\n                  this.imgUrl = rs.data;\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              })\r\n              .finally(() => {\r\n                this.loaderQrCode = false;\r\n              });\r\n        }\r\n      } else {\r\n        showMsgError(this.$t(\"docNotUploaded\"));\r\n      }\r\n    },\r\n\r\n    save() {\r\n      if (this.qrCodePage != null && this.imgUrl && this.src) {\r\n        if (this.currentDoc.letterType === 'PROTOCOL' || this.currentDoc.letterType === \"LETTER\") {\r\n          this.signatureModal = true;\r\n        } else {\r\n          if (this.$route.query.type) {\r\n            switch (this.$route.query.type) {\r\n              case 'compromise-decision-to-reject':\r\n                cnfDoc(this.$t(\"submodules.reports.make_sign\")).then((rs) => {\r\n                  if (rs.value) {\r\n                    this.compromiseDecisionToAcceptRejectModal = true;\r\n                  }\r\n                });\r\n                break;\r\n              case 'compromise-decision-to-accept':\r\n                cnfDoc(this.$t(\"submodules.reports.make_sign\")).then((rs) => {\r\n                  if (rs.value) {\r\n                    this.compromiseDecisionToAcceptRejectModal = true;\r\n                  }\r\n                });\r\n                break;\r\n            }\r\n          } else {\r\n            switch (this.currentDoc.status) {\r\n              case 'SEND_SIGN':\r\n                if (this.currentDoc.projectType === 'FROM_DXA' && this.currentDoc.passedToCommission) {\r\n                  this.commissionsModalForComment = true;\r\n                } else {\r\n                  this.getCommissionManagementList();\r\n                  crudAndListsService.searchList('directory/commission/commission-type', this.var_default_search_payload, null, true)\r\n                      .then(res => {\r\n                        this.commissionTypes = res.data.list\r\n                      })\r\n                      .catch(e => {\r\n                        console.log(e)\r\n                      })\r\n                  this.commissionsModal = true;\r\n                }\r\n                break;\r\n              case 'SEND':\r\n                if (this.currentDoc.projectType === 'FROM_DXA' && this.currentDoc.passedToCommission) {\r\n                  this.commissionsModalForComment = true;\r\n                } else {\r\n                  crudAndListsService.searchList('directory/commission/commission-type', this.var_default_search_payload, null, true)\r\n                      .then(res => {\r\n                        this.commissionTypes = res.data.list\r\n                      })\r\n                      .catch(e => {\r\n                        console.log(e)\r\n                      })\r\n                  this.commissionsModal = true;\r\n                }\r\n                break;\r\n              default:\r\n                if (['LETTER_NOT_COMPLETED', 'LETTER_NOT_BELONG', 'LETTER_REGION'].indexOf(this.currentDoc.letterType) !== -1) {\r\n                  this.commissionsModalForComment = true;\r\n                } else {\r\n                  cnfDoc(this.$t(\"docConfirm\")).then((rs) => {\r\n                    if (rs.value) {\r\n                      this.signatureModal = true;\r\n                    }\r\n                  });\r\n                }\r\n                break;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        showMsgError(this.$t(\"qrcodeNotFound\"));\r\n      }\r\n    },\r\n    getCommissionManagementList(callback = () => ({})) {\r\n      crudAndListsService.getListGet('/employee/get-all-employee/in-management', this.var_default_search_payload, null, true)\r\n          .then(res => {\r\n            this.commissionManagementList = res.data\r\n            callback()\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    fetchEmployeeList(keyword = '', callback = () => 0) {\r\n      if (!keyword && this.employee_list.length) {\r\n        if (callback) {\r\n          if (callback && typeof callback === 'function') {\r\n            return callback(this.employee_list)\r\n          }\r\n        }\r\n        return this.employee_list;\r\n      }\r\n      crudAndListsService.searchListWithKeyword('/employee',\r\n          {...this.var_default_search_payload, keyword: keyword}, 'inner', true)\r\n          .then(res => {\r\n            this.employee_list = res.data.list\r\n            if (callback && typeof callback === 'function') {\r\n              return callback(res.data)\r\n            }\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    },\r\n    customLabelEmployeeList(opt) {\r\n      let selected = this.employee_list.find(e => e.id === opt);\r\n      if (selected) {\r\n        return selected.fullName;\r\n      }\r\n      return ``;\r\n    },\r\n  },\r\n  computed: {\r\n    computedMakeSignedCompromiseDecisionToReject() {\r\n      return this.$route.query.type === 'compromise-decision-to-reject';\r\n    },\r\n    computedMakeSignedCompromiseDecisionToAccept() {\r\n      return this.$route.query.type === 'compromise-decision-to-accept';\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.stickyHead {\r\n  margin: 0 !important;\r\n  padding: 15px !important;\r\n  border-radius: 0;\r\n  position: fixed;\r\n  top: 70px;\r\n  left: 0;\r\n  right: 0;\r\n  background: white;\r\n  z-index: 4;\r\n  width: 100%;\r\n}\r\n\r\n.multiselect__content-wrapper {\r\n  position: relative !important;\r\n}\r\n</style>"]}]}