{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\shared\\store\\ability.js","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\shared\\store\\ability.js","mtime":1674799498160},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1667355397815}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwLmpzIjsKaW1wb3J0IHsgQWJpbGl0eSB9IGZyb20gIkBjYXNsL2FiaWxpdHkiOwpleHBvcnQgdmFyIGFiaWxpdHkgPSBuZXcgQWJpbGl0eSgpOwpleHBvcnQgZGVmYXVsdCAoZnVuY3Rpb24gKHN0b3JlKSB7CiAgYWJpbGl0eS51cGRhdGUoc3RvcmUuc3RhdGUucnVsZXMpOwogIHJldHVybiBzdG9yZS5zdWJzY3JpYmUoZnVuY3Rpb24gKG11dGF0aW9uKSB7CiAgICBzd2l0Y2ggKG11dGF0aW9uLnR5cGUpIHsKICAgICAgY2FzZSAnUk9PVF9MT0dJTl9TVUNDRVNTJzoKICAgICAgICB2YXIgZm9ybWF0dGVkUnVsZXMgPSBbXTsKCiAgICAgICAgaWYgKG11dGF0aW9uLnBheWxvYWQucGVybWlzc2lvbnMubGVuZ3RoID4gMCkgewogICAgICAgICAgZm9ybWF0dGVkUnVsZXMgPSBtdXRhdGlvbi5wYXlsb2FkLnBlcm1pc3Npb25zLm1hcChmdW5jdGlvbiAocGVybSkgewogICAgICAgICAgICB2YXIgZm9ybWF0dGVkT2JqID0ge307CiAgICAgICAgICAgIGZvcm1hdHRlZE9iai5hY3Rpb24gPSBwZXJtLnN1YnN0cigwLCBwZXJtLmluZGV4T2YoJyAnKSk7CiAgICAgICAgICAgIGZvcm1hdHRlZE9iai5zdWJqZWN0ID0gcGVybS5zdWJzdHIocGVybS5pbmRleE9mKCcgJykgKyAxKTsKICAgICAgICAgICAgcmV0dXJuIGZvcm1hdHRlZE9iajsKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgYWJpbGl0eS51cGRhdGUoZm9ybWF0dGVkUnVsZXMpOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSAnUk9PVF9MT0dPVVRfU1VDQ0VTUyc6CiAgICAgICAgYWJpbGl0eS51cGRhdGUoW3sKICAgICAgICAgIGFjdGlvbjogJ3JlYWQnLAogICAgICAgICAgc3ViamVjdDogJ2FsbCcKICAgICAgICB9XSk7CiAgICAgICAgYnJlYWs7CiAgICB9CiAgfSk7Cn0pOw=="},{"version":3,"sources":["C:/ACRU PROJECT/Fair Tech/ohirgi/acru-frontend/acru-frontend/src/shared/store/ability.js"],"names":["Ability","ability","store","update","state","rules","subscribe","mutation","type","formattedRules","payload","permissions","length","map","perm","formattedObj","action","substr","indexOf","subject"],"mappings":";AAAA,SAASA,OAAT,QAAwB,eAAxB;AACA,OAAO,IAAMC,OAAO,GAAG,IAAID,OAAJ,EAAhB;AAEP,gBAAe,UAACE,KAAD,EAAW;AACtBD,EAAAA,OAAO,CAACE,MAAR,CAAeD,KAAK,CAACE,KAAN,CAAYC,KAA3B;AACA,SAAOH,KAAK,CAACI,SAAN,CAAgB,UAACC,QAAD,EAAc;AACjC,YAAQA,QAAQ,CAACC,IAAjB;AACI,WAAK,oBAAL;AACI,YAAIC,cAAc,GAAG,EAArB;;AACA,YAAIF,QAAQ,CAACG,OAAT,CAAiBC,WAAjB,CAA6BC,MAA7B,GAAsC,CAA1C,EAA6C;AACzCH,UAAAA,cAAc,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,WAAjB,CAA6BE,GAA7B,CAAiC,UAAAC,IAAI,EAAI;AACtD,gBAAIC,YAAY,GAAG,EAAnB;AACAA,YAAAA,YAAY,CAACC,MAAb,GAAsBF,IAAI,CAACG,MAAL,CAAY,CAAZ,EAAeH,IAAI,CAACI,OAAL,CAAa,GAAb,CAAf,CAAtB;AACAH,YAAAA,YAAY,CAACI,OAAb,GAAuBL,IAAI,CAACG,MAAL,CAAYH,IAAI,CAACI,OAAL,CAAa,GAAb,IAAoB,CAAhC,CAAvB;AACA,mBAAOH,YAAP;AACH,WALgB,CAAjB;AAMH;;AACDd,QAAAA,OAAO,CAACE,MAAR,CAAeM,cAAf;AACA;;AACJ,WAAK,qBAAL;AACIR,QAAAA,OAAO,CAACE,MAAR,CAAe,CAAC;AAACa,UAAAA,MAAM,EAAE,MAAT;AAAiBG,UAAAA,OAAO,EAAE;AAA1B,SAAD,CAAf;AACA;AAfR;AAiBH,GAlBM,CAAP;AAmBH,CArBD","sourcesContent":["import { Ability } from \"@casl/ability\";\r\nexport const ability = new Ability()\r\n\r\nexport default (store) => {\r\n    ability.update(store.state.rules);\r\n    return store.subscribe((mutation) => {\r\n        switch (mutation.type) {\r\n            case 'ROOT_LOGIN_SUCCESS':\r\n                var formattedRules = [];\r\n                if (mutation.payload.permissions.length > 0) {\r\n                    formattedRules = mutation.payload.permissions.map(perm => {\r\n                        let formattedObj = {};\r\n                        formattedObj.action = perm.substr(0, perm.indexOf(' '));\r\n                        formattedObj.subject = perm.substr(perm.indexOf(' ') + 1);\r\n                        return formattedObj;\r\n                    })\r\n                }\r\n                ability.update(formattedRules);\r\n                break\r\n            case 'ROOT_LOGOUT_SUCCESS':\r\n                ability.update([{action: 'read', subject: 'all'}])\r\n                break\r\n        }\r\n    })\r\n}"]}]}