{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\shared\\store\\auth.module.js","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\shared\\store\\auth.module.js","mtime":1674799498157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1667355397815}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/ACRU PROJECT/Fair Tech/ohirgi/acru-frontend/acru-frontend/src/shared/store/auth.module.js"],"names":["AuthService","AuthenticationError","router","state","authenticating","accessToken","authenticationErrorCode","authenticationError","refreshTokenPromise","UserInfo","getters","actions","login","commit","Username","Password","data","root","push","history","current","query","redirect","errorCode","errorMessage","message","loginByToken","signedData","TIN","PNFL","loginEsp","refreshToken","p","then","response","logout","window","location","reload","mutations","loginRequest","setUserInfo","loginSuccess","token","loginError","logoutSuccess","promise","auth","namespaced"],"mappings":"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","sourcesContent":["import {AuthService, AuthenticationError} from \"@/shared/services/auth.service\"\r\nimport router from '@/router'\r\n\r\n\r\nconst state = {\r\n    authenticating: false,\r\n    accessToken: '',\r\n    authenticationErrorCode: 0,\r\n    authenticationError: '',\r\n    refreshTokenPromise: null, // Holds the promise of the refresh token\r\n    UserInfo: {}\r\n};\r\n\r\nconst getters = {\r\n    authenticationErrorCode: (state) => {\r\n        return state.authenticationErrorCode\r\n    },\r\n\r\n    authenticationError: (state) => {\r\n        return state.authenticationError\r\n    },\r\n\r\n    authenticating: (state) => {\r\n        return state.authenticating\r\n    }\r\n};\r\n\r\nconst actions = {\r\n    async login({commit}, {Username, Password}) {\r\n        commit('loginRequest');\r\n        try {\r\n            const data = await AuthService.login(Username, Password);\r\n            commit('loginSuccess', data);\r\n            commit('ROOT_LOGIN_SUCCESS', data, {root: true});\r\n            // Redirect the user to the page he first tried to visit or to the home view\r\n            await router.push(router.history.current.query.redirect || '/');\r\n            return true\r\n        } catch (e) {\r\n            if (e instanceof AuthenticationError) {\r\n                commit('loginError', {errorCode: e.errorCode, errorMessage: e.message})\r\n            }\r\n            return false\r\n        }\r\n    },\r\n    async loginByToken({commit}, {signedData, TIN, PNFL}) {\r\n        try {\r\n            const data = await AuthService.loginEsp(signedData, TIN, PNFL);\r\n            commit('loginSuccess', data);\r\n            commit('ROOT_LOGIN_SUCCESS', data, {root: true});\r\n\r\n            // Redirect the user to the page he first tried to visit or to the home view\r\n            await router.push(router.history.current.query.redirect ? router.history.current.query.redirect : '/');\r\n\r\n            return true\r\n        } catch (e) {\r\n            if (e instanceof AuthenticationError) {\r\n                commit('loginError', {errorCode: e.errorCode, errorMessage: e.message})\r\n            }\r\n\r\n            return false\r\n        }\r\n    },\r\n\r\n    refreshToken({commit, state}) {\r\n        // If this is the first time the refreshToken has been called, make a request\r\n        // otherwise return the same promise to the caller\r\n        if (!state.refreshTokenPromise) {\r\n            const p = AuthService.refreshToken()\r\n            commit('refreshTokenPromise', p)\r\n\r\n            // Wait for the AuthService.refreshToken() to resolve. On success set the token and clear promise\r\n            // Clear the promise on error as well.\r\n            p.then(\r\n                response => {\r\n                    commit('refreshTokenPromise', null)\r\n                    commit('loginSuccess', response)\r\n                    commit('ROOT_LOGIN_SUCCESS', data, {root: true});\r\n                },\r\n                () => {\r\n                    commit('refreshTokenPromise', null)\r\n                }\r\n            )\r\n        }\r\n\r\n        return state.refreshTokenPromise\r\n    },\r\n\r\n    logout({commit}) {\r\n        AuthService.logout()\r\n        commit('logoutSuccess')\r\n        commit('ROOT_LOGOUT_SUCCESS', null, {root: true});\r\n        // router.push('authentication/fulllogin')\r\n        window.location.reload()\r\n    }\r\n}\r\n\r\nconst mutations = {\r\n    loginRequest(state) {\r\n        state.authenticating = true;\r\n        state.authenticationError = ''\r\n        state.authenticationErrorCode = 0\r\n    },\r\n    setUserInfo(state, data) {\r\n        state.UserInfo = data;\r\n    },\r\n\r\n    loginSuccess(state, data) {\r\n        /*let formattedRules = [];\r\n        if (data.permissions.length > 0) {\r\n            formattedRules = data.permissions.map(perm => {\r\n                let formattedObj = {};\r\n                formattedObj.actions = perm.substr(0, perm.indexOf(' '));\r\n                formattedObj.subject = perm.substr(perm.indexOf(' ') + 1);\r\n                return formattedObj;\r\n            })\r\n        }*/\r\n        // state.rules = formattedRules;\r\n        state.accessToken = data.token;\r\n        // state.token = data.token;\r\n        state.authenticating = false;\r\n    },\r\n\r\n    loginError(state, {errorCode, errorMessage}) {\r\n        state.authenticating = false\r\n        state.authenticationErrorCode = errorCode\r\n        state.authenticationError = errorMessage\r\n    },\r\n\r\n    logoutSuccess(state) {\r\n        state.accessToken = '';\r\n        state.UserInfo = {}\r\n        // state.rules = [];\r\n    },\r\n\r\n    refreshTokenPromise(state, promise) {\r\n        state.refreshTokenPromise = promise\r\n    }\r\n}\r\n\r\nexport const auth = {\r\n    namespaced: true,\r\n    state,\r\n    getters,\r\n    actions,\r\n    mutations\r\n}\r\n"]}]}