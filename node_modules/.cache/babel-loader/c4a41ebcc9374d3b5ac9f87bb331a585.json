{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\letter\\income\\signature.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\letter\\income\\signature.vue","mtime":1674799497979},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["signature.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <div\r\n          id=\"myHeader\"\r\n          class=\"card card-body stickyHead\"\r\n      >\r\n        <div class=\"d-flex\">\r\n          <div style=\"width: 58%\">\r\n            <!-- <b-button\r\n  variant=\"primary\"\r\n  class=\"btn-custom mr-2\"\r\n>\r\n  <i class=\"fa fa-arrow-left\"></i>\r\n</b-button> -->\r\n            <h5\r\n                v-if=\"numPages\"\r\n                class=\"float-right m-0\"\r\n            >\r\n              {{ currentPage }} / {{ numPages }}\r\n            </h5>\r\n          </div>\r\n          <div style=\"width: 43%\">\r\n            <div class=\"float-right d-flex align-items-center\">\r\n              <b-button-group>\r\n                <b-button\r\n                    class=\"float-right\"\r\n                    variant=\"primary\"\r\n                    @click=\"signData\"\r\n                >\r\n                  <b-overlay\r\n                      :opacity=\"0.1\"\r\n                      :show=\"loaderQrCode\"\r\n                      rounded=\"sm\"\r\n                  >\r\n                    <i class=\"fa fa-qrcode mr-1\"></i>\r\n                    {{ $t(\"actions.qrcode\") }}\r\n                  </b-overlay>\r\n                </b-button>\r\n                <b-button\r\n                    class=\"float-right mr-2\"\r\n                    variant=\"success\"\r\n                    @click=\"save\"\r\n                >\r\n                  <i class=\"fa fa-save\"></i>\r\n                  {{ $t(\"actions.save\") }}\r\n                </b-button>\r\n              </b-button-group>\r\n\r\n              <b-button\r\n                  :to=\"{name: 'LetterIncome'}\"\r\n                  class=\"float-right mr-2\"\r\n                  variant=\"primary\"\r\n              >\r\n                <i class=\"fa fa-arrow-left\"></i>\r\n                <!-- {{ $t(\"actions.back\") }} -->\r\n              </b-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mt-5\">\r\n        <b-row>\r\n          <!-- <b-col></b-col> -->\r\n          <b-col cols=\"12\">\r\n            <div class=\"d-flex justify-content-center\">\r\n              <b-overlay\r\n                  :opacity=\"1\"\r\n                  :show=\"loaderPdf\"\r\n                  rounded=\"lg\"\r\n                  variant=\"white\"\r\n              >\r\n                <div\r\n                    id=\"pdfId\"\r\n                    style=\"\r\n                    width: 270mm !important;\r\n                    min-height: 210mm;\r\n                    position: relative;\r\n                  \"\r\n                >\r\n                  <VueDragResize\r\n                      v-if=\"imgUrl && qrCodePage == currentPage\"\r\n                      :h=\"110\"\r\n                      :isActive=\"true\"\r\n                      :isResizable=\"false\"\r\n                      :parent=\"true\"\r\n                      :parentLimitation=\"true\"\r\n                      :w=\"110\"\r\n                      :x=\"x\"\r\n                      :y=\"y\"\r\n                      style=\"z-index: 3\"\r\n                      v-on:dragging=\"resize\"\r\n                      v-on:resizing=\"resize\"\r\n                  >\r\n                    <img\r\n                        :src=\"`${\r\n                        imgUrl\r\n                          ? `data:image/png;base64, ${imgUrl}`\r\n                          : require('@/assets/img.png')\r\n                      }`\"\r\n                        @mouseenter=\"mouseEnter\"\r\n                        @mouseleave=\"mouseLeave\"\r\n                        @mousemove=\"mousemove\"\r\n                    />\r\n                  </VueDragResize>\r\n\r\n                  <pdf\r\n                      v-if=\"src\"\r\n                      ref=\"myPdfComponent\"\r\n                      :page=\"currentPage\"\r\n                      :src=\"src\"\r\n                      @num-pages=\"numPages = $event\"\r\n                  />\r\n                </div>\r\n              </b-overlay>\r\n            </div>\r\n          </b-col>\r\n          <!-- <b-col></b-col> -->\r\n        </b-row>\r\n\r\n        <b-row>\r\n          <b-col cols=\"12\">\r\n            <div class=\"d-flex mt-4 justify-content-center\">\r\n              <div\r\n                  class=\"d-flex mt-4\"\r\n                  style=\"overflow: auto; max-width: 90%\"\r\n              >\r\n                <div\r\n                    v-for=\"page in numPages\"\r\n                    :key=\"page + 'page'\"\r\n                    class=\"ml-3 mb-4\"\r\n                >\r\n                  <div\r\n                      :class=\"\r\n                      currentPage == page ? 'my-card-hovered-pdf-active' : ''\r\n                    \"\r\n                      class=\"my-card-hovered-pdf\"\r\n                      @click.prevent=\"setCurrentPage(page)\"\r\n                  >\r\n                    <div style=\"width: 200px;!important;position:relative\">\r\n                      <div\r\n                          v-if=\"imgUrl && qrCodePage == page\"\r\n                          :style=\"{\r\n                          top: `${y / 5.1}px`,\r\n                          left: `${x / 5.08}px`,\r\n                        }\"\r\n                          style=\"position: absolute; z-index: 999\"\r\n                      >\r\n                        <img\r\n                            v-if=\"imgUrl\"\r\n                            :height=\"20\"\r\n                            :src=\"`${\r\n                            imgUrl\r\n                              ? `data:image/png;base64, ${imgUrl}`\r\n                              : require('@/assets/img.png')\r\n                          }`\"\r\n                            :width=\"20\"\r\n                        />\r\n                      </div>\r\n\r\n                      <pdf\r\n                          v-if=\"src\"\r\n                          :page=\"page\"\r\n                          :src=\"src\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </b-col>\r\n        </b-row>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- COMMISSIONS MODAL Maxsus komissiya turi -->\r\n    <b-modal\r\n        v-model=\"commissionsModal\"\r\n        :title=\"`${$t('submodules.commission.title')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <BaseMultiselectWithValidation\r\n          v-model=\"commissionTypeId\"\r\n          :custom-label=\"customLabelCommissionTypes\"\r\n          :label=\"$t('submodules.commission.special_commission_type.title')\"\r\n          :max-height=\"600\"\r\n          :options=\"commissionTypes.map(e => e.id)\"\r\n          :show-labels=\"false\"\r\n          class=\"required\"\r\n          label-on-top\r\n          open-direction=\"bottom\"\r\n          placeholder=\"\"\r\n          rules=\"required\"\r\n      />\r\n\r\n      <BaseMultiselectWithValidation\r\n          v-if=\"this.currentDoc.status === 'SEND_SIGN'\"\r\n          v-model=\"commissionManagementId\"\r\n          :custom-label=\"customLabelCommissionManagementTypes\"\r\n          :label=\"$t('column.director')\"\r\n          :max-height=\"600\"\r\n          :options=\"commissionManagementList.map(e => e.id)\"\r\n          :show-labels=\"false\"\r\n          class=\"required\"\r\n          label-on-top\r\n          open-direction=\"bottom\"\r\n          placeholder=\"\"\r\n          rules=\"required\"\r\n      />\r\n\r\n      <b-form-textarea\r\n          v-model=\"commissionComment\"\r\n          :placeholder=\"$t('submodules.doc.summary')\"\r\n          class=\"mt-3\"\r\n          rows=\"5\"\r\n      ></b-form-textarea>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"success\"\r\n            @click=\"openSignatureModalForCommission\"\r\n        >\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"commissionModalLoader\"\r\n              rounded=\"sm\"\r\n          >\r\n            {{ $t(\"actions.continue\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n\r\n    <!-- COMMISSIONS MODAL Komissiya rahbar listi -->\r\n    <b-modal\r\n        v-model=\"commissionManagementModal\"\r\n        :title=\"`${$t('submodules.commission.title')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <BaseMultiselectWithValidation\r\n          v-model=\"commissionManagementId\"\r\n          :custom-label=\"customLabelCommissionManagementTypes\"\r\n          :label=\"$t('column.director')\"\r\n          :max-height=\"600\"\r\n          :options=\"commissionManagementList.map(e => e.id)\"\r\n          :show-labels=\"false\"\r\n          class=\"required\"\r\n          label-on-top\r\n          open-direction=\"bottom\"\r\n          placeholder=\"\"\r\n          rules=\"required\"\r\n      ></BaseMultiselectWithValidation>\r\n\r\n      <b-form-textarea\r\n          v-model=\"commissionManagementComment\"\r\n          :placeholder=\"$t('submodules.doc.summary')\"\r\n          class=\"mt-3\"\r\n          rows=\"5\"\r\n      ></b-form-textarea>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"success\"\r\n            @click=\"openSignatureModalForCommissionManagement\"\r\n        >\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"commissionModalLoader\"\r\n              rounded=\"sm\"\r\n          >\r\n            {{ $t(\"actions.continue\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n\r\n    <!-- COMMISSIONS MODAL FOR Comment-->\r\n    <b-modal\r\n        v-model=\"commissionsModalForComment\"\r\n        :title=\"`${$t('submodules.commission.title')}`\"\r\n        scrollable\r\n        size=\"md\"\r\n    >\r\n      <b-form-textarea\r\n          v-model=\"commentForCommission\"\r\n          :placeholder=\"$t('submodules.doc.summary')\"\r\n          class=\"mt-3\"\r\n          rows=\"5\"\r\n      ></b-form-textarea>\r\n\r\n      <template v-slot:modal-footer>\r\n        <b-button\r\n            variant=\"success\"\r\n            @click=\"openSignatureModalForCommissionForComment\"\r\n        >\r\n          <b-overlay\r\n              :opacity=\"0.1\"\r\n              :show=\"commissionModalLoader\"\r\n              rounded=\"sm\"\r\n          >\r\n            {{ $t(\"actions.continue\") }}\r\n          </b-overlay>\r\n        </b-button>\r\n      </template>\r\n    </b-modal>\r\n\r\n    <b-modal\r\n        v-model=\"signatureModal\"\r\n        :title=\"`${$t('submodules.reports.make_sign')}`\"\r\n        hide-footer\r\n        scrollable\r\n        size=\"lg\"\r\n    >\r\n      <b-overlay\r\n          :opacity=\"0.1\"\r\n          :show=\"loaderSign\"\r\n          rounded=\"sm\"\r\n      >\r\n        <SignKeys\r\n            :dataToSign=\"currentDoc\"\r\n            @sign=\"signSuccess\"\r\n        />\r\n      </b-overlay>\r\n    </b-modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import Layout from \"@/router/layouts/main\";\r\nimport {cnfDoc, showMsgError, showMsgSuccess} from \"@/helper\";\r\nimport pdf from \"vue-pdf\";\r\nimport Service from \"../letterService\";\r\nimport crudAndListsService from '@/shared/services/crud_and_list.service'\r\n\r\nimport SignKeys from \"../SignKeys.vue\";\r\nimport VueDragResize from \"vue-drag-resize\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      commissionTypeId: null,\r\n      commissionComment: '',\r\n      commentForCommission: '',\r\n      commissionModalLoader: false,\r\n      commissionTypes: [],\r\n      commissionsModal: false,\r\n      commissionsModalForComment: false,\r\n      commissionManagementId: false,\r\n      commissionManagementList: [],\r\n      commissionManagementComment: '',\r\n      commissionManagementModal: false,\r\n      currentPage: 1,\r\n      pageCount: 0,\r\n      src: null,\r\n      imgUrl: null,\r\n      width: 110,\r\n      height: 110,\r\n      x: 200,\r\n      y: 300,\r\n      numPages: undefined,\r\n      pageYOffset: 0,\r\n      loaderQrCode: false,\r\n      qrCodePage: null,\r\n      loaderPdf: false,\r\n      currentDoc: {},\r\n      signatureModal: false,\r\n      deleteQrPosition: false,\r\n      loaderSign: false,\r\n    };\r\n  },\r\n  name: \"Signature\",\r\n\r\n  components: {\r\n    VueDragResize,\r\n    SignKeys,\r\n  },\r\n  created() {\r\n    this.getByIdLetter();\r\n    document.addEventListener(\"keyup\", this.keyUpEvents);\r\n  },\r\n  methods: {\r\n    openSignatureModalForCommissionForComment() {\r\n      this.signatureModal = true\r\n    },\r\n    openSignatureModalForCommission() {\r\n      if (this.commissionTypeId) {\r\n        this.signatureModal = true\r\n      } else {\r\n        this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n      }\r\n    },\r\n    openSignatureModalForCommissionManagement() {\r\n      if (this.commissionManagementId) {\r\n        this.signatureModal = true\r\n      } else {\r\n        this.$toast(this.$t('messages.fill_required_fields'), {type: 'error'});\r\n      }\r\n    },\r\n    customLabelCommissionTypes(opt) {\r\n      let selected = this.commissionTypes.find(e => e.id == opt);\r\n      if (selected) {\r\n        return `${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })\r\n        }`\r\n      }\r\n      return ``;\r\n    },\r\n    customLabelCommissionManagementTypes(opt) {\r\n      let selected = this.commissionManagementList.find(e => e.id === opt);\r\n      if (selected) {\r\n        return selected.fullName\r\n      }\r\n      return ``;\r\n    },\r\n    convertToPdf(selectedItem, forSign = false) {\r\n      return new Promise((res, rej) => {\r\n        let config = {\r\n          url: `${selectedItem.url}`,\r\n          outputtype: \".pdf\",\r\n          forSign: forSign,\r\n          key: selectedItem.key,\r\n        };\r\n        Service.convertToPdfByApi(config)\r\n            .then((rs) => {\r\n              if (rs.data.uploadPath) {\r\n                /* this.$nextTick(() => {\r\n                    let loadingTask = pdf.createLoadingTask(\r\n                        `${this.baseUrl}/${rs.data.uploadPath}`\r\n                    );\r\n                    this.src = loadingTask;\r\n                }); */\r\n                res(rs.data.uploadPath);\r\n              } else {\r\n                res(false);\r\n              }\r\n            })\r\n            .catch((e) => {\r\n              // this.catchErr(e);\r\n              rej(e);\r\n            });\r\n      });\r\n    },\r\n    mouseEnter() {\r\n      this.deleteQrPosition = true;\r\n    },\r\n    mouseLeave() {\r\n      this.deleteQrPosition = false;\r\n    },\r\n    mousemove() {\r\n      this.deleteQrPosition = true;\r\n    },\r\n    async signSuccess(data) {\r\n      this.loaderSign = true;\r\n      let payload = {\r\n        signedContent: data.content,\r\n        inn: data.inn,\r\n        pnfl: data.pnfl\r\n      };\r\n      switch (this.currentDoc.status) {\r\n        case 'SEND_SIGN':\r\n          if (this.currentDoc.projectType === 'NOT_BELONG' && this.currentDoc.letterType === 'LETTER') {\r\n            await Service.onlyDocSignFORNotBelong(payload, this.$route.params.id2,\r\n                this.x,\r\n                this.y,\r\n                this.currentPage - 1)\r\n                .then(async () => {\r\n                  await this.$router.push(\"/letter/income\");\r\n                })\r\n                .catch((err) => {\r\n                  this.catchErr(err);\r\n                })\r\n                .finally(() => {\r\n                  this.loaderSign = false;\r\n                });\r\n          } else if (this.currentDoc.projectType === 'FROM_DXA' && this.currentDoc.letterType === 'DECISION') {\r\n            Service.signDecision(payload, this.$route.params.id2,\r\n                this.x,\r\n                this.y,\r\n                this.currentPage - 1, this.commentForCommission)\r\n                .then(async () => {\r\n                  this.$router.push({name: 'LetterIncome'});\r\n                  showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                })\r\n                .finally(() => {\r\n                  this.loaderSign = false;\r\n                });\r\n          } else {\r\n            Service.makeSignedNewWithHeadOfDepartment(payload, this.$route.params.id2,\r\n                this.x,\r\n                this.y,\r\n                this.currentPage - 1, this.commissionTypeId, this.commissionComment, this.commissionManagementId)\r\n                .then(async () => {\r\n                  this.$router.push({name: 'LetterIncome'});\r\n                  showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                })\r\n                .finally(() => {\r\n                  this.loaderSign = false;\r\n                });\r\n          }\r\n          break;\r\n        default:\r\n          if (this.currentDoc.projectType === 'FROM_DXA' && this.currentDoc.passedToCommission) {\r\n            await Service.onlyDocSign(payload, this.$route.params.id2,\r\n                this.x,\r\n                this.y,\r\n                this.currentPage - 1)\r\n                .then(async () => {\r\n                  if (this.currentDoc.isRejected) {\r\n                    await Service.resultApplicationForDXARejected({decision_text: this.commentForCommission}, this.$route.params.id)\r\n                        .then(async () => {\r\n                          this.$router.push({name: 'LetterIncome'});\r\n                          showMsgSuccess(this.$t(\"successDocSigned\"));\r\n\r\n                        })\r\n                        .catch((err) => {\r\n                          this.catchErr(err);\r\n                        });\r\n                  } else {\r\n                    await Service.resultApplicationForDXA({decision_text: this.commentForCommission}, this.$route.params.id)\r\n                        .then(async () => {\r\n                          this.$router.push({name: 'LetterIncome'});\r\n                          showMsgSuccess(this.$t(\"successDocSigned\"));\r\n\r\n                        })\r\n                        .catch((err) => {\r\n                          this.catchErr(err);\r\n                        });\r\n                  }\r\n                })\r\n                .catch((err) => {\r\n                })\r\n                .finally(() => {\r\n                  this.loaderSign = false;\r\n                });\r\n          } else if (this.currentDoc.projectType === 'NOT_BELONG' && this.currentDoc.letterType === 'LETTER') {\r\n            await Service.onlyDocSignFORNotBelong(payload, this.$route.params.id2,\r\n                this.x,\r\n                this.y,\r\n                this.currentPage - 1)\r\n                // .then(async () => {\r\n                //   await Service.onlyDocSignNotBelong(payload, this.$route.params.id)\r\n                //       .then(async () => {\r\n                //         this.$router.push({name: 'LetterIncome'});\r\n                //         showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                //\r\n                //       })\r\n                //       .catch((err) => {\r\n                //         this.catchErr(err);\r\n                //       });\r\n                //\r\n                // })\r\n                .catch((err) => {\r\n                 this.catchErr(err);\r\n                })\r\n                .finally(() => {\r\n                  this.loaderSign = false;\r\n                });\r\n          } else {\r\n            if (this.currentDoc.letterType === 'PROTOCOL') {\r\n              Service.onlyDocSign(payload, this.$route.params.id2,\r\n                  this.x,\r\n                  this.y,\r\n                  this.currentPage - 1)\r\n                  .then(async () => {\r\n                    // this.isModalKeys = false;\r\n                    // this.signatureModal = false;\r\n                    // let tempData = this.currentDoc;\r\n                    // await showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                    // await this.getList();\r\n                    // await this.getIncomeTotalCount();\r\n                    this.$router.push({name: 'LetterIncome'});\r\n                    showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                    // setTimeout(() => {\r\n                    //     let newdata = this.list.find((e) => e.id == tempData.id);\r\n                    //     this.currentDoc = Object.assign({}, newdata);\r\n                    //     this.$forceUpdate();\r\n                    //     this.getReceivers(this.currentDoc);\r\n                    // }, 1000);\r\n                  })\r\n                  .catch((err) => {\r\n                    // this.catchErr(err);\r\n                  })\r\n                  .finally(() => {\r\n                    this.loaderSign = false;\r\n                  });\r\n            } else if (this.currentDoc.letterType === 'LETTER') {\r\n              await Service.onlyDocSignFORNotBelong(payload, this.$route.params.id2,\r\n                  this.x,\r\n                  this.y,\r\n                  this.currentPage - 1)\r\n                  .then(async () => {\r\n                    await Service.onlyDocSignNotBelong(payload, this.$route.params.id)\r\n                        .then(async () => {\r\n                          this.$router.push({name: 'LetterIncome'});\r\n                          showMsgSuccess(this.$t(\"successDocSigned\"));\r\n\r\n                        })\r\n                        .catch((err) => {\r\n                          this.catchErr(err);\r\n                        });\r\n\r\n                  })\r\n                  .catch((err) => {\r\n                    // this.catchErr(err);\r\n                  })\r\n                  .finally(() => {\r\n                    this.loaderSign = false;\r\n                  });\r\n            } else if (['LETTER_NOT_COMPLETED', 'LETTER_NOT_BELONG', 'LETTER_REGION'].indexOf(this.currentDoc.letterType) !== -1) {\r\n              await Service.onlyDocSignForToReturn(payload, this.$route.params.id2,\r\n                  this.x,\r\n                  this.y,\r\n                  this.currentPage - 1)\r\n                  .then(async () => {\r\n                    this.$router.push({name: 'LetterIncome'});\r\n                    showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                  })\r\n                  .catch((err) => {\r\n                    // this.catchErr(err);\r\n                  })\r\n                  .finally(() => {\r\n                    this.loaderSign = false;\r\n                  });\r\n            } else {\r\n              Service.signDoc(payload, this.$route.params.id2,\r\n                  this.x,\r\n                  this.y,\r\n                  this.currentPage - 1, this.commissionTypeId, this.commissionComment)\r\n                  .then(async () => {\r\n                    this.$router.push({name: 'LetterIncome'});\r\n                    showMsgSuccess(this.$t(\"successDocSigned\"));\r\n                  })\r\n                  .catch((err) => {\r\n                    // this.catchErr(err);\r\n                  })\r\n                  .finally(() => {\r\n                    this.loaderSign = false;\r\n                  });\r\n            }\r\n          }\r\n\r\n          break;\r\n      }\r\n    },\r\n    getByIdLetter() {\r\n      Service.getByIdLetter(this.$route.params.id)\r\n          .then((rs) => {\r\n            this.currentDoc = rs.data;\r\n            this.loaderPdf = true;\r\n            if (this.currentDoc.fileType !== 'pdf') {\r\n              this.convertToPdf(rs.data).then((uploadPath) => {\r\n                if (!uploadPath) {\r\n                  setTimeout(() => {\r\n                    this.convertToPdf(rs.data)\r\n                        .then((uploadPath2) => {\r\n                          this.$nextTick(() => {\r\n                            this.src = pdf.createLoadingTask(`${this.baseUrl}/${uploadPath2}`);\r\n                          });\r\n                          this.loaderPdf = false;\r\n                        })\r\n                        .catch((e) => {\r\n                          this.loaderPdf = false;\r\n                        });\r\n                  }, 4000);\r\n                } else {\r\n                  this.$nextTick(() => {\r\n                    this.src = pdf.createLoadingTask(`${this.baseUrl}/${uploadPath}`);\r\n                  });\r\n                  this.loaderPdf = false;\r\n                }\r\n              });\r\n            } else {\r\n              this.$nextTick(() => {\r\n                this.src = pdf.createLoadingTask(`${this.baseUrl}/${this.currentDoc.url}`);\r\n              });\r\n              this.loaderPdf = false;\r\n            }\r\n          })\r\n          .catch((e) => {\r\n          });\r\n    },\r\n    keyUpEvents(evt) {\r\n      if (\r\n          evt.keyCode == 46 &&\r\n          this.currentPage == this.qrCodePage &&\r\n          this.deleteQrPosition\r\n      ) {\r\n        this.imgUrl = null;\r\n        this.qrCodePage = null;\r\n        this.deleteQrPosition = false;\r\n      } else if (\r\n          evt.keyCode == 39 &&\r\n          this.currentPage != this.numPages &&\r\n          this.src\r\n      ) {\r\n        this.currentPage++;\r\n      } else if (evt.keyCode == 37 && this.currentPage > 1 && this.src) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n    setCurrentPage(page) {\r\n      this.currentPage = page;\r\n    },\r\n    resize(newRect) {\r\n      this.width = newRect.width;\r\n      this.height = newRect.height;\r\n      this.y = newRect.top;\r\n      this.x = newRect.left;\r\n    },\r\n    getPdf() {\r\n      return new Promise((res, rej) => {\r\n        this.convertToPdf();\r\n        Service.getDocPdf(this.$route.params.id)\r\n            .then((rs) => {\r\n              let pdfBase64 = rs.data;\r\n\r\n              this.$nextTick(() => {\r\n                let loadingTask = pdf.createLoadingTask(\r\n                    `data:application/pdf;base64, ${pdfBase64}`\r\n                );\r\n                this.src = loadingTask;\r\n              });\r\n\r\n              res(rs.data);\r\n            })\r\n            .catch((e) => {\r\n              rej(e);\r\n            })\r\n            .finally(() => {\r\n              setTimeout(() => {\r\n                this.loaderPdf = false;\r\n              }, 500);\r\n            });\r\n      });\r\n    },\r\n\r\n    signData() {\r\n      if (this.src) {\r\n        if (this.qrCodePage && this.imgUrl) {\r\n          showMsgError(this.$t(\"qrcodeWaring\"));\r\n        } else {\r\n          this.loaderQrCode = true;\r\n          Service.letterQRCODE(this.$route.params.id)\r\n              .then((rs) => {\r\n                if (rs.data) {\r\n                  this.qrCodePage = this.currentPage;\r\n                  this.imgUrl = rs.data;\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                // this.catchErr(err);\r\n              })\r\n              .finally(() => {\r\n                this.loaderQrCode = false;\r\n              });\r\n        }\r\n      } else {\r\n        showMsgError(this.$t(\"docNotUploaded\"));\r\n      }\r\n    },\r\n\r\n    save() {\r\n      if (this.qrCodePage != null && this.imgUrl && this.src) {\r\n        if (this.currentDoc.letterType === 'PROTOCOL' || this.currentDoc.letterType === \"LETTER\") {\r\n          this.signatureModal = true;\r\n        } else {\r\n          switch (this.currentDoc.status) {\r\n            case 'SEND_SIGN':\r\n              if (this.currentDoc.projectType === 'FROM_DXA' && this.currentDoc.passedToCommission) {\r\n                this.commissionsModalForComment = true;\r\n              } else {\r\n                this.getCommissionManagementList();\r\n                crudAndListsService.searchList('directory/commission/commission-type', this.var_default_search_payload, null, true)\r\n                    .then(res => {\r\n                      this.commissionTypes = res.data.list\r\n                    })\r\n                    .catch(e => {\r\n                      console.log(e)\r\n                    })\r\n                this.commissionsModal = true;\r\n              }\r\n              break;\r\n            case 'SEND':\r\n              if (this.currentDoc.projectType === 'FROM_DXA' && this.currentDoc.passedToCommission) {\r\n                this.commissionsModalForComment = true;\r\n              } else {\r\n                crudAndListsService.searchList('directory/commission/commission-type', this.var_default_search_payload, null, true)\r\n                    .then(res => {\r\n                      this.commissionTypes = res.data.list\r\n                    })\r\n                    .catch(e => {\r\n                      console.log(e)\r\n                    })\r\n                this.commissionsModal = true;\r\n              }\r\n              break;\r\n            default:\r\n              if (['LETTER_NOT_COMPLETED', 'LETTER_NOT_BELONG', 'LETTER_REGION'].indexOf(this.currentDoc.letterType) !== -1) {\r\n                this.commissionsModalForComment = true;\r\n              } else {\r\n                cnfDoc(this.$t(\"docConfirm\")).then((rs) => {\r\n                  if (rs.value) {\r\n                    this.signatureModal = true;\r\n                  }\r\n                });\r\n              }\r\n              break;\r\n          }\r\n        }\r\n      } else {\r\n        showMsgError(this.$t(\"qrcodeNotFound\"));\r\n      }\r\n    },\r\n    getCommissionManagementList(callback = () => ({})) {\r\n      crudAndListsService.getListGet('/employee/get-all-employee/in-management', this.var_default_search_payload, null, true)\r\n          .then(res => {\r\n            this.commissionManagementList = res.data\r\n            callback()\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n          })\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.stickyHead {\r\n  margin: 0px !important;\r\n  padding: 15px !important;\r\n  border-radius: 0px;\r\n  position: fixed;\r\n  top: 70px;\r\n  left: 0;\r\n  right: 0;\r\n  background: white;\r\n  z-index: 4;\r\n  width: 100%;\r\n}\r\n</style>"],"sourceRoot":"src/modules/letter/income"}]}