{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\products\\petrol-stations\\modules\\list_and_crud\\CreateOrUpdate.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\products\\petrol-stations\\modules\\list_and_crud\\CreateOrUpdate.vue","mtime":1674799497723},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CreateOrUpdate.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <base-create-or-update-wrapper\r\n        @save=\"save\"\r\n        has-save-suspend\r\n        :custom-title=\"$t('submodules.ad_passport_info.title') + ' - ' + isModeCreate ? $t('actions.create') : $t('actions.update')\"\r\n    >\r\n        <ValidationObserver\r\n            ref=\"observer\"\r\n            v-slot=\"{}\"\r\n        >\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        :rules=\"{required: true, regex: /\\b\\d{9}\\b/}\"\r\n                        class=\"required\"\r\n                        name=\"INN\"\r\n                        v-model=\"editingItem.inn\"\r\n                        @blur=\"validateInn\"\r\n                        @keyup.enter=\"getSingleContractorByInn\"\r\n                        mask=\"#########\"\r\n                        :label=\"$t('column.petrol_station_owner_inn')\"\r\n                        with-input-append\r\n                    >\r\n                        <template v-slot:append-slot>\r\n                            <!-- CONTRACTOR SEARCH BUTTON -->\r\n                            <b-button\r\n                                v-if=\"!contractorNotFound\"\r\n                                @click=\"getSingleContractorByInn\"\r\n                                variant=\"outline-primary\"\r\n                                id=\"contractorSearchButton\"\r\n                                style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n                            >\r\n                                <i class=\"mdi mdi-account-search\"/>\r\n                            </b-button>\r\n                            <!-- CONTRACTOR ADD BUTTON -->\r\n                            <b-button\r\n                                v-else\r\n                                @click=\"contractorCreateModal = true\"\r\n                                variant=\"outline-info\"\r\n                                id=\"contractorSearchButton\"\r\n                                style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n                            >\r\n                                <i class=\"mdi mdi-plus-circle\"/>\r\n                            </b-button>\r\n                        </template>\r\n                    </BaseInputWithValidation>\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.contractorId\"\r\n                        :has-next-page=\"hasNextPageContractors\"\r\n                        @select=\"contractorSelected\"\r\n                        @reachedEndOfList=\"contractorReachedEndOfList\"\r\n                        @search-change=\"debounceSearchContractors\"\r\n                        :searchable=\"true\"\r\n                        :allow-empty=\"false\"\r\n                        preserve-search\r\n                        :clear-on-select=\"false\"\r\n                        :loading=\"isLoadingContractors\"\r\n                        :internal-search=\"false\"\r\n                        :options=\"contractors.map(e => e.id)\"\r\n                        :label=\"$t('column.petrol_station_owner')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelContractor\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        disabled\r\n                        v-model=\"editingItem.contractorPhoneNumber\"\r\n                        :label=\"$t('column.petrol_station_owner_phone_number')\"\r\n                        mask=\"+998#########\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseTextareaWithValidation\r\n                        not-required\r\n                        disabled\r\n                        v-model=\"editingItem.contractorAddress\"\r\n                        max-rows=\"2\"\r\n                        :label=\"$t('column.petrol_station_owner_address')\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col cols=\"12\">\r\n                    <h5 class=\"m-0 text-center\">\r\n                        {{ $t('column.petrol_station_exact_address') }}\r\n                    </h5>\r\n                    <hr>\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.addressDto.regionId\"\r\n                        @select=\"regionSelected\"\r\n                        :options=\"regions.map(e => e.regionId)\"\r\n                        :label=\"$t('column.region')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelRegion\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.addressDto.districtId\"\r\n                        @select=\"districtSelected\"\r\n                        :options=\"districts.map(e => e.id)\"\r\n                        :label=\"$t('column.district')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelDistrict\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseMultiselectWithValidation\r\n                        not-required\r\n                        v-model=\"editingItem.addressDto.quarterId\"\r\n                        :options=\"quarters.map(e => e.id)\"\r\n                        :label=\"$t('column.quarter')\"\r\n                        placeholder=\"\"\r\n                        :custom-label=\"customLabelQuarter\"\r\n                        open-direction=\"bottom\"\r\n                        :max-height=\"600\"\r\n                        :show-labels=\"false\"\r\n                        withCreateAddition\r\n                    >\r\n                        <template v-slot:append-slot>\r\n                            <b-button\r\n                                @click=\"quartersModal = true\"\r\n                                variant=\"outline-primary\"\r\n                                style=\"padding: 2.5px 10px; font-size: 1.2rem;\"\r\n                            >\r\n                                <i class=\"mdi mdi-plus-circle\"/>\r\n                            </b-button>\r\n                        </template>\r\n                    </BaseMultiselectWithValidation>\r\n                    <BaseModalForCreate\r\n                        v-model=\"quartersModal\"\r\n                        mainApiUrl=\"directory/quarter-names\"\r\n                        :additional-params=\"{regionId: editingItem.addressDto.regionId,\r\n              districtId: editingItem.addressDto.districtId}\"\r\n                        createFormName=\"CreateFormGeoRegionQuarters\"\r\n                        @new-ref-created=\"newRefCreated\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <b-row>\r\n                        <b-col cols=\"6\">\r\n                            <BaseInputWithValidation\r\n                                rules=\"required|positiveNotZero\"\r\n                                class=\"required\"\r\n                                :disabled=\"true\"\r\n                                v-model=\"editingItem.latNumber\"\r\n                                custom-styles=\"grid-template-columns: 51% 43%;\"\r\n                                name=\"addressLocation\"\r\n                                :label=\"$t('column.location_address')\"\r\n                                :placeholder=\"$t('column.latitude')\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col cols=\"3\">\r\n                            <BaseInputWithValidation\r\n                                rules=\"required|positiveNotZero\"\r\n                                only-form-element\r\n                                v-model=\"editingItem.lngNumber\"\r\n                                :disabled=\"true\"\r\n                                custom-styles=\"grid-template-columns: unset;\"\r\n                                :placeholder=\"$t('column.longitude')\"\r\n                            />\r\n                        </b-col>\r\n                        <b-col cols=\"3\">\r\n                            <b-button\r\n                                @click=\"openMapModal\"\r\n                                variant=\"primary\"\r\n                                size=\"sm\"\r\n                                pill\r\n                            >\r\n                                <i class=\"mdi mdi-map-marker font-size-16 align-middle\"/>\r\n                                {{ $t('column.map') }}\r\n                            </b-button>\r\n                        </b-col>\r\n                    </b-row>\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        not-required\r\n                        v-model=\"editingItem.addressDto.additional\"\r\n                        name=\"additionalAddress\"\r\n                        :label=\"$t('column.orienter')\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col cols=\"12\">\r\n                    <hr>\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        v-model=\"editingItem.name\"\r\n                        :label=\"$t('column.name')\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseTextareaWithValidation\r\n                        not-required\r\n                        v-model=\"editingItem.description\"\r\n                        max-rows=\"8\"\r\n                        :label=\"$t('column.comment')\"\r\n                        :placeholder=\"$t('column.comment')\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n\r\n            <b-row class=\"mb-3\">\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseDatePickerWithValidation\r\n                        required\r\n                        rules=\"required\"\r\n                        class=\"required\"\r\n                        disableAfter\r\n                        v-model=\"editingItem.constructDate\"\r\n                        :label=\"$t('column.created_date')\"\r\n                        lang=\"ru\"\r\n                    />\r\n                </b-col>\r\n                <b-col\r\n                    sm=\"12\"\r\n                    md=\"6\"\r\n                >\r\n                    <BaseInputWithValidation\r\n                        v-if=\"!isModeCreate\"\r\n                        disabled\r\n                        :label=\"$t('column.created_by')\"\r\n                        v-model=\"editingItem.createdByEmployeeFullName\"\r\n                    />\r\n                </b-col>\r\n            </b-row>\r\n        </ValidationObserver>\r\n\r\n        <!-- CONTRACTOR CREATE MODAL -->\r\n        <b-modal\r\n            v-model=\"contractorCreateModal\"\r\n            id=\"create-multiple-min-collections-modal-id\"\r\n            size=\"xl\"\r\n            :title=\"$t('column.contractor')\"\r\n            title-class=\"font-18\"\r\n            :ok-title=\"$t('actions.save')\"\r\n            @ok=\"createContractor\"\r\n            @cancel=\"fetchContractorsWithKeyword('', false, true)\"\r\n            ok-variant=\"success\"\r\n            :cancel-title=\"$t('actions.cancel')\"\r\n            cancel-variant=\"danger\"\r\n            no-close-on-backdrop\r\n            no-close-on-esc\r\n        >\r\n            <CreateFormContractor\r\n                @saved=\"contractorSaved\"\r\n                :custom-is-mode-create=\"true\"\r\n                ref=\"createFormContractor\"\r\n            />\r\n        </b-modal>\r\n\r\n        <!-- MAP TO CHOOSE LOCATION OF AD_CONSTRUCTION -->\r\n        <MapInModal\r\n            :visible=\"mapModal\"\r\n            :event=\"{lat: editingItem.latNumber, lng: editingItem.lngNumber}\"\r\n            @saveLocation=\"saveLocation\"\r\n            @close=\"mapModal = false\"\r\n        />\r\n    </base-create-or-update-wrapper>\r\n</template>\r\n<script>\r\nconst MAIN_API_URL = 'petrol'\r\nconst APPEND_API_URL_FOR_GOVERNMENT = 'by-first-agent'\r\n/*\r\n* YOU MUST SEND {{ MAIN_API_URL }} TO CRUD_SERVICE */\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport helperService from \"@/shared/services/helper.service\"\r\n\r\nimport MapInModal from './components/MapInModal'\r\nimport CreateFormContractor from '@/shared/views/components/CreateFormContractor'\r\n\r\nexport default {\r\n    name: \"CreateOrUpdate\",\r\n    /*\r\n    * COMPONENTS */\r\n    components: {\r\n        MapInModal,\r\n        CreateFormContractor\r\n\r\n    },\r\n    /*\r\n    * DATA */\r\n    data () {\r\n        return {\r\n            notFormattedMonthlyPayment: null,\r\n            adSideValue: null,\r\n            districtModal: false,\r\n            quartersModal: false,\r\n            streetsModal: false,\r\n            mapModal: false,\r\n\r\n            editingItem: {\r\n                addressDto: {}\r\n            },\r\n            hasNextPageContractors: false,\r\n            contractors: [],\r\n            debounce: null,\r\n            isLoadingContractors: false,\r\n            districts: [],\r\n            quarters: [],\r\n            streets: [],\r\n            adTypes: [],\r\n            adGroups: [],\r\n            adZones: [],\r\n            adSides: [],\r\n            adVolumeTypes: [],\r\n            localPassportExpireDate: [],\r\n            contractorCreateModal: false,\r\n            minCollectionValue: null,\r\n            coefficientValue: null,\r\n            contractorNotFound: false,\r\n            contractorSearchPayload: {},\r\n            checkPassportNumberLoading: false,\r\n            dbPassportNumber: '',\r\n            isPassportNumberInvalid: false,\r\n\r\n            minimumCollections: [],\r\n            createMultipleMinimumCollectionsModal: false,\r\n            singleMinimumCollectionUpdateModal: false,\r\n            statuses: [],\r\n            regions: [],\r\n            units: [],\r\n            adLocationTypes: [],\r\n            adDesignTypes: [],\r\n            adObjectStates: [],\r\n            dropzoneOptions: {\r\n                url: \"https://httpbin.org/post\",\r\n                dictDefaultMessage: 'ファイルをドロップしてください.',\r\n                thumbnailWidth: 150,\r\n                maxFilesize: 1.0,\r\n                addRemoveLinks: true,\r\n                dictRemoveFile: 'x',\r\n                maxFiles: 3,\r\n            },\r\n            architectDocFile: {},\r\n            photo: {},\r\n            passportDocFile: {},\r\n            passportPhoto: {},\r\n            paymentDocFile: {},\r\n        }\r\n    },\r\n    /*\r\n    * COMPUTED */\r\n    computed: {\r\n        inputMinValue (value) {\r\n            return value.editingItem.passportGivenDate\r\n        },\r\n        inputMaxValue (value) {\r\n            return value.editingItem.passportExpireDate\r\n        },\r\n        isModeCreate () {\r\n            return this.$route.name == 'CreatePetrolStation'\r\n        },\r\n        computedObserver () {\r\n            return this.$refs.observer\r\n        }\r\n    },\r\n    /*\r\n    * METHODS */\r\n    methods: {\r\n        findAndSetAdVolumeType () {\r\n            this.editingItem.directoryAdvertisementVolumeTypeId = null\r\n\r\n            if (this.editingItem.volume) {\r\n                this.adVolumeTypes.forEach(vType => {\r\n                    if (parseFloat(this.editingItem.volume) >= vType.minBorder && parseFloat(this.editingItem.volume) <= vType.maxBorder) {\r\n                        this.editingItem.directoryAdvertisementVolumeTypeId = vType.id\r\n                    }\r\n                })\r\n            }\r\n            this.adVolumeTypeSelected(this.editingItem.directoryAdvertisementVolumeTypeId)\r\n        },\r\n        adSideSelected ($event) {\r\n            let foundAdSide = this.adSides.find(el => el.id == $event)\r\n            this.adSideValue = foundAdSide ? foundAdSide.code : null\r\n            this.calculateAndSetMonthlyPayment()\r\n        },\r\n        adVolumeTypeSelected ($event) {\r\n            this.getMinCollectionValue(this.editingItem.addressDto.regionId, this.editingItem.addressDto.districtId, this.editingItem.directoryAdvertisementLocationTypeId, this.editingItem.directoryAdvertisementDesignTypeId, $event)\r\n        },\r\n        calculateAndSetMonthlyPayment () {\r\n            this.$set(this.editingItem, 'monthlyPayment', null)\r\n            this.notFormattedMonthlyPayment = null\r\n            if (this.minCollectionValue && this.coefficientValue && this.editingItem.designTypePrivilegeCoefficient && this.editingItem.volume && this.adSideValue) {\r\n                let num = (parseFloat(this.minCollectionValue) * parseFloat(this.coefficientValue) * parseFloat(this.editingItem.designTypePrivilegeCoefficient) * parseFloat(this.editingItem.volume) * parseFloat(this.adSideValue)).toFixed(2)\r\n                this.notFormattedMonthlyPayment = num\r\n                let formattedPaymentValue = this.getNumberFormat(num)\r\n                this.$set(this.editingItem, 'monthlyPayment', formattedPaymentValue)\r\n            } else {\r\n                this.$set(this.editingItem, 'monthlyPayment', null)\r\n                this.notFormattedMonthlyPayment = null\r\n            }\r\n        },\r\n        getPrivilegeCoefficientValueByAdDesignTypeId (adDesignTypeId) {\r\n            if (adDesignTypeId) {\r\n                helperService.getPrivilegeCoefficientValueByAdDesignTypeId(adDesignTypeId)\r\n                    .then(res => {\r\n                        this.editingItem.designTypePrivilegeCoefficient = res.data\r\n                        this.calculateAndSetMonthlyPayment()\r\n                    })\r\n                    .catch(e => console.log(e))\r\n            }\r\n        },\r\n        newRefCreated (newOptions, newId, formName) {\r\n            if (formName == 'CreateFormGeoRegionQuarters') {\r\n                this.quarters = newOptions\r\n                this.editingItem.addressDto.quarterId = newId\r\n            } else if (formName == 'CreateFormGeoRegionStreets') {\r\n                this.streets = newOptions\r\n                this.editingItem.addressDto.streetId = newId\r\n            }\r\n        },\r\n        async onBlurPassportNumberInput (value) {\r\n            if (this.isPassportNumberInvalid) {\r\n                await this.checkAdPassportNumber(value, true);\r\n            }\r\n        },\r\n        async debounceCheckPassportNumber (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.checkAdPassportNumber(searchText);\r\n            }, 1000);\r\n        },\r\n        checkAdPassportNumber (searchQuery = \"\", fromOnBlur = false) {\r\n            /*\r\n             * AVOID MULTIPLE REQUESTS AT ONCE */\r\n            if (!this.editingItem.addressDto.regionId || !searchQuery || this.checkPassportNumberLoading || (!this.isModeCreate && this.editingItem.passportNumber == this.dbPassportNumber)) return;\r\n            this.checkPassportNumberLoading = true;\r\n            helperService.checkAdPassportNumberByRegion(searchQuery, this.editingItem.addressDto.regionId)\r\n                .then(res => {\r\n                    this.isPassportNumberInvalid = res.data;\r\n                    if (this.isPassportNumberInvalid) {\r\n                        this.computedObserver.setErrors({ PassportNumber: [this.$t('validator.ad_passport_number_already_in_use')] });\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n                .finally(() => {\r\n                    this.checkPassportNumberLoading = false;\r\n                    /*\r\n                       * FOYDALANUVCHI YOZAYOTGAN BO'LSA INPUTNI QAYTA FOCUS QIL (ON_BLUR EVENTDAN BO'LSA FOCUS QILMA) */\r\n                    if (!fromOnBlur) {\r\n                        let passportNumberInput = this.$refs.passportNumber.$el.querySelector(\r\n                            \"input\"\r\n                        );\r\n                        setTimeout(() => {\r\n                            passportNumberInput.focus();\r\n                        }, 50);\r\n                    }\r\n                });\r\n        },\r\n        saveLocation (e) {\r\n            this.$set(this.editingItem, 'latNumber', e.lat)\r\n            this.$set(this.editingItem, 'lngNumber', e.lng)\r\n            this.mapModal = false\r\n        },\r\n        drawCreated (e) {\r\n            var type = e.layerType,\r\n                layer = e.layer;\r\n\r\n            if (type === 'marker') {\r\n                layer.bindPopup('A popup!');\r\n            }\r\n\r\n            this.featureGroup.addLayer(layer);\r\n        },\r\n        openMapModal () {\r\n            this.mapModal = true\r\n        },\r\n        async contractorSaved (res) {\r\n            this.contractorCreateModal = false\r\n            this.contractorNotFound = false\r\n            await this.fetchContractorsWithKeyword('', true)\r\n        },\r\n        createContractor (e) {\r\n            e.preventDefault()\r\n\r\n            this.$refs.createFormContractor.save()\r\n        },\r\n        validateInn () {\r\n            helperService.validateInnFromApi(this.editingItem.inn)\r\n                .then(res => {\r\n                    if (!res.data) {\r\n                        this.computedObserver.setErrors({ INN: [this.$t('validator.inn')] });\r\n                        this.contractorSelected(null, true)\r\n                    }\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        },\r\n        getSingleContractorByInn () {\r\n            if (this.computedObserver.fields.INN.valid) {\r\n                helperService.validateInnFromApi(this.editingItem.inn)\r\n                    .then(res => {\r\n                        if (res.data) {\r\n                            helperService.getSingleContractorByInn(this.editingItem.inn)\r\n                                .then(res => {\r\n                                    this.contractorNotFound = false\r\n                                    this.contractorSelected(res.data, false, true)\r\n                                })\r\n                                .catch(e => {\r\n                                    this.contractorNotFound = true\r\n                                })\r\n                        } else {\r\n                            this.computedObserver.setErrors({ INN: [this.$t('validator.inn')] });\r\n                            this.contractorSelected(null, true)\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n            }\r\n        },\r\n        handleWidthLengthInput (widthOrLength) {\r\n            if (this.editingItem.width && this.editingItem.length) {\r\n                try {\r\n                    this.editingItem.volume = parseFloat(this.editingItem.width) * parseFloat(this.editingItem.length)\r\n                    this.findAndSetAdVolumeType()\r\n                    this.calculateAndSetMonthlyPayment()\r\n                } catch (error) {\r\n                    this.editingItem.volume = null\r\n                    this.calculateAndSetMonthlyPayment()\r\n                    this.findAndSetAdVolumeType()\r\n                }\r\n            } else {\r\n                this.editingItem.volume = null\r\n                this.calculateAndSetMonthlyPayment()\r\n                this.findAndSetAdVolumeType()\r\n            }\r\n        },\r\n        addPassportDateChanged (e) {\r\n            if (e[0]) {\r\n                this.editingItem.passportGivenDate = e[0]\r\n                this.editingItem.passportExpireDate = e[1]\r\n            } else {\r\n                this.editingItem.passportGivenDate = null\r\n                this.editingItem.passportExpireDate = null\r\n            }\r\n        },\r\n        customLabelAdSide (opt) {\r\n            let selected = this.adSides.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdVolumeType (opt) {\r\n            let selected = this.adVolumeTypes.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })}`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdZone (opt) {\r\n            let selected = this.adZones.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdRegionGroup (opt) {\r\n            let selected = this.adGroups.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdType (opt) {\r\n            let selected = this.adTypes.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelStreet (opt) {\r\n            let selected = this.streets.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelQuarter (opt) {\r\n            let selected = this.quarters.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelDistrict (opt) {\r\n            let selected = this.districts.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        async regionSelected ($event, dontResetDistrict = false) {\r\n            if (!dontResetDistrict) {\r\n                this.editingItem.addressDto.districtId = null\r\n            }\r\n            if ($event) {\r\n                // GET DISTRICTS\r\n                await helperService.getGeoLocationsByParentId($event)\r\n                    .then(res => {\r\n                        this.districts = res.data\r\n                        if (dontResetDistrict)\r\n                            this.districtSelected(this.editingItem.addressDto.districtId, true)\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n            }\r\n        },\r\n        getCoefficientValue (districtId, adZoneId) {\r\n            if (districtId && adZoneId && this.isByAgency) {\r\n                helperService.getCoefficientValueByZoneAndDistrictIds(districtId, adZoneId)\r\n                    .then(res => {\r\n                        this.coefficientValue = res.data ? res.data.coefficient : null\r\n                        if (this.minCollectionValue) {\r\n                            this.calculateAndSetMonthlyPayment()\r\n                            // this.$set(this.editingItem, 'monthlyPayment', parseFloat(this.minCollectionValue) * parseFloat(this.coefficientValue))\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                        this.coefficientValue = null\r\n                        // this.$set(this.editingItem, 'monthlyPayment', null)\r\n                        this.calculateAndSetMonthlyPayment()\r\n                    })\r\n            }\r\n        },\r\n        getMinCollectionValue (regionId, districtId, adLocationTypeId, adDesignTypeId, adVolumeTypeId) {\r\n            // GET MINIMUM_COLLECTION (M) BY REGION, DISTRICT AND AD_DESIGN_TYPE IDS\r\n            if (regionId && districtId && adLocationTypeId && adDesignTypeId && this.isByAgency && !this.editingItem.isUzAvtoYul) {\r\n                helperService.getMinCollectionValueByRegionAndDistrictIds(regionId, districtId, adLocationTypeId, adDesignTypeId, adVolumeTypeId)\r\n                    .then(res => {\r\n                        this.minCollectionValue = res.data ? res.data.cost : null\r\n                        if (this.coefficientValue) {\r\n                            this.calculateAndSetMonthlyPayment()\r\n                            // this.$set(this.editingItem, 'monthlyPayment', parseFloat(this.minCollectionValue) * parseFloat(this.coefficientValue))\r\n                        }\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                        this.minCollectionValue = null\r\n                        this.calculateAndSetMonthlyPayment()\r\n                        // this.$set(this.editingItem, 'monthlyPayment', null)\r\n                    })\r\n            } else {\r\n                this.minCollectionValue = null\r\n            }\r\n        },\r\n        async districtSelected ($event, dontResetQuarter = false) {\r\n            if (!dontResetQuarter) {\r\n                this.editingItem.addressDto.quarterId = null\r\n                this.editingItem.directoryAdvertisementZoneId = null\r\n            }\r\n            if ($event) {\r\n                // GET QUARTERS\r\n                await crudAndListsService.searchListWithKeyword('directory/quarter-names', this.var_default_search_payload, `get-by-districtId/${$event}`)\r\n                    .then(res => {\r\n                        this.quarters = res.data.list\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                        this.quarters = []\r\n                    })\r\n            } else {\r\n                this.quarters = []\r\n            }\r\n        },\r\n        async adDesignTypeSelected ($event) {\r\n            this.getMinCollectionValue(this.editingItem.addressDto.regionId, this.editingItem.addressDto.districtId, this.editingItem.directoryAdvertisementLocationTypeId, $event, this.editingItem.directoryAdvertisementVolumeTypeId)\r\n            this.getPrivilegeCoefficientValueByAdDesignTypeId($event)\r\n        },\r\n        async adZoneSelected ($event) {\r\n            this.getCoefficientValue(this.editingItem.addressDto.districtId, $event)\r\n        },\r\n        customObjectState (opt) {\r\n            let selected = this.adObjectStates.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelContractor (opt) {\r\n            let selected = this.contractors.find(e => e.id == opt);\r\n            if (selected) {\r\n                return `${selected.fullName}`\r\n            }\r\n            return ``;\r\n        },\r\n        contractorReachedEndOfList (e) {\r\n            if (e) {\r\n                this.fetchContractors()\r\n            }\r\n        },\r\n        contractorSelected (contractorDtoOrId, dontResetInn = false, fromInnSearch = false) {\r\n            let foundContractor = fromInnSearch ? this.contractors.find(c => c.id == contractorDtoOrId.id) : this.contractors.find(c => c.id == contractorDtoOrId)\r\n            if (fromInnSearch && contractorDtoOrId && !foundContractor) {\r\n                this.contractors.push(contractorDtoOrId)\r\n                foundContractor = contractorDtoOrId\r\n            }\r\n            if (foundContractor) {\r\n                this.editingItem.contractorId = fromInnSearch ? contractorDtoOrId.id : contractorDtoOrId\r\n                this.editingItem.inn = foundContractor.inn\r\n                this.editingItem.contractorPhoneNumber = null\r\n                this.editingItem.contractorPhoneNumber = foundContractor.mobileNumber\r\n                this.$set(this.editingItem, 'contractorAddress', `${foundContractor.addressDto.regionNameUz}, ${foundContractor.addressDto.districtNameUz} ${foundContractor.addressDto.additional ? ',' + foundContractor.addressDto.additional : ''}`)\r\n                // this.editingItem.contractorAddress = `${foundContractor.addressDto.regionNameUz}, ${foundContractor.addressDto.districtNameUz} ${foundContractor.addressDto.additional ? ',' + foundContractor.addressDto.additional : ''}`\r\n                this.contractorNotFound = false\r\n            } else {\r\n                if (!dontResetInn) {\r\n                    this.editingItem.inn = null\r\n                }\r\n                this.editingItem.contractorId = null\r\n                this.editingItem.contractorPhoneNumber = null\r\n                this.editingItem.contractorAddress = null\r\n            }\r\n        },\r\n        async debounceSearchContractors (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.fetchContractorsWithKeyword(searchText);\r\n            }, 1000);\r\n        },\r\n        /* async debounceSearchContractorsByInn (searchText) {\r\n            clearTimeout(this.debounce);\r\n            this.debounce = setTimeout(async () => {\r\n                await this.getSingleContractorByInn();\r\n            }, 1000);\r\n        }, */\r\n        fetchContractorsWithKeyword (keyword, makeSelectedByInn = false, fromContractorModalCancel = false) {\r\n            this.contractors = []\r\n            this.contractorSearchPayload.page = 1\r\n            this.contractorSearchPayload.keyword = keyword ? keyword : ''\r\n            this.fetchContractors(makeSelectedByInn, fromContractorModalCancel)\r\n        },\r\n        async fetchContractors (makeSelectedByInn, fromContractorModalCancel) {\r\n            this.isLoadingContractors = true\r\n            await crudAndListsService.searchListWithKeyword('contractor', this.contractorSearchPayload, 'by-contractor')\r\n                .then(res => {\r\n                    this.contractors.push(...res.data.list)\r\n                    if (makeSelectedByInn || fromContractorModalCancel) {\r\n                        let foundContractor = this.contractors.find(el => el.inn == this.editingItem.inn)\r\n                        if (foundContractor) {\r\n                            this.contractorSelected(foundContractor.id)\r\n                        }\r\n                    }\r\n                    this.hasNextPageContractors = res.data.total / this.contractorSearchPayload.itemsPerPage > this.contractorSearchPayload.page\r\n                    this.contractorSearchPayload.page += 1\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    this.contractors = []\r\n                })\r\n                .finally(() => {\r\n                    this.isLoadingContractors = false\r\n                })\r\n        },\r\n        async adLocationTypeSelected (adLocationTypeObjectOrId, dontResetAdDesignType = false) {\r\n            if (!dontResetAdDesignType) {\r\n                this.editingItem.directoryAdvertisementDesignTypeId = null\r\n                this.editingItem.directoryAdvertisementVolumeTypeId = null\r\n            }\r\n            if (adLocationTypeObjectOrId) {\r\n                this.getMinCollectionValue(this.editingItem.addressDto.regionId, this.editingItem.addressDto.districtId, adLocationTypeObjectOrId.id ? adLocationTypeObjectOrId.id : adLocationTypeObjectOrId, this.editingItem.directoryAdvertisementDesignTypeId, this.editingItem.directoryAdvertisementVolumeTypeId)\r\n                // GET AD_VOLUME_TYPES\r\n                helperService\r\n                    .getAdVolumeTypesByAdLocationTypeId(adLocationTypeObjectOrId.id ? adLocationTypeObjectOrId.id : adLocationTypeObjectOrId)\r\n                    .then((res) => {\r\n                        this.adVolumeTypes = res.data\r\n                        this.findAndSetAdVolumeType()\r\n                    })\r\n                    .catch(e => {\r\n                        console.log(e)\r\n                    })\r\n                if (this.editingItem.addressDto.regionId) {\r\n                    // GET AD_DESIGN_TYPES\r\n                    helperService\r\n                        .getAdDesignTypesByAdLocationTypeId(adLocationTypeObjectOrId.id ? adLocationTypeObjectOrId.id : adLocationTypeObjectOrId, this.editingItem.addressDto.regionId)\r\n                        .then((res) => {\r\n                            this.adDesignTypes = res.data\r\n                        })\r\n                        .catch(e => {\r\n                            console.log(e)\r\n                            this.adDesignTypes = []\r\n                        })\r\n                } else {\r\n                    this.adDesignTypes = []\r\n                }\r\n            } else {\r\n                this.adDesignTypes = []\r\n                this.adVolumeTypes = []\r\n            }\r\n        },\r\n        customLabelAdLocationType (opt) {\r\n            let selected = this.adLocationTypes.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelAdDesignType (opt) {\r\n            let selected = this.adDesignTypes.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelRegion (opt) {\r\n            let selected = this.regions.find(e => e.regionId == (opt.regionId ? opt.regionId : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.regionNameRu,\r\n                    nameLt: selected.regionNameLt,\r\n                    nameUz: selected.regionNameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        customLabelUnit (opt) {\r\n            let selected = this.units.find(e => e.id == (opt.id ? opt.id : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.nameRu,\r\n                    nameLt: selected.nameLt,\r\n                    nameUz: selected.nameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        treeClosed (veeName) {\r\n            this.computedObserver.refs[veeName].validate();\r\n        },\r\n        normalizer (node) {\r\n            if (!node.children || node.children.length === 0) {\r\n                delete node.children\r\n                return {\r\n                    id: node.id,\r\n                    label: this.getName({\r\n                        nameRu: node.nameRu,\r\n                        nameLt: node.nameLt,\r\n                        nameUz: node.nameUz,\r\n                    }),\r\n                }\r\n            }\r\n            return {\r\n                id: node.id,\r\n                label: this.getName({\r\n                    nameRu: node.nameRu,\r\n                    nameLt: node.nameLt,\r\n                    nameUz: node.nameUz,\r\n                }),\r\n                children: node.children && node.children.length > 0 ? node.children : [],\r\n            }\r\n        },\r\n        save () {\r\n            this.computedObserver.validate().then(valid => {\r\n                if (valid) {\r\n                    if (this.editingItem.id || this.$route.params.id) {\r\n                        crudAndListsService.update(MAIN_API_URL, this.editingItem, false, true).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, { addressDto: {} });\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    } else {\r\n                        crudAndListsService.create(MAIN_API_URL, this.editingItem, false, true).then(res => {\r\n                            this.computedObserver.reset()\r\n                            this.editingItem = Object.assign({}, { addressDto: {} });\r\n                            this.$router.go(-1)\r\n                            this.$toast(this.$t('messages.saved_successfully'), { type: 'success' });\r\n                        })\r\n                    }\r\n                } else {\r\n                    this.$toast(this.$t('messages.fill_required_fields'), { type: 'error' });\r\n                }\r\n            });\r\n        }\r\n    },\r\n    /*\r\n    * CREATED */\r\n    async created () {\r\n        this.var_default_search_payload.itemsPerPage = 500;\r\n        this.contractorSearchPayload = Object.assign({}, this.var_default_search_payload)\r\n        if (this.isModeCreate) {\r\n            await crudAndListsService.getEmpty(MAIN_API_URL)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        } else {\r\n            await crudAndListsService.getById(MAIN_API_URL, this.$route.params.id, true, null)\r\n                .then(res => {\r\n                    this.editingItem = res.data\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                })\r\n        }\r\n\r\n        // GET REGIONS\r\n        await helperService.fetchRegionsForPetrolByCurrentUserId()\r\n            .then(res => {\r\n                this.regions = res.data\r\n                this.regionSelected(this.editingItem.addressDto ? this.editingItem.addressDto.regionId : null, true)\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n\r\n        // GET CONTRACTORS\r\n        await this.fetchContractors()\r\n        if (!this.isModeCreate) {\r\n            this.contractorSelected(this.editingItem.contractorId)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.col-form-label {\r\n    padding-top: 0;\r\n}\r\n\r\nul {\r\n    list-style-type: none;\r\n}\r\n\r\n.dz-remove {\r\n    display: inline-block !important;\r\n    width: 1.2em;\r\n    height: 1.2em;\r\n\r\n    position: absolute;\r\n    top: 5px;\r\n    right: 5px;\r\n    z-index: 1000;\r\n\r\n    font-size: 1.2em !important;\r\n    line-height: 1em;\r\n\r\n    text-align: center;\r\n    font-weight: bold;\r\n    border: 1px solid gray !important;\r\n    border-radius: 1.2em;\r\n    color: gray;\r\n    background-color: white;\r\n    opacity: 0.5;\r\n}\r\n\r\n.dz-remove:hover {\r\n    text-decoration: none !important;\r\n    opacity: 1;\r\n}\r\n</style>"],"sourceRoot":"src/modules/products/petrol-stations/modules/list_and_crud"}]}