{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\report\\organizitional\\components\\editReportModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\report\\organizitional\\components\\editReportModal.vue","mtime":1674799497817},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["editReportModal.vue"],"names":[],"mappings":"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","sourcesContent":["<script>\r\nimport Service from \"@/modules/report/reportService\";\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\"\r\nimport Checkbox from \"vue-material-checkbox\";\r\n\r\nexport default {\r\n  components: { Checkbox },\r\n  data() {\r\n    return {\r\n      debounce: null,\r\n      // OKED VARIABLES\r\n      okeds: [],\r\n      hasNextPageOked: false,\r\n      isLoadingOked: false,\r\n      okedSearchPayload: {},\r\n      // ----------------\r\n      f1Ids: [],\r\n      f2Ids: [],\r\n      fRowId: null,\r\n      tableId: null,\r\n      reportId: null,\r\n      // getName: getName,\r\n      selectedColumns: [],\r\n      selectedRows: [],\r\n\r\n      firstColumns: [],\r\n      secondColumns: [],\r\n      thirdColumns: [],\r\n\r\n      thirdTrIdData: [],\r\n      loader: false,\r\n      report: {},\r\n      showResult: false,\r\n      showData: [],\r\n      table: {},\r\n      formulas: [],\r\n      currentPosition: {\r\n        rowIndex: null,\r\n        columnIndex: null,\r\n        rowId: null,\r\n        columnId: null,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    getColumnData(i) {\r\n      let found = this.showData.find((e) => e.columnId == i.columnId)\r\n      if (found) {\r\n        return found.columnData\r\n      } else {\r\n        return \"\"\r\n      }\r\n    },\r\n    // DYNAMIC_REFERENCES METHODS\r\n    dynamicRefsReachedEndOfList(e) {\r\n      if (e) {\r\n        this.fetchDynamicRefs()\r\n      }\r\n    },\r\n    async debounceSearchDynamicRefs(searchText) {\r\n      clearTimeout(this.debounce);\r\n      this.debounce = setTimeout(async () => {\r\n        await this.fetchDynamicRefsWithKeyword(searchText);\r\n      }, 1000);\r\n    },\r\n    fetchDynamicRefsWithKeyword(keyword) {\r\n      this.okeds = []\r\n      this.okedSearchPayload.page = 1\r\n      this.okedSearchPayload.keyword = keyword ? keyword : ''\r\n      this.fetchDynamicRefs()\r\n    },\r\n    async fetchDynamicRefs() {\r\n      this.isLoadingOked = true\r\n      await crudAndListsService.searchListWithKeyword(OKED_API_URL, this.okedSearchPayload)\r\n          .then(res => {\r\n            this.okeds.push(...res.data.list)\r\n            this.hasNextPageOked = res.data.total / this.okedSearchPayload.itemsPerPage > this.okedSearchPayload.page\r\n            this.okedSearchPayload.page += 1\r\n            if (!this.isModeCreate && this.editingItem.okedId) {\r\n              let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n              if (!foundItm && this.editingItem.infoOkedDto) {\r\n                this.okeds.push(this.editingItem.infoOkedDto)\r\n              }\r\n            }\r\n          })\r\n          .catch(e => {\r\n            console.log(e)\r\n            this.okeds = []\r\n          })\r\n          .finally(() => {\r\n            this.isLoadingOked = false\r\n          })\r\n    },\r\n    customLabelDynamicRef(opt) {\r\n      let selected = this.okeds.find(e => e.id == opt.id);\r\n      if (selected) {\r\n        return `${selected.code} - ${this.getName({\r\n          nameRu: selected.nameRu,\r\n          nameLt: selected.nameLt,\r\n          nameUz: selected.nameUz,\r\n        })}`\r\n      }\r\n      return ``;\r\n    },\r\n    // --------------------------\r\n    clearAll() {\r\n      this.selectedColumns = [];\r\n      this.selectedRows = [];\r\n      this.firstColumns = [];\r\n      this.secondColumns = [];\r\n      this.thirdColumns = [];\r\n      this.thirdTrIdData = [];\r\n      this.formulas = [];\r\n      this.table = [];\r\n      this.f1Ids = [];\r\n      this.f2Ids = [];\r\n    },\r\n    keydownEvt(evt, rowId, value, rowIndex, columnIndex, columnId, typeCode) {\r\n      this.keyUpEventsDisable(evt);\r\n      if (columnId != null) {\r\n        if (evt.keyCode == 40 && rowId != null) {\r\n          evt.preventDefault();\r\n          // down\r\n          if (rowIndex < this.selectedRows.length - 1) {\r\n            let currentColumn = this.thirdTrIdData[columnIndex];\r\n            let downRowColumn = this.selectedRows[rowIndex + 1];\r\n            let downInput = document.getElementById(\r\n                JSON.stringify({\r\n                  rowId: downRowColumn.id,\r\n                  columnId: currentColumn.columnId,\r\n                })\r\n            );\r\n            if (downInput) {\r\n              downInput.focus();\r\n            }\r\n          }\r\n        } else if (evt.keyCode == 38 && rowId != null) {\r\n          evt.preventDefault();\r\n          if (rowIndex != 0) {\r\n            let currentColumn = this.thirdTrIdData[columnIndex];\r\n            let upRowColumn = this.selectedRows[rowIndex - 1];\r\n            let upInput = document.getElementById(\r\n                JSON.stringify({\r\n                  rowId: upRowColumn.id,\r\n                  columnId: currentColumn.columnId,\r\n                })\r\n            );\r\n            if (upInput) {\r\n              upInput.focus();\r\n            }\r\n          }\r\n          //up\r\n        } else if (evt.keyCode == 37) {\r\n          evt.preventDefault();\r\n          //left\r\n          if (columnIndex != 0) {\r\n            let prevColumn = this.thirdTrIdData[columnIndex - 1];\r\n\r\n            let currentRow = this.selectedRows[rowIndex];\r\n            let prevInput = document.getElementById(\r\n                JSON.stringify({\r\n                  rowId: currentRow.id,\r\n                  columnId: prevColumn.columnId,\r\n                })\r\n            );\r\n            if (prevInput) {\r\n              if (prevInput.disabled) {\r\n                let count = this.thirdTrIdData.length - (columnIndex - 1);\r\n                for (let i = 0; i < count; i++) {\r\n                  let prevColumn2 = this.thirdTrIdData[columnIndex - 1 - i];\r\n                  if (prevColumn2) {\r\n                    let input = document.getElementById(\r\n                        JSON.stringify({\r\n                          rowId: currentRow.id,\r\n                          columnId: prevColumn2.columnId,\r\n                        })\r\n                    );\r\n                    if (input && input.disabled) {\r\n                      continue;\r\n                    } else {\r\n                      if (input) {\r\n                        input.focus();\r\n                      }\r\n                      break;\r\n                    }\r\n                  }\r\n                }\r\n              } else {\r\n                prevInput.focus();\r\n              }\r\n            }\r\n          }\r\n        } else if (evt.keyCode == 39) {\r\n          //right\r\n          evt.preventDefault();\r\n          if (this.thirdTrIdData.length - 1 > columnIndex) {\r\n            let nextColumn = this.thirdTrIdData[columnIndex + 1];\r\n            let currentRow = this.selectedRows[rowIndex];\r\n            let nextInput = document.getElementById(\r\n                JSON.stringify({\r\n                  rowId: currentRow.id,\r\n                  columnId: nextColumn.columnId,\r\n                })\r\n            );\r\n            if (nextInput) {\r\n              if (nextInput.disabled) {\r\n                let forCount = this.thirdTrIdData.length - (columnIndex + 1);\r\n                for (let i = 0; i < forCount; i++) {\r\n                  let nextColumn2 = this.thirdTrIdData[columnIndex + 1 + i];\r\n\r\n                  let input = document.getElementById(\r\n                      JSON.stringify({\r\n                        rowId: currentRow.id,\r\n                        columnId: nextColumn2.columnId,\r\n                      })\r\n                  );\r\n                  if (input.disabled) {\r\n                    continue;\r\n                  } else {\r\n                    if (input) {\r\n                      input.focus();\r\n                    }\r\n                    break;\r\n                  }\r\n                }\r\n              } else {\r\n                nextInput.focus();\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    async resetIndex() {\r\n      await this.$set(this.currentPosition, \"rowIndex\", null);\r\n      await this.$set(this.currentPosition, \"columnIndex\", null);\r\n      await this.$set(this.currentPosition, \"rowId\", null);\r\n      await this.$set(this.currentPosition, \"columnId\", null);\r\n      // await document.addEventListener(\"keydown\", this.keyUpEvents);\r\n    },\r\n    setError(f1, f2, frowId) {\r\n      this.f1Ids = f1;\r\n      this.f2Ids = f2;\r\n      this.fRowId = frowId;\r\n    },\r\n    keyUpEventsDisable(e) {\r\n      if (this.currentPosition.columnId != null) {\r\n        if (e.which === 38 || e.which === 40) {\r\n          e.preventDefault();\r\n        }\r\n      }\r\n    },\r\n    keyUpEvents(evt) {\r\n      this.keyUpEventsDisable(evt);\r\n      // if (this.currentPosition.columnId != null) {\r\n      //   if (evt.keyCode == 40 && this.currentPosition.rowId != null) {\r\n      //     evt.preventDefault();\r\n      //     // down\r\n      //     if (this.currentPosition.rowIndex < this.selectedRows.length - 1) {\r\n      //       let currentColumn =\r\n      //         this.thirdTrIdData[this.currentPosition.columnIndex];\r\n      //       let downRowColumn =\r\n      //         this.selectedRows[this.currentPosition.rowIndex + 1];\r\n      //       let downInput = document.getElementById(\r\n      //         JSON.stringify({\r\n      //           rowId: downRowColumn.id,\r\n      //           columnId: currentColumn.columnId,\r\n      //         })\r\n      //       );\r\n      //       if (downInput) {\r\n      //         downInput.focus();\r\n      //       }\r\n      //     }\r\n      //   } else if (evt.keyCode == 38 && this.currentPosition.rowId != null) {\r\n      //     evt.preventDefault();\r\n      //     if (this.currentPosition.rowIndex != 0) {\r\n      //       let currentColumn =\r\n      //         this.thirdTrIdData[this.currentPosition.columnIndex];\r\n      //       let upRowColumn =\r\n      //         this.selectedRows[this.currentPosition.rowIndex - 1];\r\n      //       let upInput = document.getElementById(\r\n      //         JSON.stringify({\r\n      //           rowId: upRowColumn.id,\r\n      //           columnId: currentColumn.columnId,\r\n      //         })\r\n      //       );\r\n      //       if (upInput) {\r\n      //         upInput.focus();\r\n      //       }\r\n      //     }\r\n      //     //up\r\n      //   } else if (evt.keyCode == 37) {\r\n      //     evt.preventDefault();\r\n      //     //left\r\n      //     if (this.currentPosition.columnIndex != 0) {\r\n      //       let prevColumn =\r\n      //         this.thirdTrIdData[this.currentPosition.columnIndex - 1];\r\n      //       let currentRow = this.selectedRows[this.currentPosition.rowIndex];\r\n      //       let prevInput = document.getElementById(\r\n      //         JSON.stringify({\r\n      //           rowId: currentRow.id,\r\n      //           columnId: prevColumn.columnId,\r\n      //         })\r\n      //       );\r\n      //       if (prevInput) {\r\n      //         if (prevInput.disabled) {\r\n      //           let count =\r\n      //             this.thirdTrIdData.length -\r\n      //             (this.currentPosition.columnIndex - 1);\r\n      //           for (let i = 0; i < count; i++) {\r\n      //             let prevColumn2 =\r\n      //               this.thirdTrIdData[\r\n      //                 this.currentPosition.columnIndex - 1 - i\r\n      //               ];\r\n      //             let input = document.getElementById(\r\n      //               JSON.stringify({\r\n      //                 rowId: currentRow.id,\r\n      //                 columnId: prevColumn2.columnId,\r\n      //               })\r\n      //             );\r\n      //             if (input && input.disabled) {\r\n      //               continue;\r\n      //             } else {\r\n      //               if (input) {\r\n      //                 input.focus();\r\n      //               }\r\n      //               break;\r\n      //             }\r\n      //           }\r\n      //         } else {\r\n      //           prevInput.focus();\r\n      //         }\r\n      //       }\r\n      //     }\r\n      //   } else if (evt.keyCode == 39) {\r\n      //     //right\r\n      //     evt.preventDefault();\r\n      //     if (\r\n      //       this.thirdTrIdData.length - 1 >\r\n      //       this.currentPosition.columnIndex\r\n      //     ) {\r\n      //       let nextColumn =\r\n      //         this.thirdTrIdData[this.currentPosition.columnIndex + 1];\r\n      //       let currentRow = this.selectedRows[this.currentPosition.rowIndex];\r\n      //       let nextInput = document.getElementById(\r\n      //         JSON.stringify({\r\n      //           rowId: currentRow.id,\r\n      //           columnId: nextColumn.columnId,\r\n      //         })\r\n      //       );\r\n      //       if (nextInput) {\r\n      //         if (nextInput.disabled) {\r\n      //           let forCount =\r\n      //             this.thirdTrIdData.length -\r\n      //             (this.currentPosition.columnIndex + 1);\r\n      //           for (let i = 0; i < forCount; i++) {\r\n      //             let nextColumn2 =\r\n      //               this.thirdTrIdData[\r\n      //                 this.currentPosition.columnIndex + 1 + i\r\n      //               ];\r\n\r\n      //             let input = document.getElementById(\r\n      //               JSON.stringify({\r\n      //                 rowId: currentRow.id,\r\n      //                 columnId: nextColumn2.columnId,\r\n      //               })\r\n      //             );\r\n      //             if (input.disabled) {\r\n      //               continue;\r\n      //             } else {\r\n      //               if (input) {\r\n      //                 input.focus();\r\n      //               }\r\n      //               break;\r\n      //             }\r\n      //           }\r\n      //         } else {\r\n      //           nextInput.focus();\r\n      //         }\r\n      //       }\r\n      //     }\r\n      //   }\r\n      // }\r\n    },\r\n\r\n    focusVal(rowId, value, rowIndex, columnIndex, columnId, typeCode) {\r\n      this.$set(this.currentPosition, \"rowIndex\", parseFloat(rowIndex));\r\n      this.$set(this.currentPosition, \"columnIndex\", parseFloat(columnIndex));\r\n      this.$set(this.currentPosition, \"rowId\", parseFloat(rowId));\r\n      this.$set(this.currentPosition, \"columnId\", parseFloat(columnId));\r\n    },\r\n    getFormulas_2() {\r\n      return new Promise((res, rej) => {\r\n        if (this.tableId) {\r\n          Service.formulasByTableId_2(this.tableId)\r\n              .then(({ data }) => {\r\n                this.formulas = data;\r\n                res(data);\r\n              })\r\n              .catch((e) => rej(e));\r\n        } else {\r\n          rej();\r\n        }\r\n      });\r\n    },\r\n    getDataById(id) {\r\n      return new Promise((res, rej) => {\r\n        Service.getReportById(id)\r\n            .then(({ data }) => {\r\n              res(data);\r\n            })\r\n            .catch((e) => rej(e));\r\n      });\r\n    },\r\n    editValue(rowIndex, index) {\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'notEditable', false)\r\n      this.$forceUpdate();\r\n    },\r\n    resetValue(rowIndex, index) {\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'selectValueId', this.thirdTrIdData[index].value[rowIndex].originalSelectValueId)\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'selectValueNameUz', this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameUz)\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'selectValueNameLt', this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameLt)\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'selectValueNameRu', this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameRu)\r\n      this.$set(this.thirdTrIdData[index].value[rowIndex], 'notEditable', true)\r\n      this.$forceUpdate();\r\n    },\r\n    setValue(rowId, value, rowIndex, index, id, typeCode, notEditable = false, initialLoadCall = false) {\r\n      /* this.thirdTrIdData[index].value[rowIndex] = {\r\n        rowId: rowId ? rowId : null,\r\n        value: typeCode === 'SELECT' ? '' : value,\r\n        selectValueId: value ? value.id : null,\r\n        selectValueNameUz: value ? value.nameUz : null,\r\n        selectValueNameLt: value ? value.nameLt : null,\r\n        selectValueNameRu: value ? value.nameRu : null,\r\n        originalSelectValueNameUz: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameUz : '',\r\n        originalSelectValueNameLt: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameLt : '',\r\n        originalSelectValueNameRu: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameRu : '',\r\n        typeCode: typeCode,\r\n        columnId: id,\r\n        notEditable: notEditable\r\n      }; */\r\n      if (initialLoadCall && typeCode === 'SELECT') {\r\n        let rowIndex = this.selectedRows.findIndex(el => el.id == rowId)\r\n        if (!this.thirdTrIdData[index].value[rowIndex].rowId) {\r\n          this.thirdTrIdData[index].value[rowIndex] = {\r\n            rowId: rowId,\r\n            value: typeCode === 'SELECT' ? '' : value,\r\n            selectValueId: value ? value.id : null,\r\n            selectValueNameUz: value ? (value.nameUz ? value.nameUz : value.name) : null,\r\n            selectValueNameLt: value ? value.nameLt : null,\r\n            selectValueNameRu: value ? value.nameRu : null,\r\n            originalSelectValueNameUz: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameUz : '',\r\n            originalSelectValueNameLt: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameLt : '',\r\n            originalSelectValueNameRu: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameRu : '',\r\n            typeCode: typeCode,\r\n            columnId: id,\r\n            notEditable: notEditable,\r\n          }\r\n          this.thirdTrIdData[index].value[rowIndex].originalselectValueId = value.id\r\n          this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameUz = value.nameUz\r\n          this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameLt = value.nameLt\r\n          this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameRu = value.nameRu\r\n        }\r\n      } else {\r\n        if (typeCode === 'SELECT') {\r\n          value.rowId = rowId\r\n          value.columnId = id\r\n          value.typeCode = typeCode\r\n          value.notEditable = notEditable\r\n          value.selectValueId = value.id\r\n          value.selectValueNameLt = value.nameLt\r\n          value.selectValueNameRu = value.nameRu\r\n          value.selectValueNameUz = value.nameUz ? value.nameUz : value.name\r\n        }\r\n\r\n        this.thirdTrIdData[index].value[rowIndex] = {\r\n          rowId: rowId,\r\n          value: typeCode === 'SELECT' ? '' : value,\r\n          selectValueId: value ? value.id : null,\r\n          selectValueNameUz: value ? value.nameUz : null,\r\n          selectValueNameLt: value ? value.nameLt : null,\r\n          selectValueNameRu: value ? value.nameRu : null,\r\n          originalSelectValueNameUz: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameUz : '',\r\n          originalSelectValueNameLt: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameLt : '',\r\n          originalSelectValueNameRu: this.thirdTrIdData[index].value[rowIndex] ? this.thirdTrIdData[index].value[rowIndex].originalSelectValueNameRu : '',\r\n          typeCode: typeCode,\r\n          columnId: id,\r\n          notEditable: notEditable,\r\n        };\r\n      }\r\n      document.getElementsByClassName(\"no_enter_value\").forEach((input) => {\r\n        if (JSON.parse(input.id).rowId) {\r\n          this.formulas.forEach((e) => {\r\n            let index_f2 = JSON.parse(e.f2).findIndex(\r\n                (d) => d == parseFloat(id)\r\n            );\r\n            let index_f1 = JSON.parse(e.f1).findIndex(\r\n                (d) => d == parseFloat(JSON.parse(input.id).columnId)\r\n            );\r\n            if (\r\n                index_f2 > -1 &&\r\n                index_f1 > -1 &&\r\n                parseFloat(JSON.parse(input.id).rowId) == parseFloat(rowId)\r\n            ) {\r\n              let allVal = 0;\r\n              document.getElementsByClassName(\"input_val\").forEach((vInput) => {\r\n\r\n                let e_index_f2 = JSON.parse(e.f2).findIndex(\r\n                    (d) => d == parseFloat(JSON.parse(vInput.id).columnId)\r\n                );\r\n                if (\r\n                    e_index_f2 > -1 &&\r\n                    parseFloat(JSON.parse(vInput.id).rowId) == parseFloat(rowId)\r\n                ) {\r\n                  if (this._empty(vInput.value)) {\r\n                  } else {\r\n                    if (typeof parseFloat(vInput.value) === \"number\") {\r\n                      allVal += parseFloat(vInput.value);\r\n                    } else {\r\n                      allVal += 0;\r\n                    }\r\n                  }\r\n\r\n                  this.$set(input, \"value\", parseFloat(allVal));\r\n                  let foundIndex = this.thirdTrIdData.findIndex(\r\n                      (e) => e.columnId == JSON.parse(input.id).columnId\r\n                  );\r\n                  this.thirdTrIdData[foundIndex].value[rowIndex] = {\r\n                    rowId: rowId ? rowId : null,\r\n                    value: allVal,\r\n                    typeCode: typeCode,\r\n                    columnId: JSON.parse(input.id).columnId,\r\n                  };\r\n                  this.$forceUpdate();\r\n                }\r\n              });\r\n            }\r\n          });\r\n        } else {\r\n          this.formulas.forEach((e) => {\r\n            let index_f2 = JSON.parse(e.f2).findIndex(\r\n                (d) => d == parseFloat(id)\r\n            );\r\n            let index_f1 = JSON.parse(e.f1).findIndex(\r\n                (d) => d == parseFloat(JSON.parse(input.id).columnId)\r\n            );\r\n\r\n            if (index_f2 > -1 && index_f1 > -1) {\r\n              let allVal = 0;\r\n              document.getElementsByClassName(\"input_val\").forEach((vInput) => {\r\n                let e_index_f2 = JSON.parse(e.f2).findIndex(\r\n                    (d) => d == parseFloat(JSON.parse(vInput.id).columnId)\r\n                );\r\n                if (e_index_f2 > -1) {\r\n                  if (this._empty(vInput.value)) {\r\n                  } else {\r\n                    if (typeof parseFloat(vInput.value) === \"number\") {\r\n                      allVal += parseFloat(vInput.value);\r\n                    } else {\r\n                      allVal += 0;\r\n                    }\r\n                  }\r\n                }\r\n                this.$set(input, \"value\", parseFloat(allVal));\r\n                let foundIndex = this.thirdTrIdData.findIndex(\r\n                    (e) => e.columnId == JSON.parse(input.id).columnId\r\n                );\r\n                this.thirdTrIdData[foundIndex].value[0] = {\r\n                  rowId: null,\r\n                  value: allVal,\r\n                  typeCode: typeCode,\r\n                  columnId: JSON.parse(input.id).columnId,\r\n                };\r\n\r\n                this.$forceUpdate();\r\n              });\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n      this.$forceUpdate();\r\n    },\r\n    getById(id, reportId) {\r\n      this.clearAll();\r\n      this.tableId = id;\r\n      this.reportId = reportId;\r\n      this.loader = true;\r\n\r\n      Service.reportGetById(reportId).then(({ data }) => {\r\n        this.report = data;\r\n      });\r\n\r\n      Service.getByIdTable(id, reportId)\r\n          .then(async (rs) => {\r\n            if (rs.data) {\r\n              await this.setColumns(rs.data.columns, rs.data.rows.length);\r\n              this.setRow(rs.data.rows);\r\n              this.table = rs.data.table;\r\n              setTimeout(() => {\r\n                Promise.all([\r\n                  this.getDataById(reportId),\r\n                  this.getFormulas_2(),\r\n                ]).then(([data, formulas]) => {\r\n                  if (data && data.length) {\r\n                    data.forEach((e) => {\r\n\r\n                      if (e.valueString || e.valueBigDecimal) {\r\n                        if (e.typeCode === \"YEAR\") {\r\n                          document.getElementsByClassName(\"custom-datepicker mx-datepicker dynamic-year\").forEach((field, idx) => {\r\n                            if (JSON.parse(field.id).rowId) {\r\n                              if (\r\n                                  parseFloat(JSON.parse(field.id).columnId) === parseFloat(e.columnId) &&\r\n                                  parseFloat(JSON.parse(field.id).rowId) === parseFloat(e.rowId)\r\n                              ) {\r\n                                let rowIndex = this.selectedRows.findIndex(el => el.id == JSON.parse(field.id).rowId)\r\n                                let colIndex = this.thirdTrIdData.findIndex(item => item.columnId === e.columnId)\r\n                                this.setValue(e.rowId, e.value, rowIndex, colIndex, e.columnId, 'DATE')\r\n                              }\r\n                            }\r\n                          })\r\n                        } else {\r\n                          if (e.typeCode === 'BIGDECIMAL') {\r\n                            let foundColumnId = this.showData.findIndex((d) => d.columnId === e.columnId)\r\n\r\n                            if (foundColumnId > -1) {\r\n                              this.showData.map(f => {\r\n\r\n                                if (f.columnId == e.columnId) {\r\n                                  f.columnData = (+f.columnData) + (+e.value)\r\n                                }\r\n                              })\r\n                            } else {\r\n                              this.showData.push({\r\n                                columnId: e.columnId,\r\n                                columnData: (e.value)\r\n                              })\r\n                            }\r\n                          }\r\n                          document\r\n                              .getElementsByClassName(\"input_val\")\r\n                              .forEach((input) => {\r\n                                formulas.forEach((element) => {\r\n                                  let index_V = JSON.parse(element.f1).findIndex(\r\n                                      (e) => e == JSON.parse(input.id).columnId\r\n                                  );\r\n                                  if (index_V > -1) {\r\n                                    this.$set(input, \"disabled\", true);\r\n                                    this.$set(input.style, \"border\", \"none\");\r\n                                    input.classList.add(\"no_enter_value\");\r\n                                    input.style.fontWeight = \"bold\";\r\n                                  }\r\n                                });\r\n                                if (JSON.parse(input.id).rowId) {\r\n                                  if (\r\n                                      parseFloat(JSON.parse(input.id).columnId) ==\r\n                                      parseFloat(e.columnId) &&\r\n                                      parseFloat(JSON.parse(input.id).rowId) ==\r\n                                      parseFloat(e.rowId)\r\n                                  ) {\r\n                                    this.$set(input, \"value\", e.value);\r\n                                  }\r\n                                } else {\r\n                                  if (\r\n                                      parseFloat(JSON.parse(input.id).columnId) ==\r\n                                      parseFloat(e.columnId)\r\n                                  ) {\r\n                                    this.$set(input, \"value\", e.value);\r\n                                  }\r\n                                }\r\n                              });\r\n                        }\r\n                      } else if (e.valueDate) {\r\n                        document.getElementsByClassName(\"custom-datepicker mx-datepicker\").forEach((field, idx) => {\r\n                          if (JSON.parse(field.id).rowId) {\r\n                            if (\r\n                                parseFloat(JSON.parse(field.id).columnId) ==\r\n                                parseFloat(e.columnId) &&\r\n                                parseFloat(JSON.parse(field.id).rowId) ==\r\n                                parseFloat(e.rowId)\r\n                            ) {\r\n                              let colIndex = this.thirdTrIdData.findIndex(item => item.columnId == e.columnId)\r\n                              this.setValue(\r\n                                  e.rowId,\r\n                                  e.value,\r\n                                  idx,\r\n                                  colIndex,\r\n                                  e.columnId,\r\n                                  'DATE'\r\n                              )\r\n                            }\r\n                          }\r\n                        })\r\n                      } else if (e.valueBoolean !== null) {\r\n                        document.getElementsByClassName(\"checkbox_field\").forEach((field, idx) => {\r\n                          let checkboxInput = field.children[0].children[0].children[0]\r\n                          if (JSON.parse(checkboxInput.id).rowId) {\r\n                            if (\r\n                                parseFloat(JSON.parse(checkboxInput.id).columnId) ==\r\n                                parseFloat(e.columnId) &&\r\n                                parseFloat(JSON.parse(checkboxInput.id).rowId) ==\r\n                                parseFloat(e.rowId)\r\n                            ) {\r\n\r\n                              let colIndex = this.thirdTrIdData.findIndex(item => item.columnId == e.columnId)\r\n\r\n                              this.setValue(\r\n                                  e.rowId,\r\n                                  JSON.parse(e.value),\r\n                                  idx,\r\n                                  colIndex,\r\n                                  e.columnId,\r\n                                  'BOOLEAN'\r\n                              )\r\n                            }\r\n                          }\r\n                        })\r\n                      } else if (e.selectValueNameUz) {\r\n                        document.getElementsByClassName(\"select_field\").forEach((field, idx) => {\r\n                          if (JSON.parse(field.id).rowId) {\r\n                            if (\r\n                                parseFloat(JSON.parse(field.id).columnId) ==\r\n                                parseFloat(e.columnId) &&\r\n                                parseFloat(JSON.parse(field.id).rowId) ==\r\n                                parseFloat(e.rowId)\r\n                            ) {\r\n                              let colIndex = this.thirdTrIdData.findIndex(item => item.columnId == e.columnId)\r\n                              this.setValue(\r\n                                  e.rowId,\r\n                                  {\r\n                                    id: e.id,\r\n                                    nameUz: e.selectValueNameUz,\r\n                                    nameLt: e.selectValueNameLt,\r\n                                    nameRu: e.selectValueNameRu\r\n                                  },\r\n                                  idx,\r\n                                  colIndex,\r\n                                  e.columnId,\r\n                                  'SELECT',\r\n                                  true,\r\n                                  true\r\n                              )\r\n                            }\r\n                          }\r\n                        })\r\n                      }\r\n                    });\r\n                  } else {\r\n                    document\r\n                        .getElementsByClassName(\"input_val\")\r\n                        .forEach((input) => {\r\n                          formulas.forEach((element) => {\r\n                            let index_V = JSON.parse(element.f1).findIndex(\r\n                                (e) => e == JSON.parse(input.id).columnId\r\n                            );\r\n                            if (index_V > -1) {\r\n                              this.$set(input, \"disabled\", true);\r\n                              this.$set(input.style, \"border\", \"none\");\r\n                              input.classList.add(\"no_enter_value\");\r\n                              input.style.fontWeight = \"bold\";\r\n                            }\r\n                          });\r\n                        });\r\n                  }\r\n\r\n                  this.loader = false;\r\n                });\r\n              }, 500);\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            this.loader = false;\r\n            // this.catchErr(e);\r\n          });\r\n\r\n\r\n    },\r\n    async setColumns(v, rowsCount) {\r\n      this.selectedColumns = v;\r\n      this.firstColumns = [];\r\n      this.secondColumns = [];\r\n      this.thirdColumns = [];\r\n      v.forEach((el1) => {\r\n        this.firstColumns.push(el1);\r\n        el1.children.forEach((el2) => {\r\n          this.secondColumns.push(el2);\r\n          el2.children.forEach((el3) => {\r\n            this.thirdColumns.push({ ...el3, fId: el1.id });\r\n          });\r\n        });\r\n      });\r\n      setTimeout(async () => {\r\n        // this.thirdTrIdData = Array.prototype.slice\r\n        //   .call(document.getElementsByClassName(\"thirdTrId\"))\r\n        //   .map((e) => {\r\n        //     let array = e.id.split(\",\");\r\n        //     return {\r\n        //       columnId: array[0],\r\n        //       typeCode: array[1],\r\n        //       rowId: [],\r\n        //       value: [],\r\n        //     };\r\n        //   });\r\n        let firstTrTh = document.getElementsByClassName(\"firstTrTh\");\r\n        let secondTrTh = document.getElementsByClassName(\"secondTrTh\");\r\n        let thirdTrTh = document.getElementsByClassName(\"thirdTrTh\");\r\n        let counter2 = 0,\r\n            counter3 = 0;\r\n        await firstTrTh.forEach(async (th) => {\r\n          if (th.colSpan > 1) {\r\n            for (let index2 = 0; index2 < th.colSpan; index2++) {\r\n              if (secondTrTh[counter2] && secondTrTh[counter2].colSpan > 1) {\r\n                for (\r\n                    let index3 = 0;\r\n                    index3 < secondTrTh[counter2].colSpan;\r\n                    index3++\r\n                ) {\r\n                  let array = thirdTrTh[counter3].id.split(\",\");\r\n                  let tmp = {\r\n                    columnId: array[0],\r\n                    typeCode: array[1],\r\n                    refCode: array[2],\r\n                    referenceUrl: array[3],\r\n                    referenceAppendUrl: array[4],\r\n                    referenceCode: array[5],\r\n                    referenceNameUz: array[6],\r\n                    referenceNameLt: array[7],\r\n                    referenceNameRu: array[8],\r\n                    searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                    hasNextPage: false,\r\n                    options: [],\r\n                    rowId: [],\r\n                    value: [],\r\n                  };\r\n                  // GET DYNAMIC REFRENCE OPTIONS\r\n                  if (tmp.typeCode === 'SELECT') {\r\n                    for (let i = 0; i < rowsCount; i++) {\r\n                      tmp.value.push({ selectedItem: null })\r\n                    }\r\n                    crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                        .then(res => {\r\n                          tmp.options.push(...res.data.list)\r\n                          tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                          tmp.searchPayload.page += 1\r\n                          /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                              let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                              if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                  this.okeds.push(this.editingItem.infoOkedDto)\r\n                              }\r\n                          } */\r\n                        })\r\n                        .catch(e => {\r\n                          console.log(e)\r\n                          // this.okeds = []\r\n                        })\r\n                        .finally(() => {\r\n                          // this.isLoadingOked = false\r\n                        })\r\n                  }\r\n                  this.thirdTrIdData.push(tmp);\r\n                  counter3++;\r\n                }\r\n                counter2++;\r\n              } else {\r\n                if (\r\n                    secondTrTh[counter2] &&\r\n                    secondTrTh[counter2].classList.contains(\"thirdTrId\")\r\n                ) {\r\n                  let array = secondTrTh[counter2].id.split(\",\");\r\n                  let tmp = {\r\n                    columnId: array[0],\r\n                    typeCode: array[1],\r\n                    refCode: array[2],\r\n                    referenceUrl: array[3],\r\n                    referenceAppendUrl: array[4],\r\n                    referenceCode: array[5],\r\n                    referenceNameUz: array[6],\r\n                    referenceNameLt: array[7],\r\n                    referenceNameRu: array[8],\r\n                    searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                    hasNextPage: false,\r\n                    options: [],\r\n                    rowId: [],\r\n                    value: [],\r\n                  };\r\n                  // GET DYNAMIC REFRENCE OPTIONS\r\n                  if (tmp.typeCode === 'SELECT') {\r\n                    for (let i = 0; i < rowsCount; i++) {\r\n                      tmp.value.push({ selectedItem: null })\r\n                    }\r\n                    crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                        .then(res => {\r\n                          tmp.options.push(...res.data.list)\r\n                          tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                          tmp.searchPayload.page += 1\r\n                          /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                              let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                              if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                  this.okeds.push(this.editingItem.infoOkedDto)\r\n                              }\r\n                          } */\r\n                        })\r\n                        .catch(e => {\r\n                          console.log(e)\r\n                          // this.okeds = []\r\n                        })\r\n                        .finally(() => {\r\n                          // this.isLoadingOked = false\r\n                        })\r\n                  }\r\n                  this.thirdTrIdData.push(tmp);\r\n                  counter2++;\r\n                } else {\r\n                  if (secondTrTh[counter2]) {\r\n                    for (\r\n                        let index3 = 0;\r\n                        index3 < secondTrTh[counter2].colSpan;\r\n                        index3++\r\n                    ) {\r\n                      let array = thirdTrTh[counter3].id.split(\",\");\r\n                      let tmp = {\r\n                        columnId: array[0],\r\n                        typeCode: array[1],\r\n                        refCode: array[2],\r\n                        referenceUrl: array[3],\r\n                        referenceAppendUrl: array[4],\r\n                        referenceCode: array[5],\r\n                        referenceNameUz: array[6],\r\n                        referenceNameLt: array[7],\r\n                        referenceNameRu: array[8],\r\n                        searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                        hasNextPage: false,\r\n                        options: [],\r\n                        rowId: [],\r\n                        value: [],\r\n                      };\r\n                      // GET DYNAMIC REFRENCE OPTIONS\r\n                      if (tmp.typeCode === 'SELECT') {\r\n                        for (let i = 0; i < rowsCount; i++) {\r\n                          tmp.value.push({ selectedItem: null })\r\n                        }\r\n                        crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                            .then(res => {\r\n                              tmp.options.push(...res.data.list)\r\n                              tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                              tmp.searchPayload.page += 1\r\n                              /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                                  let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                                  if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                      this.okeds.push(this.editingItem.infoOkedDto)\r\n                                  }\r\n                              } */\r\n                            })\r\n                            .catch(e => {\r\n                              console.log(e)\r\n                              // this.okeds = []\r\n                            })\r\n                            .finally(() => {\r\n                              // this.isLoadingOked = false\r\n                            })\r\n                      }\r\n                      this.thirdTrIdData.push(tmp);\r\n                      counter3++;\r\n                    }\r\n\r\n                    counter2++;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          } else {\r\n            if (th.classList.contains(\"thirdTrId\")) {\r\n              let array = th.id.split(\",\");\r\n              let tmp = {\r\n                columnId: array[0],\r\n                typeCode: array[1],\r\n                refCode: array[2],\r\n                referenceUrl: array[3],\r\n                referenceAppendUrl: array[4],\r\n                referenceCode: array[5],\r\n                referenceNameUz: array[6],\r\n                referenceNameLt: array[7],\r\n                referenceNameRu: array[8],\r\n                searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                hasNextPage: false,\r\n                options: [],\r\n                rowId: [],\r\n                value: [],\r\n              };\r\n              // GET DYNAMIC REFRENCE OPTIONS\r\n              if (tmp.typeCode === 'SELECT') {\r\n                for (let i = 0; i < rowsCount; i++) {\r\n                  tmp.value.push({ selectedItem: null })\r\n                }\r\n                crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                    .then(res => {\r\n                      tmp.options.push(...res.data.list)\r\n                      tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                      tmp.searchPayload.page += 1\r\n                      /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                          let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                          if (!foundItm && this.editingItem.infoOkedDto) {\r\n                              this.okeds.push(this.editingItem.infoOkedDto)\r\n                          }\r\n                      } */\r\n                    })\r\n                    .catch(e => {\r\n                      console.log(e)\r\n                      // this.okeds = []\r\n                    })\r\n                    .finally(() => {\r\n                      // this.isLoadingOked = false\r\n                    })\r\n              }\r\n              this.thirdTrIdData.push(tmp);\r\n            } else {\r\n              for (let index2 = 0; index2 < th.colSpan; index2++) {\r\n                if (secondTrTh[counter2].colSpan > 1) {\r\n                  for (\r\n                      let index3 = 0;\r\n                      index3 < secondTrTh[counter2].colSpan;\r\n                      index3++\r\n                  ) {\r\n                    let array = thirdTrTh[counter3].id.split(\",\");\r\n                    let tmp = {\r\n                      columnId: array[0],\r\n                      typeCode: array[1],\r\n                      refCode: array[2],\r\n                      referenceUrl: array[3],\r\n                      referenceAppendUrl: array[4],\r\n                      referenceCode: array[5],\r\n                      referenceNameUz: array[6],\r\n                      referenceNameLt: array[7],\r\n                      referenceNameRu: array[8],\r\n                      searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                      hasNextPage: false,\r\n                      options: [],\r\n                      rowId: [],\r\n                      value: [],\r\n                    };\r\n                    // GET DYNAMIC REFRENCE OPTIONS\r\n                    if (tmp.typeCode === 'SELECT') {\r\n                      for (let i = 0; i < rowsCount; i++) {\r\n                        tmp.value.push({ selectedItem: null })\r\n                      }\r\n                      crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                          .then(res => {\r\n                            tmp.options.push(...res.data.list)\r\n                            tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                            tmp.searchPayload.page += 1\r\n                            /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                                let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                                if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                    this.okeds.push(this.editingItem.infoOkedDto)\r\n                                }\r\n                            } */\r\n                          })\r\n                          .catch(e => {\r\n                            console.log(e)\r\n                            // this.okeds = []\r\n                          })\r\n                          .finally(() => {\r\n                            // this.isLoadingOked = false\r\n                          })\r\n                    }\r\n                    this.thirdTrIdData.push(tmp);\r\n                    counter3++;\r\n                  }\r\n                  counter2++;\r\n                } else {\r\n                  if (\r\n                      secondTrTh[counter2] &&\r\n                      secondTrTh[counter2].classList.contains(\"thirdTrId\")\r\n                  ) {\r\n                    let array = secondTrTh[counter2].id.split(\",\");\r\n                    let tmp = {\r\n                      columnId: array[0],\r\n                      typeCode: array[1],\r\n                      refCode: array[2],\r\n                      referenceUrl: array[3],\r\n                      referenceAppendUrl: array[4],\r\n                      referenceCode: array[5],\r\n                      referenceNameUz: array[6],\r\n                      referenceNameLt: array[7],\r\n                      referenceNameRu: array[8],\r\n                      searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                      hasNextPage: false,\r\n                      options: [],\r\n                      rowId: [],\r\n                      value: [],\r\n                    };\r\n                    // GET DYNAMIC REFRENCE OPTIONS\r\n                    if (tmp.typeCode === 'SELECT') {\r\n                      for (let i = 0; i < rowsCount; i++) {\r\n                        tmp.value.push({ selectedItem: null })\r\n                      }\r\n                      crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                          .then(res => {\r\n                            tmp.options.push(...res.data.list)\r\n                            tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                            tmp.searchPayload.page += 1\r\n                            /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                                let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                                if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                    this.okeds.push(this.editingItem.infoOkedDto)\r\n                                }\r\n                            } */\r\n                          })\r\n                          .catch(e => {\r\n                            console.log(e)\r\n                            // this.okeds = []\r\n                          })\r\n                          .finally(() => {\r\n                            // this.isLoadingOked = false\r\n                          })\r\n                    }\r\n                    this.thirdTrIdData.push(tmp);\r\n                    counter2++;\r\n                  } else {\r\n                    if (secondTrTh[counter2]) {\r\n                      for (\r\n                          let index3 = 0;\r\n                          index3 < secondTrTh[counter2].colSpan;\r\n                          index3++\r\n                      ) {\r\n                        let array = thirdTrTh[counter3].id.split(\",\");\r\n                        let tmp = {\r\n                          columnId: array[0],\r\n                          typeCode: array[1],\r\n                          refCode: array[2],\r\n                          referenceUrl: array[3],\r\n                          referenceAppendUrl: array[4],\r\n                          referenceCode: array[5],\r\n                          referenceNameUz: array[6],\r\n                          referenceNameLt: array[7],\r\n                          referenceNameRu: array[8],\r\n                          searchPayload: Object.assign({}, this.var_default_search_payload),\r\n                          hasNextPage: false,\r\n                          options: [],\r\n                          rowId: [],\r\n                          value: [],\r\n                        };\r\n                        // GET DYNAMIC REFRENCE OPTIONS\r\n                        if (tmp.typeCode === 'SELECT') {\r\n                          for (let i = 0; i < rowsCount; i++) {\r\n                            tmp.value.push({ selectedItem: null })\r\n                          }\r\n                          crudAndListsService.searchListWithKeyword(tmp.referenceUrl, tmp.searchPayload, tmp.referenceAppendUrl)\r\n                              .then(res => {\r\n                                tmp.options.push(...res.data.list)\r\n                                tmp.hasNextPage = res.data.total / tmp.searchPayload.itemsPerPage > tmp.searchPayload.page\r\n                                tmp.searchPayload.page += 1\r\n                                /* if (!this.isModeCreate && this.editingItem.okedId) {\r\n                                    let foundItm = this.okeds.find(el => el.id == this.editingItem.okedId)\r\n                                    if (!foundItm && this.editingItem.infoOkedDto) {\r\n                                        this.okeds.push(this.editingItem.infoOkedDto)\r\n                                    }\r\n                                } */\r\n                              })\r\n                              .catch(e => {\r\n                                console.log(e)\r\n                                // this.okeds = []\r\n                              })\r\n                              .finally(() => {\r\n                                // this.isLoadingOked = false\r\n                              })\r\n                        }\r\n                        this.thirdTrIdData.push(tmp);\r\n                        counter3++;\r\n                      }\r\n                      counter2++;\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        });\r\n      }, 300);\r\n    },\r\n    setRow(v) {\r\n      this.selectedRows = v;\r\n      if (this.selectedRows.length == 0) {\r\n        this.selectedRows = [{}];\r\n      }\r\n    },\r\n\r\n    rowspanFirst(el) {\r\n      return el.children.length > 0\r\n          ? 1\r\n          : el.children.length > 0 && this.thirdColumns.length > 0\r\n              ? 3\r\n              : 3;\r\n    },\r\n    colspanFirst(el) {\r\n      let found = this.thirdColumns.filter((i) => i.fId === el.id);\r\n      let totalNotChild = el.children.filter((d) => d.children.length == 0);\r\n      return el.children.length > 0 && found.length == 0\r\n          ? el.children.length\r\n          : el.children.length > 0 && found.length > 0\r\n              ? totalNotChild.length + found.length\r\n              : 1;\r\n    },\r\n\r\n    rowspanSecond(el) {\r\n      return el.children.length == 0 && this.thirdColumns.length == 0\r\n          ? 1\r\n          : el.children.length == 0 && this.thirdColumns.length > 0\r\n              ? 2\r\n              : 1;\r\n    },\r\n    colspanSecond(el) {\r\n      return el.children.length > 0 ? el.children.length : 1;\r\n    },\r\n\r\n    rowspanFirstClass(el) {\r\n      return el.children.length > 0\r\n          ? \"\"\r\n          : el.children.length > 0 && this.thirdColumns.length > 0\r\n              ? \"thirdTrId\"\r\n              : \"thirdTrId\";\r\n    },\r\n    rowspanSecondClass(el) {\r\n      return el.children.length == 0 && this.thirdColumns.length == 0\r\n          ? \"thirdTrId\"\r\n          : el.children.length == 0 && this.thirdColumns.length > 0\r\n              ? \"thirdTrId\"\r\n              : \"\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <div>\r\n      <div class=\"row\">\r\n        <div class=\"col-lg-12\">\r\n          <h5 class=\"text-center mb-1\">\r\n            <strong>\r\n              {{ getName({ nameLt: table.nameLt, nameRu: table.nameRu }) }}\r\n\r\n            </strong>\r\n          </h5>\r\n          <p class=\"text-center m-0\">\r\n            {{ getName({ nameLt: table.titleLt, nameRu: table.titleRu }) }}\r\n\r\n          </p>\r\n        </div>\r\n        <div class=\"col-lg-12\">\r\n          <div class=\"d-flex justify-content-between align-items-end pl-3 pr-3\">\r\n            <div>\r\n              <strong>\r\n                {{\r\n                  getName({\r\n                    nameLt: report.nameLt,\r\n                    nameRu: report.nameRu,\r\n                    nameUz: report.nameUz\r\n                  })\r\n                }}\r\n              </strong><br>\r\n              <span>\r\n                {{\r\n                  report.reportDate\r\n                }}\r\n              </span>\r\n            </div>\r\n            <div>\r\n              <strong>\r\n                {{\r\n                  getName({\r\n                    nameLt: table.conditionLt,\r\n                    nameRu: table.conditionRu,\r\n                  })\r\n                }}\r\n              </strong>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-lg-12\">\r\n          <b-overlay :opacity=\"0.1\" :show=\"loader\" rounded=\"sm\">\r\n            <div class=\"bg-white pl-3 pr-3 pt-1\" style=\"min-height: 60vh; overflow: auto;\">\r\n              <div class=\"pb-5\">\r\n                <table class=\"table thead-table table-centered  table-custom-bordered\">\r\n                  <thead>\r\n                  <tr class=\"tr-text-center\">\r\n                    <th\r\n                        :id=\"[el.id, el.typeCode, el.refCode, el.referenceUrl, el.referenceAppendUrl, el.referenceCode, el.referenceNameUz, el.referenceNameLt, el.referenceNameRu]\"\r\n                        :class=\"rowspanFirstClass(el, index)\"\r\n                        class=\"firstTrTh\"\r\n                        style=\"min-width: 70px\"\r\n                        :rowspan=\"rowspanFirst(el)\"\r\n                        :colspan=\"colspanFirst(el)\"\r\n                        v-for=\"(el, index) in firstColumns\"\r\n                        :key=\"index + 'first'\"\r\n                    >\r\n                      <div style=\" max-height: 200px; display: inline-block; \">\r\n                        <div :class=\" (el.isVertical == 1 ) ? 'rotate_text' : '' \">\r\n                          {{\r\n                            getName({ nameLt: el.nameLt, nameRu: el.nameRu, nameUz: el.nameUz })\r\n                          }}\r\n                        </div>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n                  <tr class=\"tr-text-center\">\r\n                    <th\r\n                        style=\"min-width: 70px\"\r\n                        :id=\"[el.id, el.typeCode, el.refCode, el.referenceUrl, el.referenceAppendUrl, el.referenceCode, el.referenceNameUz, el.referenceNameLt, el.referenceNameRu]\"\r\n                        :class=\"rowspanSecondClass(el)\"\r\n                        class=\"secondTrTh\"\r\n                        :rowspan=\"rowspanSecond(el)\"\r\n                        :colspan=\"colspanSecond(el)\"\r\n                        v-for=\"(el, index) in secondColumns\"\r\n                        :key=\"index + 'second'\"\r\n                    >\r\n                      <div style=\" max-height: 200px; position: relative; display: inline-block; cursor: pointer;\">\r\n                        <div :class=\"(el.isVertical == 1 )  ? 'rotate_text' : ''\">\r\n                          {{ getName({ nameLt: el.nameLt, nameRu: el.nameRu, nameUz: el.nameUz }) }}\r\n                        </div>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n\r\n                  <tr class=\"tr-text-center\">\r\n                    <th\r\n                        style=\"min-width: 70px\"\r\n                        :id=\"[el.id, el.typeCode, el.refCode, el.referenceUrl, el.referenceAppendUrl, el.referenceCode, el.referenceNameUz, el.referenceNameLt, el.referenceNameRu]\"\r\n                        class=\"thirdTrId thirdTrTh\"\r\n                        :colspan=\"el.children.length > 0 ? el.children.length : 1\"\r\n                        v-for=\"(el, index) in thirdColumns\"\r\n                        :key=\"index + 'third'\"\r\n                    >\r\n                      <div style=\" max-height: 200px; position: relative; display: inline-block; cursor: pointer; \">\r\n                        <div :class=\"(el.isVertical == 1 )  ? 'rotate_text' : ''\">\r\n                          {{\r\n                            getName({ nameLt: el.nameLt, nameRu: el.nameRu, nameUz: el.nameUz })\r\n                          }}\r\n                        </div>\r\n                      </div>\r\n                    </th>\r\n                  </tr>\r\n\r\n                  <tr class=\"tr-text-center\">\r\n                    <td v-for=\"(item, index) of thirdTrIdData\" :key=\"index + 'I-1'\">\r\n                      <strong v-if=\"selectedRows.length > 1\">\r\n                        {{\r\n                          selectedRows.length > 1 && index == 0 ? \"\" : index\r\n                        }}\r\n                      </strong>\r\n                      <strong v-else>\r\n                        {{ index + 1 }}\r\n                      </strong>\r\n                    </td>\r\n                  </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  <tr v-for=\"(data, index1) in selectedRows\" :key=\"index1 + 'MM'\">\r\n                    <!-- <th>\r\n                      {{ getName({ ...data }) }}\r\n                    </th> -->\r\n\r\n                    <td\r\n                        :class=\"[\r\n                          f1Ids &&\r\n                          f1Ids.indexOf(i.columnId) > -1 &&\r\n                          selectedRows.length > 1 &&\r\n                          fRowId == data.id\r\n                            ? 'bg-success'\r\n                            : f1Ids &&\r\n                              f1Ids.indexOf(i.columnId) > -1 &&\r\n                              selectedRows.length <= 1\r\n                            ? 'bg-success'\r\n                            : '',\r\n                          f2Ids &&\r\n                          f2Ids.indexOf(i.columnId) > -1 &&\r\n                          selectedRows.length > 1 &&\r\n                          fRowId == data.id\r\n                            ? 'bg-primary'\r\n                            : f2Ids &&\r\n                              f2Ids.indexOf(i.columnId) > -1 &&\r\n                              selectedRows.length <= 1\r\n                            ? 'bg-primary'\r\n                            : '',\r\n                        ]\"\r\n                        v-for=\"(i, index) in thirdTrIdData\"\r\n                        :key=\"index + 'td'\"\r\n                        class=\"text-center p\"\r\n                    >\r\n                      <p class=\"m-0 p-2\" v-if=\"data.id && index == 0\">\r\n                        {{ getName(data) }}\r\n                      </p>\r\n\r\n                      <div\r\n                          v-else-if=\"i.typeCode === 'SELECT' && thirdTrIdData[index].value[index1] && thirdTrIdData[index].value[index1].notEditable\"\r\n                          v-b-tooltip=\"{ variant: 'info' }\"\r\n                          class=\"cursor-pointer\"\r\n                          @click=\"editValue(index1, index)\"\r\n                          :title=\"$t('actions.click_to_edit')\"\r\n                      >\r\n                        {{\r\n                          getName({\r\n                            nameUz: thirdTrIdData[index].value[index1].selectValueNameUz,\r\n                            nameLt: thirdTrIdData[index].value[index1].selectValueNameLt,\r\n                            nameRu: thirdTrIdData[index].value[index1].selectValueNameRu\r\n                          })\r\n                        }}\r\n                      </div>\r\n                      <!-- FOR SELECT -->\r\n                      <div v-else-if=\"i.typeCode === 'SELECT'\" style=\"min-width: 300px;\">\r\n                        <BaseMultiselectWithValidation\r\n                            v-if=\"thirdTrIdData[index].value[index1]\"\r\n                            not-required\r\n                            only-form-element\r\n                            v-model=\"thirdTrIdData[index].value[index1].selectedItem\"\r\n                            class=\"select_field\"\r\n                            :id=\"\r\n                                JSON.stringify({\r\n                                  rowId: data.id,\r\n                                  columnId: i.columnId,\r\n                                })\r\n                              \"\r\n                            :custom-label=\"({nameUz, nameLt, nameRu}) => getName({nameUz: nameUz, nameLt: nameLt, nameRu: nameRu})\"\r\n                            @select=\"setValue(\r\n                                    data.id,\r\n                                    $event,\r\n                                    index1,\r\n                                    index,\r\n                                    i.columnId,\r\n                                    i.typeCode,\r\n                                    i.notEditable\r\n                                )\"\r\n                            :options=\"i.options\"\r\n                            :placeholder=\"getName({nameUz: i.referenceNameUz, nameLt: i.referenceNameLt, nameRu: i.referenceNameRu})\"\r\n                            open-direction=\"bottom\"\r\n                            :max-height=\"600\"\r\n                            :show-labels=\"false\"\r\n                            :has-next-page=\"i.hasNextPage\"\r\n                            @reachedEndOfList=\"dynamicRefsReachedEndOfList\"\r\n                            @search-change=\"debounceSearchDynamicRefs\"\r\n                            :searchable=\"true\"\r\n                            preserve-search\r\n                            :clear-on-select=\"false\"\r\n                            :loading=\"i.isLoading\"\r\n                            :internal-search=\"false\"\r\n                            :with-create-addition=\"(thirdTrIdData[index].value[index1] && thirdTrIdData[index].value[index1].originalSelectValueNameUz) ? true : false\"\r\n                        >\r\n                          <template v-slot:append-slot>\r\n                            <b-btn\r\n                                v-if=\"thirdTrIdData[index].value[index1] && thirdTrIdData[index].value[index1].originalSelectValueNameUz\"\r\n                                variant=\"link\"\r\n                                class=\"text-decoration-none p-0 text-danger\"\r\n                                style=\"font-size: 1.2rem;\"\r\n                            >\r\n                              <i @click=\"resetValue(index1, index)\" class=\"mdi mdi-refresh\"></i>\r\n                            </b-btn>\r\n                          </template>\r\n                        </BaseMultiselectWithValidation>\r\n                        <BaseMultiselectWithValidation\r\n                            v-else-if=\"!thirdTrIdData[index].value[index1]\"\r\n                            not-required\r\n                            only-form-element\r\n                            class=\"select_field\"\r\n                            :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId})\"\r\n                            v-model=\"thirdTrIdData[index].value[index1]\"\r\n                            :custom-label=\"({nameUz, nameLt, nameRu}) => getName({nameUz: nameUz, nameLt: nameLt, nameRu: nameRu})\"\r\n                            @select=\"setValue( data.id, $event, index1, index, i.columnId, i.typeCode, i.notEditable )\"\r\n                            :options=\"i.options\"\r\n                            :placeholder=\"getName({nameUz: i.referenceNameUz, nameLt: i.referenceNameLt, nameRu: i.referenceNameRu})\"\r\n                            open-direction=\"bottom\"\r\n                            :max-height=\"600\"\r\n                            :show-labels=\"false\"\r\n                            :has-next-page=\"i.hasNextPage\"\r\n                            @reachedEndOfList=\"dynamicRefsReachedEndOfList\"\r\n                            @search-change=\"debounceSearchDynamicRefs\"\r\n                            :searchable=\"true\"\r\n                            preserve-search\r\n                            :clear-on-select=\"false\"\r\n                            :loading=\"i.isLoading\"\r\n                            :internal-search=\"false\"\r\n                        />\r\n                      </div>\r\n                      <!-- FOR DATE -->\r\n                      <BaseDatePickerWithValidation\r\n                          v-else-if=\"i.typeCode === 'DATE' && thirdTrIdData[index].value[index1]\"\r\n                          not-required\r\n                          only-form-element\r\n                          custom-styles=\"min-width: 140px;\"\r\n                          placeholder=\"\"\r\n                          v-model=\"thirdTrIdData[index].value[index1].value\"\r\n                          class=\"datepicker_field\"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          @input=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                          lang=\"ru\"\r\n                      />\r\n                      <BaseDatePickerWithValidation\r\n                          v-else-if=\"i.typeCode === 'DATE'\"\r\n                          not-required\r\n                          only-form-element\r\n                          custom-styles=\"min-width: 140px;\"\r\n                          class=\"datepicker_field\"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          placeholder=\"\"\r\n                          @input=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                          lang=\"ru\"\r\n                      />\r\n\r\n                      <!-- FOR YEAR -->\r\n                      <BaseDatePickerWithValidation\r\n                          v-else-if=\"i.typeCode === 'YEAR' && thirdTrIdData[index].value[index1]\"\r\n                          not-required\r\n                          only-form-element\r\n                          custom-styles=\"min-width: 140px;\"\r\n                          placeholder=\"\"\r\n                          v-model=\"thirdTrIdData[index].value[index1].value\"\r\n                          class=\"datepicker_field\"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          @input=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                          lang=\"ru\"\r\n                          type=\"year\"\r\n                      />\r\n                      <BaseDatePickerWithValidation\r\n                          v-else-if=\"i.typeCode === 'YEAR'\"\r\n                          not-required\r\n                          only-form-element\r\n                          custom-styles=\"min-width: 140px;\"\r\n                          class=\"datepicker_field\"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          placeholder=\"\"\r\n                          @input=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                          lang=\"ru\"\r\n                          type=\"year\"\r\n                      />\r\n\r\n                      <!-- FOR STRING -->\r\n                      <div v-else-if=\"i.typeCode === 'STRING'\" style=\"min-width: 300px;\">\r\n                        <b-form-input\r\n                            @keydown=\"(evt) =>keydownEvt(evt,data.id,evt.target.value,index1,index,i.columnId,i.typeCode)\"\r\n                            :class=\"\r\n                              currentPosition.rowId &&\r\n                              currentPosition.columnId &&\r\n                              i.columnId == currentPosition.columnId &&\r\n                              data.id == currentPosition.rowId\r\n                                ? 'borderInput'\r\n                                : currentPosition.columnId &&\r\n                                  !currentPosition.rowId &&\r\n                                  i.columnId == currentPosition.columnId\r\n                                ? 'borderInput'\r\n                                : ''\r\n                            \"\r\n                            @focus=\"(e) =>focusVal(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                            :style=\"report.status && report.status !== 'CREATED'? 'border: none !important': ''\"\r\n                            :disabled=\"report.status && report.status !== 'CREATED'\"\r\n                            :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                            @input=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                            class=\"text-center input_val p-0\"\r\n                        >\r\n                        </b-form-input>\r\n                      </div>\r\n                      <!-- FOR BOOLEAN -->\r\n                      <Checkbox\r\n                          v-else-if=\"i.typeCode === 'BOOLEAN' && thirdTrIdData[index].value[index1]\"\r\n                          v-model=\"thirdTrIdData[index].value[index1].value\"\r\n                          :font-size=\"0\"\r\n                          :disabled=\"report.status && report.status !== 'CREATED'\"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          class=\"justify-content-center checkbox_field\"\r\n                          @change=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                      />\r\n                      <Checkbox\r\n                          v-else-if=\"i.typeCode === 'BOOLEAN'\"\r\n                          :font-size=\"0\"\r\n                          :disabled=\"report.status && report.status !== 'CREATED'\"\r\n                          :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                          class=\"justify-content-center checkbox_field\"\r\n                          @change=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                      />\r\n                      <!-- FOR INTEGER -->\r\n                      <div v-else>\r\n                        <b-form-input\r\n                            @keydown=\"(evt) =>keydownEvt(evt,data.id,evt.target.value,index1,index,i.columnId,i.typeCode)\"\r\n                            :class=\"\r\n                              currentPosition.rowId &&\r\n                              currentPosition.columnId &&\r\n                              i.columnId == currentPosition.columnId &&\r\n                              data.id == currentPosition.rowId\r\n                                ? 'borderInput'\r\n                                : currentPosition.columnId &&\r\n                                  !currentPosition.rowId &&\r\n                                  i.columnId == currentPosition.columnId\r\n                                ? 'borderInput'\r\n                                : ''\r\n                            \"\r\n                            @focus=\"(e) =>focusVal(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                            :style=\"report.status && report.status !== 'CREATED'? 'border: none !important': ''\"\r\n                            :disabled=\"report.status && report.status !== 'CREATED'\"\r\n                            :id=\"JSON.stringify({rowId: data.id,columnId: i.columnId,})\"\r\n                            @input=\"(e) =>setValue(data.id,e,index1,index,i.columnId,i.typeCode)\"\r\n                            type=\"number\"\r\n                            class=\"text-center input_val p-0\"\r\n                        >\r\n                        </b-form-input>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  </tbody>\r\n                  <tfoot>\r\n                  <tr class=\"mt-5\" v-show=\"showResult\"\r\n                  >\r\n                    <td v-for=\"(i, index) in thirdTrIdData\"\r\n                        :key=\"index + 'td'\"\r\n                        class=\"text-center p\"\r\n                    >\r\n                      <p v-if=\"index === 0\">Jami</p>\r\n                      <div v-else-if=\"i.typeCode === 'BIGDECIMAL'\">\r\n                        {{ getColumnData(i) }}\r\n                      </div>\r\n                      <div v-else>---</div>\r\n                    </td>\r\n                  </tr>\r\n                  </tfoot>\r\n                </table>\r\n              </div>\r\n              <div>\r\n              </div>\r\n            </div>\r\n          </b-overlay>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<style lang=\"scss\">\r\n.borderInput {\r\n  border: 2px solid green !important;\r\n}\r\n\r\nth {\r\n  /* &#SELECT {\r\n    width: 20%;\r\n  } */\r\n  &[id*=\"SELECT\"] {\r\n    width: 150px;\r\n  }\r\n}\r\n\r\n.check {\r\n  margin-top: 5px;\r\n\r\n  .m-chckbox--container {\r\n    margin: 0px !important;\r\n    width: 22px !important;\r\n  }\r\n\r\n  label {\r\n    margin: 0;\r\n    display: none;\r\n  }\r\n}\r\n</style>\r\n<style lang=\"scss\">\r\n/* Chrome, Safari, Edge, Opera */\r\ninput::-webkit-outer-spin-button,\r\ninput::-webkit-inner-spin-button {\r\n  -webkit-appearance: none;\r\n  margin: 0;\r\n}\r\n\r\n/* Firefox */\r\ninput[type=\"number\"] {\r\n  -moz-appearance: textfield;\r\n}\r\n\r\n.rotate_text {\r\n  height: 100%;\r\n  word-break: normal;\r\n  writing-mode: vertical-rl;\r\n  -ms-writing-mode: vertical-lr;\r\n  -webkit-transform: rotate(-180deg);\r\n  -moz-transform: rotate(-180deg);\r\n  -o-transform: rotate(-180deg);\r\n  transform: rotate(-180deg);\r\n  padding-bottom: 20px !important;\r\n  padding-top: 20px !important;\r\n}\r\n\r\n.no_enter_value {\r\n  padding: 0px !important;\r\n  min-width: auto !important;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/modules/report/organizitional/components"}]}