{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\reestr-contractors\\modules\\natural\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\reestr-contractors\\modules\\natural\\Index.vue","mtime":1667352074518},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n    <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <div class=\"col-md-12 text-center\">\r\n            <div v-if=\"isNatural\" class=\"h4 mb-4 d-inline-block\">{{ $t('submodules.reestr_contractors.natural_reestr_title') }}</div>\r\n            <div v-else class=\"h4 mb-4 d-inline-block\">{{ $t('submodules.reestr_contractors.dominant_reestr_title') }}</div>\r\n          </div>\r\n            <div class=\"card\">\r\n                <div class=\"card-body\">\r\n                    <div class=\"row mb-2 align-items-center\">\r\n                        <div class=\"col-sm-4\">\r\n                            <!-- REGIONS -->\r\n                            <!-- DISABLED STATE -->\r\n                            <BaseMultiselectWithValidation\r\n                                v-if=\"localMainPageStoredData.isRepublic && $can('republic', 'for reestr')\"\r\n                                not-required\r\n                                disabled\r\n                                :value=\"null\"\r\n                                :options=\"regions.map(e => e.regionId)\"\r\n                                only-form-element\r\n                                :custom-label=\"customLabelRegion\"\r\n                                :placeholder=\"$t('column.region')\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                            <BaseMultiselectWithValidation\r\n                                v-else\r\n                                class=\"required\"\r\n                                rules=\"required\"\r\n                                v-model=\"localMainPageStoredData.regionId\"\r\n                                :options=\"regions.map(e => e.regionId)\"\r\n                                @input=\"regionSelected\"\r\n                                only-form-element\r\n                                :allow-empty=\"false\"\r\n                                :custom-label=\"customLabelRegion\"\r\n                                :placeholder=\"$t('column.region')\"\r\n                                open-direction=\"bottom\"\r\n                                :max-height=\"600\"\r\n                                :show-labels=\"false\"\r\n                            />\r\n                        </div>\r\n                        <!-- IS_REPUBLIC CHECKBOX -->\r\n                        <div\r\n                            v-if=\"$can('republic', 'for reestr')\"\r\n                            class=\"col-sm-2\"\r\n                        >\r\n                            <div class=\"form-check form-check-right\">\r\n                                <input\r\n                                    v-model=\"localMainPageStoredData.isRepublic\"\r\n                                    class=\"form-check-input\"\r\n                                    type=\"checkbox\"\r\n                                    id=\"formCheckIsLegal\"\r\n                                />\r\n                                <label\r\n                                    class=\"form-check-label font-weight-normal\"\r\n                                    for=\"formCheckIsLegal\"\r\n                                >\r\n                                    {{ $t('column.is_republic') }}\r\n                                </label>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div :class=\"$can('republic', 'for reestr') ? 'col-sm-6' : 'col-sm-8'\">\r\n                            <div class=\"text-sm-end\">\r\n                                <b-btn\r\n                                    v-if=\"canAddToReestr\"\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-success btn-rounded mb-2 me-2\"\r\n                                    :to=\"isNatural ? {name: 'CreateNaturalContractorReestr'} : isDominant ? {name: 'CreateDominantContractorReestr'} : '#'\"\r\n                                >\r\n                                    <i class=\"mdi mdi-plus me-1\"></i> {{ $t('actions.add_to_reestr') }}\r\n                                </b-btn>\r\n\r\n                                <b-btn\r\n                                    v-if=\"canRemoveFromReestr\"\r\n                                    type=\"button\"\r\n                                    class=\"btn btn-danger btn-rounded mb-2 me-2\"\r\n                                    :to=\"isNatural ? {name: 'CreateRemoveDocNaturalContractorReestr'} : isDominant ? {name: 'CreateRemoveDocDominantContractorReestr'} : '#'\"\r\n                                >\r\n                                    <i class=\"mdi mdi-delete me-1\"></i> {{ $t('actions.remove_from_reestr') }}\r\n                                </b-btn>\r\n                            </div>\r\n                        </div>\r\n                        <!-- end col-->\r\n                    </div>\r\n                    <!-- Table data -->\r\n                    <b-table\r\n                        :items=\"tableItems\"\r\n                        :fields=\"tableFields\"\r\n                        @row-clicked=\"rowClicked\"\r\n                        :busy=\"loadingTableItems\"\r\n                        id=\"my-table\"\r\n                        class=\"custom-b-table\"\r\n                        responsive\r\n                        striped\r\n                        bordered\r\n                        small\r\n                        hover\r\n                        show-empty\r\n                    >\r\n                        <!-- NUMBER OF ITEM -->\r\n                        <template #cell(index)=\"data\">\r\n                            <strong>{{ data.index + 1 }}</strong>\r\n                        </template>\r\n\r\n                        <!-- STATUS -->\r\n                        <template #cell(product_or_service_type)=\"data\">\r\n                            <strong>{{\r\n                                getName({\r\n                                    nameRu: data.item.typeNameRu,\r\n                                    nameLt: data.item.typeNameLt,\r\n                                    nameUz: data.item.typeNameUz,\r\n                                })\r\n                            }}</strong>\r\n                        </template>\r\n\r\n                        <!-- INNER TABLE FOR REESTR -->\r\n                        <template #row-details=\"row\">\r\n                            <b-table\r\n                                :items=\"row.item.reestr ? row.item.reestr : []\"\r\n                                :fields=\"reestrTableFields\"\r\n                                :busy=\"row.item.loadingInnerData\"\r\n                                bordered\r\n                                small\r\n                                hover\r\n                                show-empty\r\n                                striped\r\n                            >\r\n\r\n                                <!-- NUMBER OF ITEM -->\r\n                                <template #cell(index)=\"innerData\">\r\n                                    {{\r\n                                        innerData.index + 1\r\n                                    }}\r\n                                </template>\r\n\r\n                                <template #cell(contractorFullName)=\"innerData\">\r\n                                    <div class=\"d-flex align-items-center flex-wrap\">\r\n                                        <ul style=\"width: 100%;\">\r\n                                            <li\r\n                                                v-for=\"(el, index) in innerData.item.contractorsByDistrict\"\r\n                                                :key=\"`product-or-service-${index}`\"\r\n                                            >\r\n                                                <router-link\r\n                                                    v-if=\"!el.childCount\"\r\n                                                    :to=\"{name: (isNatural && localMainPageStoredData.isRepublic) ? 'ReestrHistoryForRepublicContractorNatural' : isNatural ? 'ReestrHistoryForContractorNatural' : (isDominant && localMainPageStoredData.isRepublic) ? 'ReestrHistoryForRepublicContractorDominant' : isDominant ? 'ReestrHistoryForContractorDominant' : '#', params: {id: el.contractorId}}\"\r\n                                                    class=\"a-tag-underline-hover\"\r\n                                                >\r\n                                                    <b-row class=\"my-1\">\r\n                                                        <b-col cols=\"8\">\r\n                                                            <strong>{{\r\n                                                                el.contractorFullName\r\n                                                            }} - <i>{{ el.contractorInn }}</i></strong>\r\n                                                        </b-col>\r\n                                                        <b-col\r\n                                                            cols=\"4\"\r\n                                                            v-if=\"el.docStatusCode == 'PENDING'\"\r\n                                                        >\r\n                                                            <b-badge\r\n                                                                style=\"font-size: .7rem\"\r\n                                                                class=\"ml-5 a-tag-underline-hover\"\r\n                                                                :variant=\"el.docStatusCode == 'PENDING' ? 'warning' : el.docStatusCode == 'READY' ? 'success' : ''\"\r\n                                                            >\r\n                                                                {{ \r\n                                                                    getName({\r\n                                                                        nameRu: el.docStatusNameRu,\r\n                                                                        nameLt: el.docStatusNameLt,\r\n                                                                        nameUz: el.docStatusNameUz,\r\n                                                                    })\r\n                                                                }}\r\n                                                            </b-badge>\r\n                                                        </b-col>\r\n                                                    </b-row>\r\n                                                </router-link>\r\n                                                <span\r\n                                                    v-else\r\n                                                    @click=\"parentContractorClicked(el, el.contractorInn, row, innerData.item)\"\r\n                                                    class=\"cursorPointer\"\r\n                                                >\r\n                                                    <strong v-if=\"isDominant\">\r\n                                                        {{ $t('column.group_of_individuals') }}:\r\n                                                    </strong>\r\n                                                    {{\r\n                                                    el.contractorFullName\r\n                                                }} - <i>{{ el.contractorInn }}</i>\r\n                                                    <strong>({{el.childCount}})</strong>\r\n                                                </span>\r\n                                                <div\r\n                                                    v-if=\"el.showChildren\"\r\n                                                    class=\"d-flex align-items-center flex-wrap\"\r\n                                                >\r\n                                                    <ul style=\"width: 100%;\">\r\n                                                        <li\r\n                                                            v-for=\"(el2, index2) in el.children\"\r\n                                                            :key=\"`contractor-children-${index2}`\"\r\n                                                        >\r\n                                                            <router-link\r\n                                                                :to=\"{name: (isNatural && localMainPageStoredData.isRepublic) ? 'ReestrHistoryForRepublicContractorNatural' : isNatural ? 'ReestrHistoryForContractorNatural' : (isDominant && localMainPageStoredData.isRepublic) ? 'ReestrHistoryForRepublicContractorDominant' : isDominant ? 'ReestrHistoryForContractorDominant' : '#', params: {id: el2.id}}\"\r\n                                                                class=\"a-tag-underline-hover\"\r\n                                                            >\r\n                                                                <b-row class=\"my-1\">\r\n                                                                    <b-col cols=\"8\">\r\n                                                                        <strong>{{\r\n                                                                    el2.name\r\n                                                                }} - <i>{{ el2.inn }}</i></strong>\r\n                                                                    </b-col>\r\n                                                                    <b-col\r\n                                                                        cols=\"4\"\r\n                                                                        v-if=\"el2.docStatusCode == 'PENDING'\"\r\n                                                                    >\r\n                                                                        <b-badge\r\n                                                                            class=\"ml-5 a-tag-underline-hover\"\r\n                                                                            style=\"font-size: .7rem\"\r\n                                                                            :variant=\"el2.docStatusCode == 'PENDING' ? 'warning' : el2.docStatusCode == 'READY' ? 'success' : ''\"\r\n                                                                        >\r\n                                                                            {{ \r\n                                                                                getName({\r\n                                                                                    nameRu: el2.docStatusNameRu,\r\n                                                                                    nameLt: el2.docStatusNameLt,\r\n                                                                                    nameUz: el2.docStatusNameUz,\r\n                                                                                })\r\n                                                                            }}\r\n                                                                        </b-badge>\r\n                                                                    </b-col>\r\n                                                                </b-row>\r\n                                                            </router-link>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                                <div\r\n                                                    v-if=\"!localMainPageStoredData.isRepublic\"\r\n                                                    class=\"d-flex align-items-center flex-wrap\"\r\n                                                >\r\n                                                    <ul>\r\n                                                        <li\r\n                                                            v-for=\"(el2, index2) in el.districts\"\r\n                                                            :key=\"`product-or-service-district-${index2}`\"\r\n                                                        >{{\r\n                                                            getName({\r\n                                                            nameRu: el2.districtNameRu,\r\n                                                            nameLt: el2.districtNameLt,\r\n                                                            nameUz: el2.districtNameUz,\r\n                                                            })\r\n                                                        }}</li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </li>\r\n                                        </ul>\r\n                                    </div>\r\n                                </template>\r\n\r\n                                <template #cell(productOrServices)=\"innerData\">\r\n                                    <strong>{{\r\n                                            getName({\r\n                                                nameRu: innerData.item.productOrServiceNameRu,\r\n                                                nameLt: innerData.item.productOrServiceNameLt,\r\n                                                nameUz: innerData.item.productOrServiceNameUz,\r\n                                                })\r\n                                        }}</strong>\r\n                                </template>\r\n\r\n                                <!-- EMPTY SLOT -->\r\n                                <template #empty=\"\">\r\n                                    <h4 class=\"text-center\">{{ $t('messages.data_not_found') }}</h4>\r\n                                </template>\r\n\r\n                                <!-- TABLE_BUSY SLOT -->\r\n                                <template #table-busy>\r\n                                    <div class=\"text-center my-2\">\r\n                                        <b-spinner\r\n                                            variant=\"primary\"\r\n                                            class=\"align-middle\"\r\n                                        ></b-spinner>\r\n                                    </div>\r\n                                </template>\r\n                            </b-table>\r\n                        </template>\r\n\r\n                        <!-- EMPTY SLOT -->\r\n                        <template #empty=\"\">\r\n                            <h4 class=\"text-center\">{{ ((localMainPageStoredData.regionId && !localMainPageStoredData.isRepublic) || localMainPageStoredData.isRepublic) ? $t('messages.data_not_found') : $t('messages.please_select_region') }}</h4>\r\n                        </template>\r\n\r\n                        <!-- TABLE_BUSY SLOT -->\r\n                        <template #table-busy>\r\n                            <div class=\"text-center my-2\">\r\n                                <b-spinner\r\n                                    variant=\"primary\"\r\n                                    class=\"align-middle\"\r\n                                ></b-spinner>\r\n                            </div>\r\n                        </template>\r\n                    </b-table>\r\n                    <!-- end table -->\r\n                </div>\r\n                <!-- end card-body -->\r\n            </div>\r\n            <!-- end card -->\r\n        </div>\r\n        <!-- end col -->\r\n    </div>\r\n    <!-- end row -->\r\n</template>\r\n\r\n<script>\r\nconst MAIN_API_URL = 'reestr/contractor-reestr-documents'\r\nconst APPEND_API_URL_DOMINANT = 'daminiriushiy'\r\nconst APPEND_API_URL_NATURAL = 'estestveniy'\r\nimport crudAndListsService from '@/shared/services/crud_and_list.service'\r\nimport helperService from '@/shared/services/helper.service'\r\nimport { mapMutations, mapState } from 'vuex'\r\n\r\nexport default {\r\n    components: {},\r\n    data () {\r\n        return {\r\n            loadingTableItems: false,\r\n            regions: [],\r\n            tableItems: [],\r\n            tableFields: [\r\n                {\r\n                    label: \"#\",\r\n                    thClass: \"text-center\",\r\n                    tdClass: \"text-center\",\r\n                    sortable: false,\r\n                    key: \"index\",\r\n                },\r\n                { label: this.$t('column.product_or_service_type'), tdClass: \"cursorPointer\", key: \"product_or_service_type\" },\r\n                { label: this.$t('column.product_or_services_count'), key: \"productOrServiceCount\" },\r\n                { label: this.$t('column.contractors_count'), key: \"contractorCount\" },\r\n            ],\r\n            reestrTableFields: [\r\n                {\r\n                    label: \"#\",\r\n                    thClass: \"text-center\",\r\n                    tdClass: \"text-center\",\r\n                    sortable: false,\r\n                    key: \"index\",\r\n                },\r\n                { label: this.$t('submodules.product_or_services.title'), key: \"productOrServices\" },\r\n                { label: this.$t('column.business_entity'), key: \"contractorFullName\" },\r\n            ],\r\n            localMainPageStoredData: {\r\n                regionId: null,\r\n                isRepublic: false,\r\n                openedTypeIds: []\r\n            }\r\n        };\r\n    },\r\n    /*\r\n    COMPUTED */\r\n    computed: {\r\n        ...mapState('reestrContractors', ['mainPageStoredDataForDominant', 'mainPageStoredDataForNatural']),\r\n        computedLocalMainPageStoredData () {\r\n            return JSON.stringify(this.localMainPageStoredData)\r\n        },\r\n        isDominant () {\r\n            return this.$route.name === 'DominantReestrContractors' || this.$route.name === 'DominantReestrContractorsMain'\r\n        },\r\n        isNatural () {\r\n            return this.$route.name === 'NaturalReestrContractors' || this.$route.name === 'NaturalReestrContractorsMain'\r\n        },\r\n        canAddToReestr () {\r\n            if (this.isDominant) {\r\n                return this.$can('create', 'contractor reestr document for acceptance daminiriushiy')\r\n            } else if (this.isNatural) {\r\n                return this.$can('create', 'contractor reestr document for acceptance estestveniy')\r\n            }\r\n            return false\r\n        },\r\n        canRemoveFromReestr () {\r\n            if (this.isDominant) {\r\n                return this.$can('create', 'contractor reestr document for close daminiriushiy')\r\n            } else if (this.isNatural) {\r\n                return this.$can('create', 'contractor reestr document for close estestveniy')\r\n            }\r\n            return false\r\n        }\r\n    },\r\n    methods: {\r\n        ...mapMutations('reestrContractors', ['setMainPageStoredData']),\r\n\r\n        parentContractorClicked (contractor, inn, typeRow, productOrService) {\r\n            this.$set(contractor, 'showChildren', !contractor.showChildren)\r\n            if (contractor.showChildren && (!contractor.children || !(contractor.children ? contractor.children.length : contractor.children))) {\r\n                this.$set(typeRow.item, 'loadingInnerData', true)\r\n                if (inn) {\r\n                    helperService\r\n                        .searchReestrContractorListByParentId(`${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?typeId=${typeRow.item.typeId}&parentContractorId=${contractor.contractorId}&productOrServiceId=${productOrService.productOrServiceId}`)\r\n                        .then((res) => {\r\n                            this.$set(contractor, 'children', res.data)\r\n                        })\r\n                        .catch(e => {\r\n                            this.$set(contractor, 'children', [])\r\n                        })\r\n                        .finally(() => {\r\n                            this.$set(typeRow.item, 'loadingInnerData', false)\r\n                        })\r\n                } else {\r\n                    helperService\r\n                        .searchReestrContractorListByIndividualsGroupId(`${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?typeId=${typeRow.item.typeId}&groupOfIndividualsId=${contractor.contractorId}&productOrServiceId=${productOrService.productOrServiceId}`)\r\n                        .then((res) => {\r\n                            this.$set(contractor, 'children', res.data)\r\n                        })\r\n                        .catch(e => {\r\n                            this.$set(contractor, 'children', [])\r\n                        })\r\n                        .finally(() => {\r\n                            this.$set(typeRow.item, 'loadingInnerData', false)\r\n                        })\r\n                }\r\n            }\r\n        },\r\n        typeOpenCloseHandler (typeId, forClose) {\r\n            let foundIndex = this.localMainPageStoredData.openedTypeIds.findIndex(el => el == typeId)\r\n            if (forClose && foundIndex > -1) {\r\n                this.localMainPageStoredData.openedTypeIds.splice(foundIndex, 1)\r\n            } else if (!forClose && foundIndex < 0) {\r\n                this.localMainPageStoredData.openedTypeIds.push(typeId)\r\n            }\r\n            let savedOpenedTypeIds = JSON.parse(JSON.stringify(this.localMainPageStoredData.openedTypeIds))\r\n            this.localMainPageStoredData.openedTypeIds = []\r\n            this.$set(this.localMainPageStoredData, 'openedTypeIds', savedOpenedTypeIds)\r\n        },\r\n        rowClicked (item, index, e, fromCreated = false) {\r\n            if (!fromCreated) {\r\n                this.typeOpenCloseHandler(item.typeId, item._showDetails)\r\n            }\r\n            this.$set(item, '_showDetails', !item._showDetails)\r\n            this.fetchReestrDocsByTypeId(item.typeId, index)\r\n        },\r\n        fetchReestrDocsByTypeId (typeId, index) {\r\n            this.$set(this.tableItems[index], 'loadingInnerData', true)\r\n            if (this.localMainPageStoredData.isRepublic) {\r\n                helperService\r\n                    .searchReestrListByRepublic(`${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?&typeId=${typeId}`)\r\n                    .then((res) => {\r\n                        this.$set(this.tableItems[index], 'reestr', res.data)\r\n                    })\r\n                    .catch(e => {\r\n                        this.$set(this.tableItems[index], 'reestr', [])\r\n                    })\r\n                    .finally(() => {\r\n                        this.$set(this.tableItems[index], 'loadingInnerData', false)\r\n                    })\r\n            } else {\r\n                crudAndListsService\r\n                    .searchList(MAIN_API_URL, null, `${this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : ''}?regionId=${this.localMainPageStoredData.regionId}&typeId=${typeId}`)\r\n                    .then((res) => {\r\n                        this.$set(this.tableItems[index], 'reestr', res.data)\r\n                    })\r\n                    .catch(e => {\r\n                        this.$set(this.tableItems[index], 'reestr', [])\r\n                    })\r\n                    .finally(() => {\r\n                        this.$set(this.tableItems[index], 'loadingInnerData', false)\r\n                    })\r\n            }\r\n        },\r\n        customLabelRegion (opt) {\r\n            let selected = this.regions.find(e => e.regionId == (opt.regionId ? opt.regionId : opt));\r\n            if (selected) {\r\n                return `${this.getName({\r\n                    nameRu: selected.regionNameRu,\r\n                    nameLt: selected.regionNameLt,\r\n                    nameUz: selected.regionNameUz,\r\n                })\r\n                    }`\r\n            }\r\n            return ``;\r\n        },\r\n        async regionSelected ($event) {\r\n            if ($event) {\r\n                this.fetchTableItems()\r\n            }\r\n        },\r\n        openStoredTypes () {\r\n            this.localMainPageStoredData.openedTypeIds.forEach(typeId => {\r\n                let foundIndex = this.tableItems.findIndex(el => el.typeId == typeId)\r\n                if (foundIndex > -1) {\r\n                    this.rowClicked(this.tableItems[foundIndex], foundIndex, null, true)\r\n                }\r\n            })\r\n        },\r\n        async fetchTableItems () {\r\n            this.loadingTableItems = true\r\n            if (this.localMainPageStoredData.isRepublic) {\r\n                helperService\r\n                    .getReestrByRepublic(this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : '')\r\n                    .then((res) => {\r\n                        this.tableItems = res.data;\r\n                        this.openStoredTypes()\r\n                    })\r\n                    .catch(e => {\r\n                        this.tableItems = [];\r\n                    })\r\n                    .finally(() => {\r\n                        this.loadingTableItems = false\r\n                    })\r\n            } else if (this.localMainPageStoredData.regionId) {\r\n                helperService\r\n                    .getReestrByRegionId(this.localMainPageStoredData.regionId, this.isDominant ? APPEND_API_URL_DOMINANT : this.isNatural ? APPEND_API_URL_NATURAL : '')\r\n                    .then((res) => {\r\n                        this.tableItems = res.data;\r\n                        this.openStoredTypes()\r\n                    })\r\n                    .catch(e => {\r\n                        this.tableItems = [];\r\n                    })\r\n                    .finally(() => {\r\n                        this.loadingTableItems = false\r\n                    })\r\n            } else {\r\n                this.tableItems = [];\r\n                this.loadingTableItems = false\r\n            }\r\n        },\r\n    },\r\n    /* CREATED */\r\n    created () {\r\n        if (this.isDominant) {\r\n            this.localMainPageStoredData = Object.assign({}, this.mainPageStoredDataForDominant)\r\n        } else if (this.isNatural) {\r\n            this.localMainPageStoredData = Object.assign({}, this.mainPageStoredDataForNatural)\r\n        }\r\n        // MAKE IS_REPUBLIC CHECKED\r\n        if (!this.localMainPageStoredData.regionId && this.$can('republic', 'for reestr')) {\r\n            this.localMainPageStoredData.isRepublic = true\r\n        }\r\n\r\n        // GET REGIONS\r\n        helperService.fetchRegionsForContractorReestrByCurrentUserId()\r\n            .then(res => {\r\n                this.regions = res.data\r\n                if (this.localMainPageStoredData.regionId && !this.localMainPageStoredData.isRepublic) {\r\n                    this.fetchTableItems()\r\n                }\r\n            })\r\n            .catch(e => {\r\n                console.log(e)\r\n            })\r\n    },\r\n    /*\r\n    WATCH */\r\n    watch: {\r\n        computedLocalMainPageStoredData: {\r\n            deep: true,\r\n            handler (n, o) {\r\n                let newVal = JSON.parse(n)\r\n                let oldVal = JSON.parse(o)\r\n                this.setMainPageStoredData({ data: newVal, reestrType: this.isDominant ? 'dominant' : this.isNatural ? 'natural' : '' })\r\n                if (newVal.isRepublic != oldVal.isRepublic) {\r\n                    this.fetchTableItems()\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped lang='scss'>\r\n::v-deep .cursorPointer {\r\n    cursor: pointer;\r\n    &:hover {\r\n        strong {\r\n            text-decoration: underline;\r\n        }\r\n        text-decoration: underline;\r\n    }\r\n}\r\n.a-tag-underline-hover {\r\n    &:hover {\r\n        * {\r\n            text-decoration: underline !important;\r\n        }\r\n    }\r\n}\r\n</style>"],"sourceRoot":"src/modules/reestr-contractors/modules/natural"}]}