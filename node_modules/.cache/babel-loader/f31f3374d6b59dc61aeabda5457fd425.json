{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\letter\\letterService.js","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\modules\\letter\\letterService.js","mtime":1675054786271},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\@vue\\cli-plugin-eslint\\node_modules\\eslint-loader\\index.js","mtime":1667355397815}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/ACRU PROJECT/Fair Tech/acru-frontend/src/modules/letter/letterService.js"],"names":["ApiService","projectService","fetchChartDataApplicationsByStatusesForYearForDXA","year","get","giveVisaForDXA","applicationId","params","post","id","comment","sendToCommissionFromDxa","commissionTypeId","SignatureGiveVisaForDXA","data","bodyDate","employeeId","letterId","giveVisaDate","fetchChartDataCurrentApplicationStatusesForDXA","fetchChartDataApplicationsByStatusesForYear","fetchChartDataCurrentApplicationStatuses","listApplicationsByStatus","payload","status","keyword","myPayload","Object","assign","page","listDXA_ApplicationsByStatus","activeDXATab","getListMonitor","search","getRegions","acceptAppilcation","application_id","department_id","acceptSenderRegion","applicationReviewNOT_COMPLETE","obj","ID","getBody","viewPdfByLetterId","saveLetterBody","text","signer","body","removeLetter","delete","removeFile","getAttachedFilesById","projectLettersByLetterId","createAttachedFile","file","formData","FormData","append","getListDocumentType","v","convertToPdfByApi","config","withLoader","getList","getById","setLetterRejtOrAccept","bool","rejectLetterToReject","assignmentId","x","y","currentPage","getIncomeTotalCount","upload","query_data","name","regNumber","date","docSampleId","getListLetter","getListLetterIncome","action","getListLetterVisa","getVisaInfo","getListLetterSend","getByIdLetter","getByIdSendToRais","getRejectLetter","sendDoc","sendQuorum","projectId","put","onlyDocSign","signDecision","onlyDocSignSendToRais","commissionComment","onlyDocSignSendToRaisOnInner","managementEmployeeId","onlyDocSignFORNotBelong","onlyDocSignForToReturn","onlyDocMakeSignedToReject","onlyDocSignFORBeforeProject","makeSignedInvokeLetter","onlyDocSignNotBelong","onlyDocSignForRevision","onlyDocSignForRRejectedByRais","letterCancelled","resultApplicationForDXA","applicationDXAId","paymentAmount","files","forEach","item","formDataFile","resultApplicationForDXARejected","uploadRejectLetter","letterType","letterName","signDoc","makeSignedNewWithHeadOfDepartment","headOfDepartmentId","makeSignedToClosed","signDocToManagement","letterAssignmentId","getReceivers","makeAgree","makeReviewForCommission","makeReviewForCommissionManagement","commissionCompletionDate","makeLetterSendFinishLetterToChairman","makeSignedBeforeCommission","makeReview","makeAgreedLetterToClosed","makeViewedLetterToFinish","makeAgreedLetter","makeSignedFinishLetter","saveRejected","saveQrCode","left","top","handleSendLetterToChairman","letterQRCODE","letterQRCODESendToRais","getDocPdf","convert","html","applicationReviewNoPermitRequired","decisionText","decision_text","applicationReopenProject","returnApplicationByRegion","applicationDxaId","getAllManagementEmployees","uploadFinishLetter","letterGetFinishLetter","letterGetFinishLetterWithSigner","searchList","mainUrl","appendUrl","dxaVisaDataGetFile","changeStatusService","component","grid","selectedFilter","cnf","then","value","projectType","applicationType","returnType","getLettersById","res","length","$toast","$t","type","notPdfDocs","filter","d","fileType","toString","toLowerCase","indexOf","i","convertToPdf","r","uploadPath","endsWith","closeProject","catch","e","console","log","l","convertToPdfLength"],"mappings":"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","sourcesContent":["import ApiService from '@/shared/services/api.service'\r\nimport projectService from '@/shared/services/projectService'\r\n// import {cxonfigure} from 'vee-validate'\r\n\r\nexport default {\r\n  fetchChartDataApplicationsByStatusesForYearForDXA(year) {\r\n    return ApiService.get(`application-dxa/get-data-for-chart-by-month?year=${year}`)\r\n  },\r\n  giveVisaForDXA(applicationId, params) {\r\n    return ApiService.post(`letter/get-visa/${applicationId}?employeeId=${params.id}&comment=${params.comment}`)\r\n  },\r\n  sendToCommissionFromDxa(applicationId, commissionTypeId, comment = '') {\r\n    return ApiService.post(`letter/send-to-commission/from-dxa/${applicationId}/${commissionTypeId}?comment=${comment}`)\r\n  },\r\n  SignatureGiveVisaForDXA(data, bodyDate) {\r\n    return ApiService.post(`letter/approve-visa/${data.applicationId}?employeeId=${data.employeeId}&letterId=${data.letterId}&comment=${bodyDate.comment}&giveVisaDate=${bodyDate.giveVisaDate}`)\r\n  },\r\n  fetchChartDataCurrentApplicationStatusesForDXA() {\r\n    return ApiService.get(`application-dxa/get-data-for-chart`)\r\n  },\r\n  fetchChartDataApplicationsByStatusesForYear(year) {\r\n    return ApiService.get(`before-commission/application/get-data-for-chart-by-month?year=${year}`)\r\n  },\r\n  fetchChartDataCurrentApplicationStatuses() {\r\n    return ApiService.get(`before-commission/application/get-data-for-chart`)\r\n  },\r\n  listApplicationsByStatus: function (payload, status = '', keyword = '') {\r\n    let myPayload = Object.assign({}, payload)\r\n    myPayload.page -= 1\r\n    return ApiService.post(`before-commission/application/list-search-by-application-status?keyword=${keyword}&status=${status ? status : ''}`, myPayload)\r\n  },\r\n  listDXA_ApplicationsByStatus: function (payload, status = '', keyword = '', activeDXATab) {\r\n    let myPayload = Object.assign({}, payload)\r\n    myPayload.page -= 1\r\n    return ApiService.post(`application-dxa/list-search/by-status?keyword=${keyword}&status=${status ? status : ''}&applicationType=${activeDXATab == 'FOR_SALE' ? 'FOR_SALE' : 'FOR_ADD'}`, myPayload)\r\n  },\r\n  getListMonitor({ params, search }, activeDXATab) {\r\n    return ApiService.post(`/application-dxa/list-search/before-register?keyword=${search}&applicationType=${activeDXATab == 'FOR_SALE' ? 'FOR_SALE' : 'FOR_ADD'}`, params)\r\n  },\r\n  getRegions() {\r\n    return ApiService.post(`/department/list-search/yurdep`)\r\n  },\r\n  acceptAppilcation(application_id, department_id) {\r\n    return ApiService.post(`application-dxa/receive?id=${application_id}&department_id=${department_id ? department_id : ''}`)\r\n  },\r\n  acceptSenderRegion(application_id, department_id) {\r\n    return ApiService.post(`application-dxa/receive?id=${application_id}&department_id=${department_id ? department_id : ''}`)\r\n  },\r\n  applicationReviewNOT_COMPLETE(obj, ID) {\r\n    return ApiService.post(`/before-commission/application/application-review/not-completed?id=${ID}`, obj)\r\n  },\r\n  getBody(id) {\r\n    return ApiService.get(`/letter/getBodyById/${id}`)\r\n  },\r\n  viewPdfByLetterId(letterId) {\r\n    return ApiService.get(`/letter/letterView/${letterId}`)\r\n  },\r\n  saveLetterBody(letterId, text, signer) {\r\n    return ApiService.post(`/letter/letterSave?letterId=${letterId}&signerId=${signer ? signer : ''}`, { body: text })\r\n  },\r\n  removeLetter(letterId) {\r\n    return ApiService.delete(`/letter/delete/${letterId}`)\r\n  },\r\n  removeFile(letterId) {\r\n    return ApiService.delete(`/letterAttachedFile/delete/${letterId}`)\r\n  },\r\n  getAttachedFilesById(letterId) {\r\n    return ApiService.get(`/letterAttachedFile/list/${letterId}`)\r\n  },\r\n  projectLettersByLetterId(letterId) {\r\n    return ApiService.post(`letter/project-letters/by-letter-id/${letterId}`)\r\n  },\r\n  createAttachedFile(letterId, file) {\r\n    let formData = new FormData()\r\n    formData.append(\"file\", file)\r\n    return ApiService.formData(`/letterAttachedFile/create/${letterId}`, formData)\r\n  },\r\n  getListDocumentType({ params, search }, v) {\r\n    return ApiService.post(`/docSample/list?search=${search}&code=${v}`, params)\r\n  },\r\n  async convertToPdfByApi(config, withLoader = false) {\r\n    /* try {\r\n        await ApiService.removeHeader()\r\n        // let response = await ApiService.post(fbIp, data);\r\n        // const token = Buffer.from(`m@y(dutyFr##:m@y(dutyFr##P@$Sw0RD)`, 'utf8').toString('base64')\r\n        var requestData = {\r\n            method: 'post',\r\n            url: `http://apivirtual.dataprizma.uz/api/v.1/letter/callback?type=convert`,\r\n            data: config\r\n        };\r\n        let response = await ApiService.customRequest(requestData);\r\n        await ApiService.setHeader()\r\n        return response\r\n    } catch (error) {\r\n        await ApiService.setHeader()\r\n        throw error;\r\n    } */\r\n    return ApiService.post(`/letter/callback?type=convert`, config, withLoader)\r\n  },\r\n  getList({ params, search }) {\r\n    return ApiService.post(`/document/list`, params)\r\n  },\r\n  getById(id) {\r\n    return ApiService.get(`/document/get-by-id/${id}`)\r\n  },\r\n  setLetterRejtOrAccept(id, bool) {\r\n    return ApiService.post(`letter/reject-or-accept/${id}?isRejected=${bool}`)\r\n  },\r\n  rejectLetterToReject(payload, assignmentId, x, y, currentPage, comment) {\r\n    return ApiService.post(`/letter/makeSigned-reject-letter/to-reject/${assignmentId}?comment=${comment}&x=${x}&y=${y}&page=${currentPage}`, payload, true)\r\n  },\r\n  getIncomeTotalCount() {\r\n    return ApiService.get(`/letter/totalCount`)\r\n  },\r\n  upload(data) {\r\n    let query_data = `?fileName=${data.name}&regNumber=${data.regNumber}&date=${data.date}&docSampleId=${data.docSampleId == 'blank' ? '' : data.docSampleId}`\r\n    return ApiService.post(`/letter/letterSave${query_data}`)\r\n  },\r\n  getListLetter({ params, search }) {\r\n    return ApiService.post(`/letter/draftList?search=${search}`, params)\r\n  },\r\n  getListLetterIncome({ params, search }, action) {\r\n    return ApiService.post(`/letter/incomeList?search=${search}&action=${action}`, params)\r\n  },\r\n  getListLetterVisa({ params, search }, action) {\r\n    return ApiService.post(`letter/forVisaList?search=${search}&action=${action}`, params)\r\n  },\r\n  getVisaInfo(applicationId) {\r\n    return ApiService.get(`letter/visa-info/${applicationId}`)\r\n  },\r\n  getListLetterSend({ params, search }) {\r\n    return ApiService.post(`/letter/sendList?search=${search}`, params)\r\n  },\r\n\r\n  getByIdLetter(id) {\r\n    return ApiService.get(`/letter/get-by-id/${id}`)\r\n  },\r\n  getByIdSendToRais(id) {\r\n    return ApiService.get(`/letter/get-by-id/by-application-id/${id}`)\r\n  },\r\n  getRejectLetter(letterId) {\r\n    return ApiService.get(`/letter/get-reject-letter/${letterId}`)\r\n  },\r\n  sendDoc(id, params) {\r\n    return ApiService.post(`/letter/send/${id}`, params)\r\n  },\r\n  sendQuorum(projectId, params) {\r\n    return ApiService.put(`/project/no-quorum/${projectId}?date=${params.date}`, params)\r\n  },\r\n  onlyDocSign(payload, id, x, y, currentPage) {\r\n    return ApiService.post(`/letter/makeSigned/${id}?x=${x}&y=${y}&page=${currentPage}`, payload, true)\r\n  },\r\n  signDecision(payload, id, x, y, currentPage, comment) {\r\n    return ApiService.post(`/letter/makeSigned/decision/${id}?x=${x}&y=${y}&page=${currentPage}&comment=${comment}`, payload, true)\r\n  },\r\n  onlyDocSignSendToRais(payload, id, x, y, currentPage, commissionTypeId, commissionComment) {\r\n    return ApiService.post(`/letter/makeSigned/from-dxa/${id}/${commissionTypeId}?comment=${commissionComment}&x=${x}&y=${y}&page=${currentPage}`, payload, true)\r\n  },\r\n  onlyDocSignSendToRaisOnInner(payload, id, x, y, currentPage, managementEmployeeId, comment) {\r\n    return ApiService.post(`/letter/makeSigned/to-sign/${id}/${managementEmployeeId}?comment=${comment}&x=${x}&y=${y}&page=${currentPage}`, payload, true)\r\n  },\r\n  onlyDocSignFORNotBelong(payload, id, x, y, currentPage) {\r\n    return ApiService.post(`/letter/makeSigned/not-belong/${id}?x=${x}&y=${y}&page=${currentPage}`, payload, true)\r\n  },\r\n  onlyDocSignForToReturn(payload, id, x, y, currentPage) {\r\n    return ApiService.post(`/letter/makeSigned/to-return/${id}?x=${x}&y=${y}&page=${currentPage}`, payload, true)\r\n  },\r\n  onlyDocMakeSignedToReject(payload, assignmentId, employeeId, comment, x, y, currentPage) {\r\n    return ApiService.post(`/letter/makeSigned-compromise-decision/to-reject/${assignmentId}/${employeeId}?x=${x}&y=${y}&page=${currentPage}&comment=${comment}`, payload, true)\r\n  },\r\n  onlyDocSignFORBeforeProject(payload, id, x, y, currentPage) {\r\n    return ApiService.post(`letter/makeSigned/from-dxa/for-confirm/${id}?x=${x}&y=${y}&page=${currentPage}`, payload, true)\r\n  },\r\n  makeSignedInvokeLetter(payload, projectId, letterId, employeeId, comment, x, y, currentPage) {\r\n    return ApiService.post(`letter/makeSigned-invoke-letter/${projectId}/${letterId}/${employeeId}/?x=${x}&y=${y}&page=${currentPage}&comment=${comment}`, payload, true)\r\n  },\r\n  onlyDocSignNotBelong(payload, letterId) {\r\n    return ApiService.post(`before-commission/application/application-review/not-belong?letterId=${letterId}`, payload)\r\n  },\r\n  onlyDocSignForRevision(payload, id, comment) {\r\n    return ApiService.post(`letter/for-revision/from-commission/${id}?comment=${comment}`, payload, true)\r\n  },\r\n  onlyDocSignForRRejectedByRais(payload, letterId, id, comment) {\r\n    return ApiService.post(`letter/for-revision/to-commission/${letterId}/${id}?comment=${comment}`, payload, true)\r\n  },\r\n  letterCancelled(payload, letterId, assignmentId, comment) {\r\n    return ApiService.post(`/letter/cancelled/${letterId}/${assignmentId}?comment=${comment}`, payload, true)\r\n  },\r\n  resultApplicationForDXA(payload, letterId, applicationDXAId, paymentAmount, files = []) {\r\n    const formData = new FormData()\r\n    files.forEach((item) => {\r\n      formData.append(\"paymentFiles\", item.file)\r\n    })\r\n    return ApiService.formDataFile(`/before-commission/application/application-review/accepted?letterId=${letterId}&applicationDXAId=${applicationDXAId}&paymentAmount=${paymentAmount}`, formData)\r\n  },\r\n  resultApplicationForDXARejected(payload, letterId) {\r\n    return ApiService.post(`before-commission/application/application-review/rejected?letterId=${letterId}`, payload)\r\n  },\r\n  uploadRejectLetter(letterId, letterType, letterName = \"Rad etish xati\") {\r\n    return ApiService.put(`/letter/upload-reject-letter/${letterId}?letterType=${letterType}&letterName=${letterName}`, null, true)\r\n  },\r\n  signDoc(payload, id, x, y, currentPage, commissionTypeId, commissionComment) {\r\n    return ApiService.post(`/letter/makeSignedNew/${id}/${commissionTypeId}?comment=${commissionComment}&x=${x}&y=${y}&page=${currentPage}`, payload, true)\r\n  },\r\n  makeSignedNewWithHeadOfDepartment(payload, id, x, y, currentPage, commissionTypeId, commissionComment, headOfDepartmentId) {\r\n    return ApiService.post(`/letter/makeSignedNew/withHeadOfDepartment/${id}/${commissionTypeId}?headOfDepartmentId=${headOfDepartmentId}&comment=${commissionComment}&x=${x}&y=${y}&page=${currentPage}`, payload, true)\r\n  },\r\n  makeSignedToClosed(payload, assignmentId, comment, x, y, currentPage) {\r\n    return ApiService.post(`/letter/makeSigned-to-closed/${assignmentId}?comment=${comment}&x=${x}&y=${y}&page=${currentPage}`, payload, true)\r\n  },\r\n  signDocToManagement(payload, letterAssignmentId, x, y, currentPage, managementEmployeeId, comment) {\r\n    return ApiService.post(`/letter/makeSignedNew/to-management/${letterAssignmentId}/${managementEmployeeId}?comment=${comment}&x=${x}&y=${y}&page=${currentPage}`, payload, true)\r\n  },\r\n  getReceivers(id) {\r\n    return ApiService.get(`/letter/letterInfo/${id}`)\r\n  },\r\n  makeAgree(id) {\r\n    return ApiService.get(`/letter/makeAgreed/${id}`)\r\n  },\r\n  makeReviewForCommission(id, comment) {\r\n    return ApiService.post(`/letter/makeViewedForCommissionProject/${id}?comment=${comment ? comment : ''}`)\r\n  },\r\n  makeReviewForCommissionManagement(letterAssignmentId, commissionTypeId, comment, commissionCompletionDate) {\r\n    return ApiService.post(`/letter/send-to-commission/${letterAssignmentId}/${commissionTypeId}?comment=${comment ? comment : ''}&completionDate=${commissionCompletionDate ? commissionCompletionDate : ''}`)\r\n  },\r\n  makeLetterSendFinishLetterToChairman(applicationId, letterId, comment = '') {\r\n    return ApiService.put(`/letter/send-finish-letter/to-chairman/${applicationId}/${letterId}?comment=${comment}`)\r\n  },\r\n  makeSignedBeforeCommission(payload, letterAssignmentId, comment, x, y, currentPage) {\r\n    return ApiService.post(`/letter/makeSigned/before-commission/${letterAssignmentId}/?x=${x}&y=${y}&page=${currentPage}&comment=${comment}`, payload)\r\n  },\r\n  makeReview(id) {\r\n    return ApiService.get(`/letter/makeViewed/${id}`)\r\n  },\r\n  makeAgreedLetterToClosed(letterAssignmentId) {\r\n    return ApiService.get(`/letter/makeViewed-letter/to-closed/${letterAssignmentId}`)\r\n  },\r\n  makeViewedLetterToFinish(letterAssignmentId) {\r\n    return ApiService.get(`/letter/makeViewed-letter/to-finish/${letterAssignmentId}`)\r\n  },\r\n  makeAgreedLetter(assignmentId) {\r\n    return ApiService.get(`/letter/makeViewed-letter/${assignmentId}`)\r\n  },\r\n  makeSignedFinishLetter(assignmentId, employeeId, comment, payload, x, y, currentPage) {\r\n    return ApiService.post(`/letter/makeSigned-finish-letter/${assignmentId}/${employeeId}?x=${x}&y=${y}&page=${currentPage}&comment=${comment}`, payload)\r\n  },\r\n  saveRejected(letterId, id, comment, payload) {\r\n    return ApiService.post(`/letter/cancelled/${letterId}/${id}?comment=${comment}`, payload)\r\n  },\r\n  saveQrCode(left, top, page) {\r\n    return ApiService.get(`/letter/letterAsPdf?x=${left}&y=${top}&page=${page - 1}`)\r\n  },\r\n  handleSendLetterToChairman(letterId, comment) {\r\n    return ApiService.put(`/letter/send-letter/to-chairman/${letterId}?comment=${comment}`)\r\n  },\r\n  letterQRCODE(letterId) {\r\n    return ApiService.get(`/letter/letterQRCode/${letterId}`)\r\n  },\r\n  letterQRCODESendToRais(letterId) {\r\n    return ApiService.get(`/letter/letterQRCode/from-dxa/${letterId}`)\r\n  },\r\n  getDocPdf(letterId) {\r\n    return ApiService.get(`/letter/convertLetterToPdf/${letterId}`)\r\n  },\r\n  convert(data) {\r\n    return ApiService.post(`/letter/letterConvert`, { html: data })\r\n  },\r\n  applicationReviewNoPermitRequired(applicationId, decisionText) {\r\n    return ApiService.post(`/before-commission/application/application-review/no-permit-required?applicationDXAId=${applicationId}`, {\r\n      decision_text: decisionText\r\n    }, true)\r\n  },\r\n  applicationReopenProject(applicationId) {\r\n    return ApiService.post(`/before-commission/application/reopen-project?applicationId=${applicationId}`, null, true)\r\n  },\r\n  returnApplicationByRegion(applicationDxaId, id) {\r\n    return ApiService.post(`before-commission/application/return-to-central-section?applicationDXAId=${applicationDxaId}&id=${id}`)\r\n  },\r\n  getAllManagementEmployees() {\r\n    return ApiService.get(`employee/get-all-employee/in-management`)\r\n  },\r\n  uploadFinishLetter(applicationId, letterType, letterName) {\r\n    return ApiService.put(`/letter/upload-finish-letter/${applicationId}?letterType=${letterType}&letterName=${letterName}`)\r\n  },\r\n  letterGetFinishLetter(applicationId) {\r\n    return ApiService.get(`letter/get-finish-letter/${applicationId}`)\r\n  },\r\n  letterGetFinishLetterWithSigner(applicationId) {\r\n    return ApiService.get(`letter/get-finish-letter/with-signer/${applicationId}`)\r\n  },\r\n  searchList: function (mainUrl, payload, appendUrl, withLoader = false) {\r\n    let myPayload = Object.assign({}, payload)\r\n    myPayload.page -= 1\r\n    if (appendUrl) {\r\n      return ApiService.post(`${mainUrl}/list-search/${appendUrl}`, payload ? myPayload : payload, withLoader);\r\n    } else {\r\n      return ApiService.post(`${mainUrl}/list-search`, payload ? myPayload : payload, withLoader);\r\n    }\r\n  },\r\n  dxaVisaDataGetFile(applicationId) {\r\n    return ApiService.get(`dxa-visa-data/get-file/${applicationId}`);\r\n  },\r\n\r\n  changeStatusService(component, grid, selectedFilter = null) {\r\n    component.cnf().then((v) => {\r\n      if (v.value) {\r\n        let status = 'REVIEW_FINISHED';\r\n        if (grid.projectType === 'COMMISSION' && grid.applicationType !== \"FROM_DXA\") {\r\n          switch (grid.returnType) {\r\n            case 'FOR_FINISH_WORK':\r\n              projectService.getLettersById(grid.id)\r\n                .then(res => {\r\n                  if (!res.data || res.data.length <= 0) {\r\n                    return component.$toast(component.$t('messages.project_files_not_exist'), { type: 'error' })\r\n                  }\r\n                  let notPdfDocs = res.data.filter(d => d.fileType.toString().toLowerCase() !== 'pdf'\r\n                    && ['DECISION_COMMISSION', 'PROTOCOL_COMMISSION'].indexOf(d.letterType) !== -1);\r\n                  for (let i = 0; i < notPdfDocs.length; i++) {\r\n                    const d = notPdfDocs[i];\r\n                    component.convertToPdf(d).then(r => {\r\n                      if (!r.uploadPath) {\r\n                        component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                      } else if (!r.uploadPath.endsWith('.pdf')) {\r\n                        component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                      } else if (i === notPdfDocs.length - 1) {\r\n                        component.closeProject(grid.id, status, selectedFilter)\r\n                      }\r\n                    })\r\n                      .catch(e => console.log(e))\r\n                  }\r\n                })\r\n                .catch(e => {\r\n                  console.log(e)\r\n                })\r\n              break;\r\n            case 'FOR_SUSPEND_WORK':\r\n              projectService.getLettersById(grid.id)\r\n                .then(res => {\r\n                  if (!res.data || res.data.length <= 0) {\r\n                    return component.$toast(component.$t('messages.project_files_not_exist'), { type: 'error' })\r\n                  }\r\n                  let notPdfDocs = res.data.filter(d => d.fileType.toString().toLowerCase() !== 'pdf'\r\n                    && ['COMPROMISE_DECISION_SUSPEND', 'PROTOCOL_SUSPEND'].indexOf(d.letterType) !== -1);\r\n                  for (let i = 0; i < notPdfDocs.length; i++) {\r\n                    const d = notPdfDocs[i];\r\n                    component.convertToPdf(d).then(r => {\r\n                      if (!r.uploadPath) {\r\n                        component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                      } else if (!r.uploadPath.endsWith('.pdf')) {\r\n                        component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                      } else if (i === notPdfDocs.length - 1) {\r\n                        component.closeProject(grid.id, status, selectedFilter)\r\n                      }\r\n                    })\r\n                      .catch(e => console.log(e))\r\n                  }\r\n                })\r\n                .catch(e => {\r\n                  console.log(e)\r\n                })\r\n              break;\r\n            case 'FOR_DELAY_WORK':\r\n              projectService.getLettersById(grid.id)\r\n                .then(res => {\r\n                  if (!res.data || res.data.length <= 0) {\r\n                    return component.$toast(component.$t('messages.project_files_not_exist'), { type: 'error' })\r\n                  }\r\n                  let notPdfDocs = res.data.filter(d => d.fileType.toString().toLowerCase() !== 'pdf'\r\n                    && ['COMPROMISE_DECISION_DELAY', 'PROTOCOL_DELAY'].indexOf(d.letterType) !== -1);\r\n                  for (let i = 0; i < notPdfDocs.length; i++) {\r\n                    const d = notPdfDocs[i];\r\n                    component.convertToPdf(d).then(r => {\r\n                      if (!r.uploadPath) {\r\n                        component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                      } else if (!r.uploadPath.endsWith('.pdf')) {\r\n                        component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                      } else if (i === notPdfDocs.length - 1) {\r\n                        component.closeProject(grid.id, status, selectedFilter)\r\n                      }\r\n                    })\r\n                      .catch(e => console.log(e))\r\n                  }\r\n                })\r\n                .catch(e => {\r\n                  console.log(e)\r\n                })\r\n              break;\r\n            case 'FOR_RESUME_WORK':\r\n              projectService.getLettersById(grid.id)\r\n                .then(res => {\r\n                  if (!res.data || res.data.length <= 0) {\r\n                    return component.$toast(component.$t('messages.project_files_not_exist'), { type: 'error' })\r\n                  }\r\n                  let notPdfDocs = res.data.filter(d => d.fileType.toString().toLowerCase() !== 'pdf'\r\n                    && ['COMPROMISE_DECISION_RESUME', 'PROTOCOL_RESUME'].indexOf(d.letterType) !== -1);\r\n                  for (let i = 0; i < notPdfDocs.length; i++) {\r\n                    const d = notPdfDocs[i];\r\n                    component.convertToPdf(d).then(r => {\r\n                      if (!r.uploadPath) {\r\n                        component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                      } else if (!r.uploadPath.endsWith('.pdf')) {\r\n                        component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                      } else if (i === notPdfDocs.length - 1) {\r\n                        component.closeProject(grid.id, status, selectedFilter)\r\n                      }\r\n                    })\r\n                      .catch(e => console.log(e))\r\n                  }\r\n                })\r\n                .catch(e => {\r\n                  console.log(e)\r\n                })\r\n              break;\r\n            default:\r\n              component.closeProject(grid.id, status, selectedFilter);\r\n              break;\r\n          }\r\n        } else {\r\n          projectService.getLettersById(grid.id)\r\n            .then(res => {\r\n              if (grid.applicationType === \"NOT_BELONG\") {\r\n                if ((component.projectType === 'BEFORE_COMMISSION' && res.data && res.data.length >= 1) || (component.projectType !== 'BEFORE_COMMISSION' && res.data && res.data.length >= 0)) {\r\n                  if (grid.projectType === 'COMMISSION') {\r\n                    component.closeProject(grid.id, status, selectedFilter)\r\n                  } else {\r\n                    component.closeProject(grid.id, 'FINISHED', selectedFilter)\r\n                  }\r\n                } else {\r\n                  component.$toast(component.$t('messages.project_files_not_exist'), { type: 'error' })\r\n                }\r\n              } else if (grid.applicationType === \"FROM_DXA\") {\r\n                if ((component.projectType === 'BEFORE_COMMISSION' && res.data && res.data.length >= 1) || (component.projectType !== 'BEFORE_COMMISSION' && component.projectType !== 'COMMISSION' && res.data && res.data.length >= 0)) {\r\n                  if (grid.projectType === 'COMMISSION') {\r\n                    component.closeProject(grid.id, status, selectedFilter)\r\n                  } else {\r\n                    component.closeProject(grid.id, status, selectedFilter)\r\n                  }\r\n                } else if (grid.projectType === 'COMMISSION') {\r\n                  let notPdfDocs = res.data.filter(d => d.fileType.toString().toLowerCase() !== 'pdf')\r\n                  for (let i = 0; i < notPdfDocs.length; i++) {\r\n                    const d = notPdfDocs[i];\r\n                    component.convertToPdf(d).then(r => {\r\n                      // CHECK AND RESEND 1ST REQUEST\r\n                      if (!r.uploadPath) {\r\n                        component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                      } else if (!r.uploadPath.endsWith('.pdf')) {\r\n                        component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                      } else if (i == notPdfDocs.length - 1) {\r\n                        component.closeProject(grid.id, status, selectedFilter)\r\n                      }\r\n                    })\r\n                      .catch(e => console.log(e))\r\n                }\r\n                } else {\r\n                  component.$toast(component.$t('messages.project_files_not_exist'), { type: 'error' })\r\n                }\r\n              } else {\r\n                if ((component.projectType === 'BEFORE_COMMISSION' && res.data && res.data.length > 1) || (component.projectType !== 'BEFORE_COMMISSION' && res.data && res.data.length > 0)) {\r\n                  if (grid.projectType === 'COMMISSION') {\r\n                    component.closeProject(grid.id, status, selectedFilter)\r\n                  } else {\r\n                    let notPdfDocs = res.data.filter(d => d.fileType.toString().toLowerCase() !== 'pdf')\r\n                    let convertToPdf = []\r\n                    switch (grid.returnType) {\r\n                      case \"FOR_COMMISSION\":\r\n                        convertToPdf = notPdfDocs.filter(l => l.letterType === 'REFERENCE')\r\n                        break;\r\n                      case \"FOR_NOT_COMPLETED\":\r\n                        convertToPdf = notPdfDocs.filter(l => l.letterType === 'NOTICE_NOT_COMPLETED')\r\n                        status = 'FINISHED'\r\n                        break;\r\n                      case \"FOR_NOT_BELONG\":\r\n                        convertToPdf = notPdfDocs.filter(l => l.letterType === 'NOTICE_NOT_BELONG')\r\n                        status = 'FINISHED'\r\n                        break;\r\n                      case \"FOR_REGION\":\r\n                        convertToPdf = notPdfDocs.filter(l => l.letterType === 'NOTICE_REGION')\r\n                        status = 'FINISHED'\r\n                        break;\r\n                    }\r\n                    let convertToPdfLength = convertToPdf.length;\r\n                    for (let i = 0; i < convertToPdfLength; i++) {\r\n                      const d = convertToPdf[i];\r\n                      component.convertToPdf(d).then(r => {\r\n\r\n                        // CHECK AND RESEND 1ST REQUEST\r\n                        if (!r.uploadPath) {\r\n                          component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                        } else if (!r.uploadPath.endsWith('.pdf')) {\r\n                          component.$toast(component.$t('messages.project_files_convert_pdf_error'), { type: 'error' })\r\n                        } else if (i === convertToPdfLength - 1) {\r\n                          component.closeProject(grid.id, status, selectedFilter)\r\n                        }\r\n                      })\r\n                        .catch(e => console.log(e))\r\n                    }\r\n                  }\r\n                } else {\r\n                  component.$toast(component.$t('messages.project_files_not_exist'), { type: 'error' })\r\n                }\r\n              }\r\n            })\r\n            .catch(e => {\r\n              console.log(e)\r\n            })\r\n        }\r\n      }\r\n    });\r\n  },\r\n}\r\n"]}]}