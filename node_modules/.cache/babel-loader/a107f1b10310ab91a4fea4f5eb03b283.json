{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\report\\collection\\assemble\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\src\\modules\\report\\collection\\assemble\\index.vue","mtime":1674799497847},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\ohirgi\\acru-frontend\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <b-overlay\r\n        :opacity=\"0.2\"\r\n        :show=\"loader\"\r\n    >\r\n      <div class=\"col-md-12 text-center\">\r\n        <div class=\"h4 mb-4 d-inline-block\">{{ $t('submodules.reports.collection_assemble') }}</div>\r\n      </div>\r\n      <div class=\"card\">\r\n        <div class=\"card-body\">\r\n          <div class=\"row mb-2\">\r\n            <div class=\"col-sm-12\">\r\n              <div class=\"row mb-2\">\r\n                <div class=\"col-md-3\">\r\n                  <BaseMultiselectWithValidation\r\n                      rules=\"required\"\r\n                      class=\"required\"\r\n                      onlyFormElement\r\n                      v-model=\"params.docTableId\"\r\n                      :options=\"ownDocTableListOptions.map(e => e.value)\"\r\n                      :label=\"$t('column.value_type')\"\r\n                      label-on-top\r\n                      placeholder=\"\"\r\n                      :custom-label=\"ownDocTablesValue\"\r\n                      open-direction=\"bottom\"\r\n                      :max-height=\"600\"\r\n                      :show-labels=\"false\"\r\n                  />\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                  <b-form-select\r\n                      class=\"border-light form-control rounded\"\r\n                      v-model=\"params.dateTypeId\"\r\n                      :disabled=\"ownDateTypeListOptions.length < 1\"\r\n                      :options=\"ownDateTypeListOptions\"></b-form-select>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                  <div class=\"search-box\">\r\n                    <div class=\"position-relative\">\r\n                      <input\r\n                          type=\"text\"\r\n                          v-model=\"params.name\"\r\n                          class=\"form-control rounded border-light\"\r\n                          :placeholder=\"$t('actions.search')\"\r\n                      />\r\n                      <i class=\"mdi mdi-magnify search-icon\"></i>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                  <b-btn @click=\"handleSearch\">{{ $t('actions.search') }}</b-btn>\r\n                </div>\r\n                <div class=\"col-md-2\">\r\n                  <b-btn variant=\"success\" @click=\"handleCollect()\"\r\n                         :disabled=\"this.selectedDocReports.indexSet.size < 2\">{{ $t('actions.collect') }}\r\n                  </b-btn>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-sm-12\">\r\n              <table class=\"table table-hover table-striped\">\r\n                <thead>\r\n                <tr>\r\n                  <th>{{ '№' }}</th>\r\n                  <th>{{ $t('column.name') }}</th>\r\n                  <th>{{ $t('submodules.reports.report_date') }}</th>\r\n                  <th>{{ $t(\"nameShakl\") }}</th>\r\n                  <th>{{ $t(\"titleShakl\") }}</th>\r\n                  <th>{{ $t(\"dateTypes\") }}</th>\r\n                  <th>{{ $t(\"submodules.reports.yur_department\") }}</th>\r\n                  <th>{{ $t(\"submodules.reports.created_datetime\") }}</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr v-for=\"(item, index) in tableList\"\r\n                    :key=\"index\"\r\n                    class=\"cursor-pointer\"\r\n                    @click=\"selectDocReportItem(index)\"\r\n                    :class=\"{'table-info': item.selected, 'table-info': item.selected}\">\r\n                  <td>{{\r\n                      paginate(index, var_default_search_payload.itemsPerPage, var_default_search_payload.page - 1)\r\n                    }}\r\n                  </td>\r\n                  <td>\r\n                    {{\r\n                      getName({\r\n                        nameUz: item.reportNameUz,\r\n                        nameRu: item.reportNameRu,\r\n                        nameLt: item.reportNameLt,\r\n                      })\r\n                    }}\r\n                  </td>\r\n                  <td>{{ item.reportData }}</td>\r\n                  <td>{{\r\n                      getName({\r\n                        nameUz: item.docTableNameUz,\r\n                        nameRu: item.docTableNameRu,\r\n                        nameLt: item.docTableNameLt,\r\n                      })\r\n                    }}\r\n                  </td>\r\n                  <td>{{\r\n                      getName({\r\n                        nameUz: item.docTableTitleUz,\r\n                        nameRu: item.docTableTitleRu,\r\n                        nameLt: item.docTableTitleLt,\r\n                      })\r\n                    }}\r\n                  </td>\r\n                  <td>{{\r\n                      getName({\r\n                        nameUz: item.dateTypeNameUz,\r\n                        nameRu: item.dateTypeNameRu,\r\n                        nameLt: item.dateTypeNameLt,\r\n                      })\r\n                    }}\r\n                  </td>\r\n                  <td>{{\r\n                      getName({\r\n                        nameUz: item.yurDepNameUz,\r\n                        nameRu: item.yurDepNameRu,\r\n                        nameLt: item.yurDepNameLt,\r\n                      })\r\n                    }}\r\n                  </td>\r\n                  <td>{{ item.createdDate }}</td>\r\n                </tr>\r\n                <tr v-if=\"tableList.length <= 0\" :key=\"-1\">\r\n                  <td colspan=\"8\">\r\n                    <h5 class=\"text-center\">Маълумот топилмади</h5>\r\n                  </td>\r\n                </tr>\r\n                </tbody>\r\n              </table>\r\n              <b-pagination\r\n                  v-if=\"tableListLength > 0\"\r\n                  v-model=\"var_default_search_payload.page\"\r\n                  :total-rows=\"tableListLength\"\r\n                  :per-page=\"var_default_search_payload.itemsPerPage\"\r\n                  aria-controls=\"my-table\"\r\n                  class=\"justify-content-end\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <b-modal id=\"modal\" :title=\"$t('submodules.reports.collection_assemble')\" size=\"xl\">\r\n        <div class=\"row\">\r\n          <div class=\"col-2 my-2\">\r\n            <b-form-select\r\n                class=\"form-control rounded\"\r\n                v-model=\"collectingType\">\r\n              <b-form-select-option\r\n                  v-for=\"(item, index) in collectingTypeList\"\r\n                  :key=\"index\"\r\n                  :value=\"item.value\">\r\n                {{ item.name }}\r\n              </b-form-select-option>\r\n            </b-form-select>\r\n          </div>\r\n          <div class=\"col-1 my-2\">\r\n            <b-btn variant=\"success\" class=\"mx-1\" @click=\"handleCollectedReportDraw\">{{ $t('actions.gather') }}</b-btn>\r\n          </div>\r\n          <div class=\"col-1 my-2\">\r\n            <b-btn variant=\"info\" class=\"mx-1\" @click=\"handleExportExcel\">{{ $t('actions.excel') }}</b-btn>\r\n          </div>\r\n          <div class=\"col-6\"></div>\r\n          <div class=\"col-2 my-2\">\r\n            <b-btn variant=\"success\" block\r\n                   class=\"mx-1\"\r\n                   :disabled=\"!collectedReportForTableReport || collectedReportForTableReport.length <= 0\"\r\n                   @click=\"handleSaveDataOpenModal\">{{ $t('actions.confirm') }}\r\n            </b-btn>\r\n          </div>\r\n          <div class=\"col-2 my-2\" v-if=\"collectingType === 'COLLECT_AVG'\">\r\n            <input type=\"checkbox\" id=\"checkbox\" v-model=\"collectionAvgIgnoreZero\">\r\n            <label for=\"checkbox\">{{ $t('submodules.reports.zero_ignore') }}</label>\r\n          </div>\r\n        </div>\r\n        <table ref=\"collectedReportTable\" class=\"table table-hover table-striped table-custom-bordered\" border=\"1\"\r\n               style=\"border: 1px solid black\">\r\n          <report-header :fields=\"docTableFieldsOriginal\"></report-header>\r\n          <tbody>\r\n          <tr v-for=\"(reportRow, reportRowIndex) in collectedReportForTableReport\" :key=\"reportRowIndex\">\r\n            <td v-for=\"(reportCol, reportColIndex) in reportRow\" :key=\"reportColIndex\">\r\n              <BaseMultiselectWithValidation\r\n                  v-if=\"collectingType !== 'ASSEMBLE' && reportCol.typeCode === 'SELECT'\"\r\n                  v-model=\"collectedReportForTableReport[reportRowIndex][reportColIndex].selectValueId\"\r\n                  :options=\"selectOptionsByReferenceUrl[reportCol.columnId]\"\r\n                  :custom-label=\"labelCollectedSelect\"\r\n                  :label=\"$t('column.employee')\"\r\n                  :only-form-element=\"true\"\r\n                  :internal-search=\"false\"\r\n                  :hide-error-msg=\"false\"\r\n                  :loading=\"selectLoadItemLoader\"\r\n                  :show-labels=\"false\"\r\n                  :filterable=\"false\"\r\n                  :searchable=\"true\"\r\n                  :max-height=\"600\"\r\n                  @search-change=\"(keyword) => selectFetchOptions(reportCol, keyword)\"\r\n                  rules=\"required\"\r\n                  placeholder=\"\"\r\n              ></BaseMultiselectWithValidation>\r\n              {{ printColumn(reportCol, reportColIndex) }}\r\n            </td>\r\n          </tr>\r\n          </tbody>\r\n        </table>\r\n        <template #modal-footer>\r\n          <div>&nbsp;</div>\r\n        </template>\r\n      </b-modal>\r\n      <b-modal id=\"saveDataModal\" :title=\"$t('submodules.reports.collection_assemble')\" size=\"lg\">\r\n        <ValidationObserver ref=\"obServerSaveData\" v-slot=\"{}\">\r\n          <div class=\"row\">\r\n            <div class=\"col-12 my-2\">\r\n              <BaseInputWithValidation\r\n                  rules=\"required\"\r\n                  class=\"required\"\r\n                  @input=\"($event) => (saveData.reportInfoForGather.nameLt = toLatin($event))\"\r\n                  v-model=\"saveData.reportInfoForGather.nameUz\"\r\n                  :label=\"$t('column.name_uz')\"\r\n                  :placeholder=\"$t('column.name_uz')\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12 my-2\">\r\n              <BaseInputWithValidation\r\n                  rules=\"required\"\r\n                  class=\"required\"\r\n                  @input=\"($event) => (saveData.reportInfoForGather.nameUz = toCyrill($event))\"\r\n                  v-model=\"saveData.reportInfoForGather.nameLt\"\r\n                  :label=\"$t('column.name_lt')\"\r\n                  :placeholder=\"$t('column.name_lt')\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12 my-2\">\r\n              <BaseInputWithValidation\r\n                  rules=\"required\"\r\n                  class=\"required\"\r\n                  v-model=\"saveData.reportInfoForGather.nameRu\"\r\n                  :label=\"$t('column.name_ru')\"\r\n                  :placeholder=\"$t('column.name_ru')\"\r\n              />\r\n            </div>\r\n            <div class=\"col-12 my-2\">\r\n              <BaseDatePickerWithValidation\r\n                  rules=\"required\"\r\n                  class=\"required\"\r\n                  v-model=\"saveData.reportInfoForGather.date\"\r\n                  :label=\"$t('column.date')\"\r\n                  :placeholder=\"$t('column.date')\"\r\n                  format=\"DD.MM.YYYY\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </ValidationObserver>\r\n        <template #modal-footer>\r\n          <b-btn variant=\"success\" @click=\"handleSaveData\">\r\n            {{ $t(\"actions.save\") }}\r\n          </b-btn>\r\n        </template>\r\n      </b-modal>\r\n    </b-overlay>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport reportService from \"../../reportService\";\r\nimport reportHeader from \"./reportHeader\";\r\nimport XLSX from \"xlsx\";\r\nimport BaseInputWithValidation from \"@/components/base/BaseInputWithValidation\";\r\nimport BaseDatePickerWithValidation from \"@/components/base/BaseDatePickerWithValidation\";\r\nimport crudAndListsService from \"@/shared/services/crud_and_list.service\";\r\n\r\nexport default {\r\n  components: {\r\n    BaseDatePickerWithValidation,\r\n    BaseInputWithValidation,\r\n    reportHeader\r\n  },\r\n  data() {\r\n    return {\r\n      title: this.$t(\"reportRoles\"),\r\n      loader: true,\r\n      selectLoadItemLoader: null,\r\n      selectLoadItemTimeOut: null,\r\n      params: {\r\n        params: {\r\n          limit: 20,\r\n          page: 0,\r\n        },\r\n        search: \"\",\r\n        docTableId: \"\",\r\n        dateTypeId: \"\",\r\n      },\r\n      tableListParams: {\r\n        itemsPerPage: 20,\r\n        page: 0,\r\n      },\r\n      tableList: [],\r\n      tableListLength: 0,\r\n      docTableFieldsOriginal: [],\r\n      docTableFieldsSerialized: [],\r\n      ownDocTableList: [],\r\n      dateTypeList: [],\r\n      dateTypeListPayload: {\r\n        page: 0,\r\n        itemsPerPage: 100\r\n      },\r\n      selectOptionsByReferenceUrl: {},\r\n      selectedDocReports: {\r\n        indexSet: new Set(),\r\n        docTableId: false,\r\n        docTable: null,\r\n        docReports: {},\r\n      },\r\n      collectedReportForTableReport: [],\r\n      collectingType: 'ASSEMBLE',\r\n      collectionAvgIgnoreZero: false,\r\n      collectingGroupColumnId: null,\r\n      collectingTypeList: [\r\n        {\r\n          value: \"ASSEMBLE\",\r\n          name: \"Yig'ish\",\r\n        },\r\n        {\r\n          value: \"COLLECT_SUM\",\r\n          name: \"Yig'indini yig'ish (SUM)\",\r\n        },\r\n        {\r\n          value: \"COLLECT_AVG\",\r\n          name: \"O'rtacha qiymat yig'ish (AVG)\",\r\n        },\r\n      ],\r\n      saveData: {\r\n        reportInfoForGather: {\r\n          nameUz: '',\r\n          nameLt: '',\r\n          nameRu: '',\r\n          date: '',\r\n        }\r\n      }\r\n    };\r\n  },\r\n  async created() {\r\n    await this.getOwnDocTableList();\r\n    this.loader = false;\r\n  },\r\n  methods: {\r\n    getOwnDocTableList() {\r\n      reportService.getOwnTable(this.params).then(response => {\r\n        if (response.data.list.length > 0) {\r\n          this.ownDocTableList = response.data.list;\r\n        }\r\n      });\r\n    },\r\n    getDateTypeList(dateTypeId) {\r\n      reportService.getListByParentId(dateTypeId, this.dateTypeListPayload).then(response => {\r\n        if (response.data.list.length > 0) {\r\n          this.dateTypeList = response.data.list;\r\n        }\r\n      })\r\n          .finally(() => {\r\n            this.loader = false;\r\n          });\r\n    },\r\n    async handleSearch(clearSelected = true) {\r\n      if (clearSelected) {\r\n        this.selectedDocReports.docTableId = false;\r\n        this.selectedDocReports.indexSet = new Set();\r\n      }\r\n      await this.getTableList();\r\n    },\r\n    handleValidateForCollecting() {\r\n      if (!this.selectedDocReports.docTableId || this.selectedDocReports.indexSet.size < 2) {\r\n        this.$toast(this.$t(\"submodules.reports.select_minimum_two_report\"), {type: \"warning\"})\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    async handleCollect() {\r\n      this.loader = true;\r\n      this.collectedReportForTableReport = [];\r\n      this.docTableFieldsOriginal = [];\r\n      this.docTableFieldsSerialized = [];\r\n      if (!this.handleValidateForCollecting()) {\r\n        this.loader = false;\r\n        return;\r\n      }\r\n      await reportService.getByIdTable(this.selectedDocReports.docTableId).then(async response => {\r\n        if (response.data.columns.length > 0) {\r\n          this.docTableFieldsOriginal = response.data.columns;\r\n          this.deserializeDocTableFields(this.docTableFieldsOriginal);\r\n          this.selectedDocReports.docTable = response.data.table;\r\n        }\r\n        this.$bvModal.show('modal')\r\n        await this.handleCollectView();\r\n        this.loader = false;\r\n      }).catch(() => {\r\n        this.loader = false;\r\n      });\r\n    },\r\n    deserializeDocTableFields(list, clear = true) {\r\n      if (clear) {\r\n        this.docTableFieldsSerialized = [];\r\n      }\r\n      list.forEach(e => {\r\n        if (e.children.length > 0) {\r\n          this.deserializeDocTableFields(e.children, false);\r\n        } else {\r\n          this.docTableFieldsSerialized.push(e)\r\n          if (e.typeCode === 'SELECT') {\r\n            this.selectOptionsByReferenceUrl[e.id] = [];\r\n          }\r\n        }\r\n      })\r\n    },\r\n    async handleCollectView() {\r\n      if (!this.handleValidateForCollecting()) {\r\n        return;\r\n      }\r\n      this.loader = true;\r\n      this.selectedDocReports.docReports = {};\r\n      await this.selectedDocReports.indexSet.forEach((docReportId) => {\r\n        this.selectedDocReports.docReports[docReportId] = {}\r\n        reportService.getReportById(docReportId).then(response => {\r\n          if (response.data) {\r\n            response.data.map(value => {\r\n              if (this.selectedDocReports.docReports[docReportId][value.rowId] === undefined) {\r\n                this.selectedDocReports.docReports[docReportId][value.rowId] = {};\r\n              }\r\n              this.selectedDocReports.docReports[docReportId][value.rowId][value.columnId] = value;\r\n            });\r\n          }\r\n        });\r\n      })\r\n    },\r\n    handleCollectedReportDraw() {\r\n      this.collectedReportForTableReport = [];\r\n      switch (this.collectingType) {\r\n        case 'ASSEMBLE':\r\n          this.handleCollectedReportDrawAssemble();\r\n          break;\r\n        case 'COLLECT_SUM':\r\n          this.handleCollectedReportDrawCollectSum();\r\n          break;\r\n        case 'COLLECT_AVG':\r\n          this.handleCollectedReportDrawCollectAvg();\r\n          break;\r\n      }\r\n    },\r\n    handleCollectedReportDrawAssemble() {\r\n      let sequence = 1;\r\n      this.selectedDocReports.indexSet.forEach((value) => {\r\n        const reports = this.selectedDocReports.docReports[value];\r\n        for (const reportRowIndex in reports) {\r\n          const reportRow = reports[reportRowIndex];\r\n          let reportRowData = JSON.parse('[]');\r\n          this.docTableFieldsSerialized.forEach(field => {\r\n            if (reportRow[field.id] !== undefined) {\r\n              reportRowData.push(reportRow[field.id]);\r\n            } else {\r\n              if (field.typeCode === 'SEQUENCE') {\r\n                reportRowData.push({\r\n                  value: sequence,\r\n                  typeCode: field.typeCode,\r\n                });\r\n                sequence++;\r\n              } else {\r\n                reportRowData.push({});\r\n              }\r\n            }\r\n          })\r\n          this.collectedReportForTableReport.push(reportRowData);\r\n        }\r\n      })\r\n    },\r\n    handleCollectedReportDrawCollectSum() {\r\n      let sequence = 1;\r\n      this.selectedDocReports.indexSet.forEach((docReportId) => {\r\n        let reportData = [];\r\n        let sumBigIntegerCount = {};\r\n        const reports = this.selectedDocReports.docReports[docReportId];\r\n        for (const reportRowIndex in reports) {\r\n          const report = reports[reportRowIndex];\r\n          this.docTableFieldsSerialized.forEach((docTableField, docTableFieldIndex) => {\r\n            const reportRowField = report[docTableField.id];\r\n            if (docTableField.typeCode === 'SEQUENCE' && typeof reportData[docTableFieldIndex] === 'undefined') {\r\n              reportData[docTableFieldIndex] = {\r\n                value: sequence,\r\n                typeCode: \"SEQUENCE\"\r\n              }\r\n            }\r\n            reportData[docTableFieldIndex] = reportRowField && !reportData[docTableFieldIndex]?.id ? JSON.parse(JSON.stringify(reportRowField)) : (reportData[docTableFieldIndex] || {});\r\n            if (docTableField.typeCode === 'BIGDECIMAL') {\r\n              const valueBigDecimal = reportRowField?.valueBigDecimal ?? 0;\r\n              if (typeof sumBigIntegerCount[docTableField.id] === 'undefined') {\r\n                sumBigIntegerCount[docTableField.id] = 0;\r\n              }\r\n              if (typeof reportData[docTableFieldIndex].valueBigDecimal === 'undefined' || reportData[docTableFieldIndex].valueBigDecimal === null || reportData[docTableFieldIndex].valueBigDecimal === '') {\r\n                reportData[docTableFieldIndex].valueBigDecimal = 0;\r\n              }\r\n              if (valueBigDecimal && (valueBigDecimal > 0 || valueBigDecimal < 0)) {\r\n                sumBigIntegerCount[docTableField.id]++;\r\n              }\r\n              if (valueBigDecimal && reportRowField?.id !== reportData[docTableFieldIndex]?.id) {\r\n                reportData[docTableFieldIndex].valueBigDecimal += valueBigDecimal;\r\n                reportData[docTableFieldIndex].value = reportData[docTableFieldIndex].valueBigDecimal?.toString();\r\n              }\r\n            } else if (docTableField.typeCode === 'STRING' || docTableField.typeCode === 'DATE' || docTableField.typeCode === 'YEAR' || docTableField.typeCode === 'BOOLEAN') {\r\n              reportData[docTableFieldIndex].value += \", \" + (reportRowField.value ?? '');\r\n              reportData[docTableFieldIndex].valueDate += \", \" + (reportRowField.valueDate ?? '');\r\n              reportData[docTableFieldIndex].valueString += \", \" + (reportRowField.valueString ?? '');\r\n              reportData[docTableFieldIndex].valueBoolean += \", \" + (reportRowField.valueBoolean ?? '');\r\n            } else if (docTableField.typeCode === 'SELECT') {\r\n              if (!reportData[docTableFieldIndex]) {\r\n                reportData[docTableFieldIndex] = JSON.parse(JSON.stringify(reportRowField));\r\n              }\r\n              reportData[docTableFieldIndex].id = reportRowField.id;\r\n              reportData[docTableFieldIndex].rowId = reportRowField.rowId;\r\n              // reportData[docTableFieldIndex].typeCode = 'STRING';\r\n              reportData[docTableFieldIndex].columnId = reportRowField.columnId;\r\n              reportData[docTableFieldIndex].docReportId = reportRowField.docReportId;\r\n              reportData[docTableFieldIndex].selectValueId = null;\r\n              if (reportData[docTableFieldIndex]?.valueString?.indexOf(reportRowField.selectValueNameUz) === -1) {\r\n                if (reportRowField?.selectValueNameUz) {\r\n                  reportData[docTableFieldIndex].valueString += (reportRowField?.selectValueNameUz ?? '') + \", \";\r\n                  reportData[docTableFieldIndex].value += (reportRowField?.selectValueNameUz ?? '') + \", \";\r\n                  reportData[docTableFieldIndex].selectValueNameUz += (reportRowField?.selectValueNameUz ?? '') + \", \";\r\n                }\r\n                if (reportRowField?.selectValueNameEn) {\r\n                  reportData[docTableFieldIndex].selectValueNameEn += (reportRowField?.selectValueNameEn ?? '') + \", \";\r\n                }\r\n                if (reportRowField?.selectValueNameLt) {\r\n                  reportData[docTableFieldIndex].selectValueNameLt += (reportRowField?.selectValueNameLt ?? '') + \", \";\r\n                }\r\n                if (reportRowField?.selectValueNameRu) {\r\n                  reportData[docTableFieldIndex].selectValueNameRu += (reportRowField?.selectValueNameRu ?? '') + \", \";\r\n                }\r\n              } else if (reportData[docTableFieldIndex]?.valueString === null) {\r\n                reportData[docTableFieldIndex].valueString = '';\r\n              }\r\n            }\r\n          })\r\n        }\r\n        this.collectedReportForTableReport.push(reportData);\r\n        sequence++;\r\n      })\r\n    },\r\n    handleCollectedReportDrawCollectAvg() {\r\n      let sequence = 1;\r\n      this.selectedDocReports.indexSet.forEach((docReportId) => {\r\n        let reportData = [];\r\n        let sumBigIntegerCount = {};\r\n        const reports = this.selectedDocReports.docReports[docReportId];\r\n        for (const reportRowIndex in reports) {\r\n          const report = reports[reportRowIndex];\r\n          this.docTableFieldsSerialized.forEach((docTableField, docTableFieldIndex) => {\r\n            const reportRowField = report[docTableField.id];\r\n            if (docTableField.typeCode === 'SEQUENCE' && typeof reportData[docTableFieldIndex] === 'undefined') {\r\n              reportData[docTableFieldIndex] = {\r\n                value: sequence,\r\n                typeCode: \"SEQUENCE\"\r\n              }\r\n            }\r\n            reportData[docTableFieldIndex] = reportRowField && !reportData[docTableFieldIndex]?.id ? JSON.parse(JSON.stringify(reportRowField)) : (reportData[docTableFieldIndex] || {});\r\n            if (docTableField.typeCode === 'BIGDECIMAL') {\r\n              const valueBigDecimal = reportRowField?.valueBigDecimal ?? 0;\r\n              if (typeof sumBigIntegerCount[docTableField.id] === 'undefined') {\r\n                sumBigIntegerCount[docTableField.id] = 0;\r\n              }\r\n              if (typeof reportData[docTableFieldIndex].valueBigDecimal === 'undefined' || reportData[docTableFieldIndex].valueBigDecimal === null || reportData[docTableFieldIndex].valueBigDecimal === '') {\r\n                reportData[docTableFieldIndex].valueBigDecimal = 0;\r\n              }\r\n              if (this.collectionAvgIgnoreZero) {\r\n                if (valueBigDecimal && (valueBigDecimal > 0 || valueBigDecimal < 0)) {\r\n                  sumBigIntegerCount[docTableField.id]++;\r\n                }\r\n              } else {\r\n                sumBigIntegerCount[docTableField.id]++;\r\n              }\r\n              if (valueBigDecimal && reportRowField?.id !== reportData[docTableFieldIndex]?.id) {\r\n                reportData[docTableFieldIndex].valueBigDecimal += valueBigDecimal;\r\n                reportData[docTableFieldIndex].value = reportData[docTableFieldIndex].valueBigDecimal?.toString();\r\n              }\r\n            } else if (docTableField.typeCode === 'STRING' || docTableField.typeCode === 'DATE' || docTableField.typeCode === 'YEAR' || docTableField.typeCode === 'BOOLEAN') {\r\n              reportData[docTableFieldIndex].value += \", \" + (reportRowField.value ?? '');\r\n              reportData[docTableFieldIndex].valueDate += \", \" + (reportRowField.valueDate ?? '');\r\n              reportData[docTableFieldIndex].valueString += \", \" + (reportRowField.valueString ?? '');\r\n              reportData[docTableFieldIndex].valueBoolean += \", \" + (reportRowField.valueBoolean ?? '');\r\n            } else if (docTableField.typeCode === 'SELECT') {\r\n              if (!reportData[docTableFieldIndex]) {\r\n                reportData[docTableFieldIndex] = JSON.parse(JSON.stringify(reportRowField));\r\n              }\r\n              reportData[docTableFieldIndex].id = reportRowField.id;\r\n              reportData[docTableFieldIndex].rowId = reportRowField.rowId;\r\n              // reportData[docTableFieldIndex].typeCode = 'STRING';\r\n              reportData[docTableFieldIndex].columnId = reportRowField.columnId;\r\n              reportData[docTableFieldIndex].docReportId = reportRowField.docReportId;\r\n              if (reportData[docTableFieldIndex]?.valueString?.indexOf(reportRowField.selectValueNameUz) === -1) {\r\n                if (reportRowField?.selectValueNameUz) {\r\n                  reportData[docTableFieldIndex].value += (reportRowField?.selectValueNameUz ?? '') + \", \";\r\n                  reportData[docTableFieldIndex].valueString += (reportRowField?.selectValueNameUz ?? '') + \", \";\r\n                  reportData[docTableFieldIndex].selectValueNameUz += (reportRowField?.selectValueNameUz ?? '') + \", \";\r\n                }\r\n                if (reportRowField?.selectValueNameEn) {\r\n                  reportData[docTableFieldIndex].selectValueNameEn += (reportRowField?.selectValueNameEn ?? '') + \", \";\r\n                }\r\n                if (reportRowField?.selectValueNameLt) {\r\n                  reportData[docTableFieldIndex].selectValueNameLt += (reportRowField?.selectValueNameLt ?? '') + \", \";\r\n                }\r\n                if (reportRowField?.selectValueNameRu) {\r\n                  reportData[docTableFieldIndex].selectValueNameRu += (reportRowField?.selectValueNameRu ?? '') + \", \";\r\n                }\r\n              } else if (reportData[docTableFieldIndex]?.valueString === null) {\r\n                reportData[docTableFieldIndex].valueString = '';\r\n                reportData[docTableFieldIndex].value = '';\r\n              }\r\n            }\r\n          })\r\n        }\r\n        for (const i in reportData) {\r\n          const count = sumBigIntegerCount[reportData[i].columnId];\r\n          if (reportData[i].typeCode === 'BIGDECIMAL' && count > 0) {\r\n            reportData[i].valueBigDecimal /= count;\r\n          }\r\n          reportData[i].selectValueNameEn = reportData[i].selectValueNameEn ? reportData[i].selectValueNameEn.trim().slice(0, -1) : '';\r\n          reportData[i].selectValueNameLt = reportData[i].selectValueNameLt ? reportData[i].selectValueNameLt.trim().slice(0, -1) : '';\r\n          reportData[i].selectValueNameRu = reportData[i].selectValueNameRu ? reportData[i].selectValueNameRu.trim().slice(0, -1) : '';\r\n          reportData[i].selectValueNameUz = reportData[i].selectValueNameUz ? reportData[i].selectValueNameUz.trim().slice(0, -1) : '';\r\n        }\r\n        this.collectedReportForTableReport.push(reportData);\r\n        sequence++;\r\n      })\r\n    },\r\n    selectDocReportItem(index) {\r\n      const item = this.tableList[index];\r\n      if (this.selectedDocReports.docTableId === false) {\r\n        this.selectedDocReports.docTableId = item.docTableId;\r\n      }\r\n      if (this.selectedDocReports.indexSet.has(item.reportId)) {\r\n        if (this.selectedDocReports.docTableId === item.docTableId) {\r\n          this.selectedDocReports.indexSet.delete(item.reportId);\r\n          this.tableList[index].selected = false;\r\n        }\r\n      } else {\r\n        if (this.selectedDocReports.docTableId === item.docTableId) {\r\n          this.selectedDocReports.indexSet.add(item.reportId);\r\n          this.tableList[index].selected = true;\r\n        }\r\n      }\r\n      if (this.selectedDocReports.indexSet.size === 0) {\r\n        this.selectedDocReports.docTableId = false;\r\n      }\r\n    },\r\n    printColumn(column, index) {\r\n      switch (column.typeCode) {\r\n        case 'SEQUENCE':\r\n          return column?.value ?? index + 1;\r\n        case 'STRING':\r\n          return column?.valueString ?? column?.value ?? '';\r\n        case 'BIGDECIMAL':\r\n          // eslint-disable-next-line no-case-declarations\r\n          let v = column?.valueBigDecimal ?? 0;\r\n          v = v.toFixed(2);\r\n          if (!isNaN(v)) {\r\n            return v;\r\n          }\r\n          return '';\r\n        case 'BOOLEAN':\r\n          return column?.valueBoolean ? this.$t('actions.yes') : this.$t('actions.no');\r\n        case 'DATE':\r\n          return column?.valueDate ?? '';\r\n        case 'YEAR':\r\n          return column?.valueString ?? '';\r\n        case 'SELECT':\r\n          return this.getName({\r\n            nameUz: column?.selectValueNameUz,\r\n            nameRu: column?.selectValueNameRu,\r\n            nameLt: column?.selectValueNameLt,\r\n          }).trim(' ,');\r\n        default:\r\n          return '';\r\n      }\r\n    },\r\n    async getTableList() {\r\n      if (this.params.docTableId && this.params.dateTypeId) {\r\n        this.tableListLength = 0;\r\n        this.tableListLength = 0;\r\n        this.tableList = [];\r\n        this.loader = true\r\n        await reportService.reportListForCollection(this.params.docTableId, this.params.dateTypeId, {...this.var_default_search_payload}).then(response => {\r\n          if (response.data.list.length > 0) {\r\n            this.tableListLength = response.data.total;\r\n            this.tableList = response.data.list.map((item) => {\r\n              return {...item, selected: this.selectedDocReports.indexSet.has(item.reportId)};\r\n            });\r\n          } else {\r\n            this.tableListLength = 0;\r\n            this.tableList = [];\r\n          }\r\n        }).finally(() => {\r\n          this.loader = false;\r\n        });\r\n      }\r\n    },\r\n    handleExportExcel() {\r\n      let currentDate = new Date();\r\n      let dateDMY = currentDate.getDate() + '-' + (currentDate.getMonth() + 1) + '-' + currentDate.getFullYear();\r\n      let fileName = this.getName(this.selectedDocReports.docTable) + dateDMY;\r\n      let table = this.$refs.collectedReportTable;\r\n      table.setAttribute('border', '1');\r\n      table.style.border = '1px solid black';\r\n      table.children?.forEach(theadOrTbody => {\r\n        theadOrTbody.children.forEach(tr => {\r\n          tr.children.forEach(thOrTd => {\r\n            thOrTd.width = thOrTd.offsetWidth + 'px';\r\n            thOrTd.style.width = thOrTd.offsetWidth + 'px';\r\n          })\r\n        })\r\n      })\r\n      let wb = XLSX.utils.table_to_book(table, {sheet: \"sheet1\"});\r\n      setTimeout(() => { // todo nega bu kerakligini tekshirish kerak, copy olib qoyganman\r\n        this.loaderExcel = false;\r\n      }, 500);\r\n      return XLSX.writeFile(wb, `${fileName}.xlsx`, {});\r\n    },\r\n    handleSaveDataOpenModal() {\r\n      this.$bvModal.show('saveDataModal')\r\n    },\r\n    handleSaveData(e) {\r\n      this.computedObServerSaveData.validate().then(isValid => {\r\n        if (!isValid) {\r\n          return false;\r\n        }\r\n        this.loader = true\r\n        let data = [];\r\n        for (const key in this.collectedReportForTableReport) {\r\n          for (const val of this.collectedReportForTableReport[key]) {\r\n            if (!val.typeCode || val.typeCode === 'SEQUENCE' || !val.columnId || !val.docReportId) {\r\n              continue;\r\n            }\r\n            if (val.typeCode === 'SELECT' && typeof val.selectValueId === 'object') {\r\n              const selectValue = val.selectValueId;\r\n              data.push({\r\n                ...val,\r\n                dynamicRowId: key + 1,\r\n                selectValueId: selectValue?.id,\r\n                value: null,\r\n                valueString: null,\r\n                selectValueNameUz: selectValue?.nameUz ?? selectValue?.name ?? '',\r\n                selectValueNameRu: selectValue?.nameRu ?? selectValue?.name ?? '',\r\n                selectValueNameLt: selectValue?.nameLt ?? selectValue?.name ?? '',\r\n                selectValueNameEn: selectValue?.nameEn ?? selectValue?.name ?? '',\r\n                rowId: null\r\n              })\r\n              continue;\r\n            }\r\n            data.push({\r\n              ...val,\r\n              dynamicRowId: key + 1,\r\n              rowId: null\r\n            })\r\n          }\r\n        }\r\n        const info = {\r\n          ...this.saveData.reportInfoForGather,\r\n          tableId: this.params.docTableId,\r\n          dateTypeId: this.params.dateTypeId,\r\n          gatherType: this.collectingType,\r\n        }\r\n        reportService.createAndFillGatherReport(info, data)\r\n            .then((res) => {\r\n              this.$toast(this.$t('messages.saved_successfully'), {type: 'success'});\r\n            })\r\n            .finally(() => {\r\n              this.loader = false\r\n              this.$bvModal.hide('saveDataModal')\r\n            })\r\n      })\r\n    },\r\n    ownDocTablesValue(opt) {\r\n      let item = this.ownDocTableListOptions.find(e => e.value === opt);\r\n      return item.text ?? ''\r\n    },\r\n    labelCollectedSelect({nameUz, nameLt, nameRu, name}) {\r\n      return nameUz ? this.getName({nameUz: nameUz, nameLt: nameLt, nameRu: nameRu}) : name\r\n    },\r\n    findFieldById(id) {\r\n      return this.docTableFieldsSerialized.find(e => e.id === id);\r\n    },\r\n    async selectFetchOptions(column, keyword) {\r\n      clearTimeout(this.selectLoadItemTimeOut);\r\n      this.selectLoadItemTimeOut = setTimeout(async () => {\r\n        this.selectLoadItemLoader = true;\r\n        const field = this.findFieldById(column.columnId);\r\n        crudAndListsService.searchListWithKeyword(field.referenceUrl, {\r\n          keyword: keyword,\r\n          itemsPerPage: 10,\r\n          page: 1\r\n        }, field.referenceAppendUrl)\r\n            .then(res => {\r\n              if (\"DepartmentForDocument\" === field.refCode) {\r\n                this.selectOptionsByReferenceUrl[field.id] = res.data\r\n              } else {\r\n                this.selectOptionsByReferenceUrl[field.id] = res.data.list\r\n              }\r\n            })\r\n            .catch(err => {\r\n              this.selectLoadItemLoader = false;\r\n            })\r\n            .finally(() => {\r\n              this.selectLoadItemLoader = false;\r\n            })\r\n      }, 500);\r\n    },\r\n  },\r\n  computed: {\r\n    ownDocTableListOptions() {\r\n      if (this.ownDocTableList.length > 0) {\r\n        return this.ownDocTableList.map(item => {\r\n          return {\r\n            text: this.getName({\r\n              nameUz: item.nameUz,\r\n              nameRu: item.nameRu,\r\n              nameLt: item.nameLt,\r\n            }),\r\n            value: item.id,\r\n          };\r\n        });\r\n      }\r\n      return [];\r\n    },\r\n    ownDateTypeListOptions() {\r\n      if (this.dateTypeList.length > 0) {\r\n        return this.dateTypeList.map(item => {\r\n          return {\r\n            text: this.getName({\r\n              nameUz: item.nameUz,\r\n              nameRu: item.nameRu,\r\n              nameLt: item.nameLt,\r\n            }),\r\n            value: item.id,\r\n          };\r\n        });\r\n      }\r\n      return [];\r\n    },\r\n    computedObServerSaveData() {\r\n      return this.$refs.obServerSaveData\r\n    }\r\n  },\r\n  watch: {\r\n    async 'params.docTableId'(docTableId) {\r\n      const {dateTypeId} = this.ownDocTableList.find(e => e.id === docTableId);\r\n      if (dateTypeId) {\r\n        this.loader = true\r\n        await this.getDateTypeList(dateTypeId)\r\n      } else {\r\n        this.dateTypeList = [];\r\n      }\r\n    },\r\n    'var_default_search_payload.page'() {\r\n      if (this.loader) {\r\n        return;\r\n      }\r\n      this.handleSearch(false);\r\n    },\r\n  }\r\n};\r\n</script>\r\n"],"sourceRoot":"src/modules/report/collection/assemble"}]}