{"remainingRequest":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\views\\auth\\components\\ESigns.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\src\\shared\\views\\auth\\components\\ESigns.vue","mtime":1675054786293},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\babel.config.js","mtime":1667352074157},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1667355379758},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1667355378280},{"path":"C:\\ACRU PROJECT\\Fair Tech\\acru-frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1667355356562}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ESigns.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <b-card class=\"e-signs-wrapper-card\">\r\n      <b-card-title>\r\n        <b-row>\r\n          <b-col md=\"4\" sm=\"12\">\r\n            <h4>{{ $t('auth.e_signatures') }}</h4>\r\n          </b-col>\r\n          <b-col md=\"5\" sm=\"12\">\r\n            <b-form-input v-model=\"SearchText\"\r\n                          size=\"sm\"\r\n                          :placeholder=\"$t('auth.e_sign_search')\"\r\n                          @input=\"debounceSearch\">\r\n              <template #append-content>\r\n                <i class=\"mdi mdi-search\"></i>\r\n              </template>\r\n            </b-form-input>\r\n          </b-col>\r\n          <b-col v-if=\"forLogin\" class=\"text-sm-end\" sm=\"3\">\r\n            <b-button class=\"btn btn-warning\" size=\"sm\" @click=\"$router.push({name: 'Login'})\">\r\n              {{ $t(\"actions.back\") }}\r\n            </b-button>\r\n          </b-col>\r\n        </b-row>\r\n      </b-card-title>\r\n      <b-card-body :style=\"forLogin ? {'max-height': '60vh', 'overflow': 'auto'} : ''\">\r\n        <div v-if=\"loading\">\r\n          <div style=\"position:absolute;left:0;top:0;bottom:0;right:0;background-color:rgb(255, 255, 255, 0.4);\">\r\n            <div style=\"position:absolute;bottom:50%;left:50%;transform:translateX(-50%);\">\r\n              <b-spinner color=\"success\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div v-else>\r\n          <div v-if=\"keysList.length === 0\">\r\n            <b-card md=\"12\" sm=\"12\">\r\n              <b-card-body>\r\n                <h1 class=\"text-center text-danger\">\r\n                  {{ $t('auth.no_e_signatures_found') }}\r\n                </h1>\r\n              </b-card-body>\r\n            </b-card>\r\n          </div>\r\n          <b-row v-else>\r\n            <b-col v-for=\"(item, index) in keysList\" :key=\"`signkey-${index}`\" :md=\"forLogin ? 6 : 4\" :sm=\"6\"\r\n                   :xl=\"forLogin ? 6 : 3\">\r\n              <b-card accent-color=\"primary\" body-class=\"p-0\" class=\"mr-3 mb-3 e-sign-card p-0\">\r\n                <b-card-title>{{ item.serialNumber }} - {{ item.CN }}</b-card-title>\r\n                <b-card-body>\r\n                  <b-row>\r\n                    <p class=\"ml-2\">\r\n                      <i class=\"mdi mdi-file-key-outline\" style=\"color: #556ee6; font-size: 2.5rem;\"/>\r\n                      <b>{{ $t('auth.certificate_number') }}</b>: {{ item.serialNumber }}\r\n                    </p>\r\n                  </b-row>\r\n                  <b-row>\r\n                    <p class=\"ml-2 mt-2\"><b>{{ $t('column.inn') }}</b>: {{ item.TIN }}</p>\r\n                  </b-row>\r\n                  <b-row>\r\n                    <p class=\"ml-2\"><b>{{ $t('column.fio') }}</b>: {{ item.CN }}</p>\r\n                  </b-row>\r\n                  <b-row>\r\n                    <p class=\"ml-2\"><b>{{ $t('auth.organisation') }}</b>: {{ item.O }}</p>\r\n                  </b-row>\r\n                  <b-row>\r\n                    <p class=\"ml-2\">\r\n                      <b class=\"small\">{{ $t('auth.certificate_validity_period') }}</b>:\r\n                      {{ getDateFormat(item.validFrom) }} - {{ getDateFormat(item.validTo) }}\r\n                    </p>\r\n                    <p></p>\r\n                  </b-row>\r\n                </b-card-body>\r\n                <footer class=\"d-flex justify-content-end\">\r\n                  <b v-if=\"item.expired\" class=\"text-danger\">\r\n                    {{ $t('auth.certificate_expired') }}\r\n                  </b>\r\n                  <button v-else-if=\"signSelectBtnDisabled\" class=\"btn btn-primary btn-sm\" disabled>\r\n                    {{ $t('auth.continue_with_this_signature') }}\r\n                  </button>\r\n                  <button v-else class=\"btn btn-primary btn-sm\" @click=\"openSignModal(item)\">\r\n                    {{ $t('auth.continue_with_this_signature') }}\r\n                  </button>\r\n                </footer>\r\n              </b-card>\r\n            </b-col>\r\n          </b-row>\r\n        </div>\r\n      </b-card-body>\r\n      <footer v-if=\"!forLogin\" class=\"d-flex justify-content-end\">\r\n        <button class=\"btn btn-warning\" @click=\"$router.push({name: 'Login'})\">\r\n          {{ $t(\"actions.back\") }}\r\n        </button>\r\n      </footer>\r\n    </b-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HelperService from \"@/shared/services/auth.service\";\r\nimport AuthService from \"@/shared/services/auth.service\";\r\nimport AppSettings from \"@/settings\";\r\n\r\nvar EIMZO_MAJOR = 3;\r\nvar EIMZO_MINOR = 37;\r\nconst errorCAPIWS = 'Ошибка соединения с E-IMZO. Возможно у вас не установлен модуль E-IMZO или Браузер E-IMZO.';\r\nconst errorBrowserWS = 'Браузер не поддерживает технологию WebSocket. Установите последнюю версию браузера.';\r\nconst errorUpdateApp = 'ВНИМАНИЕ !!! Установите новую версию приложения E-IMZO или Браузера E-IMZO.<br /><a href=\"https://e-imzo.uz/main/downloads/\" role=\"button\">Скачать ПО E-IMZO</a>';\r\nconst errorWrongPassword = 'Пароль неверный.';\r\nexport default {\r\n  props: {\r\n    forLogin: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dataToSign: {\r\n      default: () => {\r\n      }\r\n    }\r\n  },\r\n  name: \"ESigns\",\r\n  data() {\r\n    return {\r\n      signSelectBtnDisabled: false,\r\n      openConfirmModal: false,\r\n      signModal: false,\r\n      SearchText: '',\r\n      alertShow: false,\r\n      alertMsg: '',\r\n      alertType: '',\r\n      dataToSignIfNot: {},\r\n      publicPath: process.env.BASE_URL,\r\n      Invoice: {},\r\n      pkcs7: null,\r\n      signByImzoText: null,\r\n      vo: null,\r\n      keysList: [],\r\n      fullKeyList: [],\r\n      alertMessage: null,\r\n      showMessage: false,\r\n      currentAlertCounter: 5,\r\n      loading: false,\r\n      confirmDialog: false,\r\n      isYur: null,\r\n      currentItem: null,\r\n      modalTitle: null,\r\n      loadingButton: false,\r\n      AppSettings: AppSettings\r\n    }\r\n  },\r\n  methods: {\r\n    debounceSearch(event) {\r\n      let vm = this;\r\n\r\n      clearTimeout(vm.debounce);\r\n      vm.debounce = setTimeout(() => {\r\n        vm.keyFilter(event);\r\n      }, 500);\r\n    },\r\n    keyFilter(text) {\r\n      let value = text.toUpperCase();\r\n      if (value) {\r\n        this.keysList = this.fullKeyList.filter((el) => {\r\n          if (\r\n              el.CN.includes(value) ||\r\n              el.O.includes(value) ||\r\n              el.T.includes(value) ||\r\n              el.TIN.includes(value) ||\r\n              el.UID.includes(value) ||\r\n              el.name.includes(value) ||\r\n              el.serialNumber.includes(value)\r\n          ) {\r\n            return el;\r\n          }\r\n        });\r\n      } else {\r\n        this.keysList = this.fullKeyList;\r\n      }\r\n    },\r\n    async signByEimzo() {\r\n      this.loadingButton = true;\r\n      let vm = this;\r\n      let data = null\r\n      if (this.dataToSign && this.dataToSign.key) {\r\n        data = JSON.stringify({ key: this.dataToSign.key, inn: this.dataToSign.inn })\r\n        // data = JSON.stringify(this.dataToSign)\r\n      } else if (this.dataToSignIfNot && this.dataToSignIfNot.key) {\r\n        data = JSON.stringify({\r\n          key: this.dataToSignIfNot.key,\r\n          PNFL: this.dataToSignIfNot.PNFL,\r\n          TIN: this.dataToSignIfNot.TIN,\r\n          INN: this.dataToSignIfNot.INN,\r\n        })\r\n        // data = JSON.stringify(this.dataToSignIfNot)\r\n      }\r\n      // var data = JSON.stringify((this.dataToSign && this.dataToSign.key) ? { key: this.dataToSign.key, inn: this.dataToSign.inn } : (this.dataToSignIfNot && this.dataToSignIfNot.key) ? { key: this.dataToSignIfNot.key, inn: this.dataToSignIfNot.inn } : { key: null, inn: null });\r\n      const promise = new Promise((resolve, reject) => {\r\n        EIMZOClient.loadKey(vm.currentItem, function (id) {\r\n          EIMZOClient.createPkcs7(id, data, null, function (pkcs7) {\r\n            resolve(pkcs7);\r\n          }, function (e, r) {\r\n            reject('error');\r\n            vm.loadingButton = false;\r\n            if (r) {\r\n              if (r.indexOf(\"BadPaddingException\") !== -1) {\r\n                vm.$toast(errorWrongPassword, { type: 'error' });\r\n              }\r\n            } else {\r\n              document.getElementById('keyId').innerHTML = '';\r\n              vm.$toast(errorBrowserWS, { type: 'error' });\r\n            }\r\n            if (e) vm.wsError(e);\r\n          });\r\n        }, function (e, r) {\r\n          reject('error');\r\n          vm.loadingButton = false;\r\n          if (r) {\r\n            if (r.indexOf(\"BadPaddingException\") !== -1) {\r\n              vm.$toast(errorWrongPassword, { type: 'error' });\r\n            } else {\r\n              vm.$toast(r, { type: 'error' });\r\n            }\r\n          } else {\r\n            vm.$toast(errorBrowserWS, { type: 'error' });\r\n          }\r\n          if (e) vm.wsError(e);\r\n        });\r\n      });\r\n      promise.then(\r\n          success => {\r\n            vm.$emit('sign', success, vm.dataToSignIfNot.TIN, vm.dataToSignIfNot.PNFL, vm.dataToSignIfNot.INN);\r\n          },\r\n          error => {\r\n            console.log(error)\r\n          },\r\n      ).finally(() => {\r\n        vm.confirmDialog = false;\r\n        vm.loadingButton = false;\r\n      })\r\n    },\r\n    async continueRegistration(isConfirmed) {\r\n      if (isConfirmed) {\r\n        if (this.forLogin) {\r\n          await this.signByEimzo()\r\n        } else {\r\n          this.signSelectBtnDisabled = true\r\n          const isYur = !!this.currentItem.T && this.currentItem.TIN !== this.currentItem.UID;\r\n          AuthService.isOrgRegistered(this.currentItem.TIN, this.currentItem.PINFL,this.currentItem.UID, isYur, this.currentItem.T)\r\n            .then((response) => {\r\n              let payload = {\r\n                responseData: response.data,\r\n                currentItem: this.currentItem\r\n              }\r\n              this.$emit(\"keySelected\", payload);\r\n            })\r\n            .catch((e) => {\r\n              console.log(e)\r\n            })\r\n            .finally((e) => {\r\n              this.signSelectBtnDisabled = false\r\n              // this.hideModal(\"openConfirmModal\");\r\n            });\r\n      }\r\n      }\r\n    },\r\n    async appLoad() {\r\n      let vm = this;\r\n      EIMZOClient.API_KEYS = AppSettings.api_keys;\r\n      await EIMZOClient.checkVersion(async function (major, minor) {\r\n        var newVersion = EIMZO_MAJOR * 100 + EIMZO_MINOR;\r\n        var installedVersion = parseInt(major) * 100 + parseInt(minor);\r\n        if (installedVersion < newVersion) {\r\n          // vm.loading = false;\r\n          vm.$toast(errorUpdateApp, { type: 'error' });\r\n        } else {\r\n          await EIMZOClient.installApiKeys(async function () {\r\n            await vm.uiLoadKeys()\r\n            // vm.loading = false\r\n          }, function (e, r) {\r\n            vm.loading = false;\r\n            if (r) {\r\n              vm.$toast(r, { type: 'error' });\r\n            } else {\r\n              vm.wsError(e, vm.$t('actions.error'), 'error');\r\n            }\r\n          });\r\n        }\r\n      }, function (e, r) {\r\n        vm.loading = false;\r\n        if (r) {\r\n          vm.$toast(r, { type: 'error' });\r\n        } else {\r\n          vm.$toast(vm.$t('auth.is_e_signature_installed'), { type: 'error' });\r\n        }\r\n      });\r\n      return 1;\r\n    },\r\n    async openSignModal(item, isYur) {\r\n      this.currentItem = item;\r\n      this.isYur = isYur;\r\n      this.modalTitle = item.serialNumber + \" - \" + item.CN;\r\n      if (!this.dataToSign || !this.dataToSign.key) {\r\n        await AuthService.getKeyForLoginSign(item.TIN, item.UID, item.PINFL).then(response => {\r\n          this.dataToSignIfNot = response.data;\r\n        })\r\n      }\r\n      this.$bvModal.msgBoxConfirm(this.forLogin ? <h5 class=\"mb-0\">{this.$t('auth.continue_login_with_this_signature')}</h5> : <h5 class=\"mb-0\">{this.$t('auth.continue_reg_with_this_signature')}</h5>, {\r\n        okTitle: this.$t('actions.confirm'),\r\n        cancelTitle: this.$t('actions.cancel')\r\n      })\r\n          .then(async value => {\r\n            if (value) {\r\n              await this.continueRegistration(value)\r\n            }\r\n          })\r\n          .catch(err => {\r\n          })\r\n    },\r\n    hideModal(modal) {\r\n      this.$data[modal] = false;\r\n    },\r\n    async timestamper(signature_hex, callback, fail) {\r\n\r\n      try {\r\n        await HelperService.getTimestamper(signature_hex).then(response => {\r\n          callback(response.data.data)\r\n        });\r\n      } catch (e) {\r\n        if (e.request) {\r\n          fail(e.request.response);\r\n        }\r\n      }\r\n\r\n    },\r\n    getDateFormat(date) {\r\n      let data = new Date(date);\r\n      let month = data.getMonth() + 1\r\n      return data.getDate().toString() + \".\" + (month <= 9 ? \"0\" + month : month).toString() + \".\" + data.getFullYear().toString();\r\n    },\r\n    async getImzo() {\r\n      let vm = this;\r\n      EIMZOClient.installApiKeys(function () {\r\n        vm.uiLoadKeys();\r\n      }, function (e, r) {\r\n        if (r) {\r\n          vm.$toast(r, { type: 'error' });\r\n        } else {\r\n          vm.wsError(e);\r\n        }\r\n      });\r\n    },\r\n    async uiCreateItem(itmkey, vo) {\r\n      let vm = this;\r\n      var now = new Date();\r\n      vo.expired = dates.compare(now, vo.validTo) > 0;\r\n      var itm = document.createElement(\"option\");\r\n      itm.value = itmkey;\r\n      itm.text = vo.CN;\r\n      if (!vo.expired) {\r\n\r\n      } else {\r\n        itm.style.color = 'gray';\r\n        itm.text = itm.text + ' (срок истек)';\r\n      }\r\n      vm.keysList.push(vo);\r\n      vm.fullKeyList.push(vo);\r\n      itm.setAttribute('vo', JSON.stringify(vo));\r\n      itm.setAttribute('id', itmkey);\r\n      return itm;\r\n    },\r\n    async uiLoadKeys() {\r\n      let vm = this;\r\n      await EIMZOClient.listAllUserKeys(async function (o, i) {\r\n        return \"itm-\" + o.serialNumber + \"-\" + i;\r\n      }, async function (itemId, v) {\r\n        return await vm.uiCreateItem(itemId, v)\r\n      }, function (items, firstId) {\r\n        vm.keysList = vm.fullKeyList;\r\n        //vm.uiFillCombo(items);\r\n        //vm.uiComboSelect(firstId);\r\n      }, function (e, r) {\r\n        vm.$toast(errorCAPIWS + \" : \" + e, { type: 'error' });\r\n      });\r\n      return 1\r\n    },\r\n    async wsError() {\r\n      if (e) {\r\n        this.$toast(errorCAPIWS + \" : \" + e, { type: 'error' });\r\n      } else {\r\n        this.$toast(errorBrowserWS, { type: 'error' });\r\n      }\r\n    },\r\n    uiComboSelect(itm) {\r\n      if (itm) {\r\n        var id = document.getElementById(itm);\r\n        id.setAttribute('selected', 'true');\r\n      }\r\n    },\r\n    cbChanged(c) {\r\n      document.getElementById('keyId').innerHTML = '';\r\n    },\r\n    uiClearCombo() {\r\n      var combo = document.getElementById('user_eimzo_keys');\r\n      combo.length = 0;\r\n    },\r\n    uiFillCombo(items) {\r\n      var combo = document.getElementById('user_eimzo_keys');\r\n      this.itemList = items;\r\n\r\n    }\r\n  },\r\n  computed: {\r\n    ImgUser: () => require(\"@/assets/images/users/user.png\"),\r\n    ImgCompany: () => require(\"@/assets/images/users/company.png\"),\r\n  },\r\n  created() {\r\n    this.loading = true;\r\n    this.appLoad()\r\n        .catch(e => {\r\n          this.loading = false\r\n        })\r\n    this.loading = false;\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.card {\r\n  -webkit-box-shadow: none;\r\n  box-shadow: none;\r\n}\r\n\r\n.e-signs-wrapper-card {\r\n  .card-title,\r\n  footer {\r\n    padding: 1.25rem;\r\n  }\r\n}\r\n\r\n.e-sign-card {\r\n  -webkit-box-shadow: 0rem 0.75rem 3rem rgb(18 38 63 / 15%);\r\n  box-shadow: 0rem 0.75rem 3rem rgb(18 38 63 / 15%);\r\n}\r\n</style>"],"sourceRoot":"src/shared/views/auth/components"}]}